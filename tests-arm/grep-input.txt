
Article: 9179 of gnu.misc.discuss
Path: daffy!uwvax!uwm.edu!zaphod.mps.ohio-state.edu!usc!enterpoop.mit.edu!ai-lab!life.ai.mit.edu!friedman
From: friedman@gnu.ai.mit.edu (Noah Friedman)
Newsgroups: gnu.misc.discuss
Subject: Re: Why hack?
Date: 23 Mar 93 22:42:09
Organization: Free Software Foundation, 675 Mass Ave. Cambridge, MA 02139
Lines: 182
Message-ID: <FRIEDMAN.93Mar23224209@nutrimat.gnu.ai.mit.edu>
References: <1993Mar22.203522.21684@maths.tcd.ie>
NNTP-Posting-Host: nutrimat.gnu.ai.mit.edu
In-reply-to: tim@maths.tcd.ie's message of Mon, 22 Mar 1993 20:35:22 GMT

In article <1993Mar22.203522.21684@maths.tcd.ie> tim@maths.tcd.ie (Timothy Murphy) writes:
>I wonder if anyone has a copy of Stallman's article "Why Hack?"
>from -- would it be 10? -- years ago.
>
>This was the article where Stallman lambasted computer administrators,
>likening them to the then rulers in E Europe.

I think this might be something of general interest.  It is indeed about 10
years old, and many people may not have seen it. 

Besides, gnu.misc.discuss doesn't have enough flamage yet.  :-)

In general I agree with rms' assertions.  The one exception is that, from
my personal experience, I do not think computer security needs to be an all
or nothing thing.  Moderate levels of security do necessitate some risk,
but that risk can be arbitrarily small (modulo the ability to fix certain
security holes with the source code at hand).

For one, there is a vast difference between internal and external security
in terms of how it affects actual users of a system.  You can keep out
unknowns and still allow great freedom among all the people who have access
to the machine to begin with.  (While I don't approve of proprietary
software, I can see that vendors of proprietary software can't allow
corporate spies onto their systems.)

My general rules of thumb are
   1) Assume minimal security first.  If you don't actually need security,
      you save time and make everyone's lives easier.
   2) Don't waste more time implementing security than you would spend
      recovering the intentional damage from crackers or unintentional
      mistakes by your own users.  Paying a full-time security consultant
      is probably more expensive in the long-run than losing 1 or 2 days of
      work from time to time.
   3) Keep backups.  Do it once a day or more often.  (Backups not only
      insure against intentional damage, but also allow you to recover from
      your own mistakes, hardware failures, and other acts of random
      malevolent dieties.)


Please note that references to the Soviet Union require some context: this
article was written in 1983. 


Here is Stallman's original article:
----------------------------------------------------------------------

Recently the teen-age computer "hacker", the security cracker, has
become a topic of national concern.  But the many articles on the
subject have condemned the cracker without showing the galling aspects
of the way of life he is rebelling against and without questioning its
ethical foundation.  There is no hint that the confused cracker of today
may be resisting, albeit ineffectually, a serious social problem of
tomorrow.

If you look at the social organization of the users on a typical
timeshared computer of today and compare it with other social groups, it
most resembles the Soviet Union.  It is pervaded by suspicion, ruled
arbitrarily by a small oligarchy, and hostile toward outsiders.  This
arouses resentment, which inspires the security crackers.  But the
authoritarian social organization itself is a worse problem than the
crackers are.

Most computer users see no alternative.  I am fortunate in having
experienced one.  At the MIT laboratory where I have worked as a
researcher for ten years, our old computer system treated users as free
equals with a responsibility to cooperate, and guests were welcome.  Our
hospitality guided clever young people to become responsible engineers
rather than crackers.

On the typical computer system, the activities of the ordinary users are
regulated very narrowly and precisely by the elite, who are bound by no
principle of fairness or due process and allow no appeal.  Which files
you can read, which files you cano appeal.  Which files
you can read, which files you can write, how many files you can have,
what programs you can run, how long you can use them, and when you can
log in are under their control.  They can bump you off the computer at
any time.  They can watch what you type as you use the computer; you
cannot watch them.  They can make it very easy for you to do your job,
if they like you, or if you curry favor.  Or they can obstruct you
at every turn, making your life miserable.  You have no recourse.
They can use the commands that change a user's restrictions, and you
cannot, because your restrictions don't permit it.

The users are suspicious of each other, and use "file protection" to
deny each other access to files.  Often this means you cannot make
progress in your work because you need to fix a program you cannot get
at.  People with high morale become discouraged and cynical because of
this.  The authorities are immune to file protection, however, and can
easily erase your file if they do not like what it says.

People outside the organization are viewed with hostility and suspicion.
They are presumed to lack only an opportunity to delete or scramble all
the files on the computer.  If the computer is idle, at night for
example, its computing power goes to waste rather than allow an outsider
to use it for a constructive purpose (such as learning to program).

Now imagine that one of the people outside the organization, the
recipient of all this suspicion and hostility, is a hacker: a person who
is curious, playful and enjoys clever humor.  (When computer researchers
at MIT in the 1960's first began calling themselves "hackers", this is
what they meant.  I am proud to call myself a hacker, and I call
security-breakers "crackers" to emphasize the distinction.)

A hacker, finding a mysterious and complicated computer system, wants to
understand it.  He would like to explore the computer system, to learn
how to use it, or to learn how it works.  He knows in advance what
reception he will get if he simply asks to use the computer when there
is spare time.  And he senses intuitively that computer system
authorities in general are amoral and do not deserve respect.

Naturally, he tries to sneak in and use the computer anyway.  He becomes
a cracker.  If successful, he gets to explore and learn, and can be
proud of his cleverness as well.  Beefed-up security measures only make
the battle of wits more challenging and absorbing.

But if he is only a teen-ager, he is probably not used to the kind of
thinking that would enable him to question the social system he is part
of.  (The teen-agers who are politically aware are usually not the
computer enthusiasts.)  He knows only that he has something to resent.
So he does not make a serious attempt to change the system.  The best he
can manage is instinctive, furtive disobedience.  This is why the young
cracker seems so usure of the rightness of his actions, and occasionally
may do minor damage, almost without noticing.  He has not asked the
question of how he ought to behave, or how the computer owners ought to
behave.

This is also why it is so easy to win a cracker over to the
security-enforcing establishment with personal inducements.  Joining the
authorities will end his direct personal difficulties and recognize his
cleverness, even better than successfully evading them.  Without an
ethical awareness, he does not see that he solves his own problem only
by contributing to similar problems for others.

The software on most computer systems is designed to support the ruling
class just as surely as the KGB is.  The software written and used by
the hackers at MIT was designed to make users free and equal.  Our
system had no restrictions that could be imposed on selected users; all
users were treated alike.  Thus nobody could seize power by restricting
everyone else.  We did not care whether a change to the files was
authorized; we cared whether it was an improvement.  This can only be
decided by human beings, on a case-by-case basis.  So, rather than
having file protection to control changes, we called for discussion
of any planned change.

And if a stranger came to the lab and wanted to play with the computer
when it was not fully needed by us--we let him!  Chances are he would
appreciate some of the value of our work, learn from it, and spread the
knowledge to others.  At best, he would become enthusiastic for our
software and our attitudes, join our lab, and contribute to our work.

People hearing about our lab usually took it for granted that our system
would be destroyed by vandals.  Actually, vandalism was very rare, and
the damage done by vandals was small compared with the damage caused by
the inevitable computer malfunctions and our own mistakes.  Simple
measures analogous to the glass window on a fire alarm discouraged
dangerous activities, deliberate or accidental, without actually
forbidding anything.  Ultimately it was rising commercialism that
destroyed the lab and caused our old computer system to be junked.

The technology of computer security is not suited to any middle ground
between the extremes.  Unless security is iron-fisted and dominates the 
lives of the users, it is easy to circumvent, and useless.  We should
put military secrets, bank records and the like on computers with strict
security.  For other activities, we should have computers that are free
of security, and free of its burdens.

Then we need not attack the symptom of morally confused crackers with
jail threats, security technology, or hiring them as security enforcers
to breed more resentment and new crackers.  We can invite them to use
computers openly on terms of mutual respect, and they will repay our
friendship tenfold.  Their cleverness and curiosity are just what make
for a creative engineer.

So far the issue of security versus freedom on computer systems affects
mainly computer hackers.  But, in the future, computer systems will play
a bigger and bigger role in everyone's life.  And these systems will be
built on today's entrenched authoritarian tradition, unless we stop it.
The crackers are a warning sign of a problem that every American is
going to face--soon.





1)  Muammar Qaddafi
2)  Mo'ammar Gadhafi
3)  Muammar Kaddafi
4)  Muammar Qadhafi
5)  Moammar El Kadhafi
6)  Muammar Gadafi
7)  Mu'ammar al-Qadafi
8)  Moamer El Kazzafi
/* grep.c - main driver file for grep.
   Copyright (C) 1992 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

   Written July 1992 by Mike Haertel.  */

#include <errno.h>
#include <stdio.h>

#ifndef errno
extern int errno;
#endif

#ifdef STDC_HEADERS
#include <stdlib.h>
#else
#include <sys/types.h>
extern char *malloc(), *realloc();
extern void free();
#endif

#if defined(STDC_HEADERS) || defined(HAVE_STRING_H)
#include <string.h>
#ifdef NEED_MEMORY_H
#include <memory.h>
#endif
#else
#include <strings.h>
#ifdef __STDC__
extern void *memchr();
#else
extern char *memchr();
#endif
#define strrchr rindex
#endif

#ifdef HAVE_UNISTD_H
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>
#else
#define O_RDONLY 0
extern int open(), read(), close();
#endif

#include "getpagesize.h"
#include "grep.h"

#undef MAX
#define MAX(A,B) ((A) > (B) ? (A) : (B))

/* Provide missing ANSI features if necessary. */

#ifndef HAVE_STRERROR
extern int sys_nerr;
extern char *sys_errlist[];
#define strerror(E) ((E) < sys_nerr ? sys_errlist[(E)] : "bogus error number")
#endif

#ifndef HAVE_MEMCHR
#ifdef __STDC__
#define VOID void
#else
#define VOID char
#endif
VOID *
memchr(vp, c, n)
     VOID *vp;
     int c;
     size_t n;
{
  unsigned char *p;

  for (p = (unsigned char *) vp; n--; ++p)
    if (*p == c)

/*
 * This file was written by Todd Austin, University of Wisconsin - Madison
 * Department of Computer Sciences
 *
 * Copyright (C) 1994 by Todd Austin
 *
 * This source file is distributed in the hope that it will be useful,
 * but without any warranty.  No author or distributor accepts
 * responsibility to anyone for the consequences of using it or for
 * whether it serves any particular purpose or works at all.
 *
 * Everyone is granted permission to copy, modify and redistribute
 * this source file under the following conditions:
 *
 *    Permission is granted to anyone to make or distribute copies
 *    of this source code, either as received or modified, in any
 *    medium, provided that all copyright notices, permission and
 *    nonwarranty notices are preserved, and that the distributor
 *    grants the recipient permission for further redistribution as
 *    permitted by this document.
 *
 *    Permission is granted to distribute this file in compiled
 *    or executable form under the same conditions applying for
 *    source code, provided that either
 *    A. it is accompanied by the corresponding machine-readable
 *       source code, or
 *    B. it is accompanied by a written offer, with no time limit,
 *       to give anyone a machine-readable copy of the corresponding
 *       source code in return for reimbursement of the cost of
 *       distribution.  This written offer must permit verbatim
 *       duplication by anyone.
 *    C. it is distributed by someone who received only the
 *       executable form, and is accompanied by a copy of the
 *       written offer of source code which s/he received along with it.
 *
 * In other words, you are welcome to use, share and improve this
 * source file.  You are forbidden to forbid anyone else to use, share
 * and improve what you give them.   Help stamp out software-hoarding!
 *
 * ARPANET: austin@cs.wisc.edu
 * US Mail: 1210 W. Dayton Street, Madison, WI 53706
 *
 * $Log: grep-input.txt,v $
 * Revision 1.1.1.1  2000/11/29 14:53:54  cu-cs
 * Grand unification of arm sources.
 *
 *
 * Revision 1.1.2.1  2000/10/31 19:13:55  taustin
 * Yet more benchmarks...
 *
 * Revision 1.6  1994/11/15  21:14:16  austin
 * *** empty log message ***
 *
 * Revision 1.5  1994/11/14  17:08:47  austin
 * *** empty log message ***
 *
 * Revision 1.4  1994/11/09  14:36:07  austin
 * *** empty log message ***
 *
 * Revision 1.3  1994/03/06  17:05:32  austin
 * - added DIRECT option
 *
 * Revision 1.2  1994/02/21  16:22:18  austin
 * - moved RegSet stuff to regs.h
 * - moved cache vars to this file
 * - cache options now work
 * - added probes
 *
 * $Id: grep-input.txt,v 1.1.1.1 2000/11/29 14:53:54 cu-cs Exp $
 */

static char rcsid[] = "$Id: grep-input.txt,v 1.1.1.1 2000/11/29 14:53:54 cu-cs Exp $";

/*
 *	detailed timing simulator code
 */

#include <stdio.h>
#include <math.h>

#include "misc.h"
#include "probe.h"
#include "memory.h"
#include "syscall.h"
#include "state.h"
#include "ss.h"
#include "dtrace.h"

/* bit size of a register set */
#define RS_BIT_SIZE  (32/*GPRs*/+32/*FPRs*/+1/*HI*/+1/*LO*/+1/*FC*/+1/*MEM*/)
#include "regs.h"

/* timing instrumentation */
long long cycle;			/* current cycle, total cycles */

/* non-zero if memory can handle any combination of loads and stores */
int perfectMemory = FALSE;

/* non-zero if pre-translations can be used to elide TLB accesses */
int elideTranslations = TRUE;

/* non-zero if jamming execution */
int jamminMan = FALSE;

/* load/store is stalled (re-executing in the MEM stage) due to a failed jam */
int stalledLoad = FALSE;
int stalledStore = FALSE;

/* just issued insts must stall as well */
int stallIssue = FALSE;

/* use base or alternative jam scheme (pnevmati's) */
int dirMode = FALSE;
int jamMode = FALSE;
int pCalcMode = FALSE;
int dualMode = FALSE;
int dirJam = FALSE;
int baseJam = FALSE;
int altJam = FALSE;
unsigned long jamSize = 0;




		The Tao Of Programming

		Translated By Geoffrey James
		Transcribed By Seth Robertson


		Table of Contents

			Book 1  --  The Silent Void
			Book 2  --  The Ancient Masters
			Book 3  --  Design
			Book 4  --  Coding
			Book 5  --  Maintenance
			Book 6  --  Management
			Book 7  --  Corporate Wisdom
			Book 8  --  Hardware and Software
			Book 9  --  Epilogue


		The Silent Void
		Book One

		   Thus spake the master programmer:
				   
	 "When you have learned to snatch the error code from
	  the trap frame, it will be time for you to leave."

				 1.1

Something mysterious is formed, born in the silent void.  Waiting alone
and unmoving, it is at once still and yet in constant motion.  It is
the source of all programs.  I do not know its name, so I will call it
the Tao of Programming.

If the Tao is great, then the operating system is great.  If the
operating system is great, then the compiler is great.  If the compiler
is greater, then the applications is great.  The user is pleased and
there is harmony in the world.

The Tao of Programming flows far away and returns on the wind of morning.

				  1.2

The Tao gave birth to machine language.  Machine language gave birth to
the assembler.

The assembler gave birth to the compiler.  Now there are ten thousand
languages.

Each language has its purpose, however humble.  Each language expresses
the Yin and Yang of software.  Each language has its place within the Tao.

But do not program in COBOL if you can avoid it.

				  1.3

In the beginning was the Tao.  The Tao gave birth to Space and Time.
Therefore, Space and Time are the Yin and Yang of programming.

Programmers that do not comprehend the Tao are always running out of
time and space for their programs.  Programmers that comprehend the Tao
always have enough time and space to accomplish their goals.

How could it be otherwise?

				  1.4

The wise programmer is told about the Tao and follows it.  The average
programmer is told about the Tao and searches for it.  The foolish
programmer is told about the Tao and laughs at it.

If it were not for laughter, there would be no Tao.

The highest sounds are the hardest to hear.  Going forward is a way to
retreat.  Greater talent shows itself late in life.  Even a perfect
program still has bugs.

			The Ancient Masters
				Book Two

		   Thus spake the master programmer:
				   
   "After three days without programming, life becomes meaningless."

				  2.1

The programmers of old were mysterious and profound.  We cannot fathom
their thoughts, so all we do is describe their appearance.

Aware, like a fox crossing the water.  Alert, like a general on the
battlefield.  Kind, like a hostess greeting her guests. Simple, like
uncarved blocks of wood.  Opaque, like black pools in darkened caves.

Who can tell the secrets of their hearts and minds?

The answer exists only in the Tao.

				  2.2

Grand Master Turing once dreamed that he was a machine.  When he awoke
he exclaimed:

     "I don't know whether I am Turing dreaming that I am a machine,
      or a machine dreaming that I am Turing!"

				  2.3

A programmer from a very large computer company went to a software
conference and then returned to report to his manager, saying: "What
sort of programmers work for other companies?  They behaved badly and
were unconcerned with appearances. Their hair was long and unkempt and
their clothes were wrinkled and old. They crashed out hospitality
suites and they made rude noises during my presentation."

The manager said: "I should have never sent you to the conference.
Those programmers live beyond the physical world.  They consider life
absurd, an accidental coincidence.  They come and go without knowing
limitations.  Without a care, they live only for their programs.  Why
should they bother with social conventions?"

"They are alive within the Tao."

				  2.4

A novice asked the Master: "Here is a programmer that never designs,
documents, or tests his programs.  Yet all who know him consider him
one of the best programmers in the world.  Why is this?"

The Master replies: "That programmer has mastered the Tao.  He has gone
beyond the need for design; he does not become angry when the system
crashes, but accepts the universe without concern.  He has gone beyond
the need for documentation; he no longer cares if anyone else sees
his code.  He has gone beyond the need for testing; each of his
programs are perfect within themselves, serene and elegant, their
purpose self-evident.  Truly, he has entered the mystery of the Tao."

				Design
				Book Three

		   Thus spake the master programmer:
				   

begin 644 input.txt.gz
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
8&O_H)SL7L^1U/KJ-*V;^+QK$NW%C4PL 
 
end
"When program is being tested, it is too late to make design changes."

				  3.1

There once was a man who went to a computer trade show.  Each day as he
entered, the man told the guard at the door:

     "I am a great thief, renowned for my feats of shoplifting.  Be
      forewarned, for this trade show shall not escape unplundered."

This speech disturbed the guard greatly, because there were millions of
dollars of computer equipment inside, so he watched the man carefully.
But the man merely wandered from booth to booth, humming quietly to
himself.

When the man left, the guard took him aside and searched his clothes,
but nothing was to be found.

On the next day of the trade show, the man returned and chided the
guard saying: "I escaped with a vast booty yesterday, but today will be
even better."  So the guard watched him ever more closely, but to no
avail.

On the final day of the trade show, the guard could restrain his
curiosity no longer. "Sir Thief," he said, "I am so perplexed, I cannot
live in peace.  Please enlighten me.  What is it that you are stealing?"

The man smiled.  "I am stealing ideas," he said.

				  3.2

There once was a master programmer who wrote unstructured programs.  A
novice programmer, seeking to imitate him, also began to write
unstructured programs.  When the novice asked the master to evaluate
his progress, the master criticized him for writing unstructured
programs, saying: "What is appropriate for the master is not
appropriate for the novice.  You must understand the Tao before
transcending structure."

				  3.3

There was once a programmer who was attached to the court of the
warlord of Wu.  The warlord asked the programmer: "Which is easier to
design: an accounting package or an operating system?"

"An operating system," replied the programmer.

The warlord uttered an exclamation of disbelief.  "Surely an accounting
package is trivial next to the complexity of an operating system," he said.

"Not so," said the programmer, "when designing an accounting package,
the programmer operates as a mediator between people having different
ideas: how it must operate, how its reports must appear, and how it
must conform to the tax laws.  By contrast, an operating system is not
limited my outside appearances.  When designing an operating system,
the programmer seeks the simplest harmony between machine and ideas.
This is why an operating system is easier to design."

The warlord of Wu nodded and smiled.  "That is all good and well, but
which is easier to debug?"

The programmer made no reply.

				  3.4

A manager went to the master programmer and showed him the requirements
document for a new application.  The manager asked the master: "How
long will it take to design this system if I assign five programmers
to it?"

"It will take one year," said the master promptly.

"But we need this system immediately or even sooner!  How long will it
take it I assign ten programmers to it?"

The master programmer frowned.  "In that case, it will take two years."

"And what if I assign a hundred programmers to it?"

The master programmer shrugged.  "Then the design will never be
completed," he said.

				Coding
				Book Four

		   Thus spake the master programmer:
				   
	      "A well-written program is its own heaven;
	      a poorly-written program is its own hell."

				  4.1

A program should be light and agile, its subroutines connected like a
strings of pearls.  The spirit and intent of the program should be
retained throughout.  There should be neither too little nor too much,
neither needless loops nor useless variables, neither lack of structure
nor overwhelming rigidity.

A program should follow the 'Law of Least Astonishment'.  What is this
law?  It is simply that the program should always respond to the user
in the way that astonishes him least.

A program, no matter how complex, should act as a single unit.  The
program should be directed by the logic within rather than by outward
appearances.

If the program fails in these requirements, it will be in a state of
disorder and confusion.  The only way to correct this is to rewrite the
program.

				  4.2

A novice asked the master: "I have a program that sometimes runs and
sometimes aborts.  I have followed the rules of programming, yet I am
totally baffled. What is the reason for this?"

The master replied: "You are confused because you do not understand the
Tao.  Only a fool expects rational behavior from his fellow humans. Why
do you expect it from a machine that humans have constructed? Computers
simulate determinism; only the Tao is perfect.

The rules of programming are transitory; only the Tao is eternal.
Therefore you must contemplate the Tao before you receive enlightenment."

"But how will I know when I have received enlightenment?" asked the novice.

"Your program will then run correctly," replied the master.

				  4.3

A master was explaining the nature of the Tao to one of his novices,
"The Tao is embodied in all software -- regardless of how
insignificant," said the master.

"Is the Tao in a hand-held calculator?" asked the novice.

"It is," came the reply.

"Is the Tao in a video game?" continued the novice.

"It is even in a video game," said the master.

"And is the Tao in the DOS for a personal computer?"

The master coughed and shifted his position slightly.  "The lesson is
over for today," he said.

				  4.4

Price Wang's programmer was coding software.  His fingers danced upon
the keyboard.  The program compiled without an error message, and the
program ran like a gentle wind.

Excellent!" the Price exclaimed, "Your technique is faultless!"

"Technique?" said the programmer, turning from his terminal, "What I
follow is the Tao -- beyond all technique.  When I first began to
program I would see before me the whole program in one mass.  After
three years I no longer saw this mass. Instead, I used subroutines.
But now I see nothing.  My whole being exists in a formless void.  My
senses are idle.  My spirit, free to work without a plan, follows its
own instinct.  In short, my program writes itself. True, sometimes
there are difficult problems.  I see them coming, I slow down, I watch
silently. Then I change a single line of code and the difficulties
vanish like puffs of idle smoke.  I then compile the program.  I sit
still and let the joy of the work fill my being.  I close my eyes for a
moment and then log off."

Price Wang said, "Would that all of my programmers were as wise!"

			Maintenance
			Book Five

		   Thus spake the master programmer:
				   
	      "Though a program be but three lines long,
	       someday it will have to be maintained."

				  5.1

       A well-used door needs no oil on its hinges.
       A swift-flowing steam does no grow stagnant.
       Neither sound nor thoughts can travel through a vacuum.
       Software rots if not used.

       These are great mysteries.

				  5.2

A manager asked a programmer how long it would take him to finish the
program on which he was working.  "I will be finished tomorrow," the
programmer promptly replied.

"I think you are being unrealistic," said the manager. "Truthfully, how
long will it take?"

The programmer thought for a moment.  "I have some features that I wish
to add.  This will take at least two weeks," he finally said.

"Even that is too much to expect," insisted the manager, "I will be
satisfied if you simply tell me when the program is complete."

The programmer agreed to this.

Several years slated, the manager retired.  On the way to his
retirement lunch, he discovered the programmer asleep at his terminal.
He had been programming all night.

				  5.3

A novice programmer was once assigned to code a simple financial
package.

The novice worked furiously for many days, but when his master reviewed
his program, he discovered that it contained a screen editor, a set of
generalized graphics routines, and artificial intelligence interface,
but not the slightest mention of anything financial.

When the master asked about this, the novice became indignant.  "Don't
be so impatient," he said, "I'll put the financial stuff in eventually."

				  5.4

      Does a good farmer neglect a crop he has planted?
      Does a good teacher overlook even the most humble student?
      Does a good father allow a single child to starve?
      Does a good programmer refuse to maintain his code?

				Management
				Book Six

		   Thus spake the master programmer:
				   
	     "Let the programmer be many and the managers
		 few -- then all will be productive."

				  6.1

When managers hold endless meetings, the programmers write games.  When
accountants talk of quarterly profits, the development budget is about
to be cut.  When senior scientists talk blue sky, the clouds are about
to roll in.

Truly, this is not the Tao of Programming.

When managers make commitments, game programs are ignored.  When
accountants make long-range plans, harmony and order are about to be
restored.  When senior scientists address the problems at hand, the
problems will soon be solved.

Truly, this is the Tao of Programming.

				  6.2

Why are programmers non-productive?
Because their time is wasted in meetings.

Why are programmers rebellious?
Because the management interferes too much.

Why are the programmers resigning one by one?
Because they are burnt out.

Having worked for poor management, they no longer value their jobs.

				  6.3

A manager was about to be fired, but a programmer who worked for him
invented a new program that became popular and sold well.  As a result,
the manager retained his job.

The manager tried to give the programmer a bonus, but the programmer
refused it, saying, "I wrote the program because I though it was an
interesting concept, and thus I expect no reward."

The manager, upon hearing this, remarked, "This programmer, though he
holds a position of small esteem, understands well the proper duty of
an employee.  Lets promote him to the exalted position of management
consultant!"

But when told this, the programmer once more refused, saying, "I exist
so that I can program.  If I were promoted, I would do nothing but
waste everyone's time.  Can I go now?  I have a program that I'm
working one."

				  6.4

A manger went to his programmers and told them: "As regards to your
work hours: you are going to have to come in at nine in the morning and
leave at five in the afternoon."  At this, all of them became angry and
several resigned on the spot.

So the manager said: "All right, in that case you may set your own
working hours, as long as you finish your projects on schedule."  The
programmers, now satisfied, began to come in a noon and work to the wee
hours of the morning.

			Corporate Wisdom
			Book Seven

		   Thus spake the master programmer:
				   
	    "You can demonstrate a program for a corporate
	executive, but you can't make him computer literate."

				  7.1

A novice asked the master: "In the east there is a great tree-structure
that men call 'Corporate Headquarters'.  It is bloated out of shape
with vice-presidents and accountants.  It issues a multitude of memos,
each saying 'Go, Hence!' or 'Go, Hither!' and nobody knows what is
meant.  Every year new names are put onto the branches, but all to no
avail.  How can such an unnatural entity exist?"

The master replies: "You perceive this immense structure and are
disturbed that it has no rational purpose.  Can you not take amusement
from its endless gyrations?  Do you not enjoy the untroubled ease of
programming beneath its sheltering branches?  Why are you bothered by
its uselessness?"

				  7.2

In the east there is a shark which is larger than all other fish.  It
changes into a bird whose winds are like clouds filling the sky.  When
this bird moves across the land, it brings a message from Corporate
Headquarters.  This message it drops into the midst of the program-
mers, like a seagull making its mark upon the beach.  Then the bird
mounts on the wind and, with the blue sky at its back, returns home.

The novice programmer stares in wonder at the bird, for he understands
it not.  The average programmer dreads the coming of the bird, for he
fears its message.  The master programmer continues to work at his
terminal, for he does not know that the bird has come and gone.

				  7.3

The Magician of the Ivory Tower brought his latest invention for the
master programmer to examine.  The magician wheeled a large black box
into the master's office while the master waited in silence.

"This is an integrated, distributed, general-purpose workstation,"
began the magician, "ergonomically designed with a proprietary
operating system, sixth generation languages, and multiple state of the
art user interfaces.  It took my assistants several hundred man years
to construct.  Is it not amazing?"

The master raised his eyebrows slightly. "It is indeed amazing," he
said.

"Corporate Headquarters has commanded," continued the magician, "that
everyone use this workstation as a platform for new programs.  Do you
agree to this?"

"Certainly," replied the master, "I will have it transported to the
data center immediately!"  And the magician returned to his tower, well
pleased.

Several days later, a novice wandered into the office of the master
programmer and said, "I cannot find the listing for my new program.  Do
you know where it might be?"

"Yes," replied the master, "the listings are stacked on the platform in
the data center."

				  7.4

The master programmer moves from program to program without fear.  No
change in management can harm him.  He will not be fired, even if the
project is canceled. Why is this?  He is filled with the Tao.

			Hardware and Software
			Book Eight

		   Thus spake the master programmer:
				   
	     "Without the wind, the grass does not move.
	       Without software, hardware is useless."

				  8.1

A novice asked the master: "I perceive that one computer company is
much larger than all others.  It towers above its competition like a
giant among dwarfs.  Any one of its divisions could comprise an entire
business.  Why is this so?"

The master replied, "Why do you ask such foolish questions?  That
company is large because it is so large.  If it only made hardware,
nobody would buy it.  If it only maintained systems, people would treat
it like a servant.  But because it combines all of these things, people
think it one of the gods!  By not seeking to strive, it conquers
without effort."

				  8.2

A master programmer passed a novice programmer one day.  The master
noted the novice's preoccupation with a hand-held computer game.
"Excuse me", he said, "may I examine it?"

The novice bolted to attention and handed the device to the master. "I
see that the device claims to have three levels of play: Easy, Medium,
and Hard", said the master.  "Yet every such device has another level
of play, where the device seeks not to conquer the human, nor to be
conquered by the human."

"Pray, great master," implored the novice, "how does one find this
mysterious setting?"

The master dropped the device to the ground and crushed it under foot.
And suddenly the novice was enlightened.

				  8.3

There was once a programmer who worked upon microprocessors.  "Look at
how well off I am here," he said to a mainframe programmer who came to
visit, "I have my own operating system and file storage device. I do
not have to share my resources with anyone.  The software is
self-consistent and easy-to-use.  Why do you not quit your present job
and join me here?"

The mainframe programmer then began to describe his system to his
friend, saying: "The mainframe sits like an ancient sage meditating in
the midst of the data center.  Its disk drives lie end-to-end like a
great ocean of machinery.  The software is a multi-faceted as a diamond
and as convoluted as a primeval jungle.  The programs, each unique,
move through the system like a swift-flowing river.  That is why I am
happy where I am."

The microcomputer programmer, upon hearing this, fell silent.  But the
two programmers remained friends until the end of their days.

				  8.4

Hardware met Software on the road to Changtse.  Software said: "You are
the Yin and I am the Yang.  If we travel together we will become famous
and earn vast sums of money."  And so the pair set forth together,
thinking to conquer the world.

Presently, they met Firmware, who was dressed in tattered rags, and
hobbled along propped on a thorny stick.  Firmware said to them: "The
Tao lies beyond Yin and Yang.  It is silent and still as a pool of
water. It does not seek fame, therefore nobody knows its presence.  It
does not seeks fortune, for it is complete within itself.  It exists
beyond space and time."

Software and Hardware, ashamed, returned to their homes.


				Epilogue
				Book Nine

		   Thus spake the master programmer:
				   
		       "Time for you to leave."
/* missed jam cost */
unsigned long mjCost = 1;

/* just to be sure the profiler is working */
static long long nRefs = 0;
static long long nOSRefs = 0;
static long long nReads = 0;
static long long nDirectLoads = 0;
static long long nDirectStores = 0;
static long long nRRLoads = 0;
static long long nRRStores = 0;
static long long nFailedLdJams = 0;
static long long nFailedStJams = 0;

static long long nFailedInEX = 0;

static long long nDirMode = 0;
static long long nJamMode = 0;
static long long nPCalcMode = 0;
static long long nDualMode = 0;

/*
static long long nStores = 0;
static long long nLoads = 0;
static long long nFailedStJams = 0;
static long long nFailedLdJams = 0;
*/

/*
 * processor parameters/state
 */

/* max number of instructions to issue each cycle */
ulong numIssue = 4;
static ulong niMask = 3;			/* numIssue - 1 */

int useICache = FALSE;
struct Cache *iCache = NULL;			/* instruction cache */
struct CacheParam iCacheParams = {
  /* default instruction cache parameters */
  "text",	/* name */
  1024,		/* nSets */
  16,		/* bSize */
  1,		/* nAssoc */
  TRUE	/* wrBack */
};

struct Cache *dCache = NULL;			/* data cache */
struct CacheParam dCacheParams = {
  /* default data cache parameters */
  "data",	/* name */
  1024,		/* nSets */
  16,		/* bSize */
  1,		/* nAssoc */
  TRUE		/* wrBack */
};

/* default to two cycle miss-prediction latencies */
static int nCycleMP = 0;

/*
 * probes
 */
static struct Probe *btbHitRate;		/* BTB hit rate */
static struct Probe *btbPredRate;		/* BTB prediction accuracy */


/*
 * pipe stats
 */
struct {
  long long computing;			/* pipe issued an instruction */
  long long mpStall;			/* pipe stalled waiting for
					   misprediction re-fill */
  long long dcStall;			/* pipe stalled on data cache miss */
  long long trapStall;			/* pipe drained for a trap */
  long long noFUStall;			/* pipe stalled waiting for an FU */
  long long FUStall;			/* pipe stalled waiting on a FU */
  long long ldStall;			/* pipe stalled waiting on a ld port */
  long long cldStall;			/* pipe stalled waiting on a ld port,
					   the dependency is collapable */
} pipeStats;

void
ResetPipeStats(void)
{
  pipeStats.computing = 0;
  pipeStats.mpStall = 0;
  pipeStats.dcStall = 0;
  pipeStats.trapStall = 0;
  pipeStats.noFUStall = 0;
  pipeStats.FUStall = 0;
  pipeStats.ldStall = 0;
  pipeStats.cldStall = 0;
}

void
DumpPipeStats(FILE *stream)
{
  long long sum =
    pipeStats.computing + pipeStats.mpStall + pipeStats.dcStall
      + pipeStats.trapStall + pipeStats.noFUStall
	+ pipeStats.FUStall + pipeStats.ldStall + pipeStats.cldStall;

  fprintf(stream, ">>>> Pipe Stats <<<<\n");
  fprintf(stream, "\tcomputing    = %.0f\n", (double)pipeStats.computing);
  fprintf(stream, "\tmpStall      = %.0f\n", (double)pipeStats.mpStall);
  fprintf(stream, "\tdcStall      = %.0f\n", (double)pipeStats.dcStall);
  fprintf(stream, "\ttrapStall    = %.0f\n", (double)pipeStats.trapStall);
  fprintf(stream, "\tnoFUStall    = %.0f\n", (double)pipeStats.noFUStall);
  fprintf(stream, "\tFUStall      = %.0f\n", (double)pipeStats.FUStall);
  fprintf(stream, "\tldStall      = %.0f\n", (double)pipeStats.ldStall);
  fprintf(stream, "\tcldStall     = %.0f\n", (double)pipeStats.cldStall);
  fprintf(stream, "\ttotal cycles = %.0f (of %.0f)\n",
	  (double)sum, numIssue*(double)cycle);
  if (sum != numIssue*cycle)
    warn("sum != %d*cycle at end of execution, sum=%.0f, %d*cycle=%.0f",
	 numIssue, (double)sum, numIssue, numIssue*(double)cycle);
}


/* output to FU:
     maps a busy output to the FU that is creating its value, -1 indicates
     the output is not awaying a result */
int outToFU[RS_BIT_SIZE];

/* resource descriptor */
struct ResDesc {
  char *name;				/* name of functional unit */
  struct ResTmpl {
    enum FUClass fuClass;		/* matching fu class */
    ulong opLatency;			/* cycles until result is ready */
    ulong issueLatency;			/* cycles between issues */
  } x[NUM_FU_CLASSES];
  long busy;				/* cycles until this unit can issue,
					   -1 renders the unit unusable */
};

/* maximum number of instructions that can be inflight in the functional
   units, this is the number of entries allocated for the EVQUEUE free list */
#define MAX_STATE	64		/* FIXME: we should compute this */

/* resource configuration, in the event of a tie between two resources
   the resources are allocated in the order that they occur in this list,
   order these from most used to least used resources */
#ifndef BIG_CONFIG
static struct ResDesc resource[] = {
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0

Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p1of5]
Message-ID: <free1-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free1-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
Date: Mon, 1 Aug 1994 11:00:16 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1343
Xref: bloom-beacon.mit.edu comp.compilers:3316 comp.lang.misc:5185 comp.archives.admin:675 news.answers:23367 comp.answers:6565

Archive-name: free-compilers/part1
Last-modified: 1994/6/30
Version: 6.5

-------------------------------------------------------------------------------
Catalog of Free Compilers and Interpreters.
-------------------------------------------------------------------------------
Copyright (c) 1993, David Muir Sharnoff, All Rights Reserved
Copyright (c) 1994, Steven Allen Robenalt, All Rights Reserved

This list catalogues freely available software for language tools, which
includes the following: compilers, compiler generators, interpreters, 
translators, important libraries, assemblers, etc.  -- things whose user 
interface is a language.  Natural language processing tools may also 
be included.

This list is primarily aimed at developers rather than researchers, and
consists mainly of citations for production quality systems.  There is some
overlap of coverage between this document and other lists and catalogs.  See
the references section for a list...

All the listed items should be free and come with source code, exceptions have
generally been deleted from the list in the past.  If you find any such items
in the list let me know and I'll remove them.

The latest version of the catalog can be ftp'ed: get
pub/compilers-list/free-compilers from idiom.berkeley.ca.us.

This catalog is available through World Wide Web.  A searchable
hypertext version can be accessed through http://cui_www.unige.ch/freecomp.
(As of the middle of January, the WWW version was still based on rev. 5.2)

Not all entries have complete citations.  Some fields are filled with question
marks (?).  Fields with both the ? and an entry are implicit requests for
confirmation.  Also, specific questions will often be asked [in brackets --ed].

I put in the reference entry last year to help decentralise the accquisition
of new entries.  So if you have information not included in here or updates to
information listed here, a template has been provided below (in fact, the
first entry in the tools section) for you to use.  You can send whatever
new items or updates you have to <free-compilers@idiom.berkeley.ca.us>.
Note that the "how to get" field in each entry has been returned to "location"
as before -- for increased future compatibility with various formats.

-Mark Hopkins, June 29, 1994

-------------------------------------------------------------------------------
overview (table of contents)
-------------------------------------------------------------------------------

Section							Parts
introduction 						  1
overview (table of contents) 				  1
changes and history					  1
prototype entry						  1
tools							 1-5
	scripting languages				  1
	functional languages				  1
	C variants					  2
	compiled, imperitive languages			  2
	object oriented languages			  2
	lisp family					  3
	document formatting languages			  3
	logic programming languages			  3
	concurrent, parellel, and simulation languages	  4
	Forth family languages				  4
	compiler generators and related tools		  4
	mathematical tools and languages		  4
	electrical engineering languages		  4
	Wirth family languages				  5
	assemblers					  5
	macro preprocessors				  5
	special purpose languages			  5
	natural languages				  5
	curiosities					  5
	unable to classify due to lack of knowledge	  5
references						  5
archives						  5
cross-reference						  5

-------------------------------------------------------------------------------
changes and history
-------------------------------------------------------------------------------

This document grew out of David Muir Sharnoff filing away postings that he 
saw (mostly Ed Vielmetti's postings to comp.archives) during 1991 and the 
first half of 1992.  At the Summer 1992 USENIX Technical Conference, the 
other attendees of the archivists BOF convinced David to compile his data 
into a posting.  David posted for about one year, then turned the list over 
to Mark Hopkins.  Mark Hopkins <markh@csd4.csd.uwm.edu> took care of it for 
the summer of 1993 and then gave it back to David Sharnoff when he dropped 
off the net.  Steve Robenalt <robenalt@orange.digex.net> has took over 
the list maintenance from Dave in 1994, and it was returned to Mark Hopkins
<mark@omnifest.uwm.edu> in May, but Dave's organization, Idiom Consulting,
remains as the focal point for information to be submitted.

A new minor alterations have been made in this version in relation to
last month.  Tabs have been inserted into the list to reduce its size, I'm
assuming the common tab stop at every 8th place, so you may need to set your
editor or viewer appropriately.  The following items have been swapped:

           Language category             Before     After
           -----------------------------------------------
           Wirth family languages        Part 3     Part 5
           document formatting languages Part 5     Part 3

in order to more even out the sizes of the various parts to the list.  Also,
the table of contents above has been made a little bit more detailed.

For this version the changes to the list are:

	language		package
	--------		-------
new listings:
	BNF (yacc)		bison-A2.2
	LPC			LPC4 (v. 4.05.11)
	Prolog + constraints	clp(FD) 2.1
	Prolog			wamcc 2.1
	EBNF			ETO (test release)
	CAML, Bigloo		Camloo 0.2
	? Lisp, X		winterp 2.01
new versions:
 	TCL			   Extended Tcl (tclx) 7.3a
 	Scheme			   VSCM V0r3
 	C, nroff, texinfo, latex   c2man 2.0 patchlevel 31
 	REXX			   REXX/imc 1.6
 	COCOL (EBNF variant)	   COCO/R 1.36
 	Common Lisp		   CLiCC 0.6.4
 	C			   GNU C Library (glibc) 1.08.1
 	Korn Shell		   Bash (Bourne Again SHell) 1.14
 	csh (C-Shell)		   tcsh 6.05
 	Lisp (elisp - Emacs Lisp)  Lucid Emacs (lemacs) 19.10

-------------------------------------------------------------------------------
prototype entry
-------------------------------------------------------------------------------
Every entry should at least have the fields marked with two asterisks (**).

language:	**Reference Entry 
		Language: what the software compiles/interprets...
package:	**The name of the package
version:	**Its current version
parts:		**compiler, assembler, interpreter, translator, grammar(yacc,
		lex), library, documentation, examples, assembler, simulator,
		tutorial, test suite, byte-code compiler, run-time,
		translator(from->to)...  Compilers that use C as an 
		intermediate lanaguage should be noted as "compiler(->C)".
		Compilers that compile into a coded representation that is
		interpreted by a runtime module should be noted as "bytecode
		compiler".  Do not say "source code" -- if source is not
		included, do not send an entry at all!
author: 	**the creator of the package.  Email addresses are in the 
		form "Real Name <email@address>".  Surface mail addresses
		are not used unless there is no email address.
location:	**where to get the source, how to get it -- usually an FTP site
		or two.  May have subheaders for specific areas or different
		ports of the software (don't overdo this!):  Only official
		sites should be listed.  The format for ftp directives is "ftp
		dir/file from host", although valid URL's are acceptable too.
		No IP address is generally given.
		Also, either of the forms "host:directory or file" or
		"host in directory file" may be used with the understanding
		that it refers to an anonymous FTP site.
    N.America:	Sites for North Americans.
    Europe:	Sites Europeans should use
    Japan:	Sites for people in Japan
    OS/2:	Sites with OS/2 ports.
description:	**what the package is, possibly including some history
		A short review encouraged, but no propaganda please.
conformance:	how well does it conform to the existing Standard, if one
		exists
reference:	research references and other external documentation.
features:	salient features not listed in the description.
bugs:		known bugs (also: where to go to find/report bugs)
restriction:	restrictions using the software will place on the user.
requires:	what is needed to install it.  A C compiler is assumed.
ports:		where it has been installed
portability:	how system-independent is it, system dependencies.
status: 	development status (active, history, supported, etc)
discussion:	where discussion about the package takes place
help:		where help may be gotten from
support:	where support may be gotten from
contributions:	possible requests for money contributions (but no shareware)
announcements:	where new releases are announced
contact:	who to reach concerning the package (if not author)
updated:	**last known update to the package, not time of the update 
		to the entry in the catalog!

In addition to the above, in entries for categories, and languages, 
cross-references can be made.  
cref:		cross-reference to a category
lref:		cross-reference to a language
iref:		(language it's filed under in parenthesis) cross-reference 
		to an implementation

-------------------------------------------------------------------------------
tools
-------------------------------------------------------------------------------

scripting languages
-------------------------------------------------------------------------------
category:	scripting languages
description:	These are languages that are primarily interpreted, and on 
		unix sytems, can ususally be invoked directly from a text 
		using #!.  

language:	ABC
package:	ABC
version:	1.04.01
parts:		interpreter/compiler
author: 	Leo Geurts, Lambert Meertens, 
		Steven Pemberton <Steven.Pemberton@cwi.nl>
location:	ftp programming/languages/abc/* from ftp.eu.net or ftp.nluug.nl
description:	ABC is an imperative language embedded in its own environment.
		It is interactive, structured, high-level, very easy to learn,
		and easy to use.  It is suitable for general everyday
		programming, such as you would use BASIC, Pascal, or AWK for.
		It is not a systems-programming language. It is an excellent
		teaching language, and because it is interactive, excellent for
		prototyping.  ABC programs are typically very compact, around a
		quarter to a fifth the size of the equivalent Pascal or C
		program.  However, this is not at the cost of readability, on
		the contrary in fact.
reference:	"The ABC Programmer's Handbook" by Leo Geurts,
		Lambert Meertens and Steven Pemberton, published by 
		Prentice-Hall (ISBN 0-13-000027-2)
		"An Alternative Simple Language and Environment for PCs" 
		by Steven Pemberton, IEEE Software, Vol. 4, No. 1, 
		January 1987, pp.  56-64.
ports:		unix, MSDOS, atari, mac
discussion:	abc-list-request@cwi.nl
contact:	abc@cwi.nl
updated:	1991/05/02

language:	awk (new)
package:	mawk
version:	1.1.3
parts:		interpreter
author: 	Mike Brennan <brennan@bcsaic.boeing.com>
location:	ftp public/mawk* from oxy.edu
description:	?
conformance:	superset
		+ RS can be a regular expression
features:	+ faster than most new awks
ports:		sun3,sun4:sunos4.0.3 vax:bsd4.3,ultrix4.1 stardent3000:sysVR3 
		decstation:ultrix4.1 msdos:turboC++
status: 	actively developed
contact:	Mike Brennan <brennan@bcsaic.boeing.com>
updated:	1993/03/14

language:	awk (new)
package:	GNU awk (gawk)
version:	2.15.5
parts:		interpreter, documentation
author: 	David Trueman <david@cs.dal.ca> and 
		Arnold Robbins <arnold@cc.gatech.edu>
location:	ftp gawk-2.15.tar.Z from a GNU archive site
description:	?
conformance:	superset including some Plan 9 features
ports:		unix, msdos:msc5.1
status: 	activly developed
updated:	1994/05/19

language:	BASIC
package:	bwBASIC (Bywater BASIC interpreter)
version:	2.10
parts:		interpreter, shell, ?
author: 	Ted A. Campbell <tcamp@delphi.com>
location:	comp.sources.misc volume 40
description:	The Bywater BASIC Interpreter (bwBASIC) implements a large
		superset of the ANSI Standard for Minimal BASIC (X3.60-1978)
		implemented in ANSI C, and offers a simple interactive environ-
		ment including some shell program facilities as an extension of
		BASIC. The interpreter has been compiled successfully on a
		range of ANSI C compilers on varying platforms with no
		alterations to source code necessary.
ports:		DOS, Unix, Acorn's RISC OS
updated:	1993/10/29

language:	BASIC
package:	? basic ?
version:	?
parts:		paser(yacc), interpreter
author: 	?
location:	comp.sources.unix archives volume 2
description:	?
updated:	?

language:	BASIC
package:	? bournebasic ?
version:	?
parts:		interpreter
author: 	?
location:	comp.sources.misc archives volume 1
description:	?
updated:	?

language:	BASIC
package:	ubasic
version:	8
parts:		?
author: 	Yuji Kida
location:	? ask archie ?
description:	?
reference:	reviewed in Notices of the A.M.S #36 (May/June 1989),
		and "A math-oriented high-precision BASIC", #38 (3/91)
contact:	?
updated:	1992/07/06

language:	BASIC
package:	?
version:	?
parts:		interpreter
author: 	?
location:	ftp pub/unix-c/languages/basic/basic.tar-z from oak.oakland.edu
description:	public domain version of DEC's MU-Basic with Microsoft
		Basic mixed together
contact:	?
updated:	?

language:	Bourne Shell
package:	ash
version:	?
parts:		interpreter, manual page
author: 	Kenneth Almquist
location:	ftp from any 386BSD, NetBSD, or FreeBSD archive
    Linux:	ftp pub/linux/ports/ash-linux-0.1.tar.gz from ftp.win.tue.nl
description:	A Bourne Shell clone.  It works pretty well.  For running
		scripts, it is sometimes better and sometimes worse than Bash.
ports:		386BSD, NetBSD, FreeBSD, Linux
updated:	?

language:	csh (C-Shell)
package:	tcsh
version:	6.05
parts:		interpreter, manual page, html manual
author: 	Christos Zoulas <christos@ee.cornell.edu>
location:	/pub/tcsh/tcsh-6.05.tar.gz
		   from tesla.ee.cornell.edu (128.84.253.11)
description:	a modified C-Shell with history editing
ports:		unix, VMS_POSIX, nearing completion: OS/2 EMX.
updated:	1994/06/27

language:	ERGO-Shell (a window-based Unix shell)
package:	ERGO-Shell
version:	2.1
parts:		interpreter
author: 	Regine Freitag <freitag@gmd.de>
location:	ftp gmd/ergo/? from ftp.gmd.de 
description:	An ergonomic window-based Unix shell for software engineers.
		[Can one program in ERGO-Shell? --ed]
bugs:		Relative path names are not expanded on the SUN 3 port,
		expansion ability on SUN 4 only on certain conditions.
requires:	Needs X-windows (X11R4) or OSF/Motif (revision 1.1)
ports:		Sun 4
contact:	Dr. Wolfgang Dzida, GMD <dzida@gmd.de> or the author
updated:	1993/06/04

language:	es (a functional shell)
package:	es
version:	0.84
parts:		interpreter
author: 	Byron Rakitzis <byron@netapp.com>, Paul Haahr <haahr@adobe.com>
location:	ftp pub/es/es-0.84.tar.Z from ftp.sys.utoronto.ca
description:	shell with higher order functions
		+ builtin features implemented as redefineable functions
updated:	1993/04/30

language:	Glish
package:	glish
version:	2.4.1
parts:		interpreter, C++ class library, user manual
author: 	Vern Paxson <vern@ee.lbl.gov>
location:	ftp glish/glish-2.4.1.tar.Z from ftp.ee.lbl.gov
description:	Glish is an interpretive language for building loosely-coupled
		distributed systems from modular, event-oriented programs.
		These programs are written in conventional languages such as C,
		C++, or Fortran.  Glish scripts can create local and remote
		processes and control their communication.  Glish also provides
		a full, array-oriented programming language (similar to S) for
		manipulating binary data sent between the processes.  In
		general Glish uses a centralized communication model where
		interprocess communication passes through the Glish
		interpreter, allowing dynamic modification and rerouting of
		data values, but Glish also supports point-to-point links
		between processes when necessary for high performance.
reference:	"Glish: A User-Level Software Bus for Loosely-Coupled
		Distributed Systems," Vern Paxson and Chris Saltmarsh,
		Proceedings of the 1993 Winter USENIX Conference, San Diego,
		CA, January, 1993.
requires:	C++
ports:		SunOS, Ultrix, HP/UX (rusty)
updated:	1993/11/01

language:	ici
package:	ici
version:	?
parts:		interpreter, documentation, examples
author: 	Tim Long
location:	ftp pub/ici.tar.Z from ftp.su.edu.au
		ftp pub/oz/ici.tar.Z from nexus.yorku.ca
description:	ICI has dynamic arrays, structures and typing with the flow
		control constructs, operators and syntax of C.	There are
		standard functions to provided the sort of support provided
		by the standard I/O and the C libraries, as well as additional
		types and functions to support common needs such as simple
		data bases and character based screen handling.
features:	+ direct access to many system calls
		+ structures, safe pointers, floating point
		+ simple, non-indexed built in database
		+ terminal-based windowing library
ports:		Sun4, 80x86 Xenix, NextStep, MSDOS, HP-UX
portability:	high
status: 	actively developed.
discussion:	send "help" to listserv@research.canon.oz.au
contact:	Andy Newman <andy@research.canon.oz.au>
updated:	1994/04/18

language:	Icon
package:	icon
version:	8.8 (8.7, 8.5, 8.0 depending on platform)
parts:		interpreter, compiler (some platforms), library (v8.8)
author: 	Ralph Griswold <ralph@CS.ARIZONA.EDU>
location:	ftp icon/* from cs.arizona.edu
		MS-DOS version: ftp norman/iconexe.zip from bellcore.com
description:	Icon is a high-level, general purpose programming language that
		contains many features for processing nonnumeric data,
		particularly for textual material consisting of string of
		characters.
		- no packages, one name-space
		- no exceptions
		+ object oriented features
		+ records, sets, lists, strings, tables
		+ unlimited line length
		- unix interface is primitive
		+ co-expressions
reference:	"The Icon Programmming Language", Ralph E. Griswold and 
		Madge T. Griswold, Prentice Hall, seond edition, 1990.
		"The Implementation of the Icon Programmming Language", 
		Ralph E. Griswold and Madge T. Griswold, Princeton 
		University Press 1986
ports:		Amiga, Atari, CMS, Macintosh, Macintosh/MPW, MSDOS, MVS, OS/2,
		Unix (most variants), VMS, Acorn
discussion:	comp.lang.icon
contact:	icon-project@cs.arizona.edu
		mengarini@delphi.com for MS-DOS version
updated:	1992/08/21

language:	Icon
iref:		(BNF) ibpag2

language:	IVY
package:	Ivy
version:	experimental
parts:		interpreter
author: 	Joseph H Allen <jhallen@world.std.com>
location:	alt.sources 1993/09/28 <CE1wo3.74A@world.std.com>
description:	A language with a pleasant syntax compared to perl, tcl or
		lisp.  It has nice features like low punctuation count, blocks
		indicated by indentation, and similarity to normal procedural
		languages.  This language started out as an idea for an
		extension language for the editor JOE.
updated:	1993/09/28

language:	Korn Shell
package:	SKsh
version:	2.1
parts:		interpreter, utilities
author: 	Steve Koren <koren@hpfcogv.fc.hp.com>
location:	ftp pub/amiga/incom*/utils/SKsh021.lzh from hubcap.clemson.edu
description:	SKsh is a Unix ksh-like shell which runs under AmigaDos.
		it provides a Unix like environment but supports many
		AmigaDos features such as resident commands, ARexx, etc.
		Scripts can be written to run under either ksh or SKsh,
		and many of the useful Unix commands such as xargs, grep,
		find, etc. are provided.
ports:		Amiga
updated:	1992/12/16

language:	Korn Shell 
package:	Bash (Bourne Again SHell)
version:	1.14
parts:		parser(yacc), interpreter, documentation
author: 	Brian Fox <bfox@vision.ucsb.edu>
location:	ftp bash-1.14.tar.gz from a GNU archive site
description:	Bash is a Posix compatable shell with full Bourne shell syntax,
		and some C-shell commands built in.  The Bourne Again Shell
		supports emacs-style command-line editing, job control,
		functions, and on-line help.  
bugs:		gnu.bash.bug, bug-bash@prep.ai.mit.edu
restriction:	GNU General Public License
updated:	1994/06/02

language:	Korn Shell
package:	pdksh
version:	4.9
parts:		interpreter
author: 	Simon J. Gerraty <sjg@zen.void.oz.au>
location:	comp.sources.misc volume 4
description:	It is not intended to be the ultimate shell but rather a usable
		ksh work alike.
conformance:	Almost identical to ksh88, but missing arrays
ports:		Sun, 386bsd, ?
contact:	Simon J Gerraty <sjg@melb.bull.oz.au> (zen.void.oz.au is down)
updated:	1993/10/11

language:	LPC
package:	LPC4
version:	4.05.11
parts:		interpreter, bytecode compiler, documentation, sample scripts,
		sample mudlib
author:		Fredrik Hubinette <hubbe@lysator.liu.se>
location:	ftp://ftp.lysator.liu.se/pub/lpmud/drivers/profezzorn/
description:	A development of Lars Pensj|'s language for MUD, with
		script-running capability. LPC has a syntax similar to C,
		but works internally like Perl or some one-cell Lisp.
features:	mappings, dynamic arrays, binary strings (ie. they
		can contain zeros) and socket communication functions
restriction:	May currently not be used for monetary gain.
		(Imposed by Lars Pensj|)
requires:	yacc/byacc/bison
ports:		dynix, hp-ux, Sunos4, Solaris, Linux
portability:	Should work fine on most Unix.
discussion:	lpc4-request@lysator.liu.se
updated:	1994/06/04

language:	Perl5 (Practical Extraction and Report Language)
package:	perl
version:	5.0 alpha 3
parts:		interpreter, debugger, libraries, tests, documentation
author: 	Larry Wall <lwall@netlabs.com>
location:	ftp pub/perl5.0/* from ftp.netlabs.com 
description:	perl5 is a major rewrite and enhancement to perl4.  It adds
		real data structures (by way of "references"), un-adorned
		subroutine calls, and method inheritance.  It is not 
		stable (yet).
ports:		SunOS
updated:	1993/11

language:	Perl (Practical Extraction and Report Language)
package:	perl
version:	4.0 patchlevel 36
parts:		interpreter, debugger, libraries, tests, documentation
author: 	Larry Wall <lwall@netlabs.com>
location:	ftp pub/perl.4.0/* from jpl-devvax.jpl.nasa.gov 
    OS/2:	ftp pub/os2/all/unix/prog*/perl4019.zip from hobbes.nmsu.edu
    Macintosh:	ftp software/mac/src/mpw_c/Mac_Perl_405_* from nic.switch.ch
    Amiga:	ftp perl4.035.V010.* from wuarchive.wustl.edu
    VMS:	ftp software/vms/perl/* from ftp.pitt.edu
    Atari:	ftp amiga/Languages/perl* from atari.archive.umich.edu
    MSDOS:	ftp pub/msdos/perl/* from ftp.ee.umanitoba.ca
		ftp pub/msdos/perl/bperl* from oak.oakland.edu
    Windows NT: ftp pub/pc/win3/nt/ntperl*.zip from cica.cica.indiana.edu
    MVS:	ftp dist/perl-4036.tar.Z from oozelum.csi.cam.ac.uk
    Netware:	contact Jack Thomasson <Jack_Thomasson@Novell.COM>
description:	perl is an interpreted language optimized for scanning 
		arbitrary text files, extracting information from those text
		files, and printing reports based on that information.	It's
		also a good language for many system management tasks.	
reference:	"Programming Perl" by Larry Wall and Randal L. Schwartz,
		O'Reilly & Associates, Inc.  Sebastopol, CA.
		ISBN 0-93715-64-1
		"Learning Perl" by Randal L. Schwartz, 
		O'Reilly & Associates, Inc.  Sebastopol, CA.
		ISBN [??? --ed]
		The perl FAQ, ftp from rtfm.mit.edu
features:	+ very-high semantic density becuase of powerful operators
		like regular expression substitution
		+ exceptions, provide/require
		+ associative array can be bound to dbm files
		+ no arbitrary limits
		+ direct access to almost all system calls
		+ can access binary data 
		+ many powerful idioms for common tasks
		+ 8-bit clean, including nulls
		- three variable types: scalar, array, and hash table
		- syntax requires variable and function prefix characters
bugs:		comp.lang.perl; Larry Wall <lwall@netlabs.com>
ports:		almost all unix, MSDOS, Mac, Amiga, Atari, OS/2, VMS, NT, MVS
portability:	very high for unix, not so high for others
discussion:	comp.lang.perl
    Macintosh:	mpw-perl-request@iis.ee.ethz.ch
updated:	1993/02/07

language:	perl, awk, sed, find
package:	a2p, s2p, find2perl
version:	?
parts:		translators(perl)
author: 	Larry Wall
location:	comes with perl
description:	translators to turn awk, sed, and find programs into perl 
		programs.
updated:	?

language:	Perl
package:	perl profiler.
version:	? 1
parts:		profiler
author: 	Anthony Iano-Fletcher <arf@maths.nott.ac.uk>
location:	Source posted on comp.lang.perl in mid-June 1993
description:	Profiles Perl scripts (mkpprof).
		Collates data from Perl scripts (pprof)
updated:	1993/06/17

language:	Perl
package:	Dylperl
version:	?
parts:		?
author: 	Roberto Salama <rs@fi.gs.com>
location:	posted to comp.lang.perl, 1993/08/11, <CBM3Bo.Lpw@fi.gs.com>
description:	A dynamic linking package for perl.  Dynamically-loaded 
		functions are accessed as if they were user-defined funtions.
		This code is based on Oliver Sharp's May 1993 article in 
		Dr. Dobbs Journal (Dynamic Linking under Berkeley UNIX).
ports:		?
updated:	1993/08/11

language:	Perl
package:	curseperl
version:	?
parts:		?
author: 	Larry Wall <lwall@netlabs.com>
location:	comes with perl
description:	A curses library for perl
updated:	?

language:	Python
package:	Python
version:	1.0.2
parts:		interpeter, libraries, documentation, emacs macros
author: 	Guido van Rossum <guido@cwi.nl>
location:	ftp pub/python* from ftp.cwi.nl
    N.America:	ftp pub/plan/python/cwi from gatekeeper.dec.com
    Europe:	ftp pub/unix/languages/python from ftp.fu-berlin.de
description:	Python is a simple, yet powerful programming language
		that bridges the gap between C and shell programming,
		and is thus ideally suited for rapid prototyping.  Its
		syntax is put together from constructs borrowed from a
		variety of other languages; most prominent are
		influences from ABC, C, Modula-3 and Icon.  Python is
		object oriented and is suitable for fairly large programs.
		+ packages
		+ exceptions
		+ good C interface
		+ dynamic loading of C modules
		- arbitrary restrictions
reference:	Python documentation URL <http://www.cwi.nl/~guido/Python.html>
ports:		unix and Macintosh
discussion:	python-list-request@cwi.nl
updated:	1994/05/08

language:	Python
package:	vpApp
version:	0.2
parts:		Class Library, User Reference
author: 	Per Spilling <per@cwi.nl>
		Real Name <email@address>
location:	ftp.cwi.nl in /pub/python/vpApp.tar.gz.
description:	vpApp = visual-programming application.  It supports the
		building of applications in Python.
requires:	Python interpreter with built-in X support.
updated:	1994/05/06

language:	Q (also small subsets of Common Lisp and Scheme)
package:	Q
version:	? 1
parts:		interpreter, compiler framework, libraries, documentation
author: 	Per Bothner <bothner@cygnus.com>
location:	ftp pub/Q.* from ftp.cygnus.com
description:	Q is a very high-level programming language, and a test-bed
		for programming language ideas.  Where APL uses arrays
		to explicit looping, Q uses generalized sequences
		(finite or infinite, stored or calculated on demand).
		It has lexical scoping, and some support for logical and
		constraint programming.  The syntax was designed for
		convenient interactive use.  A macro facility together
		with primitives to run programs is used to make an
		interactive command language with full shell features.
		The Q system is written in C++, and its run-time code
		may be useful to people implementing other languages.
ports:		Linux and SUN 4
portability:	Should work on 32-bit Unix-like systems
updated:	1993/06/07

language:	REXX
package:	The Regina Rexx Interpreter
version:	0.05i
parts:		interpreter, documentation, test programs
author: 	Anders Christensen <anders@pvv.unit.no>
location:	ftp pub/rexx/regina-0.05g.tar.Z from flipper.pvv.unit.no
    N.America:	ftp pub/freerexx/regina/regina-0.05d.tar.Z
		from rexx.uwaterloo.ca
description:	A Rexx interpreter.  The VMS version has an almost complete
		set of DCL lexical functions in the interpreter.  Ports to
		MS-DOS and OS/2 exist by lack special support for these
		platforms.
conformance:	Almost completely to Rexx Language Level 4.00 with some 
		Rexx SAA API extensions.
restriction:	GNU General Public License
ports:		Unix, VMS, MS-DOS (partial), OS/2 (partial)
discussion:	comp.lang.rexx
updated:	1993/10/15

language:	REXX
package:	?
version:	102
parts:		interpreter
author: 	? al ? 
location:	ftp alrexx/rx102.tar.Z from rexx.uwaterloo.ca
    USA:	ftp ? from tony.cat.syr.edu
description:	?
requires:	C++
ports:		unix
discussion:	comp.lang.rexx
contact:	?
updated:	1992/05/13

language:	REXX
package:	REXX/imc
version:	1.6
parts:		Interpreter, documentation.
author: 	Ian Collier <imc@comlab.oxford.ac.uk>
location:	ftp pub/freerexx/imc/rexx-imc-1.6.tar.Z from rexx.uwaterloo.ca
description:	REXX for Unix.	A general-purpose programming language
		designed by Mike Cowlishaw of IBM UK for readability and
		ease of use.  Also useful as a control language for Unix
		or for applications which make use of REXX's programming
		interface (REXX/imc may be compiled as a dynamic C library
		for applications to include on some systems).  REXX is an
		official scripting language of VM/CMS, OS/2 and AmigaDOS.
conformance:	REXX language level 4.00 (more or less), with some small
		extensions.  The C programming interface is a subset of
		the SAA interface exhibited by OS/2 REXX.
reference:	"The REXX Language" 2nd edition, by M.F. Cowlishaw;
		Prentice-Hall 1990.
ports:		SunOS, AIX 3.2
portability:	Requires Unix-domain sockets (restriction may be relaxed in
		the future).  Dynamic link function dlopen() is useful but
		not essential.
status: 	Under slow development.  Contact author for help/support.
discussion:	comp.lang.rexx (general forum for all REXX-related products).
announcements:	comp.lang.rexx
updated:	1994/05/18

language:	sed
package:	GNU sed 
version:	2.04
parts:		interpreter, ?
author: 	Tom Lord <lord+@andrew.cmu.edu>
location:	ftp sed-* from a GNU archive site
description:	A SED interpreter.  Sed is a stream editing filter language.
features:	Modulo n line addressing.
bugs:		bug-gnu-utils@prep.ai.mit.edu
updated:	1994/04/30

language:	rc (Plan 9 shell)
package:	rc
version:	1.4
parts:		interpretor
author: 	Byron Rakitzis <byron@netapp.com>
location:	ftp pub/rc/* from ftp.white.toronto.edu
description:	a free implementation of the Plan 9 shell.
discussion:	rc-request@hawkwind.utcs.toronto.edu
updated:	1992/05/26

language:	S-Lang
package:	slang
version:	0.94
parts:		interpreter, documentation, examples
author: 	John E. Davis <davis@amy.tch.harvard.edu>
location:	ftp pub/slang/* from amy.tch.harvard.edu
description:	A small but highly functional embedded interpreter.  S-Lang was
		a stack-based postfix language resembling Forth and BC/DC with
		limited support for infix notation.   Now it has a C-like infix
		syntax.  Arrays, Stings, Integers, Floating Point, and
		Autoloading are all suported.  The editor JED embeds S-lang.
restriction:	GNU Library General Public License
ports:		MSDOS, Unix, VMS
portability:	Must be compiled with large memory model on MSDOS.
updated:	1993/06/12

language:	Snobol4
package:	SIL (Macro Implementation of SNOBOL4)
version:	3.11
parts:		?
author: 	?
location:	ftp snobol4/* from cs.arizona.edu
description:	?
contact:	snobol4@arizona.edu
updated:	1986/07/29

language:	Snobol4
package:	vanilla
version:	?
parts:		?
author: 	Catspaw, Inc.
location:	ftp snobol4/vanilla.arc from cs.arizona.edu
description:	?
ports:		MSDOS
contact:	?
updated:	1992/02/05

language:	ssh (Steve's Shell)
package:	ssh
version:	1.7
parts:		interpreter
author: 	Steve Baker <ice@judy.indstate.edu> with help from Thomas Moore
location:	comp.sources.unix volume 26
description:	A unix shell with a lot of csh/ksh-like features.
ports:		sequent, sun, next, ultrix, bsdi
updated:	1993/04/15

language:	subscript
package:	sub (seismic unix basic)
version:	0.9
parts:		Embedded interpreter, demo application, User's Guide,
		example inputs for demo.
author: 	Martin L. Smith (martin@ner.com)
location:	hilbert.mines.colorado.edu (138.67.12.63) in
		pub/cwpcodes/*sub*.tar
description:	subscript is a bytecode-compiled scripting language that
		provides a convenient way of manipulating binary stream
		data.  It is currently distributed embedded in a demo
		application (sub), which illustrates the processing of
		seismic data, but the interpreter/compiler core is
		portable to other applications.
features:	the interpreted language provides atomic manipulation
		of vectors of floating-point values.
requires:	yacc.
ports:		Unixware 1.x, SunOS 4.x, NextStep, Linux 0.99.
status: 	Undergoing active development, with future inclusion into
		the Colorado School of Mines' Seismic Unix package.
updated:	?

language:	TCL (Tool Command Language)
package:	Tcl
version:	7.3
parts:		interpreter, libraries, tests, documentation
author: 	John Ousterhout <ouster@cs.berkeley.edu>
location:	ftp.cs.berkeley.edu in ucb/tcl/tcl*
    MSDOS:	harbor.ecn.purdue.edu in /pub/tcl/distrib/mstcl73e.zip
    Macintosh:	bric-a-brac.apple.com in pub/ticl 
		harbor.ecn.purdue.edu in pub/tcl/distrib/MacTcl7.3.sea.*
    Examples:	ftp tcl/* from barkley.berkeley.edu
    Kanji:	ftp pub/lang/tcl/jp/tk3.2jp-patch.Z from srawgw.sra.co.jp
description:	A small text-oriented embedded language similar to LISP with
		add-on extensions that allow it to also function more as a
		shell.	TCL also allows algebraic expressions to be written
		for simplicity and convenience.  Its greatest strength lies
		in its uniform representation of everything as a string.
		This is also its weakness.
		+ may be used as an embedded interpreter
		+ exceptions, packages (called libraries)
		- only a single name-space
		+ provide/require
		- no dynamic loading ability
		+ 8-bit clean
		- only three variable types: strings, lists, associative arrays
bugs:		?
requires:	DOS port requires Desqview/X.
ports:		MSDOS, others in progress (see comp.lang.tcl FAQ)
discussion:	comp.lang.tcl
updated:	1993/11/15

language:	TCL, Tk
package:	Tk
version:	3.5
parts:		GUI library
author: 	John Ousterhout <ouster@sprite.Berkeley.EDU>
location:	ftp ucb/tcl/tk* from ftp.cs.berkeley.edu
description:	Tk is a X11 gui library that is designed to interoperate
		with TCL. It provides a very easy way to create sophisticated
		applications.  The appearence of Tk is very similar to Motif.
updated:	1993/11/15

language:	TCL
package:	BOS - The Basic Object System
version:	1.31
parts:		library
author: 	Sean Levy <Sean.Levy@cs.cmu.edu>
location:	ftp tcl/? from barkley.berkeley.edu
description:	BOS is a C-callable library that implements the notion of
		object and which uses Tcl as its interpreter for interpreted
		methods (you can have "compiled" methods in C, and mix compiled
		and interpreted methods in the same object, plus lots more
		stuff).  I regularly (a) subclass and (b) mixin existing
		objects using BOS to extend, among other things, the set of tk
		widgets (I have all tk widgets wrapped with BOS "classes"). BOS
		is a class-free object system, also called a prototype-based
		object system; it is modeled loosely on the Self system from
		Stanford.
updated:	1992/08/21

language:	TCL
package:	Tcl-DP
version:	3.0
parts:		library
author: 	Larry Rowe ?
location:	ftp pub/multimedia/Tcl-DP from toe.cs.berkeley.edu
description:	Tcl-DP extends the "send" by removing the restriction
		that you can only send to other clients of the same 
		X11 server.  [could someone give a better description? --ed]
updated:	?

language:	Tcl
package:	Tickle
version:	5.0v1
parts:		Text Editor, File Translator, TCL Interpreter
author: 	time@ice.com
location:	/pub/vendor/ice/tickle/Tickle5.0v1.hqx from ftp.msen.com
description:	A Macintosh TCL interprter and library.  It includes a 
		text editor (>32k); file translation utilities; support
		for tclX extensions; some unix-equivelent utilites; access
		to Macintosh functions (Resource Manager, Communications
		Toolbox, OSA Components, Editions, and Apple Events); OSA
		Script Support; and Drag and Drop.
bugs:		time@ice.com?
requires:	?
ports:		Mac
portability:	Mac-specific package
updated:	1994/01/12
lref:		TCL

language:	TCL
package:	Wafe
version:	0.95
parts:		interface
author: 	Gustaf Neumann <neumann@watson.ibm.com>
location:	ftp pub/src/X11/wafe/wafe-0.95.tar.gz from ftp.wu-wien.ac.at
description:	Wafe (Widget[Athena]front end) is a package that implements
		a symbolic interface to the Athena widgets (X11R5) and
		OSF/Motif.  A typical Wafe application consists of two
		parts: a front-end (Wafe) and an application program which
		runs typically as a separate process.  The distribution
		contains sample application programs in Perl, GAWK, Prolog,
		TCL, C and Ada talking to the same Wafe binary.
portability:	very high, just needs X11R4 or X11R5.
discussion:	send "subscribe Wafe <Your Name>" to listserv@wu-wien.ac.at
updated:	1993/07/01

language:	TCL
package:	Extended Tcl (tclx)
version:	7.3a
parts:		library
author:		Mark Diekhans <markd@Grizzly.com>,
		Karl Lehenbauer <karl@NeoSoft.com>
location:	ftp pub/tcl/distrib/tclX7.3a.tar.gz from ftp.neosoft.com
		ftp pub/tcl/extensions/tclX7.3a.tar.gz from
		   harbor.ecn.purdue.edu
description:	Extended Tcl adds statements to the TCL language to provide
		high-level access unix system primitives.
contact:	tcl-project@NeoSoft.com
updated:	1994/05/31

language:	TCL
package:	tcl-debug
version:	?
parts:		debugger
author: 	Don Libes <libes@cme.nist.gov>
location:	ftp pub/expect/tcl-debug.tar.Z from ftp.cme.nist.gov
description:	A debugger for Tcl that can be easily embedded in other
		applications.  It is included with many other Tcl libraries.
updated:	?

language:	TCL
package:	Cygnus Tcl Tools
version:	Release-930124
parts:		?
author: 	david d 'zoo' zuhn <zoo@cygnus.com>
location:	ftp pub/tcltools-* from cygnus.com
description:	A rebundling of Tcl and Tk into the Cyngus GNU build 
		framework with 'configure'.
updated:	1993/01/24

language:	Z-shell
package:	zsh
version:	2.3.1 (2.4 in beta)
parts:		interpreter
author: 	Paul Falstad <pf@ttisms.com>
location:	ftp pub/bas/zsh/zsh-*.tar.z from carlo.phys.uva.nl
description:	zsh is most similar to ksh, while many of the additions are to
		please csh users.
features:	+ multi-line commands editable as a single buffer,
		+ variable editing (vared),
		+ command buffer stack,
		+ recursive globbing,
		+ manipulation of arrays,
		+ spelling correction.
ports:		Berkeley-based Unix, SVR4-based Unix 
discussion:	zsh-request@cs.uow.edu.au
contact:	zsh-list@cs.uow.edu.au
updated:	1993/03/23

functional languages
-------------------------------------------------------------------------------
category:	functional languages
description:	[someone have a good one-liner?  --ed]
lref:		es
lref:		LIFE
lref:		ALLOY

language:	Caml
package:	CAML
version:	3.1
parts:		compiler, interactive development environment
author: 	Ascander Suarez, Pierre Weis, Michel Mauny, others (INRIA)
location:	ftp lang/caml/* from ftp.inria.fr
description:	Caml is a programming language from the ML/Standard ML family,
		with functions as first-class values, static type inference
		with polymorphic types, user-defined variant and product
		types, and pattern-matching. The CAML V3.1 implementation
		adds lazy and mutable data structures, a "grammar" mechanism
		for interfacing with the Yacc parser generator,
		pretty-printing tools, high-performance arbitrary-precision
		arithmetic, and a complete library.
bugs:		caml@margaux.inria.fr
ports:		Sun-3 Sun-4 Sony-68k Sony-R3000 Decstation Mac-A/UX Apollo
portability:	low (built on a proprietary runtime system)
status: 	maintained but no longer developed
discussion:	caml-list@margaux.inria.fr, comp.lang.ml
contact:	Pierre Weis <Pierre.Weis@inria.fr>
updated:	1991/10/20

language:	Caml 
package:	Caml Light
version:	0.6
parts:		bytecode compiler, emacs mode, libraries, scanner generator, 
		parser generator, runtime, interactive development environment
author: 	Xavier Leroy, Damien Doligez (INRIA)
location:	ftp lang/caml-light/* from ftp.inria.fr
description:	Caml is a programming language from the ML/Standard ML family,
		with functions as first-class values, static type inference
		with polymorphic types, user-defined variant and product
		types, and pattern-matching. The Caml Light implementation
		adds a Modula-2-like module system, separate compilation,
		lazy streams for parsing and printing, graphics primitives,
		and an interface with C.
features:	very small
bugs:		caml-light@margaux.inria.fr
ports:		most unix, Macintosh, MSDOS (16 and 32 bit modes), Atari ST
portability:	very high
status: 	actively developed
discussion:	caml-list@margaux.inria.fr, comp.lang.ml
contact:	Xavier Leroy <Xavier.Leroy@inria.fr>
updated:	1993/10/06

language:	CAML, Bigloo
package:	Camloo
version:	0.2
parts:		?
author: 	? Manuel.Serrano@inria.fr, Pierre.Weis@inria.fr
location:	ftp from ftp.inria.fr [192.93.2.54], in Camloo0.2
    N.America:	Sites for North Americans.
description:	An implementation of CAML in Bigloo.  It can be considered as
		an alternative to the regular camlc compiler.  In particular,
		it has successfully compiled many complex Caml Light programs,
		including camlc and the Coq system (the ``calculus of
		constructions'', a proof assistant).
conformance:	Full compliance with Caml Light 0.6 and Caml Light Libraries
		(including camlyacc and camllex).
requires:	Bigloo1.6c (available from same address).
contact:	Manuel.Serrano@inria.fr, Pierre.Weis@inria.fr.
updated:	1994/06/13

language:	Concurrent Clean
package:	The Concurrent Clean System
version:	0.8.1
parts:		development environment, documentation, compiler(byte-code), 
		compiler(native), interpreter(byte-code), examples
author: 	Research Institute for Declarative Systems, 
		University of Nijmegen
location:	ftp pub/Clean/* from ftp.cs.kun.nl 
description:	The Concurrent Clean system is a programming environment for
		the functional language Concurrent Clean, developed at the
		University of Nijmegen, The Netherlands. The system is one of
		the fastest implementations of functional languages available
		at the moment. Its I/O libraries make it possible to do modern,
		yet purely functional I/O (including windows, menus, dialogs
		etc.) in Concurrent Clean. With the Concurrent Clean system it
		is possible to develop real-life applications in a purely
		functional language.
		* lazy and purely functional
		* strongly typed - based on Milner/Mycroft scheme
		* module structure
		* modern I/O
		* programmer-infulenced evaluation order by annotations
ports:		Sun-3, Sun-4, Macintosh
contact:	clean@cs.kun.nl
updated:	1992/11/07

language:	FP
package:	? funcproglang ?
version:	?
parts:		translator(C)
author: 	?
location:	comp.sources.unix archive volume 13
description:	? Backus Functional Programming ?
updated:	?

language:	Gofer (Haskell derivative)
package:	Gofer
version:	2.28b
parts:		interpreter, compiler(->C), documentation, examples
author: 	Mark Jones <jones-mark@cs.yale.edu>
location:	ftp pub/haskell/gofer/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/gofer/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/gofer/* from ftp.cs.chalmers.se
description:	Gofer is based quite closely on the Haskell programming
		language, version 1.2.	It supports lazy evaluation, higher
		order functions, pattern matching, polymorphism, overloading
		etc and runs on a wide range of machines.
conformance:	Gofer does not implement all of Haskell, although it is 
		very close.
ports:		many, including Sun, PC, Mac, Atari, Amiga
status: 	maintained but not developed (for a while anyway)
updated:	1993/08/02

language:	Gofer
iref:		(BNF) Ratatosk

language:	Haskell
package:	Chalmers Haskell (aka Haskell B.)
version:	0.999.5
parts:		compiler, interpreter, library, documentation, examples
author: 	Lennart Augustsson <augustss@cs.chalmers.se>
location:	ftp pub/haskell/chalmers/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/chalmers/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/chalmers/* from ftp.cs.chalmers.se
description:	Full-featured implementation of Haskell 1.2, 
		with quite a few "Haskell B" extensions
requires:	LML
ports:		many, including Sun, DEC, Sequent, PC, Symmetry
		(unsupported versions for NS32000, RT/PC, CRAY, SUN3, VAX,
		ARM, and RS6000.)
discussion:	haskell-request@cs.yale.edu
    Europe:	haskell-request@dcs.glasgow.ac.uk
contact:	hbc@cs.chalmers.se
updated:	1993/08/02

language:	Haskell
package:	Glasgow Haskell Compiler (GHC)
version:	0.19
parts:		translator (C, SPARC), profiler
author: 	AQUA project, headed by Simon Peyton Jones
		<simonpj@dcs.glasgow.ac.uk>
location:	ftp pub/haskell/glasgow/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/glasgow/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/glasgow/* from ftp.cs.chalmers.se
description:	A near complete subset of Haskell 1.2, with numerous
		extensions.
conformance:	Almost all of Haskell 1.2 is implemented.
reference:	Papers at ftp.dcs.glasgow.ac.uk (only) in pub/glasgow-fp,
		"Imperative functional programming",
		Peyton Jones & Wadler, POPL '93
		"Unboxed data types as first-class citizens",
		Peyton Jones & Launchbury, FPCA '91
		"Profiling lazy functional languages",
		Sansom & Peyton Jones, Glasgow workshop '92
		"Implementing lazy functional languages on stock hardware",
		Peyton Jones, Journal of Functional Programming, Apr 1992
features:	An extensible I/O system is provided, based on a "monad"
		In-line C code
		Fully fledged unboxed data types,
		Incrementally-updatable arrays
		Mutable reference types.
		Generational garbage collector
bugs:		<glasgow-haskell-bugs@dcs.glasgow.ac.uk>
requires:	GNU C 2.1+, perl
ports:		solid: Sun4, Sun3; sort of: HP-PA, Alpha, DECstation
portability:	should be high
contact:	<glasgow-haskell-request@dcs.glasgow.ac.uk>
updated:	1993/12/17

language:	Haskell
package:	Yale Haskell
version:	2.0.5
parts:		compiler, documentation, reference manual (dvi format)
author: 	Yale Haskell project <haskell-request@cs.yale.edu>
location:	ftp pub/haskell/yale/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/yale/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/yale/* from ftp.cs.chalmers.se
description:	?
features:	X-window interface, available at the Haskell level too.
requires:	CMU Common Lisp, Lucid, Common Lisp, Allegro Common Lisp, or
		Harlequin LispWorks
ports:		SunOS 4.1.2, Sparc 10 (sun4m) 4.1.3
discussion:	haskell-request@cs.yale.edu
    Europe:	haskell-request@dcs.glasgow.ac.uk
contact:	haskell-request@cs.yale.edu
updated:	1993/07/14

language:	Hope
package:	?
version:	?
parts:		?
author: 	?
location:	ftp ? from brolga.cc.uq.oz.au
description:	Functional language with polymorphic types and lazy lists.
		First language to use call-by-pattern.
ports:		Unix, Mac, PC
updated:	1992/11/27

language:	IFP (Illinois Functional Programming)
package:	ifp
version:	0.5
parts:		interpreter
author: 	Arch D. Robison <robison@shell.com>
location:	comp.sources.unix archive volume 10
description:	A variant of Backus' "Functional Programming" language
		with a syntax reminiscent of Modula-2.	The interpreter
		is written in portable C.
reference:	[1] Arch D. Robison, "Illinois Functional Programming: A
		Tutorial," BYTE, (February 1987), pp. 115--125.
		[2] Arch D. Robison, "The Illinois Functional
		Programming Interpreter," Proceedings of 1987 SIGPLAN
		Conference on Interpreters and Interpretive Techniques,
		(June 1987), pp. 64-73
ports:		Unix, MS-DOS, CTSS (Cray)
updated:	?

language:	ML
package:	LML
version:	?
parts:		compiler(?), interactive environment
author: 	?
location:	ftp pup/haskell/chalmers/* from animal.cs.chalmers.se
description:	lazy, completely functional variant of ML.
ports:		?
contact:	?
updated:	1992/07/06

language:	Standard ML
package:	SML/NJ (Standard ML of New Jersey)
version:	0.93
parts:		compiler, libraries, extensions, interfaces, documentation,
		build facility
author: 	D. B. MacQueen <dbm@research.att.com>, Lal George 
		<george@research.att.com>, AJ. H. Reppy <jhr@research.att.com>,
		A. W. Appel <appel@princeton.edu>
location:	ftp dist/ml/* from research.att.com
description:	Standard ML is a modern, polymorphically typed, (impure)
		functional language with a module system that supports flexible
		yet secure large-scale programming.  Standard ML of New Jersey
		is an optimizing native-code compiler for Standard ML that is
		written in Standard ML.  It runs on a wide range of
		architectures.	The distribution also contains:
		+ an extensive library - The Standard ML of New Jersey Library,
		including detailed documentation.
		+ CML - Concurrent ML
		+ eXene - an elegant interface to X11 (based on CML)
		+ SourceGroup - a separate compilation and "make" facility
		CML, eXene and SourceGroup not in the Macintosh port, but the
		Mac port has a built-in editor.
ports:		M68K, SPARC, MIPS, HPPA, RS/6000, I386/486, Macintosh
updated:	1993/02/18

language:	Concurrent ML
package:	Concurrent ML
version:	0.9.8
parts:		extension
author: 	?
location:	ftp pub/CML* from ftp.cs.cornell.edu or get SML/NJ
description:	Concurrent ML is a concurrent extension of SML/NJ, supporting
		dynamic thread creation, synchronous message passing on
		synchronous channels, and first-class synchronous operations.
		First-class synchronous operations allow users to tailor their
		synchronization abstractions for their application.  CML also
		supports both stream I/O and low-level I/O in an integrated
		fashion.
bugs:		sml-bugs@research.att.com
requires:	SML/NJ 0.75 (or later)
updated:	1993/02/18

language:	SASL
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Standard ML
package:	sml2c
version:	?
parts:		compiler(->C), documentation, tests
author: 	School of Computer Science, Carnegie Mellon University 
location:	ftp /usr/nemo/sml2c/sml2c.tar.Z from dravido.soar.cs.cmu.edu
    Linux:	ftp pub/linux/smlnj-0.82-linux.tar.Z from ftp.dcs.glasgow.ac.uk
description:	sml2c is a Standard ML to C compiler.  sml2c is a batch
		compiler and compiles only module-level declarations,
		i.e. signatures, structures and functors.  It provides
		the same pervasive environment for the compilation of
		these programs as SML/NJ.  As a result, module-level
		programs that run on SML/NJ can be compiled by sml2c
		without any changes.  Based on SML/NJ version 0.67 and shares
		front end and most of its runtime system, but does not support
		SML/NJ style debugging and profiling.
conformance:	superset
		+ first-class continuations,
		+ asynchronous signal handling
		+ separate compilation 
		+ freeze and restart programs
ports:		IBM-RT Decstation3100 Omron-Luna-88k Sun-3 Sun-4 386(Mach)
portability:	easy, easier than SML/NJ
contact:	david.tarditi@cs.cmu.edu anurag.acharya@cs.cmu.edu 
		peter.lee@cs.cmu.edu
updated:	1991/06/27

language:	Standard ML
package:	The ML Kit
version:	1
parts:		interprter, documentation
author: 	Nick Rothwell, David N. Turner, Mads Tofte <tofte@diku.dk>,
		and Lars Birkedal at Edinburgh and Copenhagen Universities.
location:	ftp diku/users/birkedal/* from ftp.diku.dk
    UK: 	ftp export/ml/mlkit/* from lfcs.ed.ac.uk
description:	The ML Kit is a straight translation of the Definition of
		Standard ML into a collection of Standard ML modules.  For
		example, every inference rule in the Definition is translated
		into a small piece of Standard ML code which implements it. The
		translation has been done with as little originality as
		possible - even variable conventions from the Definition are
		carried straight over to the Kit.  The Kit is intended as a
		tool box for those people in the programming language community
		who may want a self-contained parser or type checker for full
		Standard ML but do not want to understand the clever bits of a
		high-performance compiler. We have tried to write simple code
		and modular interfaces.
updated:	1993/03/12

language:	SISAL 1.2
package:	The Optimizing SISAL Compiler
version:	12.0
parts:		compiler?, manuals, documentation, examples, debugger,...
author: 	David C. Cann <cann@sisal.llnl.gov>
location:	ftp pub/sisal from sisal.llnl.gov
description:	Sisal is a functional language designed to be competitive with
		Fortran, and other imperative languages for scientific jobs.  
		In particualar, OSC uses advanced optimizing techniques to 
		achieve fast speeds for computation intensive programs.  
		It also features routines for making efficient use
		of parallel processors, such as that on the Cray.
ports:		?
updated:	?

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p2of5]
Message-ID: <free2-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free2-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free1-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:24 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1309
Xref: bloom-beacon.mit.edu comp.compilers:3317 comp.lang.misc:5186 comp.archives.admin:676 news.answers:23368 comp.answers:6566

Archive-name: free-compilers/part2
Last-modified: 1994/6/30
Version: 6.5

C variants
-------------------------------------------------------------------------------
category:	C variants
description:	These are languages that are closely based on C.  
lref:		C-Refine, C++-Refine, *-Refine			
lref:		(C,Duel) Duel (a <practical> C debugging language)	

language:	C, C++, Objective-C, RTL
package:	GNU CC (gcc)
version:	2.5.8
parts:		compiler, runtime, examples, documentation
		Library listed separately
author: 	Richard Stallman <gnu@prep.ai.mit.edu> and others
location:	ftp gcc-2.X.X.tar.gz from a GNU archive site
    MSDOS:	ftp pub/msdos/djgpp/* from oak.oakland.edu
    6811:	ftp pub/coactive/gcc-6811-beta.tar.gz from netcom.com
			(these are diffs from 2.5.8 distribution)
description:	A very high quality, very portable compiler for C, C++,
		Objective-C.  The compiler is designed to support multiple
		front-ends and multiple back-ends by translating first
		into RTL (Register Transfer Language) and from there into
		assembly for the target architecture.	Front ends for
		Ada, Pascal, and Fortran are all under development.
conformance:	C: superset of K&R C and ANSI C.
		C++: not exactly cfront 3.0? [could someone tell me which
		version of cfront it is equivalent to, if any?	--ed]
		Objective-C: ?
bugs:		gnu.gcc.bug
restriction:	GNU General Public License
ports:		3b1, a29k, aix385, alpha, altos3068, amix, arm, convex,
		crds, elxsi, fx2800, fx80, genix, hp320, clipper,
		i386-{dos,isc,sco,sysv.3,sysv.4,mach,bsd,linux,windows,OS/2},
		iris,i860, i960, irix4, m68k, m88ksvsv.3, mips-news,
		mot3300, next, ns32k, nws3250-v.4, hp-pa, pc532,
		plexus, pyramid, romp, rs6000, sparc-sunos, 
		sparc-solaris2, sparc-sysv.4, spur, sun386, tahoe, tow,
		umpis, vax-vms, vax-bsd, we32k, hitachi-{SH,8300}, 6811
portability:	very high
status: 	actively developed
discussion:	gnu.gcc.help
announcements:	gnu.gcc.announce
updated:	1993/11/27

language:	C, C++, Objective-C, RTL
package:	GNU CC (gcc) - unsupported Macintosh port
version:	1.37
parts:		compiler, runtime, examples, documentation
		Library listed separately
author: 	?
location:	ftp mpw-gcc-1.37.1r14 from ?
description:	This is an unsupported port of the GNU C compiler to the
		Macintosh environment. Note that the GNU project is actively
		supporting the League for Programming Freedom (LPF) boycott
		of Apple due to the "Look and Feel" lawsuit.
bugs:		?
restriction:	GNU General Public License
ports:		Macintosh
portability:	very high
status: 	?
updated:	1993/11/27

language:	C, FORTRAN, SUIF
package:	Stanford SUIF Compiler
version:	1.0.1
parts:		compiler(->C, ->MIPS), run-time, documentation, examples
author: 	"Stanford Compiler Group" <suif@hawg.stanford.edu>
location:	ftp pub/suif/suif-1.0.1.tar.Z from suif.stanford.edu
                http://suif.Stanford.EDU.
		(Patch to version 1.0 also available)
description:	SUIF is a framework for research in compiler algorithms.
		It contains a kernel, which supports the Stanford
		University Intermediate Format (file I/O, manipulation,
		etc.), and a toolkit consisting of passes and libraries
		for dependence analysis, loop transformations,
		scalar optimizations, code generation, etc.  Can generate
		parallel code from major benchmarks.
conformance:	C front end is ANSI-C compatible, FORTRAN front end mostly f77
reference:	Wide range of published papers available from ftp site
restriction:	Free for non-commercial use; redistribution prohibited
requires:	GNU g++ 2.5.8, GNU make
ports:		DECstation, SPARC/SunOS/Solaris, SGI, Linux
portability:	Very system independent - requires UNIX
status: 	First public release; not supported, but we'll try to help
discussion:	Mailing list information included in distribution
		Archives available from http://suif.stanford.edu
updated:	1994/06/15

language:	C
package:	GNU C Library (glibc)
version:	1.08.1
parts:		library
author: 	?
location:	ftp glibc-1.08.1.tar.gz from a GNU archive site
		Source for "crypt" must be FTP'ed from non-USA site if you are
		outside the USA (site: glibc-1.06-crypt.tar.z from
		ftp.uni-c.dk [129.142.6.74]).
description:	The run-time library for the GNU C compiler, gcc.  The source
		for libc.a.  This package is separately maintained.
conformance:	ANSI and POSIX.1 superset.  Large subset of POSIX.2
bugs:		Reports sent to mailing list bug-glibc@prep.ai.mit.edu.
updated:	1994/06/06

language:	C
package:	fdlibm
version:	?
parts:		library
author: 	Dr. K-C Ng
location:	ftp netlib/fdlibm.tar from netlib.att.com
description:	Dr. K-C Ng has developed a new version of libm that is the
		basis for the bundled /usr/lib/libm.so in Solaris 2.3 for SPARC
		and for future Solaris 2 releases for x86 and PowerPC.	 It
		provides the standard functions necessary to pass the usual
		test suites.  This new libm can be configured to handle
		exceptions in accordance with various language standards or in
		the spirit of IEEE 754. The C source code should be portable to
		any IEEE 754 system with minimal difficulty.
conformance:	IEEE 754
bugs:		Send comments and bug reports to:
		fdlibm-comments@sunpro.eng.sun.com.
updated:	1993/12/18

language:	C
package:	c68/c386
version:	4.2a
parts:		compiler
author: 	Matthew Brandt, Christoph van Wuellen, Keith and Dave Walker
location:	ftp pub/Minix/common-pkgs/c386-4.2.tar.Z from bugs.nosc.mil
description:	K&R C plus prototypes and other ANSI features.
		targetted to several 68k and i386 assemblers, incl. gas.
		floating point support by inline code or emulation.
		lots of available warnings.  better code generation than ACK.
ports:		386 and 68k Minix.  generic unix actually.
status: 	actively worked on by the Walkers.
discussion:	comp.os.min
updated:	?

language:	C
package:	GNU superoptimizer
version:	2.2
parts:		exhaustive instruction sequence optimizer
author: 	Torbjorn Granlund <tege@gnu.ai.mit.edu> with Tom Wood
location:	ftp superopt-2.2.tar.Z from a GNU archive site
description:	GSO is a function sequence generator that uses an exhaustive
		generate-and-test approach to find the shortest instruction
		sequence for a given function.	You have to tell the
		superoptimizer which function and which CPU you want to get
		code for.
		This is useful for compiler writers.
bugs:		Torbjorn Granlund <tege@gnu.ai.mit.edu>
restriction:	GNU General Public License
ports:		Alpha, Sparc, i386, 88k, RS/6000, 68k, 29k, Pyramid(SP,AP,XP)
updated:	1993/02/16

language:	C
package:	xdbx
version:	2.1
parts:		X11 front end for dbx
author: 	?
location:	retrieve xxgdb from comp.sources.x volumes 11, 12, 13, 14, & 16
description:	?
contact:	Po Cheung <cheung@sw.mcc.com>
updated:	1992/02/22

language:	C
package:	ups
version:	2.1
parts:		interpreter, symbolic debugger, tests, documentation
author: 	Mark Russell <mtr@ukc.ac.uk>
location:	? ftp from contrib/ups*.tar.Z from export.lcs.mit.edu ?
    unofficial: unofficial enhancements by Rod Armstrong <rod@sj.ate.slb.com>,
		available by ftp misc/unix/ups/contrib/rob from sj.ate.slb.com
description:	Ups is a source level C debugger that runs under X11 or 
		SunView.  Ups includes a C interpreter which allows you to add 
		fragments of code simply by editing them into the source window
bugs:		Mark Russell <mtr@ukc.ac.uk>
ports:		Sun, Decstation, VAX(ultrix), HLH Clipper
discussion:	ups-users-request@ukc.ac.uk
updated:	1991/05/20

language:	C
package:	C-Interp 
version:	?
parts:		interpreter
author: 	?
location:	ftp Mac/Misc/C_Interp.sit from oac2.hsc.uth.tmc.edu
description:	An interpreter for a small subset of C, originally part of a
		communications package.
contact:	? Chuck Shotton <cshotton@oac.hsc.uth.tmc.edu>
updated:	1993/05/14

language:	C
package:	ae (application executive)
version:	1?
parts:		interpreter
author: 	Brian Bliss <bliss@sp64.csrd.uiuc.edu> [Is this right? --ed]
location:	ftp pub/at.tar.Z from sp2.csrd.uiuc.edu
description:	ae (the "application executive") is a C interpreter library
		which is compiled with an application; hence, the interpreter
		exists in the same process and address space.  it includes a
		dbx symbol table scanner to access compiled vars & routines, or
		you can enter them manually by providing a type/name
		declaration and the address.  when the interpreter is invoked,
		source code fragments are read from the input stream (or a
		string), parsed, and evaluated immediately.  The user can call
		compiled functions in addition to a few built-in intrinsics,
		declare new data types and data objects, etc.  Different input
		streams can be evaluated in parallel on alliant machines.
ports:		SunOS (cc or gcc), Alliant FX, Cray YMP (soon)
updated:	1992/04/21

language:	C (ANSI), lcc
package:	lcc
version:	1.8
parts:		compiler, test suite, documentation
author: 	Dave Hanson <drh@cs.princeton.edu>
location:	ftp pub/lcc/lccfe-*.tar.Z from princeton.edu
description:	+ hand coded C parser (faster than yacc)
		+ retargetable
		+ code "as good as GCC"
ports:		vax (mips, sparc, 68k backends are commercial)
status: 	small-scale production use using commerical backends; the
		commercial backends are cheap (free?) to universities.
discussion:	lcc-requests@princeton.edu
updated:	1992/02/20

language:	C, lcc 
package:	Chop
version:	0.6
parts:		code generator
author: 	Alan L. Wendt <wendt@CS.ColoState.EDU>
location:	ftp pub/chop/0.6.tar.Z from beethoven.cs.colostate.edu
description:	The current revision, 0.6, is interfaced with Fraser and
		Hanson's lcc front end.  The result is a highly fast C compiler
		with good code selection and no global optimization.
		Project Status: Chop compiles and runs a number of small test
		programs on the Vax.  I'm currently updating the NS32k and 68K
		retargets for lcc compatibility.  After I get them working,
		I'll work on getting the system to compile itself, get struct
		assignments working, improve the code quality and compile
		speed, and run the SPEC benchmarks.  That will be rev 1.0.
reference:	"Fast Code Generation Using Automatically-Generated Decision 
		Trees", ACM SIGPLAN '90 PLDI
updated:	1993/04/28

language:	C
package:	GCT
version:	1.4
parts:		test-coverage-preprocessor
author: 	Brian Marick <marick@cs.uiuc.edu>
location:	ftp pub/testing/gct.file/ftp.* from cs.uiuc.edu
description:	GCT is test-coverage tool based on GNU C.  Coverage tools 
		measure how thoroughly a test suite exercises a program.
restriction:	CopyLeft
ports:		sun3, sun4, rs/6000, 68k, 88k, hp-pa, ibm 3090,
		ultrix, convex, sco
discussion:	Gct-Request@cs.uiuc.edu
support:	commercial support available from author, (217) 351-7228
updated:	1993/02/12

language:	C
package:	MasPar mpl, ampl
version:	3.1
parts:		compiler
author: 	?
location:	ftp put/mpl-* from maspar.maspar.com
description:	mpl & ampl - the intrinsic parallel languages for MasPar's
		machines are C (ampl is actually a gcc port these days). You
		can get the source from marpar.com.
contact:	?
updated:	?

language:	C
package:	gc
version:	3.4
parts:		library
author: 	Hans-J. Boehm <boehm@parc.xerox.com>, Alan J. Demers
location:	ftp pub/russell/gc3.4.tar.Z from parcftp.xerox.com
description:	This is a garbage colecting storage allocator that is intended
		to be used as a plug-in replacement for C's malloc.  Since the
		collector does not require pointers to be tagged, it does not
		attempt to ensure that all inaccessible storage is reclaimed.
		However, in our experience, it is typically more successful at
		reclaiming unused memory than most C programs using explicit
		deallocation.  Unlike manually introduced leaks, the amount of
		unreclaimed memory typically stays bounded.
ports:		Sun-3, Sun-4 , Vax/BSD, Ultrix, i386/Unix, SGI, Alpha/OSF/1,
		Sequent (single threaded), Encore (single threaded),
		RS/600, HP-UX, Sony News, A/UX, Amiag, NeXT.  
updated:	1993/11/05

language:	C
package:	dsp56k-gcc
version:	?
parts:		compiler
author: 	?
location:	ftp pub/ham/dsp/dsp56k-tools/dsp56k-gcc.tar.Z from nic.funet.fi
    Australia:	ftp pub/micros/56k/g56k.tar.Z from evans.ee.adfa.oz.au
description:	A port of gcc 1.37.1 to the Motorola DSP56000 done by 
		Motorola
contact:	?
updated:	?

language:	C
package:	dsp56165-gcc
version:	?
parts:		compiler
author: 	Andrew Sterian <asterian@eecs.umich.edu>
location:	ftp usenet/alt.sources/? from wuarchive.wustl.edu	
description:	A port of gcc 1.40 to the Motorola DSP56156 and DSP56000.
updated:	?

language:	C
package:	Harvest C
version:	1.3
parts:		compiler, assembler, linker.
author: 	?
location:	ftp mac/development/languages/harves* from archive.umich.edu
description:	The parts of the system are all integrated in a unique
		application, which manages a "project" composed by several C
		source files and resource files (which contain data).
ports:		Macintosh
contact:	Eric W. Sink
updated:	1992/05/26

language:	C, C++
package:	Cyclo - cyclomatic complexity tool
version:	the one and only version
parts:		code analysis tool
author: 	Roger D Binns 
location:	alt.sources archive, 1993/06/28, <C9C2rH.EE@brunel.ac.uk>
description:	It measures cyclomatic complexity, shows function calls and 
		can draw flowgraphs of ANSI C and C++ code.
requires:	lex, C++
updated:	1993/06/28

language:	C
package:	cxref
version:	?
parts:		code analysis tool
author: 	Arnold Robbins <arnold@gatech.?>
location:	use archie
description:	A cross-reference genrator
updated:	?

language:	C
package:	xref
version:	?
parts:		code analysis tool
author: 	Jim Leinweber
location:	use archie
description:	A cross-reference genrator
updated:	1985?

language:	C, C++
package:	Xcoral
version:	1.72
parts:		editor
author: 	?
location:	ftp X/contrib/clients/xcoral* from ftp.inria.fr
description:	Xcoral is a multiwindows mouse-based text editor, for X Window
		System, with a built-in browser to navigate through C functions
		and C++ classes hierarchies...	Xcoral provides variables width
		fonts, menus, scrollbars, buttons, search, regions,
		kill-buffers and 3D look.  Commands are accessible from menus
		or standard key bindings. Xcoral is a direct Xlib client and
		run on color/bw X Display.
contact:	?
updated:	1993/03/14

language:	C++
package:	Lily (LIsp LibrarY)
version:	0.1
parts:		library
author: 	Roger Sheldon <sheldon@kong.gsfc.nasa.gov>
location:	ftp uploads/lily-0.1.tar.gz from sunsite.unc.edu
description:	Lilly is a C++ class library which gives C++ programmers the
		capability to write LISP-style code.  Lily's garbage collection
		mechanism is not sufficient for commercial use.  The
		documentation is incomplete.
restriction:	GNU Library General Public License
requires:	C++ (g++ or Turbo C++, but not cfront)
updated:	1993/11/08

language:	C++
package:	C++SIM
version:	1.0
parts:		library
author: 	Mark Little <M.C.Little@newcastle.ac.uk>
location:	ftp ? from arjuna.ncl.ac.uk
description:	C++SIM is a class library that provides the same sort of
		features found in the simulation class libraries of SIMULA.
updated:	1993/06/14

language:	C++
package:	? signatures for GCC 2.5.2. ?
version:	?
parts:		patches to GNU CC, documentation
author: 	Gerald Baumgartner <gb@cs.purdue.edu>
location:	ftp pub/gb/* from ftp.cs.purdue.edu
description:	Signatures are very similar to abstract base classes except
		that they have their own heirarchy and can be applied to
		compiled classes.  They provide a means of separating
		subtyping and inheritance.
requires:	GNU CC 2.5.2
updated:	1993/11/03

language:	C++
package:	aard ???
version:	?
parts:		memory use tracer
author: 	?
location:	ftp pub/aard.tar.Z from wilma.cs.brown.edu
description:	We have a prototype implementation of a tool to do memory
		checking.  It works by keeping track of the typestate of each
		byte of memory in the heap and the stack.  The typestate can be
		one of Undefined, Uninitialized, Free or Set.  The program can
		detect invalid transitions (i.e. attempting to set or use
		undefined or free storage or attempting to access uninitialized
		storage).  In addition, the program keeps track of heap
		management through malloc and free and at the end of the run
		will report all memory blocks that were not freed and that are
		not accessible (i.e.  memory leaks).
		The tools works using a spliced-in shared library.
requires:	Sparc, C++ 3.0.1, SunOS 4.X
contact:	Steve Reiss <spr@cs.brown.edu>
updated:	?

language:	C++
package:	ET++
version:	3.0-alpha
parts:		class libraries, documentation
author: 	?
location:	ftp C++/ET++/* from iamsun.unibe.ch
description:	?
contact:	Erich Gamma <gamma@ifi.unizh.ch>
updated:	1992/10/26

language:	C++
package:	C++ grammar
version:	?
parts:		parser (yacc)
author: 	?
location:	comp.sources.misc volume ?
description:	[is this a copy of the Roskind grammar or something else? --ed]
updated:	1991/10/23

language:	C++
package:	cppp
version:	1.14
parts:		parser (yacc)
author: 	Tony Davis <ted@cs.brown.edu>
location:	wilma.cs.brown.edu:/pub/cppp.tar.Z
description:	A compiler front-end for C++, with complete semantic
		processing.  Outputs abstract syntax graph.
restriction:	Permission needed for incorporation into commercial software.
requires:	Native C++ compiler, lex, yacc, make, sed (or hand editing)
status: 	Upgrading the back end.
updated:	1993/05/26

language:	C++
package:	C++ Object Oriented Library
version:	COOL ?, GECOOL 2.1, JCOOL 0.1
parts:		libraries, tests, documentation
author: 	?
location:	GECOOL, JCOOL: ftp pub/COOL/* from cs.utexas.edu
		COOL: ftp pub/COOL.tar.Z from csc.ti.com
description:	A C++ class library developed at Texas Instruments.  Cool
		contains a set of containers like Vectors, List, Hash_Table,
		etc.  It uses a shallow hierarchy with no common base class.
		The funtionality is close to Common Lisp data structures (like
		libg++).  The template syntax is very close to Cfront3.x and
		g++2.x.  Can build shared libraries on Suns.  JCOOL's main
		difference from COOL and GECOOL is that it uses real C++
		templates instead of a similar syntax that is preprocessed by
		a special 'cpp' distributed with COOL and GECOOL.
ports:		?
contact:	Van-Duc Nguyen <nguyen@crd.ge.com>
updated:	1992/08/05

language:	C++
package:	GNU C++ Library (libg++)
version:	2.5.1
parts:		library
author: 	Per Bothner <bothner@cygnus.com> ?
location:	libg++-2.5.1.tar.gz from a GNU archive site
description:	The run-time library for the GNU C++ compiler.
		This package is separately maintained.
conformance:	? ANSI and POSIX.1 superset
bugs:		bug-lib-g++@prep.ai.mit.edu
updated:	1993/06/30

language:	C++
package:	??? A C++ Parser toolkit
version:	?
parts:		library
author: 	Mayan Moudgill <moudgill@cs.cornell.EDU>
location:	ftp pub/Parse.shar from ftp.cs.cornell.edu
description:	A collection of C++ classes that make building a 
		recursive descent parser/scanner very easy.
ports:		Sun 4 with cfront 3.0, 
portability:	uses mmap(); probably low.
updated:	1993/04/11

language:	C++, Extended C++
package:	EC++
version:	?
parts:		translator(C++), documentation
author: 	Glauco Masotti <masotti@lipari.usc.edu>
location:	? ftp languages/c++/EC++.tar.Z from ftp.uu.net ?
description:	EC++ is a preprocessor that translates Extended C++
		into C++.  The extensions include:
		+ preconditions, postconditions, and class invariants
		+ parameterized classes
		+ exception handling 
		+ garbage collection
status: 	?
updated:	1989/10/10

language:	C++
package:	LEDA
version:	3.0
parts:		libraries
author: 	?
location:	ftp pub/LEDA/* from ftp.mpi-sb.mpg.de
description:	library of efficient data types and algorithms.
		New with 3.0: both template and non-template versions.
contact:	Stefan N"aher <stefan@mpi-sb.mpg.de>
updated:	1992/11/30

language:	E (a persistent C++ variant)
package:	GNU E
version:	2.3.3
parts:		compiler
author: 	?
location:	ftp exodus/E/gnu_E* from ftp.cs.wisc.edu
description:	GNU E is a persistent, object oriented programming language
		developed as part of the Exodus project.  GNU E extends C++
		with the notion of persistent data, program level data objects
		that can be transparently used across multiple executions of a
		program, or multiple programs, without explicit input and
		output operations.
		GNU E's form of persistence is based on extensions to the C++
		type system to distinguish potentially persistent data objects
		from objects that are always memory resident.  An object is
		made persistent either by its declaration (via a new
		"persistent" storage class qualifier) or by its method of
		allocation (via persistent dynamic allocation using a special
		overloading of the new operator).  The underlying object
		storage system is the Exodus storage manager, which provides
		concurrency control and recovery in addition to storage for
		persistent data.
restriction:	Copyleft; not all runtime sources are available (yet)
requires:	release 2.1.1 of the Exodus storage manager
contact:	exodus@cs.wisc.edu
updated:	1993/01/20

language:	C (ANSI)
package:	? 1984 ANSI C to K&R C preprocessor ?
version:	?
parts:		translator(K&R C)
author: 	?
location:	from comp.sources.unix archive volume 1
description:	?
status: 	?
updated:	?

language:	C (ANSI)
package:	unproto ?
version:	? 4 ? 1.6 ?
parts:		translator(K&R C)
author: 	Wietse Venema <wietse@wzv.win.tue.nl>
location:	ftp pub/unix/unproto4.shar.Z from ftp.win.tue.nl
description:	?
contact:	?
updated:	?

language:	C (ANSI)
package:	cproto
version:	?
parts:		translator(K&R C)
author: 	Chin Huang <chin.huang@canrem.com>
location:	from comp.sources.misc archive volume 29
description:	cproto generates function prototypes from function definitions.
		It can also translate function definition heads between K&R
		style and ANSI C style.
ports:		Unix, MS-DOS
updated:	1992/07/18

language:	C (ANSI)
package:	cextract
version:	1.7
parts:		translator(K&R C), header file generator
author: 	Adam Bryant <adb@cs.bu.edu>
location:	ftp from any comp.sources.reviewed archive
description:	A C prototype extractor, it is ideal for generating
		header files for large multi-file C programs, and will
		provide an automated method for generating all of the
		prototypes for all of the functions in such a program.
		It may also function as a rudimentary documentation
		extractor, generating a sorted list of all functions
		and their locations
ports:		Unix, VMS
updated:	1992/11/03

language:	ANSI C
package:	cgram
version:	?
parts:		grammar
author: 	Mohd Hanafiah Abdullah <napi@cs.indiana.edu>
location:	ftp pub/comp.compilers/cgram-ll1.Z from primost.cs.wisc.edu
description:	An ANSI C grammar in LL(k) (1 <= k <= 2).  It's written in 
		Scheme, so you need to have a Scheme interpreter to process 
		the grammar using a program (f-f-d.s) that extracts the 
		FIRST/FOLLOW/DIRECTOR sets.
requires:	Scheme
ports:		?
updated:	?

language:	C, ANSI C, C++
package:	The Roskind grammars
version:	cpp5 (cf2.0)
parts:		parser(yacc), documenation
author: 	Jim Roskind <jar@hq.ileaf.com>
location:	ftp gnu/c++grammar2.0.tar.Z from ics.uci.edu
		ftp pub/C++/c++grammar2.0.tar.Z from mach1.npac.syr.edu
description:	The C grammar is CLEAN, it does not use %prec, %assoc, and
		has only one shift-reduce conflict.  The C++ grammar has
		a few conflicts.
		Also included is an extension to byacc that produces
		graphical parse trees automatically.
conformance:	the C grammar si true ANSI; the C++ grammar supports 
		cfront 2.0 constructs.
requires:	byacc 1.8 (for graphical parse trees)
status: 	actively developed
updated:	1991/07/01

language:	C, C++
package:	xxgdb
version:	1.06
parts:		X11 front end for gdb
author: 	?
location:	retrieve xxgdb from comp.sources.x volumes 11, 12, 13, 14, & 16
description:	?
contact:	Pierre Willard <pierre@la.tce.com>
updated:	1992/02/22

language:	C, C++
package:	gdb
version:	4.11
parts:		symbolic debugger, documentation
author: 	many, but most recently Fred Fish <fnf@cygnus.com>,
		Stu Grossman <grossman@cygnus.com>, and 
		John Gilmore <gnu@cygnus.com>, all of Cygnus Support
location:	ftp gdb-*.tar.[zZ] from a GNU archive site
description:	gdb is a full-featured symbolic debugger.  It fills the
		same niche as dbx.  Programs must be compiled with debugging
		symbols.
bugs:		<bug-gdb@prep.ai.mit.edu>
restriction:	CopyLeft
ports:		most unix variants, vms, vxworks, amiga, msdos
updated:	1993/10/29

language:	C, C++, Objective-C
package:	emx programming environment for OS/2
version:	0.8g
parts:		gcc, g++, gdb, libg++, .obj linkage, DLL, headers
author: 	Eberhard Mattes <mattes@azu.informatik.uni-stuttgart.de>
location:	ftp os2/2_x/unix/gnu/emx0.8g from ftp-os2.cdrom.com
    Europe:	ftp soft/os2/emx-0.8g from ftp.uni-stuttgart.de
description:	?
discussion:	subscribe to emx-list using listserv@ludd.luth.se
updated:	1992/09/21

language:	C
package:	Pthreads
version:	1.17
parts:		library
author: 	PART (POSIX / Ada-Runtime Project)
location:	ftp pub/PART/pthreads* from ftp.cs.fsu.edu
description:	As part of the PART project we have been designing and
		implementing a library package of preemptive threads which is
		compliant with POSIX 1003.4a Draft 6. A description of the
		interface for our Pthreads library is now available on ftp.
restriction:	GNU General Public License
ports:		Sun-4/SunOS 4.1.x
discussion:	send "Subject: subscribe-pthreads" to mueller@uzu.cs.fsu.edu
contact:	pthreads-bugs@ada.cs.fsu.edu
updated:	1993/07/22

language:	C, nroff, texinfo, latex
package:	c2man
version:	2.0 patchlevel 31
parts:		documentation generator (C -> nroff -man, -> texinfo, -> latex)
author: 	Graham Stoney <greyham@research.canon.oz.au>
location:	ftp from any comp.sources.misc archive, in volume42
		(the version in the comp.sources.reviewed archive is obsolete)
		ftp /pub/Unix/Util/c2man-2.0.*.tar.gz from ftp.et.tudelft.nl
    Australia:	ftp /usenet/comp.sources.misc/volume42/c2man-2.0/*
		from archie.au
    N.America:	ftp /usenet/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.wustl.edu
    Europe:	ftp /News/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.irisa.fr
    Japan:	ftp /pub/NetNews/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.iij.ad.jp
    Patches:	ftp pub/netnews/sources.bugs/volume93/sep/c2man* from lth.se
description:	c2man is an automatic documentation tool that extracts comments
		from C source code to generate functional interface
		documentation in the same format as sections 2 & 3 of the Unix
		Programmer's Manual. It requires minimal effort from the
		programmer by looking for comments in the usual places near the
		objects they document, rather than imposing a rigid
		function-comment syntax or requiring that the programmer learn
		and use a typesetting language. Acceptable documentation can
		often be generated from existing code with no modifications.
conformance:	supports both K&R and ISO/ANSI C coding styles
features:	+ generates output in nroff -man, TeXinfo or LaTeX format
		+ handles comments as part of the language grammar
		+ automagically documents enum parameter & return values
		+ handles C (/* */) and C++ (//) style comments
		- doesn't handle C++ grammar (yet)
requires:	yacc/byacc/bison, lex/flex, and nroff/groff/texinfo/LaTeX.
ports:		Unix, OS/2, MSDOS, VMS.
portability:	very high for unix, via Configure
status: 	actively developed; contributions by users are encouraged.
discussion:	via a mailing list: send "subscribe c2man <Your Name>" (in the
		message body) to listserv@research.canon.oz.au
help:		from the author and other users on the mailing list:
		c2man@research.canon.oz.au
announcements:	patches appear first in comp.sources.bugs, and then in
		comp.sources.misc.
updated:	1994/06/22

language:	Small-C
package:	smallc
version:	?
parts:		compiler
author: 	?
location:	?, comp.sources.unix volume 5
description:	Small-C is a subset of the C programming language for which a
		number of public-domain compilers have been written.  The
		original compiler was written by Ron Cain and appeared in the
		May 1980 issue of Dr.Dobb's Journal.  More recently, James
		E.Hendrix has improved and extended the original Small-C
		compiler and published "The Small-C Handbook", ISBN
		0-8359-7012-4 (1984).  Both compilers produce 8080 assembly
		language, which is the most popular implementation of Small-C
		to-date.  My 6502 Small-C compiler for the BBC Micro is based
		on "RatC", a version of the original Ron Cain compiler
		described by R.E.Berry and B.A.Meekings in "A Book on C", ISBN
		0-333-36821-5 (1984).  The 6502 compiler is written in Small-C
		and was bootstrapped using Zorland C on an Amstrad PC1512 under
		MSDOS 3.2, then transferred onto a BBC Micro using Kermit.  The
		compiler can be used to cross-compile 6502 code from an MSDOS
		host, or as a 'resident' Small-C compiler on a BBC Micro.
conformance:	subset of C
ports:		68k, 6809, VAX, 8080, BBC Micro, Z80
updated:	1989/01/05

language:	Maisie
package:	Maisie
version:	2.1
parts:		?, user manual, examples
author: 	Wen-Toh Liao <wentoh@may.CS.UCLA.EDU>
location:	ftp pub/maisie.2.1.1.3.tar.Z from cs.ucla.edu 
description:	C-based parallel programming language that uses asynchronous
		typed-message passing and supports light-weight processes.
		The language is C with enhancements to allow processes to be
		defined, created, and destroyed, to send and receive messages,
		and manipulate the system clock.
ports:		PVM/3.1, Cosmic Environment, and SUN Sockets.
updated:	1993/06/14

language:	MeldC (MELD, C)
package:	MeldC
version:	2.0
parts:		microkernel, compiler, debugger, manual, examples
author: 	MELD Project, Programming Systems Laboratory at 
		Columbia University
location:	obtain license from <MeldC@cs.columbia.edu>
description:	MeldC 2.0: A Reflective Object-Oriented Coordination
		Programming Language MELDC is a C-based, concurrent,
		object-oriented language built on a reflective architecture.
		The core of the architecture is a micro-kernel (the MELDC
		kernel), which encapsulates a minimum set of entities that
		cannot be modeled as objects. All components outside of the
		kernel are implemented as objects in MELDC itself and are
		modularized in the MELDC libraries. MELDC is reflective in
		three dimensions: structural, computational and architectural.
		The structural reflection indicates that classes and
		meta-classes are objects, which are written in MELDC. The
		computational reflection means that object behaviors can be
		computed and extended at runtime. The architectural reflection
		indicates that new features/properties (e.g., persistency and
		remoteness) can be constructed in MELDC.
restriction:	must sign license, cannot use for commercial purposes
ports:		Sun4/SunOS4.1 Mips/Ultrix4.2
contact:	<MeldC@cs.columbia.edu>
updated:	1992/12/15

language:	uC++
package:	uC++ 
version:	3.7
parts:		compiler, reference
author: 	? Peter A. Ruhr <pabuhr@plg.uwaterloo.ca>
location:	ftp pub/uSystem/u++-3.7.tar.Z from plg.uwaterloo.ca
description:	An extended C++ with light-weight concurrency for Unix-like
		systems.  uC++ is pronounced "micro-C++".
reference:	Software--Practice and Experience, 22(2):137-172, February 1992.
requires:	dmake 3.0+ (ftp pub/dmake/dmake38.tar.Z from plg.uwaterloo.ca)
		GNU C++ 2.3.3
ports:		Sequent, Sun-4, Sun-3, Ultrix, SGI, RS/6000, HP-PA
portability:	Needs "setitimer" and "sigcontext" from Unix-like systems.
updated:	1993/06/10

language:	Objective-C
package:	libcoll -- Collection Class Library for GNU Objective-C
version:	940510
parts:		class library
author: 	Andrew McCallum <mccallum@cs.rochester.edu>
location:	ftp.cs.rochester.edu in pub/objc/libcoll-940510.tar.gz
description:	It's a library of Objective-C objects with similar
		functionality to Smalltalk's Collection objects.  It includes:
		Set, Bag, Array, LinkedList, LinkList, CircularArray, Queue,
		Stack, Heap, SortedArray, MappedCollector, GapArray and
		DelegateList.
updated:	1994/05/10

language:	Glenda
package:	Glenda parallel programming environment
version:	0.91
parts:		preprocessor,tuple server, and tuple functions
author: 	Ray Seyfarth <seyfarth@whale.st.usm.edu>
location:	ftp pub/glenda.tar.Z from seabass.st.usm.edu
description:	Glenda is a programming environment for parallel programming
		implementing a variation of the Linda programming model
		defined by Carriero and Gelernter. It consists of a C
		preprocessor to allow reasonable syntax for the added
		operations, a tuple server process and a set of functions to
		connect an application to the tuple server.
ports:		RS6000, SUN4, LINUX
updated:	1993/06/01

compiled, imperative languages
-------------------------------------------------------------------------------
category:	compiled, imperitive languages
description:	This is the set of traditional infix languages other than C 
		and Pascal which each have their own section.  
cref:		C variants
cref:		Wirth family languages
lref:		Simula
lref:		Fortran

language:	Ada
package:	Ada/Ed
version:	1.11.0a+
parts:		translator(?), interpreter, ?
author: 	?
location:	ftp pub/Ada/Ada-Ed from cnam.cnam.fr
description:	Ada/Ed is a translator-interpreter for Ada. It is
		intended as a teaching tool, and does not have the
		capacity, performance,	or robustness of commercial
		Ada compilers. Ada/Ed was developed at New York
		University, as part of a long-range project in
		language definition and software prototyping.
conformance:	Ada 83.  Last validated with version 1.7 of the ACVC tests.
		being an interpreter, it does not implement most 
		representation clauses, and thus does not support systems 
		programming close to the machine level.
ports:		Unix, MSDOS, Amiga, Atari
contact:	Michael Feldman <mfeldman@seas.gwu.edu>
updated:	1992/05/08

language:	Ada
package:	GW-Ada
version:	?
parts:		translator, interpreter, editor, runtime environment
author: 	?
location:	ftp languages/ada/compiler/adaed/gwu/9309/dos
		or languages/ada/compilers/adaed/gwu/mac from 
		wuarchive.wustl.edu
description:	Ada/Ed is a translator-interpreter for Ada. It is
		intended as a teaching tool, and does not have the
		capacity, performance,	or robustness of commercial
		Ada compilers. Ada/Ed was developed at New York
		University, as part of a long-range project in
		language definition and software prototyping.
conformance:	"Ada/Ed handles nearly all of Ada 83"
restriction:	For educational purposes only.
ports:		MSDOS and Mac
contact:	Michael Feldman <mfeldman@seas.gwu.edu>
updated:	1993/09/01

language:	Ada
package:	Ada grammar
version:	?
parts:		scanner(lex), parser(yacc)
author: 	?
location:	ftp from primost.cs.wisc.edu or mail to
		compilers-server@iecc.cambridge.ma.us
description:	?
contact:	masticol@dumas.rutgers.edu
updated:	1991/10/12

language:	Ada
package:	Compiler for Toy/Ada in SML/NJ
version:	?
parts:		translator(?)
author: 	Amit Bhatiani <bhatiaa@polly.cs.rose-hulman.edu>
location:	ftp pub/compiler*.tar.Z from master.cs.rose-hulman.edu
description:	?
conformance:	subset
updated:	1992/04/08

language:	Ada
package:	NASA PrettyPrinter
version:	?
parts:		Ada LR parser, ?
author: 	? Michael Feldman <mfeldman@seas.gwu.edu> in comp.compilers
		provided the initial reference to this package, he also has a
		yacc grammar for ada.
location:	ftp from Ada Software Repository on wsmr-simtel20.army.mil
description:	pretty-print program that contains an ada parser
requires:	Ada
updated:	1991/02/01

language:	Ada
package:	yacc grammar for Ada
version:	?
parts:		parser(yacc)
author: 	Herman Fischer
location:	ftp  PD2:<ADA.EXTERNAL-TOOLS>GRAM2.SRC 
		from wsmr-simtel20.army.mil
description:	?
contact:	?
updated:	1991/02/01

language:	Ada
package:	Paradise
version:	2.0
parts:		library
author: 	?
location:	ftp pub/Ada/Paradise from cnam.cnam.fr
description:	Paradise is a subsystem (a set of packages) developped
		to implement inter-processes, inter-tasks and
		inter-machines communication for Ada programs in
		the Unix world. This subsystem gives the user full
		access to files, pipes, sockets (both Unix and
		Internet), and pseudo-devices.
ports:		Sun, Dec, Sony Mips, Verdex compiler, DEC compiler, 
		Alsys/Systeam compiler
contact:	paradise-info@cnam.cnam.fr
updated:	1992/09/30

language:	Ada
package:	Adamakegen
version:	2.6.3
parts:		makefile generator
author: 	Owen O'Malley <omalley@porte-de-st-ouen.ics.uci.edu>
location:	ftp ftp/pub/arcadia/adamakegen* from spare.ics.uci.edu
description:	A program that generates makefiles for Ada programs 
requires:	Icon
ports:		Verdix, SunAda 
updated:	1993/03/02

language:	Ada 9X
package:	GNAT
version:	1.79
parts:		parser, library management system, documentation?
author: 	The GNAT Development Team <gnat-request@cs.nyu.edu>
location:	cs.nyu.edu in pub/gnat/*
		sunsite.unc.edu in /pub/Linux/development/ada/gnat-*.lp2.tar.gz
		nic.funet.fi in /pub/OS/Linux/util/languages/gnat-*.lp2.tar.gz
		tsx-11.mit.edu in /pub/linux/packages/Ada/gnat-*.lp2.tar.gz
description:	A bootstrapped implementation of a Ada83 subset.
conformance:	Currently only a subset of of Ada 83 is working.  Compliance 
		to Ada 9X being worked on.
requires:	gcc 2.5.x or higher
status: 	Actively developed.  
updated:	1994/05/15

language:	Algol, Foogol
package:	cfoogol
version:	?
parts:		compiler
author: 	? John Cowan <cowan@snark.thyrsus.com>
location:	comp.sources.misc from May 1994
description:	?
conformance:	subset of Algol
ports:		VAX
updated:	1994/05/08

language:	Algol
lref:		Simula

language:	BCPL
package:	?
version:	?
parts:		?
author: 	?
location:	ftp systems/amiga/programming/languages/BCPL/BCPL4Amiga.lzh
		from wuarchive.wustl.edu.
description:	The original INTCODE interpreter for BCPL.
ports:		Amiga, Unix, MSDOS
contact:	?
updated:	?

language:	BCPL
package:	?
version:	?
parts:		?
author: 	?
location:	ftp ftp.syd.dit.csiro.au in pub/ken/bcpl.tar.gz.
description:	A BCPL* (Basic Combined Programming Language) compiler
		bootstrap kit with an INTCODE interpreter in C.
contact:	Ken Yap <ken@syd.dit.CSIRO.AU>
updated:	?

language:	E
package:	Amiga E
version:	2.1b
parts:		compiler, assembler, linker, utilities
author: 	Wouter van Oortmerssen <Wouter@mars.let.uva.nl>
location:	ftp amiga/dev/lang/AmigaE21b.lha from amiga.physik.unizh.ch
description:	An Amiga specific E compiler.  E is a powerful and flexible
		procedural programming language and Amiga E a very fast
		compiler for it, with features such as compilation speed of
		20000 lines/minute on a 7 Mhz amiga, inline assembler and
		linker integrated into compiler, large set of integrated
		functions, module concept with 2.04 includes as modules,
		flexible type-system, quoted expressions, immediate and typed
		lists, low level polymorphism, exception handling and much,
		much more.  Written in Assembly and E.
ports:		Amiga
portability:	not portable at all
status: 	actively developed
discussion:	comp.sys.amiga.programmer (sometimes)
updated:	1993/03/01

language:	Eiffel
package:	?
version:	?
parts:		source checker
author: 	Olaf Langmack <langmack@inf.fu-berlin.de> and Burghardt Groeber
location:	ftp pub/heron/ep.tar.Z from ftp.fu-berlin.de
description:	A compiler front-end for Eiffel-3 is available. It has been
		generated automatically with the Karlsruhe toolbox for
		compiler construction according to the most recent public
		language definition. The parser derives an easy-to-use
		abstract syntax tree, supports elementary error recovery
		and provides a precise source code indication of errors. It
		performs a strict syntax check and analyses 4000 lines of
		source code per second on a Sun-SPARC workstation.
updated:	1992/12/14

language:	Sather
package:	Sather programming language and environment
version:	0.2i
parts:		compiler(->C), debugger, libraries, documentation, emacs macros
		See description for further details.
author: 	International Computer Science Institute in Berkeley, CA
location:	ftp pub/sather/sa-0.2i.tar.Z from ftp.icsi.berkeley.edu
    Europe:	ftp pub/Sather/* from ftp.gmd.de
    Australia:	ftp pub/sather/* from lynx.csis.dit.csiro.au
    Japan:	ftp pub/lang/sather/* from sra.co.jp
description:	Sather is a new object-oriented computer language developed at
		the International Computer Science Institute. It is derived
		from Eiffel and attempts to retain much of that language's
		theoretical cleanliness and simplicity while achieving the
		efficiency of C++.  It has clean and simple syntax,
		parameterized classes, object-oriented dispatch, multiple
		inheritance, strong typing, and garbage collection. The
		compiler generates efficient and portable C code which is
		easily integrated with existing code.  
		A variety of development tools including a debugger and browser
		based on gdb and a GNU Emacs development environment
		have also been developed. There is also a class library
		with several hundred classes that implement a variety
		of basic data structures and numerical, geometric,
		connectionist, statistical, and graphical abstractions.
		We would like to encourage contributions to the library
		and hope to build a large collection of efficient,
		well-written, well-tested classes in a variety of areas
		of computer science.
conformance:	reference implemantation
bugs:		sather-admin@icsi.berkeley.edu
ports:		Sun-4 HP9000/300 Decstation5000 MIPS SonyNews3000 Sequent/Dynix
		SCO SysVR3.2 NeXT (from others: RS6000 SGI)
portability:	high
status: 	actively developed.
discussion:	sather-request@icsi.berkeley.edu
updated:	1992/07/02

language:	XPL (PL/I dialect)
package:	XPL optimizing Compiler
version:	1
parts:		compiler, documentation
author: 	Robin Vowels <robin_vowels@rmit.edu.au>
location:	mail to author
description:	The compiler is a standard implementation of XPL and is based
		on McKeeman, Horning, and Wortman's improved XCOM (which
		employs hashed symbol table generation).  It includes the extra
		built-in function COREHALFWORD.
		The following areas have been optimized: procedures calls when
		the argument and corresponding parameter are of the same type,
		and when the argument is a constant; constant subscripts; use
		of CORELHALFWORD and COREWORD; string constants of length one;
		iterative DO statements by transferring code to the end of the
		loop.
		String constants of length one do not require a descriptor,
		hence more descriptors are available for string variables.
		Comparison operations are treated as commutative, and an
		improved Commute algorithm is used.  Halfword instructions are
		generated for BIT(16) variables.
		These areas have been improved or re-written: calls on OUTPUT,
		catenation, integer-to-string conversion, multiply, divide, and
		MOD.  An emitter for SS-type instructions has been added.
		The compiler achieves an 11% reduction in object code 
		compiling itself, an 11% increase in compilation rate, a 55%
		increase in compilation speed when the $E toggle is set.
		Special treatment for catenating a string to an integer
		substantially decreases consumption of the free string area,
		and decreases string moves.  The latter improvement is most 
		noticeable on small core machines.
		Core requirements: less than the improved XCOM on which it is
		based (approx. 98000 bytes).  Symbol table size is 468.
ports:		IBM System 370
portability:	The compiler is written in XPL.  The code generators are
		machine-specific.
updated:	1993/08/07

language:	PL/M grammar and parser
package:	plm-parse
version:	1.1
parts:		bison (GNU yacc) grammar description, flex (GNU lex)
		lexer description, and a scoped symbol table manager
author: 	Kirk Hays <hays@ichips.intel.com>
		Gary Funck <gary@intrepid.com>
location:	ftp pub/file/plm.shar.gz from iecc.com to obtain
		a shar archive in compressed GNU zip format.  To access
		the mail server, mail "send plm.shar"
		to compilers-server@iecc.com.
description:	this is a skeleton parser for PL/M.  The grammar description
		and lexer description files were written for bison and flex.
		The grammar description closely follows the EBNF documented
		in the _PL/M Programmer's Guide_, Intel doc. 452161-003,
		Appendix C.  A symbol table manager is supplied,
		though there is no semantic checking.
conformance:	the grammar describes PL/M 386 and where possible, will
		accept various other dialects
reference:	_PL/M Programmer's Guide_, Intel doc. 452161-003
features:	has support for PL/M's "literally" macro definitions
bugs:		doesn't support $-directives (includes)
restriction:	freely available, use at you own risk
requires:	flex, bison, an ANSI compliant C compiler (gcc), and the
		avl-subs balanced binary tree library routines
		(comp.sources.unix Volume 27, Issue 34 ,'avl-subs')
ports:		SGI IRTIX 5.2, and a 486DX2 PC clone running Linux
help:		contact the authors
updated:	04/04/1994

object oriented languages
-------------------------------------------------------------------------------
category:	object oriented languages
description:	In general, object oriented languages were categorized 
		elsewhere.  Only those that were not anything but object-
		oriented are here.
lref:		ABCL ???
lref:		ABCL/R2
lref:		ALLOY
lref:		C++
lref:		CLU
lref:		Common Lisp
lref:		Dylan
lref:		GNU E
lref:		MeldC
lref:		Objective-C
lref:		Oberon-2
lref:		Perl5
lref:		Python
lref:		Sather
lref:		Simula
iref:		(TCL) BOS
iref:		(Scheme) STk
iref:		(Scheme) SOS

language:	O'small
package:	O'small
version:	Initial release
parts:		compiler?, parser/scanner specification
author: 	? Andreas Hense <hense@sol.cs.uni-sb.de>
location:	FTP /pub/osmall/machine/* from cs.uni-sb.de (134.96.7.254)
description:	A concise, formally defined object-oriented language suited
		for teaching object oriented programming.
reference:	(Numerous references listed in software documentation)
		Christoph Boeschen.  Christmas - An abstract machine for
		O'small.  Master's thesis, Universit"at des Saarlandes, 
		Fachbereich 14, June 1993.
requires:	sml-yacc, sml-lex, sml-noshare (details in HowToGetML).
ports:		Sun 4, SPARC (binaries provided).
portability:	Probably portable to other Unix's.
updated:	1993/06/25

language:	O'small
package:	?
version:	?
parts:		interpreter
author: 	?
location:	?
description:	?
requires:	Miranda
ports:		?
portability:	?
updated:	?

language:	Self
package:	Self
version:	2.0
parts:		?, compiler?, debugger, browser
author: 	The Self Group at Sun Microsystems & Stanford University
location:	ftp ? from self.stanford.edu
description:	The Self Group at Sun Microsystems Laboratories, Inc., and
		Stanford University is pleased to announce Release 2.0 of the
		experimental object-oriented exploratory programming language
		Self.  Release 2.0 introduces full source-level debugging of
		optimized code, adaptive optimization to shorten compile
		pauses, lightweight threads within Self, support for
		dynamically linking foreign functions, changing programs within
		Self, and the ability to run the experimental Self graphical
		browser under OpenWindows.
		Designed for expressive power and malleability, Self combines a
		pure, prototype-based object model with uniform access to state
		and behavior. Unlike other languages, Self allows objects to
		inherit state and to change their patterns of inheritance
		dynamically. Self's customizing compiler can generate very
		efficient code compared to other dynamically-typed
		object-oriented languages.
ports:		Sun-3 (no optimizer), Sun-4
portability:	? [Can it be ported to non-Sun or non-Unix systems?]
discussion:	self-request@self.stanford.edu
contact:	?
updated:	1992/08/13

language:	Smalltalk
package:	Little Smalltalk
version:	3
parts:		?
author: 	Tim Budd <budd@cs.orst.edu> ?
location:	ftp pub/budd/? from cs.orst.edu
description:	?
ports:		unix, pc, atari, vms
status: 	?
updated:	?

language:	Smalltalk
package:	GNU Smalltalk
version:	1.1.1
parts:		?
author: 	Steven Byrne <sbb@eng.sun.com>
location:	ftp smalltalk-1.1.1.tar.Z from a GNU archive site
description:	?
bugs:		gnu.smalltalk.bug
discussion:	?
contact:	?
updated:	1991/09/15

language:	Smalltalk
package:	msgGUI
version:	1.0
parts:		library
author: 	Mark Bush <bush@ecs.ox.ac.uk>
location:	ftp pub/Packages/mst/mstGUI-1.0.tar.Z from ftp.comlab.ox.ac.uk
description:	GUI for GNU Smalltalk.	This this package contains the basics 
		for creating window applications in the manner available in 
		other graphical based Smalltalk implementations.
updated:	1992/12/14

language:	Smalltalk
package:	Mei
version:	0.50
parts:		interpreters(Lisp,Prolog), examples, libraries, tools, editor,
		browser
author: 	Atsushi Aoki <aoki@sra.co.jp> and others
location:	ftp pub/goodies/misc/Mei.tar.Z from mushroom.cs.man.ac.uk
    N.America:	ftp pub/MANCHESTER/misc/Mei from st.cs.uiuc.edu
    Japan:	ftp pub/lang/smalltalk/mei/Mei0.50.tar.Z from srawgw.sra.co.jp
description:	Mei is a set of class libraries for Objectworks Smalltalk
		Release 4.1.  it includes:   1.  Grapher Library (useful for
		drawing diagrams);  2. Meta Grapher Library (grapher to develop
		grapher);  3. Drawing tools and painting tools (structured
		diagram editors and drawing editors);  4. GUI editor (graphical
		user interface builder);  5. Lisp interpreter;	6. Prolog
		interpreter;  7. Pluggable gauges;  8. Extended browser;
		(package, history, recover, etc.)
restriction:	GNU General Public License
requires:	Objectworks Smalltalk Release 4.1
contact:	Watanabe Katsuhiro <katsu@sran14.sra.co.jp>
updated:	1993/01/20

language:	Smalltalk
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!yeshua.marcam.com!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p3of5]
Message-ID: <free3-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free3-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free2-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:32 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1661
Xref: bloom-beacon.mit.edu comp.compilers:3318 comp.lang.misc:5187 comp.archives.admin:677 news.answers:23369 comp.answers:6567

Archive-name: free-compilers/part3
Last-modified: 1994/6/30
Version: 6.5

lisp family
-------------------------------------------------------------------------------
category:	lisp family
description:	[The programming languages for those who like parenthesis --ed]

language:	Dylan
package:	Thomas
version:	1.1
parts:		translator(Scheme)
author: 	Matt Birkholz <Birkholz@crl.dec.com>, Jim Miller 
		<JMiller@crl.dec.com>, Ron Weiss <RWeiss@crl.dec.com>
location:	ftp pub/DEC/Thomas from gatekeeper.pa.dec.com
		ftp pub/dylan/Thomas from cambridge.apple.com
description:	Thomas, a compiler written at Digital Equipment
		Corporation's Cambridge Research Laboratory compiles
		a language compatible with the language described
		in the book "Dylan(TM) an object-oriented dynamic
		language" by Apple Computer Eastern Research and
		Technology, April 1992.  It does not perform well.
		Thomas is NOT Dylan(TM).
requires:	Scheme
ports:		MIT's CScheme, DEC's Scheme->C, Marc Feeley's Gambit, Mac, PC, 
		Vax, MIPS, Alpha, 680x0
updated:	1994/04/18

language:	Dylan 
package:	Marlais
version:	0.3
parts:		interpreter
author: 	Brent Benson <brent@ssd.csd.harris.com>
location:	ftp pub/marlais-0.2a.tar.gz from travis.csd.harris.com
		ftp pub/dylan/Marlais/marlais-0.3.tar.gz
			from cambridge.apple.com
description:	Marlais is a simple-minded interpreter for a programming
		language strongly resembling Dylan [1].  It is not intended as
		a final release, but rather to fill a perceived void where
		Dylan implementations are concerned.  This is a "hackers
		release" and is intended as a vehicle for education,
		experimentation and also to encourage people to port it to
		different architectures, add features, and fix bugs.  Marlais
		is alpha software and should not be used by people desiring
		reliability!!!
ports:		Sun-3, Sun-4, VAX/BSD, OS/2, Linux, Sequent Symmetry,
		Encore, HP-UX, Ultrix, SGI, Sony News, A/UX
updated:	1994/04/18

language:	EuLisp
package:	Feel (Free and Eventually Eulisp)
version:	0.75
parts:		interpreter, documentation
author: 	Pete Broadbery <pab@maths.bath.ac.uk>
location:	ftp pub/eulisp from ftp.bath.ac.uk
description:	+ integrated object system
		+ a module system
		+ parallelism
		+ interfaces to PVM library, tcp/ip sockets, futures, 
		Linda, and CSP.
ports:		most unix
portability:	high, but can use shared memory and threads if available
updated:	1992/09/14

language:	Common Lisp
package:	CMU Common Lisp
version:	17c
parts:		incremental compiler, profiler, runtime, documentation, 
		editor, debugger
author: 	?
location:	ftp pub/* from from lisp-sun1.slisp.cs.cmu.edu.
description:	CMU Common Lisp is public domain "industrial strength" Common
		Lisp programming environment.  Many of the X3j13 changes have
		been incorporated into CMU CL.	Wherever possible, this has
		been done so as to transparently allow use of either CLtL1 or
		proposed ANSI CL.  Probably the new features most interesting
		to users are SETF functions, LOOP and the WITH-
		COMPILATION-UNIT macro.
		+ The new CMU CL compiler (Python) is more sophisticated
		  thatn other Common Lisp compilers.  It produces better code
		  and is easier to use.
		+ The programming environment based on the Hemlock editor
		  is better integrated than gnu-emacs based environments.
conformance:	mostly X3J13 compatible.
ports:		Sparc/Mach Sparc/SunOS Mips/Mach IBMRT/Mach
contact:	slisp@cs.cmu.edu
updated:	1993/11/18

language:	Common Lisp
package:	PCL (Portable Common Loops)
version:	8/28/92 PCL
parts:		library
author: 	? Richard Harris <rharris@ptolemy2.rdrc.rpi.edu> ?
location:	ftp pcl/* from parcftp.xerox.com
description:	A portable CLOS implementation.  CLOS is the object oriented 
		programming standard for Common Lisp.  Based on Symbolics 
		FLAVORS and Xerox LOOPS, among others.	Loops stands for
		Lisp Object Oriented Programming System.
ports:		Lucid CL 4.0.1, CMUCL 16e, ?
status: 	?
updated:	1992/09/02

language:	Common Lisp
package:	WCL
version:	2.14
parts:		?, shared library runtime, source debugger
author: 	Wade Hennessey <wade@leland.Stanford.EDU>
location:	ftp pub/wcl/* from sunrise.stanford.edu,
		    miscellany/wcl from gummo.stanford.edu
description:	A common lisp implementation as a shared library.  WCL
		Is not a 100% complete Common Lisp, but it does have
		the full development environment including dynamic file
		loading and debugging.	A modified version of GDB provides
		mixed-language debugging.  A paper describing WCL was
		published in the proceedings of the 1992 Lisp and Functional
		Programming Conference. 
requires:	GNU C 2.1 (not 2.2.2)
ports:		Sparc/SunOS
discussion:	<wcl-request@sunrise.stanford.edu>
contact:	<wcl@sunrise.stanford.edu>
updated:	1992/10/28

language:	Common Lisp
package:	KCL (Kyoto Common Lisp)
version:	?
parts:		compiler(->C), interpreter
author: 	T. Yuasa <yuasa@tutics.tut.ac.jp>, M. Hagiya 
		<hagiya@is.s.u-tokyo.ac.jp> 
location:	? ftp pub/kcl*.tar.Z from rascal.ics.utexas.edu ?
description:	KCL, Kyoto Common Lisp, is an implementation of Lisp,
		It is written in the language C to run under Un*x-like 
		operating systems.  KCL is very C-oriented; for example, 
		the compilation of Lisp functions in KCL involves a 
		subsidiary C compilation.
conformance:	conforms to the book ``Common Lisp: The Language,''
		G. Steele, et al., Digital Press, 1984.  
bugs:		kcl@cli.com
restriction:	must sign license agreement
discussion:	kcl-request@cli.com
updated:	1987/06

language:	Common Lisp
package:	AKCL (Austin Kyoto Common Lisp)
version:	1-615
parts:		improvements
author: 	Bill Schelter <wfs@cli.com>, <wfs@rascal.ics.utexas.edu>
location:	ftp pub/akcl-*.tar.Z from rascal.ics.utexas.edu
description:	AKCL is a collection of ports, bug fixes, and
		performance improvements to KCL.
ports:		Decstation3100, HP9000/300, i386/sysV, IBM-PS2/aix, IBM-RT/aix
		SGI Sun-3/Sunos[34].* Sun-4 Sequent-Symmetry IBM370/aix,
		VAX/bsd VAX/ultrix NeXT
updated:	1992/04/29

language:	Common Lisp
package:	CLX 
version:	5.01
parts:		library
author: 	?
location:	ftp contrib/CLX.R5.01.tar.Z from export.lcs.mit.edu
description:	Common Lisp binding for X
bugs:		bug-clx@expo.lcs.mit.edu
ports:		?, CMU Common Lisp
contact:	?
updated:	1992/08/26

language:	Common Lisp
package:	CLISP
version:	1993/10/06
parts:		interpreter, bytecode compiler, runtime library, editor
author: 	Bruno Haible <haible@ma2s2.mathematik.uni-karlsruhe.de>,
		Michael Stoll <michael@rhein.iam.uni-bonn.de>
location:	ftp /pub/lisp/clisp from ma2s2.mathematik.uni-karlsruhe.de
description:	CLISP is a Common Lisp (CLtL1) implementation by Bruno Haible
		of Karlsruhe University and Michael Stoll of Munich University,
		both in Germany.  It needs only 1.5 MB of RAM.	German and
		English versions are available, French coming soon.  Packages
		running in CLISP include PCL and, on Unix machines, CLX.  A
		native subset of CLOS is included.
conformance:	CLtL1 + parts of CLtL2
restriction:	GNU General Public License
ports:		Atari, Amiga, MS-DOS, OS/2, Linux, Sun4, Sun386i, HP90000/800
		and others
discussion:	send "subscribe clisp-list" to 
		listserv@ma2s2.mathematik.uni-karlsruhe.de
contact:	Bruno Haible <haible@ma2s2.mathematik.uni-karlsruhe.de>
updated:	1993/10/06

language:	Common Lisp
package:	Cartier's Contribs
version:	1.2
parts:		libraries, documentation
author: 	Guillaume Cartier <cartier@math.uqam.ca>
location:	ftp pub/mcl2/contrib/Cartiers* from cambridge.apple.com
description:	libraries for MCL
requires:	Macintosh Common Lisp
discussion:	comp.lang.lisp.mcl
updated:	1994/04/18

language:	Common Lisp
package:	QT-OBJECTS
version:	?
parts:		library
author: 	Michael Travers <mt@media.mit.edu> and others
location:	?
description:	interface between MCL and QuickTime
requires:	Macintosh Common Lisp
discussion:	comp.lang.lisp.mcl
updated:	1994/04/18

language:	Common Lisp
package:	Memoization ?
version:	?
parts:		library
author: 	Marty Hall <hall@aplcenmp.apl.jhu.edu>
location:	ftp pub/Memoization from archive.cs.umbc.edu
description:	Automatic memoization is a technique by which an existing 
		function can be transformed into one that "remembers" 
		previous arguments and their associated results
updated:	1992/11/30

language:	Common Lisp
package:	GINA (Generic Interactive Application) 
version:	2.2
parts:		language binding, class library, interface builder
author: 	?
location:	ftp /gmd/gina from ftp.gmd.de 
    N.America:	ftp contrib/? from export.lcs.mit.edu
description:	GINA is an application framework based on Common Lisp and 
		OSF/Motif to simplify the construction of graphical 
		interactive applications. It consists of:
		+ CLM, a language binding for OSF/Motif in Common Lisp.
		+ the GINA application framework, a class library in CLOS
		+ the GINA interface builder, an interactive tool implemented 
		with GINA to design Motif windows.
requires:	OSF/Motif 1.1 or better.  Common Lisp with CLX, CLOS, PCL and
		processes.
ports:		Franz Allegro, Lucid, CMU CL and Symbolics Genera
discussion:	gina-users-request@gmd.de
updated:	?

language:	Common Lisp
package:	CLiCC
version:	0.6.4
parts:		compiler(->C), runtime library
author: 	Heinz Knutzen <hk@informatik.uni-kiel.de>,
		Ulrich Hoffman <uho@informatik.uni-kiel.de>,
		Wolfgang Goerigk <wg@informatik.uni-kiel.de>
location:	ftp pub/kiel/apply/clicc*
		   from ftp.informatik.uni-kiel.de (134.245.15.114)
description:	A Common Lisp to C compiler, meant to be used as a supplement
		to existing CLISP systems for generating portable applications.
		Target C code must be linked with CLiCC runtime library to
		produce executable.
conformance:	Subset of Common Lisp + CLOS (named: CL_0, or CommonLisp_0)
		CL_0 based on CLtL1.
restriction:	Freely distributable and modifiable
ports:		Runs in Lucid Lisp, AKCL, CLISP, ...
status: 	Working towards CLtL2 and ANSI-CL conformance.
updated:	1994/06/25

language:	Common Lisp
package:	Hyperlisp
version:	2.1f
parts:		?
author: 	Joe Chung, MIT Media Laboratory
location:	ftp pub/mcl2/contrib/hyperlisp21f.sit.hqx 
			from cambridge.apple.com
description:	Hyperlisp is a real-time MIDI programming environment
		embedded in Macintosh Common Lisp. The environment 
		was developed specifically for the Hyperinstruments project 
		at the MIT Media Laboratory, and is optimized for interactive 
		systems which require fast response times. Hyperlisp 
		provides two main services for the music programmer: 
		routines for MIDI processing and primitives for scheduling 
		the application of functions. Programs written in Macintosh 
		Common Lisp can use these services for a wide variety of 
		real-time MIDI applications.
updated:	1994/04/18

language:	Franz Lisp
package:	Liszt?
version:	?
parts:		compiler(->C)
author: 	port to C by J W Dalton <jeff@festival.ed.ac.uk>
location:	ask author
description:	A version of Liszt that emits C
updated:	?

language:	Lisp
package:	RefLisp
version:	2.67
parts:		interpreter, documentation, examples, profiler
author: 	Bill Birch <bbirch@hemel.bull.co.uk>
location:	ftp implementations/reflisp/* from the directory 
		/afs/cs.cmu.edu/user/mkant/Public/Lisp on ftp.cs.cmu.edu
description:	The interpreter is a shallow-binding (i.e., everything has
		dynamic scope), reference counting design making it suitable
		for experimenting with real-time and graphic user interface
		programming. Common Lisp compatibility macros are provided, and
		most of the examples in "Lisp" by Winston & Horn have been run
		on RefLisp.  RefLisp makes no distinction between symbol-values
		and function-values, so a symbol can be either but not both.
		There are Lisp modules for lexical scope and for running
		indefinite extent Scheme programs.
ports:		MSDOS (CGA/EGA/VGA), Unix (AIX)
status: 	"Last Update for a While," author is emigrating to Australia
updated:	1993/02/09

language:	Lisp
package:	xlisp
version:	2.1
parts:		interpreter
author: 	David Micheal Betz <dbetz@apple.com>
location:	ftp pub/xlisp* from wasp.eng.ufl.edu
    US Mail:	contact Tom Almy <toma@sail.labs.tek.com>
    Windows:	ftp util/wxlslib.zip from ftp.cica.indiana.edu
    Version2.0: ftp pub/xlisp/* from cs.orst.edu
    Macintosh:	ftp pub/bskendig/? from netcom.com (source comming)
description:	XLISP is an experimental programming language
		combining some of the features of Common Lisp with an
		object-oriented extension capability.  It was
		implemented to allow experimentation with
		object-oriented programming on small computers.
conformance:	subset of Common Lisp with additions of Class and Object
restriction:	? no commercial use ?
ports:		unix, amiga, atari, mac, MSDOS
portability:	very high: just needs a C compiler
discussion:	comp.lang.lisp.x
updated:	1992/05/26 (unix), 1987/12/16 (other platforms)

language:	Lisp
package:	"LISP, Objects, and Symbolic Programming"
version:	? 
parts:		book with compiler included
author: 	Robert R. Kessler and Amy R. Petajan,
		published by Scott, Foresman and Company, Glenview, IL
location:	bookstore...
description:	? (A short synopsis might help if anyone has one)
updated:	1988

language:	Lisp
package:	franz lisp
version:	?
parts:		?
author: 	?
location:	[does anyone know where you get franz lisp??? --ed]
description:	?
discussion:	franz-friends-request@berkeley.edu
updated:	?

language:	Lisp (WOOL - Window Object Oriented Language)
package:	GWM (Generic Window Manager)
version:	?
parts:		interpreter, examples
author: 	?
location:	ftp contrib/gwm/* from export.lcs.mit.edu
    France:	ftp pub/gwm/* from avahi.inria.fr
description:	Gwm is an extensible window manager for X11.  It is
		based on a WOOL kernel, and interpreted dialect of lisp 
		with specific winow management primitives.
discussion:	gwm-talk@???
contact:	?
updated:	?

language:	Lisp (elisp - Emacs Lisp)
package:	ILISP
version:	5.0
parts:		Emacs interface
author: 	?? Ivan Vazquez <ivan@haldane.bu.edu>
location:	ftp to haldane.bu.edu (128.197.54.25) in pub/ilisp/ilisp.tar.Z
description:	ILISP provides a somewhat lisp-machine like interface to lisp
		listeners from Emacs.
bugs:		ilisp-bug@darwin.bu.edu (or ilisp-bugs@darwin.bu.edu).
discussion:	ilisp@darwin.bu.edu
support:	Mailing list requests/deletions to ilisp-request@darwin.bu.edu
updated:	1993/06/28

language:	Lisp (elisp - Emacs Lisp)
package:	GNU Emacs
version:	19.25
parts:		editor, interpreter, documentation, source debugger
author: 	Richard Stallman <rms@gnu.ai.mit.edu> and others
location:	pub/gnu/emacs-19.25.tar.gz from any GNU site.
description:	An editor that is almost an operating system.  Quite
		programmable.  And it even fits in your tackle box.
bugs:		gnu.emacs.bug, e-mail to bug-gnu-emacs@prep.ai.mit.edu
ports:		Unix, VMS, ?
discussion:	alt.religion.emacs, gnu.emacs.sources
help:		gnu.emacs.help
announcements:	gnu.emacs.announce
updated:	1994/06/01

language:	Lisp (elisp - Emacs Lisp)
package:	Lucid Emacs (lemacs)
version:	19.10
parts:		? interpreter
author:		kyle@crystal.wonderworks.com
location:	/pub/lemacs/* from LUCID.COM (192.43.175.3).
description:	A version of Emacs based on Emacs 19.
		Mirrored at other sites including:
		   /pub/epoch-files/lemacs/ from cs.uiuc.edu
		   /pub/lemacs-19.10/ from self.stanford.edu
bugs:		alt.lucid-emacs.bug, bug-lucid-emacs@lucid.com
discussion:	alt.lucid-emacs.help, help-lucid-emacs@lucid.com
updated:	1994/06/01

language:	? Lisp, X
package:	winterp
version:	2.01
parts:		interpreter, documentation, examples
author:		Niels P. Mayer <mayer@eit.com> or <mayer@netcom.com>
location:	ftp.x.org in contrib/devel_tools/winterp-2.01.tar.gz
description:	An object-oriented rapid prototyping, development and delivery
		environment for building extensible applications with the
		OSF/Motif UI Toolkit and Xtango-based graphics/animation.
ports:		UNIX
discussion:	comp.lang.lisp.x.
announcements:	winterp@netcom.com
updated:	1994/06/09

language:	Lisp
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Oaklisp
package:	oaklisp
version:	1.2
parts:		interface, bytecode compiler, runtime system, documentation
author: 	Barak Pearlmutter, Kevin Lang
location:	ftp /afs/cs.cmu.edu/user/bap/oak/ftpable/* from f.gp.cs.cmu.edu
description:	Oaklisp is a Scheme where everything is an object.  It 
		provides multiple inheritence, a strong error system,
		setters and locators for operations, and a facility for
		dynamic binding.
status: 	actively developed?
contact:	Pearlmutter-Barak@CS.Yale.Edu ?
updated:	1992/05 ?

language:	Scheme
package:	Schematik
version:	1.1.5.2
parts:		programming environment
author: 	Chris Kane, Max Hailperin <max@nic.gac.edu>
location:	ftp /pub/next/scheme/* from ftp.gac.edu
    Europe:	ftp /pub/next/ProgLang from ftp.informatik.uni-muenchen.de
description:	Schematik is a NeXT front-end to MIT Scheme for
		the NeXT.  It provides syntax-knowledgeable text
		editing, graphics windows, and user-interface to
		an underlying MIT Scheme process. It comes packaged
		with MIT Scheme 7.1.3 ready to install on the NeXT.
ports:		NeXT, MIT Scheme 7.1.3
portability:	requires NeXTSTEP
contact:	schematik@gac.edu
updated:	1993/03/11

language:	Scheme
package:	T
version:	3.1
parts:		compiler (native machine code)
author: 	Norman Adams, David Kranz, Richard Kelsey, James Philbin,
		and Jonathan Rees.
location:	ftp pub/systems/t3.1 from ftp.ai.mit.edu
description:	a Scheme-like language developed at Yale.  T is
		written in itself and compiles to efficient native
		code.  Includes a Scheme environment.
		(A multiprocessing version of T is available from
		masala.lcs.mit.edu:/pub/mult)
bugs:		kranz@lcs.mit.edu
ports:		Decstation, Sparc, Iris. Old m68k version.
contact:	David Andrew Kranz <kranz@lcs.mit.edu>
updated:	1991/11/26

language:	Scheme
package:	scm
version:	4e1
parts:		interpreter, conformance test, documentation
author: 	Aubrey Jaffer <jaffer@zurich.ai.mit.edu>
location:	altdorf.ai.mit.edu in archive/scm/scm*
		prep.ai.mit.edu in pub/gnu/jacal/scm*.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/scm*.tar.gz
    Canada:	ftp pub/oz/scheme/new/* from nexus.yorku.ca
    Europe:	ftp pub/bosullvn/jacal/* from ftp.maths.tcd.ie
description:	Fast portable R4RS Scheme interpreter.
conformance:	Revised^4 Report on the Algorithmic Language Scheme,
		IEEE P1178 specification.
restriction:	GNU General Public License
requires:	SLIB (pointers to it in documentation)
ports:		Amiga, Atari-ST, MacOS, MS-DOS, OS/2, NOS/VE, Unicos, VMS,
		Unix. ASCII and EBCDIC both supported.
status: 	actively developed
contributions:	send $$$ to Aubrey Jaffer, 84 Pleasant St., Wakefield, MA 01880
updated:	1994/04/29

language:	Scheme
package:	Scheme Library (slib)
version:	2a1
parts:		library, documentation
author: 	?? Aubrey Jaffer <jaffer@ai.mit.edu>
location:	altdorf.ai.mit.edu in ftp archive/scm/slib*.tar.Z
		prep.ai.mit.edu in pub/gnu/jacal/slib*.tar.gz
		ftp.maths.tcd.ie in pub/bosullvn/jacal/slib*.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/slib*.tar.gz
description:	SLIB is a portable scheme library meant to provide 
		compatibiliy and utility functions for all standard scheme 
		implementations.
ports:		Scm4b, Chez, ELK 1.5, GAMBIT, MITScheme, Scheme->C, 
		Scheme48, T3.1.
status: 	actively developed
contact:	Aubrey Jaffer <jaffer@zurich.ai.mit.edu>
updated:	1993/10/09

language:	Scheme
package:	Hobbit
version:	release 2
parts:		compiler(->C), documentation
author: 	Tanel Tammet <tammet@cs.chalmers.se>
location:	altdorf.ai.mit.edu in archive/scm/hobbit2.tar.gz
		ftp.maths.tcd.ie in pub/bosullvn/jacal/hobbit2.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/hobbit2.tar.gz
description:	The main aim of hobbit is to produce maximally fast C programs
		which would retain most of the original Scheme program
		structure, making the output C program readable and modifiable.
		Hobbit is written in Scheme and is able to self-compile.
		Hobbit release 1 works together with the scm release scm4b3. 
		Future releases of scm and hobbit will be coordinated.
requires:	scm 4b3
updated:	1993/04/25

language:	Scheme
package:	siod (Scheme In One Day, or Scheme In One Defun)
version:	3.0
parts:		interpreter,library,documentation,sql interface
author: 	George Carrette <gjc@world.std.com>
location:	ftp.std.com in pub/gjc
		ftp.cs.indiana.edu in scheme
description:	Small scheme implementation in C arranged as a set of
		subroutines that can be called from any main program
		for the purpose of introducing an interpreted extension
		language.  Compiles to 20K bytes of executable (VAX/VMS).
		Lisp calls C and C calls Lisp transparently.
features:	symbols,strings,arrays,hash tables, file i/o binary/text/seek,
		data save/restore in binary and text, interface to commercial
		databases such Oracle, Digital RDB.  Small executable (42k
		on VAX).
restriction:	none besides non-removal of copyright notice.
ports:		VAX/VMS, VAX Unix, Sun3, Sun4, Amiga, Macintosh, MIPS, Cray,
		ALPHA/VMS, Windows NT/WIN32, OS/2.
portability:	Liked by ANSI C compilers and C++ compilers. e.g. gcc -Wall
status: 	supported as benchmark/testbed at mitech.com
help:		the author will help anyone building something.
contributions:	antique/classic computer hardware, perhaps.
announcements:	comp.lang.scheme
updated:	1994/04/29

language:	Scheme
package:	MIT Scheme (aka C-Scheme)
version:	7.2
parts:		interpreter, large runtime library, emacs macros, 
		native-code compiler, emacs-like editor, source-level debugger
author: 	MIT Scheme Team (primarily Chris Hanson, Jim Miller, and
		Bill Rozas, but also many others)
location:	ftp archive/scheme-7.2 from altdorf.ai.mit.edu 
		DOS floppies ($95) and Unix tar tapes ($200) from 
		Scheme Team / c/o Prof. Hal Abelson / MIT AI Laboratory /
		545 Technology Sq. / Cambridge, MA 02139
description:	Scheme implementation with rich set of utilities.
conformance:	full compatibility with Revised^4 Report on Scheme, 
		one known incompatibility with IEEE Scheme standard
bugs:		bug-cscheme@zurich.ai.mit.edu
ports:		68k (hp9000, sun3, NeXT), MIPS (Decstation, Sony, SGI), 
		HP-PA (600, 700, 800), Vax (Ultrix, BSD), Alpha (OSF), 
		i386 (DOS/Windows, various Unix)
status: 	activly developed
discussion:	info-cscheme@zurich.ai.mit.edu 
		(cross-posted to comp.lang.scheme.c)
updated:	1992/08/24

language:	Scheme
package:	Scheme->C
version:	15mar93
parts:		compiler(->C)
author: 	Digital Western Research Laboratory; Joel Bartlett
location:	ftp pub/DEC/Scheme-to-C/* from gatekeeper.dec.com
description:	Translates Revised**4 Scheme to C that is then compiled
		by the native C compiler for the target machine.  This
		design results in a portable system that allows either
		stand-alone Scheme programs or programs written in both
		compiled and interpreted Scheme and other languages.
conformance:	superset of Revised**4
		+ "expansion passing style" macros
		+ foreign function call capability
		+ interfaces to Xlib (Ezd & Scix)
		+ records
reference:	send Subject "help" to WRL-Techreports@decwrl.dec.com
		for technical report.  Other documentation in
		Scheme-to-C directory on gatekeeper.
ports:		VAX/ULTRIX, DECstation ULTRIX, Alpha AXP OSF/1,
		Microsoft Windows 3.1, Apple Macintosh 7.1,
		HP 9000/300, HP 9000/700, Sony News, SGI Iris and
		Harris Nighthawk and other Unix-like m88k systems.
		The 01nov91 version is also available on Amiga, SunOS,
		NeXT, and Apollo systems.
status: 	actively developed, contributed ports welcomed
updated:	1993/03/15

language:	Scheme, Tk
package:	STk
version:	1.00
parts:		interpreter
author: 	Gallesio Erick <eg@unice.fr>
location:	ftp pub/STk-1.00.tar.gz from kaolin.unice.fr
description:	A Scheme interpreter blended with Ousterhout's Tk package.  
		STk expresses all of Tk as scheme objects.  STk includes
		a CLOS/Dylan-like OO extenstion, but the extension is slow.
conformance:	almost R4RS
ports:		SunOS 4.1.x, Ultrix/MIPS
updated:	1993/09/06

language:	Scheme
package:	PC-Scheme
version:	3.03
parts:		compiler, debugger, profiler, editor, libraries
author: 	Texas Instruments
location:	ftp archive/pc-scheme/* from altdorf.ai.mit.edu
description:	Written by Texas Instruments. Runs on MS-DOS 286/386 IBM PCs
		and compatibles.  Includes an optimizing compiler, an
		emacs-like editor, inspector, debugger, performance testing,
		foreign function interface, window system and an
		object-oriented subsystem.  Also supports the dialect used in
		Abelson and Sussman's SICP.  
conformance:	Revised^3 Report, also supports dialect used in SICP.
restriction:	official version is $95, contact rww@ibuki.com
ports:		MSDOS
updated:	1992/02/23

language:	Scheme
package:	PCS/Geneva
version:	4.02PL1
parts:		compiler, debugger, profiler, editor, libraries
author: 	"a team at the u. of Geneva"
location:	send email to schemege@uni2a.unige.ch
description:	PCS/Geneva is a cleaned-up version of Texas Instrument's PC
		Scheme developed at the University of Geneva. The main
		extensions to PC Scheme are 486 support, BGI graphics, LIM-EMS
		pagination support, line editing, and assembly-level
		interfacing.
contact:	schemege@uni2a.unige.ch
updated:	1994/01/11

language:	Scheme
package:	Gambit Scheme System
version:	2.0
parts:		interpreter, compiler, linker, libraries
author: 	Marc Feeley <feeley@iro.umontreal.ca>
location:	ftp pub/parallele/gambit/* from ftp.iro.umontreal.ca
description:	Gambit is an optimizing Scheme compiler/system.  The
		Macintosh port can run with Toolbox and has a built-in
		editor.
conformance:	IEEE Scheme standard and `future' construct.
ports:		68k: unix, sun3, hp300, bbn gp100, NeXT, Macintosh
updated:	?

language:	Scheme
package:	Elk (Extension Language Kit)
version:	2.2
parts:		interpreter, libraries
author: 	Oliver Laumann <net@cs.tu-berlin.de>, Carsten Bormann
		<cabo@cs.tu-berlin.de> 
location:	ftp pub/unix/languages/scheme/elk-2.2.tar.gz from 
		ftp.fu-berlin.de
    N.America:	ftp contrib/elk-2.2.tar.gz from ftp.x.org
description:	Elk is a Scheme interpreter designed to be used as a 
		general extension language.
		+ interfaces to Xlib, Xt, and various widget sets.
		+ dynamic loading of extensions
		+ almost all artificial limitations removed
		+ generational/incremental garbage collector
		+ Unix system call extensions
		+ Records (structures)
		+ bitstrings
conformance:	Mostly R3RS compatable.
ports:		unix, ultrix, vax, sun3, sun4, 68k, i386, mips, ibm rt, 
		rs6000, hp700, sgi, sony, DOS (gcc+DJGPP or go32)
updated:	1994/2/15

language:	Scheme
package:	libscheme
version:	0.3
parts:		embedded interpreter
author: 	Brent Benson <Brent.Benson@mail.csd.harris.com>
location:	ftp.cs.indiana.edu in imp/libscheme-0.3.tar.gz
description:	An embedded interpreter for Scheme written in C, can be used
		as a command interpreter or extension language, and is easily
		extended in C with new primitive types, primitve functions and
		syntax.
conformance:	Revised^4 Report on the Algorithmic Language Scheme.
updated:	1994/05/16

language:	Scheme
package:	ezd - easy drawing for programs on X displays
version:	15mar93
parts:		interpreter/server
author: 	?
location:	ftp pub/DEC/ezd/* from gatekeeper.dec.com
description:	Ezd is a graphics server that sits between an application
		program and the X server and allows both existing and new
		programs easy access to structured graphics.  Ezd users have
		been able to have their programs produce interactive drawings
		within hours of reading the man page.  Structured graphics:
		application defined graphical objects are ordered into drawings
		by the application.  Loose coupling to the application
		program:  unlike most X tools, ezd does not require any event
		handling by the application.  The ezd server mantains window
		contents.  When an event occurs on such an object, an
		application supplied Scheme expression is evaluated.
contact:	Joel Bartlett <bartlett@decwrl.dec.com> ?
updated:	1993/03/10

language:	Scheme
package:	XScheme
version:	0.28
parts:		?
author: 	David Betz <dbetz@apple.com>
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
discussion:	comp.lang.lisp.x
contact:	?
updated:	1992/02/02

language:	Scheme
package:	Fools' Lisp
version:	1.3.2
parts:		?
author: 	Jonathan Lee <jonathan@scam.berkeley.edu>
location:	ftp src/local/fools.tar.Z from scam.berkeley.edu
description:	a small Scheme interpreter that is R4RS conformant.
ports:		Sun-3, Sun-4, Decstation, Vax (ultrix), Sequent, Apollo
updated:	1991/10/31

language:	Scheme
package:	Scheme88
version:	?
parts:		?
author: 	?
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
contact:	?
updated:	?

language:	Scheme
package:	UMB Scheme
version:	?
parts:		?, editor, debugger
author: 	William Campbell <bill@cs.umb.edu>
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
conformance:	R4RS Scheme
ports:		?
updated:	?

language:	Scheme
package:	PseudoScheme
version:	2.8
parts:		translator(Common Lisp)
author: 	Jonathan Rees <jar@cs.cornell.edu>
location:	?
description:	?
conformance:	R3RS except call/cc.
requires:	Common Lisp
ports:		Lucid, Symbolics CL, VAX Lisp, Explorer CL
announcements:	info-clscheme-request@mc.lcs.mit.edu
updated:	?

language:	Scheme
package:	SOS (Scheme Object System)
version:	?
parts:		?
author: 	Chris Hanson ?
location:	ftp archive/cph/sos.tar.gz from altdorf.ai.mit.edu
description:	?
updated:	?

language:	Scheme
package:	Similix
version:	5.0
parts:		partial evaulator, debugger
author: 	Anders Bondorf <anders@diku.dk>
location:	ftp pub/diku/dists/Similix.tar.Z from ftp.diku.dk
description:	Similix is an autoprojector (self-applicable partial 
		evaluator) for a higher order subset of the strict functional 
		language Scheme.  Similix handles programs with user defined 
		primitive abstract data type operators which may process 
		global variables (such as input/output operators).
conformance:	extension of large subset of R4RS Scheme.
requires:	Scheme
ports:		Scm, Chez Scheme
portability:	high
contact:	Anders Bondorf <anders@diku.dk>
updated:	1993/05/18

language:	Scheme
package:	syntax-case
version:	2.1
parts:		macro system, documentation
author: 	R. Kent Dybvig <dyb@cs.indiana.edu>
location:	cs.indiana.edu in ftp pub/scheme/syntax-case.tar.Z
    Macintosh:	maya.dei.unipd.it in /pub/mac/gambit/
description:	We have designed and implemented a macro system that is
		vastly superior to the low-level system described in
		the Revised^4 Report; in fact, it essentially
		eliminates the low level altogether.  We also believe
		it to be superior to the other proposed low-level
		systems as well, but each of you can judge that for
		yourself.  We have accomplished this by "lowering the
		level" of the high-level system slightly, making
		pattern variables ordinary identifiers with essentially
		the same status as lexical variable names and macro
		keywords, and by making "syntax" recognize and handle
		references to pattern variables.
reference:	+ Robert Hieb, R. Kent Dybvig, and Carl Bruggeman "Syntactic
		Abstraction in Scheme", IUCS TR #355, 6/92 (revised 7/3/92)
		+ R. Kent Dybvig, "Writing Hygienic Macros in Scheme with
		Syntax-Case", IUCS TR #356, 6/92 (revised 7/3/92).
ports:		Chez Scheme, Mac port runs under MacGambit 2.0
updated:	1992/07/06

language:	Scheme
package:	x-scm
version:	?
parts:		?
author: 	Larry Campbell <campbell@redsox.bsw.com>
location:	alt.sources archive
description:	x-scm is a bolt-on accessory for the "scm" Scheme interpreter 
		that provides a handy environment for building Motif and 
		OpenLook applications.	(There is some support as well for raw 
		Xlib applications, but not enough yet to be useful.)
requires:	scm, X
ports:		?
updated:	1992/08/10

language:	Scheme, Prolog
package:	"Paradigms of AI Programming"
version:	?
parts:		book with interpreters and compilers in Common Lisp
author: 	Peter Norvig
location:	bookstore, and ftp pub/norvig/* from unix.sri.com
description:	?
updated:	?

language:	Scheme
package:	Psd (Portable Scheme Debugger)
version:	1.1
parts:		debugger
author: 	Kellom{ki Pertti <pk@cs.tut.fi>
location:	ftp pub/src/languages/schemes/psd.tar.Z from cs.tut.fi
description:	source code debugging from emacs
restriction:	GNU GPL
requires:	R4RS compliant Scheme, GNU Emacs.
ports:		scm, Elk, Scheme->C
updated:	1992/10/08

language:	Scheme
package:	Tiny Clos
version:	first release
parts:		?
author: 	?
location:	ftp pub/mops/* from parcftp.xerox.com
description:	A core part of CLOS (Common Lisp Object System) ported to
		Scheme and rebuilt using a MOP (Metaobject Protocol).
		This should be interesting to those who want to use MOPs
		without using a full Common Lisp or Dylan.
ports:		MIT Scheme 11.74
discussion:	mailing list: mops, administered by gregor@parc.xerox.com
contact:	Gregor Kiczales <gregor@parc.xerox.com>
updated:	1992/12/14

language:	Scheme
package:	VSCM 
version:	V0r3
parts:		runtime, bytecode compiler, bytecode interpreter
author: 	Matthias Blume <blume@cs.princeton.edu>
location:	ftp /pub/scheme-repository/imp/vscm*.tar.gz
		ftp.cs.indiana.edu
    Germany:	ftp pub/scheme/yorku/imp/vscm*
		from faui80.informatik.uni-erlangen.de
    UK:		ftp pub/uunet/languages/lisp/scheme/repository/imp/vscm*
		from unix.hensa.ac.uk
description:	VSCM is a highly portable implementation of Scheme, written in
		ANSI C and Scheme.  Portability is achieved by exlusive use of
		legal ANSI C features -- as opposed to a plethora of #ifdef's
		to adjust to various system peculiarities.  (Of course, in real
		life ANSI C doesn't guarantee portability per se, because there
		are too many systems with broken compilers or broken
		libraries.)
conformance:	R4RS, IEEE P1178
features:	exception and interrupt handling, executable portable memory 
		images, coroutines, continuations with multiple arguments
ports:		Unix, Macintosh
portability:	very high
status: 	actively developed
discussion:	comp.lang.scheme
updated:	1993/11/09

language:	Scheme
package:	PSI
version:	pre-release
parts:		interpreter, virtual machine
author: 	Ozan Yigit <oz@ursa.sis.yorku.ca>, David Keldsen, Pontus Hedman
location:	from author
description:	I am looking for a few interested language hackers to play with
		and comment on a scheme interpreter. I would prefer those who
		have been hacking portable [non-scheme] interpreters for many
		years.	The interpreter is PSI, a portable scheme interpreter
		that includes a simple dag compiler and a virtual machine.  It
		can be used as an integrated extension interpreter in other
		systems, allows for easy addition of new primitives, and it
		embodies some other interesting ideas. There are some
		unique[2] code debug/trace facilities, as well, acceptable
		performance resulting from a fairly straight-forward
		implementation.  Continuations are fully and portably
		supported, and perform well.  PSI is based on the simple
		compilers/vm in Kent Dbyvig's thesis.
conformance:	R^4RS compatible with a number of useful extensions.
updated:	1993/02/19

language:	Scheme
package:	Bigloo
version:	1.4
parts:		interpreter, compiler(->ANSI C), runtime
author: 	Manuel Serrano <Manuel.Serrano@inria.fr>
location:	ftp INRIA/Projects/icsla/Implementations/bigl* from ftp.inria.fr
description:	The main goal of Bigloo is to deliver small and fast stand 
		alone applications.
conformance:	IEEE Scheme standard with some extensions for regex handling
features:	Optimization supported.
ports:		sun, sony news, sgi, linux, hp-ux
portability:	very high for unix systems
updated:	1993/09/08

language:	Scheme
package:	Scheme84
version:	?
parts:		?
author: 	?
location:	Send a tape w/return postage to: Scheme84 Distribution /
		Nancy Garrett / c/o Dan Friedman / Department of Computer
		Science / Indiana University / Bloomington, Indiana.  Call
		1-812-335-9770.
description:	?
requires:	VAX, Franz Lisp, VMS or BSD
contact:	nlg@indiana.edu
updated:	?

language:	Scheme
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

document formatting languages
-------------------------------------------------------------------------------
category:	document formatting languages
description:	These are formatting languages.  Very application-specific.
		[Could someone make me an entry for TeX?  --ed]
iref:		(C) c2man

language:	CLiP
package:	CLiP
version:	2.1
parts:		documentation generator
author: 	Eric W. van Ammers <AMMERS@RCL.WAU.NL>
location:	ftp clip/* from sun01.info.wau.nl
description:	CLiP does not use explicite commands to perform the extraction
		process.  It recognizes pseudostatemens written as comment of
		the programming language in question. CLiP distinguishes
		pseudostatments from ordinary comments because the former
		comply with a a particular style. This specific style can be
		adjusted to suit virtually any programming language.  The CLiP
		approach to LP makes the system extremely versatile. It is
		independent of programming language and text processing
		environment.  We designed CLiP to be compatible with hypertext
		systems as well but we have not yet experimented with this form
		of documentation.
		CLiP works with almost any target and almost any source
		language
ports:		MS-DOS, VAX/VMS, Unix
updated:	1993/11/18

language:	HP-GL, Postscript
package:	hp2ps
version:	1.9c
parts:		interpreter
author: 	Alun Jones <alun@huey.wst.com>
location:	ftp pub/hp2ps/hp2ps19c.zip from ftp.wst.com
description:	hp2ps is an HP-GL interpreter that is written in Postscript.
		It runs on the printer itself.	
restriction:	If there is monetary benifit from using hp2ps, it is requested
		that money be set to Alun Jones.  Further, hp2ps may not be
		distributed as part of a commercial offering without prior
		agreement.
updated:	?

language:	Lout
package:	Lout
version:	2.05
parts:		translator(Lout->Postscript), documentation
author: 	Jeffrey H. Kingston <jeff@cs.su.oz.au>
location:	ftp jeff/lout.2.03.tar.Z from ftp.cs.su.oz.au
description:	Lout is a batch text formatting system.
		Lout offers an unprecedented range of advanced features,
		including equation formatting, tables, diagrams, rotation and
		scaling, sorted indexes, bibliographic databases, running
		headers and odd-even pages, automatic cross referencing, and
		much more, all ready to go.  Furthermore, Lout is easily
		extended with definitions which are very much easier to write
		than troff of TeX macros because Lout is a high-level language,
		the outcome of an eight-year research project that went back to
		the beginning.
ports:		unix
updated:	1993/07/30

language:	Postscript
package:	Ghostscript
version:	2.6.1
parts:		interpreter, ?
author: 	L. Peter Deutsch <ghost@aladdin.com>
location:	ftp pub/GNU/ghostscript* from a GNU archive site
		ftp from ftp.cs.wisc.edu:/pub/X/ghostscript*2.6.1*
description:	A postscript interpreter with previewers for serval
		systems and many fonts.
updated:	1993/05/29

language:	Postscript, Common Lisp
package:	PLisp
version:	?
parts:		translator(Postscript), programming environment(Postscript)
author: 	John Peterson <peterson-john@cs.yale.edu>
location:	?
description:	?
updated:	?

language:	SGML (Standardized Generalized Markup Language)
package:	sgmls
version:	1.1
parts:		parser
author: 	James Clark <jjc@jclark.com> and Charles Goldfarb
location:	ftp pub/text-processing/sgml/sgmls-1.0.tar.Z from ftp.uu.net
    UK: 	ftp sgmls/sgmls-1.1.tar.Z from ftp.jclark.com
description:	SGML is a markup language standardized in ISO 8879.  Sgmls is
		an SGML parser derived from the ARCSGML parser materials which
		were written by Charles Goldfarb.  It outputs a simple, easily
		parsed, line oriented, ASCII representation of an SGML
		document's Element Structure Information Set (see pp 588-593 of
		``The SGML Handbook'').  It is intended to be used as the front
		end for structure-controlled SGML applications.  SGML is an
		important move in the direction of separating information from
		its presentation, i.e. making different presentations possible
		for the same information.
bugs:		James Clark <jjc@jclark.com>
ports:		unix, msdos
updated:	1993/02/22

language:	troff, nroff, eqn, tbl, pic, refer, Postscript, dvi
package:	groff
version:	1.07
parts:		document formatter, documentation
author: 	James Clark <jjc@jclark.com>
location:	ftp groff-1.07.tar.z from a GNU archive site
description:	[An absolutely fabulous troff! --ed]
restriction:	GNU General Public License
requires:	C++
updated:	1993/03/03

language:	Web
package:	CWeb
version:	3.1
parts:		translator(ANSI C and C++)
author: 	Levy/Knuth?
location:	?
description:	[Referred to in the CWeb 3.x announcement (below). I'll follow
		 up on it in the next release of the list. -- Ed]
requires:	ANSI C and/or C++ Compiler?
contact:	?
updated:	?

language:	Web
package:	CWeb
version:	3.x
parts:		translator(ANSI C)
author: 	Marc van Leeuwen
location:	ftp pub/cweb/? from ftp.cwi.nl
description:	An ANSI C implementation of the Web literate-programming
		concept (Both source and output are ANSI C). This version was
		developed in parallel with v3.1 referred to above.
requires:	ANSI C Compiler
contact:	M.van.Leeuwen@cwi.nl
updated:	1993/12/16

language:	Web
package:	web2c
version:	5-851d
parts:		translator(C)
author: 	?
location:	ftp TeX/web2c.tar.Z from ics.uci.edu
    Europe:	ftp pub/tex/src/web2c/web2c.tar.Z from ftp.th-darmstadt.de
description:	
contact:	Karl Berry <karl@claude.cs.umb.edu>
updated:	1993/02/22

language:	Web
package:	Web
version:	?
parts:		translator(Pascal)
author: 	Donald Knuth
location:	ftp ? from labrea.stanford.edu
description:	Donald Knuth's programming language where you
		write the source and documentation together.
requires:	Pascal
contact:	?
updated:	?

language:	Web
package:	FunnelWeb
version:	?
parts:		macro preprocessor, documentation, tests, ?
author: 	Ross Williams <ross@spam.adelaide.edu.au>
location:	comp.sources.unix volume 26
description:	FunnelWeb is a production-quality literate-programming tool
		that emphasises simplicity and reliability. It provides a macro
		facility, and assists in the production of typeset
		documentation.	Input-programming-language independent
restriction:	CopyLeft
ports:		Sun, Vax, Mac, PC
updated:	1993/04/11

logic programming languages
-------------------------------------------------------------------------------
category:	logic programming languages
description:	languages designed to manipulate logic predicates.  Often
		used to build expert systems

language:	BABYLON
package:	BABYLON
version:	2.3
parts:		ai workbench (expert system development environment)
author: 	members of GMD, FIT-KI
location:	ftp gmd/ai-research/Software/Babylon/* from ftp.gmd.de
		   or in WWW from http://www.gmd.de/
description:	BABYLON is a development environment for expert systems. It
		includes frames, rules, constraints, a prolog-like logic
		formalism, and a description language for diagnostic
		applications (texi).
reference:	Christaller, T., Di Primio, F., Voss, A. (Hrsg.).
		Die KI-Werkbank Babylon.
		Eine offene und portable Entwicklungsumgebung fuer
		Expertensysteme. Addison-Wesley, 1989, ISBN 3-89319-155-0

		Christaller, T., Di Primio, F., Voss, A. (eds).
		The AI-Workbench BABYLON.
		An open and portable development environment for expert systems.
		Academic Press, London, 1992, ISBN 0-12-174235-0;

		Guesgen, H.-W.,
		CONSAT: A system for constraint satisfaction.
		Research Notes in Artificial Intelligence, Morgan Kaufman,
		San Mateo, 1989.
requires:	Common Lisp, works under:
		   Macintosh Common Lisp, Franz Allegro, CLisp, CMU, AKCL etc.
contact:	juergen.walther@gmd.de
updated:	1994/06/22

language:	Goedel
package:	Goedel
version:	1.4
parts:		book, compiler, user manual, system modules, example programs
author: 	Jiwei Wang <jiwei@lapu.bristol.ac.uk>
location:	ftp.cs.kuleuven.ac.be (134.58.41.2)
		   /pub/logic-prgm/goedel/README
		ftp.cs.bris.ac.uk (137.222.102.102)
		   /goedel/README
		both contain further pointers.
description:	An implementation of a significant subset of Goedel. Goedel is 
		a declarative, general-purpose strongly-typed logic programming
		language.  The type system is based on many-sorted logic with
		parametric polymorphism.  Modularity is supported, as well as
		infinite precision arithmetic, limited constraint satisfaction,
		and finite sets.
reference:	The Goedel Programming Language, P.M. Hill & J.W. Lloyd, 
		MIT Press, 1994, ISBN 0-262-08229-2.
requires:	SICStus Prolog version 2.1 #6 (or later).  Run time system for
		SPARCstation provided, though.
status: 	underging continuing development
contact:	goedel@compsci.bristol.ac.uk
updated:	1994/05/16

language:	Janus
package:	qdjanus
version:	1.3
parts:		translator(prolog)
author: 	Saumya Debray <debray@cs.arizona.edu>
location:	ftp janus/qdjanus/* from cs.arizona.edu
description:	janus is a janus-to-prolog compiler meant to be used 
		with Sicstus Prolog
conformance:	mostly compliant with "Programming in Janus" by 
		Saraswat, Kahn, and Levy.
updated:	1992/05/18

language:	Janus
package:	jc
version:	1.50 alpha
parts:		compiler(->C)
author: 	David Gudeman <gudeman@cs.arizona.edu>
location:	ftp janus/jc/* from cs.arizona.edu
description:	jc is a janus-to-C compiler (considerably faster than qdjanus).
		jc is a _sequential_ implementation of a _concurrent_ language.
bugs:		jc-bugs@cs.arizona.edu
ports:		sun-4, sun-3, Sequent Symmetry
status: 	jc is an experimental system, undergoing rapid development.  
		It is in alpha release currently.
discussion:	janusinterest-request@parc.xerox.com
updated:	1992/06/09

language:	LIFE (Logic, Inheritance, Functions, and Equations)
package:	Wild_LIFE
version:	first-release
parts:		interpreter, manual, tests, libraries, examples
author: 	Paradise Project, DEC Paris Research Laboratory.
location:	ftp pub/plan/Life.tar.Z from gatekeeper.dec.com.
description:	LIFE is an experimental programming language with a
		powerful facility for structured type inheritance.  It
		reconciles styles from functional programming, logic
		programming, and object-oriented programming.  LIFE
		implements a constraint logic programming language with
		equality (unification) and entailment (matching)
		constraints over order-sorted feature terms.  The
		Wild_LIFE interpreter has a comfortable user interface
		with incremental query extension ability.  It contains
		an extensive set of built-in operations as well as an X
		Windows interface.
conformance:	semantic superset of LOGIN and LeFun.  Syntax is similar
		to prolog.
bugs:		life-bugs@prl.dec.com
ports:		MIPS-Ultrix
portability:	good in theory
discussion:	life-request@prl.dec.com
contact:	Peter Van Roy <vanroy@prl.dec.com>
updated:	1992/12/14

language:	Lolli (logic programming)
package:	Lolli
version:	?
parts:		?
author: 	? Josh Hodas <hodas@saul.cis.upenn.edu> ?
location:	ftp pub/Lolli/Lolli-07.tar.Z. from ftp.cis.upenn.edu
description:	Lolli is an interpreter for logic programming based 
		on linear logic principles.
		Lolli can be viewed as a refinement of the the
		Hereditary Harrop formulas of Lambda-Prolog.  All the
		operators (though not the higher order unification) of
		Lambda-Prolog are supported, but with the addition of
		linear variations. Thus a Lolli program distinguishes
		between clauses which can be used as many, or as few,
		times as desired, and those that must be used exactly once.
requires:	ML
updated:	1992/11/08

language:	Parlog
package:	SPM System (Sequential Parlog Machine)
version:	?
parts:		?, documenation
author: 	?
location:	? ftp lang/Parlog.tar.Z from nuri.inria.fr
description:	a logic programming language ?
reference:	Steve Gregory, "Parallel Logic Programming in PARLOG", 
		Addison-Wesely, UK, 1987
restriction:	? no source code ?
ports:		Sun-3 ?
updated:	??

language:	Prolog
package:	SB-Prolog
version:	3.1 ?
parts:		?
author: 	interpreter
location:	ftp pub/sbprolog from sbcs.sunysb.edu
description:	?
restriction:	GNU General Public License
contact:	? warren@sbcs.sunysb.edu ?
updated:	?

language:	Prolog
package:	XSB
version:	1.2
parts:		interpreter, preprocessor(HiLog), documentation
author: 	XSB research group / SUNY at Stony Brook
location:	ftp pub/XSB/XSB.tar.Z from sbcs.sunysb.edu (130.245.1.15)
description:	XSB extends the standard functionality of Prolog (being a
		descendant of PSB- and SB-Prolog) to include implementations of
		OLDT (tabling) and HiLog terms.  OLDT resolution is extremely
		useful for recursive query computation, allowing programs to
		terminate correctly in many cases where Prolog does not.  HiLog
		supports a type of higher-order programming in which predicate
		symbols can be variable or structured.	This allows unification
		to be performed on the predicate symbols themselves in addition
		to the arguments of the predicates.  Of course, Tabling and
		HiLog can be used together.
ports:		Sun, Solaris, NeXT, Linux, 386 BSD, IRIX, HP-UX
portability:	Generally to 32-bit machines.
contact:	xsb-contact@cs.sunysb.edu
updated:	1993/07/28

language:	Prolog
package:	Modular SB-Prolog
version:	?
parts:		interpreter
author: 	?
location:	ftp pub/dts/mod-prolog.tar.Z from ftp.dcs.ed.ac.uk
description:	SB-Prolog version 3.1 plus modules
restriction:	GNU General Public License
ports:		Sparc
contact:	Brian Paxton <mprolog@dcs.ed.ac.uk>
updated:	?

language:	ALF [prolog variant]
package:	alf (Algebraic Logic Functional programming language) 
version:	?
parts:		runtime, compiler(Warren Abstract Machine)
author: 	Rudolf Opalla <opalla@julien.informatik.uni-dortmund.de>
location:	ftp pub/programming/languages/LogicFunctional from
		ftp.germany.eu.net
description:	ALF is a language which combines functional and
		logic programming techniques.  The foundation of
		ALF is Horn clause logic with equality which consists
		of predicates and Horn clauses for logic programming,
		and functions and equations for functional programming.
		Since ALF is an integration of both programming
		paradigms, any functional expression can be used
		in a goal literal and arbitrary predicates can
		occur in conditions of equations.
updated:	1992/10/08

language:	CLP (Constraint Logic Programming language) [Prolog variant]
package:	CLP(R)
version:	1.2
parts:		runtime, compiler(byte-code), contstraint solver
author: 	IBM
location:	mail to Joxan Jaffar <joxan@watson.ibm.com>
description:	CLP(R) is a constraint logic programming language
		with real-arithmetic constraints.  The implementation
		contains a built-in constraint solver which deals
		with linear arithmetic and contains a mechanism
		for delaying nonlinear constraints until they become
		linear.  Since CLP(R) subsumes PROLOG, the system
		is also usable as a general-purpose logic programming
		language.  There are also powerful facilities for
		meta programming with constraints.  Significant
		CLP(R) applications have been published in diverse
		areas such as molecular biology, finance, physical
		modelling, etc.  We are distributing CLP(R) in order 
		to help widen the use of constraint programming, and 
		to solicit feedback on the system
restriction:	free for academic and research purposes only
ports:		unix, msdos, OS/2
contact:	Roland Yap <roland@bruce.cs.monash.edu.au>, Joxan Jaffar
updated:	1992/10/14

language:	Prolog + constraints over Finite Domains and Booleans
package:	clp(FD)
version:	2.1
parts:		compiler clp(FD)->C, FD solver, runtime, debugger.
author: 	Daniel Diaz - INRIA Rocquencourt - FRANCE
location:	ftp ftp.inria.fr in the directory
		/INRIA/Projects/ChLoE/LOGIC_PROGRAMMING/clp_fd
description:	clp(FD) is a constraint logic programming language
		over Finite Domains. clp(FD) is based on the wamcc
		Prolog compiler. clp(FD) provides several constraints
		"a la CHIP" on Finite Domains and Booleans and some
		facilities to build new constraints. clp(FD) is 4
		times faster than CHIP v3.2 on average.
restriction:	free (see COPYRIGHT notice)
requires:	GNU C (gcc) version 2.4.5 or higher
ports:		Sparc workstations
portability:	Generally to 32-bit machines with gcc.
contact:	Daniel Diaz (Daniel.Diaz@inria.fr)
updated:	1994/06/08

language:	Prolog
package:	wamcc
version:	2.1
parts:		compiler Prolog->C, runtime, Prolog debugger, WAM debugger.
author: 	Daniel Diaz - INRIA Rocquencourt - FRANCE
location:	ftp ftp.inria.fr in the directory
		/INRIA/Projects/ChLoE/LOGIC_PROGRAMMING/wamcc
description:	wamcc is a Prolog Compiler which translates Prolog to
		C via the WAM. wamcc use the (quasi) standard edinbourgh.
		wamcc offers the most usual built-in predicates
		(but not all), a top-level, a Prolog debugger and a
		WAM debugger. wamcc is designed to be easily extended
		(e.g. see clp(FD)).
		From an efficiency point of view, wamcc is between
		SICStus "emulated" and SICStus "native code" on Sparc
		machines (1.5 times faster than SICStus emulated, 1.5
		times slower than SICStus "native code").
restriction:	free (see COPYRIGHT notice)
requires:	GNU C (gcc) version 2.4.5 or higher
ports:		Sparc workstations
portability:	Generally to 32-bit machines with gcc.
contact:	Daniel Diaz (Daniel.Diaz@inria.fr)
updated:	1994/06/08

language:	Prolog (variant)
package:	Aditi
version:	Beta Release
parts:		interpreter, database
author: 	Machine Intelligence Project, Univ. of Melbourne, Australia
location:	send email to aditi@cs.mu.oz.au
description:	The Aditi Deductive Database System is a multi-user
		deductive database system.  It supports base relations
		defined by facts (relations in the sense of relational
		databases) and derived relations defined by rules that
		specify how to compute new information from old
		information.  Both base relations and the rules
		defining derived relations are stored on disk and are
		accessed as required during query evaluation.  The
		rules defining derived relations are expressed in a
		Prolog-like language, which is also used for expressing
		queries.  Aditi supports the full structured data
		capability of Prolog.  Base relations can store
		arbitrarily nested terms, for example arbitrary length
		lists, and rules can directly manipulate such terms.
		Base relations can be indexed with B-trees or
		multi-level signature files.  Users can access the
		system through a Motif-based query and database
		administration tool, or through a command line
		interface.  There is also in interface that allows
		NU-Prolog programs to access Aditi in a transparent
		manner.  Proper transaction processing is not supported
		in this release.
ports:		Sparc/SunOS4.1.2 Mips/Irix4.0
contact:	<aditi@cs.mu.oz.au>
updated:	1992/12/17

language:	Lambda-Prolog
package:	Prolog/Mali (PM)
version:	? 6/23/92 ?
parts:		compiler(->C), linker, libraries, runtime, documentation
author: 	Pascal Brisset <brisset@irisa.fr>
location:	ftp pm/* from ftp.irisa.fr
description:	Lambda-Prolog, a logic programming language defined by
		Miller, is an extension of Prolog where terms are
		simply typed $\lambda$terms and clauses are higher
		order hereditary Harrop formulas. The main novelties
		are universal quantification on goals and implication.
reference:	+ Miller D.A. and Nadathur G. "Higher-order logic 
		programming", 3rd International Conference on Logic 
		Programming, pp 448-462, London 1986.
		+ Nadathur G. "A Higher-Order Logic as a Basis for Logic
		Programming", Thesis, University of Pennsylvania, 1987.  
requires:	MALI-V06 abstract memory. MALI is available by anonymous ftp 
		from ftp.irisa.fr
ports:		unix
discussion:	prolog-mali-request@irisa.fr
contact:	pm@irisa.fr
updated:	1992/07/06

language:	Prolog (variant)
package:	CORAL
version:	?
parts:		interpreter, interface(C++), documentation
author: 	?
location:	ftp ? from ftp.cs.wisc.edu
description:	The CORAL deductive database/logic programming system was
		developed at the University of Wisconsin-Madison.  The CORAL
		declarative language is based on Horn-clause rules with
		extensions like SQL's group-by and aggregation operators, and
		uses a Prolog-like syntax.  * Many evaluation techniques are
		supported, including bottom-up fixpoint evaluation and top-down
		backtracking.  * A module mechanism is available.  Modules are
		separately compiled; different evaluation methods can be used
		in different modules within a single program.  * Disk-resident
		data is supported via an interface to the Exodus storage
		manager.  * There is an on-line help facility
requires:	AT&T C++ 2.0 (G++ soon)
ports:		Decstation, Sun4
updated:	1993/01/29

language:	Prolog
package:	BinProlog
version:	1.71
parts:		interpreter?, documentation
author: 	?
location:	ftp BinProlog/* from clement.info.umoncton.ca
description:	BinProlog 1.71 is at this time probably the
		fastest freely available C-emulated Prolog.
ports:		IBM-PC/386, Sun-4, Sun-3, NeXT
contact:	Paul Tarau <tarau@info.umoncton.ca>
updated:	1993/04/03

language:	Prolog
package:	SWI-Prolog
version:	1.7.2
parts:		?
author: 	Jan Wielemaker <jan@swi.psy.uva.nl>
location:	ftp pub/SWI-Prolog from swi.psy.uva.nl 
    OS/2:	ftp pub/toolw/SWI/* from mpii02999.ag2.mpi-sb.mpg.de
description:	?
conformance:	superset
features:	"very nice Ed. style prolog, best free one I've seen"
restriction:	GNU General Public License
ports:		Sun-4, Sun-3 (complete); Linux, DEC MIPS (done but 
		incomplete, support needed); RS6000, PS2/AIX, Atari ST,
		Gould PN, NeXT, VAX, HP-UX (known problems, support needed);
		MSDOS (status unknown), OS/2
status: 	activly developed
discussion:	prolog-request@swi.psy.uva.nl
contact:	(OS/2) Andreas Toenne <atoenne@mpi-sb.mpg.de>
updated:	1993/07/23

language:	Prolog
package:	Frolic
version:	?
parts:		?
author: 	?
location:	ftp pub/frolic.tar.Z from cs.utah.edu
description:	?
requires:	Common Lisp
contact:	?
updated:	1991/11/23

language:	Prolog
package:	? Prolog package from the University of Calgary ?
version:	?
parts:		?
author: 	?
location:	ftp pub/prolog1.1/prolog11.tar.Z from cpsc.ucalgary.ca
description:	+ delayed goals
		+ interval arithmetic
requires:	Scheme
portability:	relies on continuations
contact:	?
updated:	?

language:	Prolog
package:	? slog ?
version:	?
parts:		translator(Prolog->Scheme)
author: 	dorai@cs.rice.edu
location:	ftp public/slog.sh from titan.rice.edu
description:	macros expand syntax for clauses, elations etc, into Scheme
ports:		Chez Scheme
portability:	reliese on continuations
updated:	?

language:	Prolog
package:	LM-PROLOG
version:	?
parts:		?
author: 	Ken Kahn and Mats Carlsson
location:	ftp archives/lm-prolog.tar.Z from sics.se
description:	?
requires:	ZetaLisp
contact:	?
updated:	?

language:	Prolog
package:	Open Prolog
version:	?
parts:		?
author: 	?
location:	ftp languages/open-prolog/* from grattan.cs.tcd.ie
description:	?
ports:		Macintosh
contact:	Michael Brady <brady@cs.tcd.ie>
updated:	?

language:	Prolog
package:	UPMAIL Tricia Prolog
version:	?
parts:		?
author: 	?
location:	ftp pub/Tricia/README from ftp.csd.uu.se
description:	?
contact:	<tricia-request@csd.uu.se>
updated:	?

language:	Prolog
package:	?; ? (two systems)
version:	?; ?
parts:		?; ?
author: 	?
location:	ftp ai.prolog/Contents from aisun1.ai.uga.edu
description:	?; ?
ports:		MSDOS, Macintosh; MSDOS
contact:	Michael Covington <mcovingt@uga.cc.uga.edu>
updated:	?; ?

language:	Prolog
package:	XWIP (X Window Interface for Prolog)
version:	0.6
parts:		library
author: 	?
location:	ftp contrib/xwip-0.6.tar.Z from export.lcs.mit.edu
description:	It is a package for Prologs following the Quintus foreign
		function interface (such as SICStus). It provides a (low-level)
		Xlib style interface to X. The current version was developed
		and tested on SICStus 0.7 and MIT X11 R5 under SunOS 4.1.1.
portability:	It is adaptable to many other Unix configurations.
contact:	xwip@cs.ucla.edu
updated:	1993/02/25

language:	Prolog
package:	PI
version:	?
parts:		library
author: 	?
location:	ftp pub/prolog/ytoolkit.tar.Z from ftp.ncc.up.pt
description:	PI is a interface between Prolog applications and XWindows that
		aims to be independent from the Prolog engine, provided that it
		has a Quintus foreign function interface (such as SICStus,
		YAP).  It is mostly written in Prolog and is divided in two
		libraries: Edipo - the lower level interface to the Xlib
		functions; and Ytoolkit - the higher level user interface
		toolkit
contact:	Ze' Paulo Leal <zp@ncc.up.pt>
updated:	1993/03/02

language:	Prolog
package:	ISO draft standard
version:	? (What year??)
parts:		language definition
author: 	?
location:	ftp ? from ftp.th-darmstadt.de
description:	?
updated:	1992/07/06

language:	Prolog
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	OPS5
package:	PD OPS5
version:	?
parts:		interpreter
author: 	Written by Charles L. Forgy and ported to Common Lisp by 
		George Wood and Jim Kowalski. 
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp/ops5* from 
		ftp.cs.cmu.edu
description:	Public domain implementation of an OPS5 interpreter. OPS5 is
		a programming language for rule-based production systems.
		A rule consists of pre-condition(s) and the resulting
		action. The system as a whole acts first checking the
		status of system in its working memory and matches the
		rules to see if there are rules that are satisfied,
		and then the action in one selected satisfied rule is
		executed.
		There is a commercial version available called OPS83.
		Please contact the author for information.
requires:	Common Lisp
contact:	? Mark Kantrowitz <mkant+@cs.cmu.edu> ?
updated:	1992/10/17

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!gatech!news-feed-1.peachnet.edu!news.duke.edu!MathWorks.Com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p4of5]
Message-ID: <free4-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free4-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free3-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:40 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1501
Xref: bloom-beacon.mit.edu comp.compilers:3320 comp.lang.misc:5188 comp.archives.admin:678 news.answers:23370 comp.answers:6568

Archive-name: free-compilers/part4
Last-modified: 1994/6/30
Version: 6.5

concurrent, parallel, and simulation languages
-------------------------------------------------------------------------------
category:	concurrent, parellel, and simulation languages
description:	This is a fairly broad category of languages.  Most of the
		implementations in this set are not good enough to be used in
		production systems.  Some are.	In addition to those listed
		below, see:
lref:		Concurrent Clean
lref:		Concurrent ML
lref:		EuLisp
lref:		Parallaxis
lref:		Maisie
lref:		micro-C++
lref:		MeldC
lref:		pm2

language:	ABCL/1 (An object-Based Concurrent Language)
package:	ABCL/1 
version:	?
parts:		?
author: 	Akinori Yonezawa, ABCL Group now at Department of Information 
		Science, the University of Tokyo
location:	ftp pub/abcl1/* from camille.is.s.u-tokyo.ac.jp
description:	Asynchronous message passing to objects.  
reference:	"ABCL: An Object-Oriented Concurrent System", Edited by 
		Akinori Yonezawa, The MIT Press, 1990, (ISBN 0-262-24029-7)
restriction:	no commercial use, must return license agreement
requires:	Common Lisp
contact:	abcl@is.s.u-tokyo.ac.jp
updated:	1990/05/23

language:	ABCL ???
package:	ABCL/R2
version:	?
parts:		?
author: 	masuhara@is.s.u-tokyo.ac.jp, matsu@is.s.u-tokyo.ac.jp,
		takuo@is.s.u-tokyo.ac.jp, yonezawa@is.s.u-tokyo.ac.jp
location:	ftp pub/abclr2/* from camille.is.s.u-tokyo.ac.jp
description:	ABCL/R2 is an object-oriented concurrent reflective language
		based on Hybrid Group Architecture.  As a reflective language,
		an ABCL/R2 program can dynamically control its own behavior,
		such as scheduling policy, from within user-program.  An an
		object-oriented concurrent language, this system has almost all
		functions of ABCL/1.
requires:	Common Lisp
updated:	1993/01/28

language:	ALLOY
package:	ALLOY
version:	2.0?
parts:		interpreter, documentation, examples
author: 	Thanasis Mitsolides <mitsolid@cs.nyu.edu>
location:	ftp pub/local/alloy/* from cs.nyu.edu
description:	ALLOY is a higher level parallel programming language
		appropriate for programming massively parallel computing
		systems.  It is based on a combination of ideas from
		functional, object oriented and logic programming languages.
		The result is a language that can directly support
		functional, object oriented and logic programming styles
		in a unified and controlled framework.	Evaluating modes
		support serial or parallel execution, eager or lazy
		evaluation, non-determinism or multiple solutions etc.
		ALLOY is simple as it only requires 29 primitives in all
		(half of which for Object Oriented Programming support).
ports:		sparc, ?
updated:	1991/06/11

language:	Cellang (Cellular Automata)
package:	Cellular
version:	2.0
parts:		byte-code compiler, runtime, viewer
author: 	J Dana Eckart <dana@rucs.faculty.cs.runet.edu>
location:	comp.sources.unix, volume 26
description:	A system for cellular automata programming.
updated:	1993/04/03

language:	Hermes
package:	IBM Watson prototype Hermes system
version:	0.8alpha patchlevel 01
parts:		bytecode compiler, compiler(bytecode->C), runtime
author: 	Andy Lowry <lowry@watson.ibm.com>
location:	ftp pub/hermes/README from software.watson.ibm.com
description:	Hermes is a very-high-level integrated language and
		system for implementation of large systems and
		distributed applications, as well as for
		general-purpose programming.  It is an imperative,
		strongly typed, process-oriented language.  Hermes
		hides distribution and heterogeneity from the
		programmer.  The programmer sees a single abstract
		machine containing processes that communicate using
		calls or sends.  The compiler, not the programmer,
		deals with the complexity of data structure layout,
		local and remote communication, and interaction with
		the operating system.  As a result, Hermes programs are
		portable and easy to write.  Because the programming
		paradigm is simple and high level, there are many
		opportunities for optimization which are not present in
		languages which give the programmer more direct control
		over the machine.
reference:	Strom, Bacon, Goldberg, Lowry, Yellin, Yemini. Hermes: A
		Language for Distributed Computing. Prentice-Hall, Englewood
		Cliffs, NJ.  1991.  ISBN: O-13-389537-8.
ports:		RS6000 Sun-4 NeXT IBM-RT/bsd4.3 (Sun-3 and Convex soon)
discussion:	comp.lang.hermes
updated:	1992/03/22

language:	PCN
package:	PCN
version:	2.0
parts:		compiler?, runtime, linker, libraries, tools, debugger, 
		profiler, tracer
author: 	Ian Foster <foster@mcs.anl.gov>, Steve Tuecke
		<tuecke@mcs.anl.gov>, and others
location:	ftp pub/pcn/pcn_v2.0.tar.Z from info.mcs.anl.gov
description:	PCN is a parallel programming system designed to improve
		the productivity of scientists and engineers using parallel
		computers.  It provides a simple language for specifying
		concurrent algorithms, interfaces to Fortran and C, a
		portable toolkit that allows applications to be developed
		on a workstation or small parallel computer and run
		unchanged on supercomputers, and integrated debugging and
		performance analysis tools.  PCN was developed at Argonne
		National Laboratory and the California Institute of
		Technology.  It has been used to develop a wide variety of
		applications, in areas such as climate modeling, fluid
		dynamics, computational biology, chemistry, and circuit
		simulation.
ports:		(workstation nets): Sun4, NeXT, RS/6000, SGI
		(multicomputers): iPSC/860, Touchstone DELTA
		(shared memory multiprocessors): Symmetry/Dynix
contact:	<pcn@mcs.anl.gov>
updated:	1993/02/12

language:	LOOPN
package:	LOOPN
version:	?
parts:		compiler?, simulator
author: 	?
location:	ftp departments/computer_sci*/loopn.tar.Z from ftp.utas.edu.au
description:	I wish to announce the availability of a compiler, simulator
		and associated source control for an object-oriented petri net
		language called LOOPN.	In LOOPN, a petri net is an extension
		of coloured timed petri nets.  The extension means firstly that
		token types are classes.  In other words, they consist of both
		data fields and functions, they can be declared by inheriting
		from other token types, and they can be used polymorphically.
		The object-oriented extensions also mean that module or subnet
		types are classes.  LOOPN has been developed over a period of
		about 5 years at the University of Tasmania, where it has been
		used in teaching computer simulation and the modelling of
		network protocols.  A petri net is a directed, bipartite graph;
		nodes are either places (represented by circles) or transitions
		(represented by rectangles).  A net is marked by placing tokens
		on places.  When all the places pointing to a transition (the
		input places) have a token, the net may be fired by removing a
		token from each input place and adding a token to each place
		pointed to by the transition (the output places).  Petri nets
		are used to model concurrent systems, particularly in the
		network protocol area.
contact:	Charles Lakos <charles@probitas.cs.utas.edu.au>
updated:	1992/12/20

language:	Simula
package:	Lund Simula
version:	4.07
parts:		?
author: 	?
location:	ftp misc/mac/programming/+_Simula/* from rascal.ics.utexas.edu
description:	?
contact:	Lund Software House AB / Box 7056 / S-22007 Lund, Sweden
updated:	1992/05/22

language:	SR (Synchronizing Resources)
package:	sr
version:	2.0 
parts:		?, documentation, tests
author: 	?
location:	ftp sr/sr.tar.Z from cs.arizona.edu
description:	SR is a language for writing concurrent programs.
		The main language constructs are resources and
		operations.  Resources encapsulate processes and
		variables they share; operations provide the primary
		mechanism for process interaction.  SR provides a novel
		integration of the mechanisms for invoking and
		servicing operations.  Consequently, all of local and
		remote procedure call, rendezvous, message passing,
		dynamic process creation, multicast, and semaphores are
		supported.
reference:	"The SR Programming Language: Concurrency in Practice", 
		by Gregory R. Andrews and Ronald A. Olsson, Benjamin/Cummings 
		Publishing Company, 1993, ISBN 0-8053-0088-0
ports:		Sun-4, Sun-3, Decstation, SGI Iris, HP PA, HP 9000/300,
		NeXT, Sequent Symmetry, DG AViiON, RS/6000, Multimax,
		Apollo, and others.
discussion:	info-sr-request@cs.arizona.edu
contact:	sr-project@cs.arizona.edu
updated:	1992/09/01

language:	UNITY
package:	MasPar Unity
version:	1.0
parts:		translator(UNITY->MPL), documentation
author: 	Martin Huber, University of Karlsruhe, Germany
location:	ftp pub/maspar/maspar_unity* from SanFrancisco.ira.uka.de
description:	?
contact:	Lutz Prechelt <prechelt@ira.uka.de>
updated:	?

language:	UNITY
package:	HOL-UNITY
version:	2.1
parts:		verification tool
author: 	?
location:	?
description:	?
contact:	Flemming Andersen <fa@tfl.dk> ?
updated:	?

Forth family languages
-------------------------------------------------------------------------------
category:	Forth family languages
description:	These are the stack-based postfix languages.  
lref:		Postscript
iref:		(mc6809) 6809, E-Forth

language:	Forth
package:	TILE Forth
version:	2.1
parts:		interpreter
author: 	Mikael Patel <mip@sectra.se>
location:	ftp tile-forth-2.1.tar.Z from a GNU archive site
description:	Forth interpreter in C; many Forth libraries
conformance:	Forth83
restriction:	shareware/GPL
ports:		unix
updated:	1991/11/13

language:	Forth
package:	cforth
version:	?
parts:		interpreter
author: 	?
location:	comp.sources.unix archive volume 1
description:	?
updated:	?

language:	Forth
package:	pfe (Portable Forth Environment)
version:	0.9.4
parts:		?
author: 	Dirk Zoller <duz@roxi.rz.fht-mannheim.de>
location:	ftp pub/unix/languages/pfe* from duz@roxi.rz.fht-mannheim.de
description:	A Forth development system that tries to be correct,
		complete, portable, usable and simple.	It doesn't try too
		hard to be fast.
conformance:	all dpANS word sets
ports:		Linux, RS/6000, HP-UX
portability:	high
updated:	1994/05/02

language:	Forth
package:	F68K
version:	?
parts:		?
author: 	?
location:	ftp atari/Languages/f68k.* from archive.umich.edu
description:	a portable Forth system for Motorola 68k computers
ports:		Atari ST/TT, Amiga, Sinclair QL and OS9
portability:	very high for 68000 based systems
contact:	Joerg Plewe <joerg.plewe@mpi-dortmund.mpg.de>
updated:	1992/12/14

language:	Forth
package:	51forth
version:	?
parts:		?
author: 	Scott Gehmlich
location:	ftp giovanni/51forth.zip from [130.123.96.9]
description:	source and documentation for a 8051 subroutine-
		threaded forth
contact:	?
updated:	1993/04/03

language:	Mops
package:	Mops
version:	2.3.1
parts:		compiler, documentation, editor
author: 	Michael Hore <mikeh@kralizec.zeta.org.au>
location:	ftp pub/Yerk/? from oddjob.uchicago.edu
description:	Like Yerk, Mops is descended from the ex-commercial
		object-oriented language Neon. Mops features an
		optimizing native-code compiler; it is much faster
		than Yerk, but less compatible with Neon. Mops
		includes extensions such as multiple inheritance.
ports:		Macintosh
updated:	?

language:	Kevo (Forth-like)
package:	kevo
version:	0.9b6
parts:		interpreter, demo programs, user's guide, papers
author: 	Antero Taivalsaari <tsaari@cs.uta.fi>
location:	ftp /pub/kevo/* from cs.uta.fi
description:	Kevo is a prototype-based object-oriented language for
		Macintosh Kevo features a unique prototype-based object model
		(which is based neither on classes nor Self-style delegation),
		multitasking (both preemptive and cooperative), dynamic memory
		management, and an icon-based object browser and editor modeled
		loosely after Mac Finder. Kevo has been built around a portable
		threaded code interpreter, and is syntactically a close
		derivative of Forth.
ports:		Macintosh
contact:	kevo-interest@ursamajor.uvic.ca
updated:	1993/05/18

language:	Yerk
package:	Yerk
version:	3.62
parts:		?
author: 	?
location:	ftp pub/Yerk/? from oddjob.uchicago.edu
description:	Yerk is an object oriented language based on a
		Forth Kernel with some major modifications.  It
		was originally known as Neon, developed and sold
		as a product by Kriya Systems from 1985 to 1989.
		Several of us at The University of Chicago have
		maintained Yerk since its demise as a product.
		Because of the possible trademark conflict that
		Kriya mentions, we picked the name Yerk, which is
		at least not an acronym for anything, but rather
		stands for Yerkes Observatory, part of the Department
		of Astronomy and Astrophysics at U of C.
updated:	?

compiler generators and related tools
-------------------------------------------------------------------------------
category:	compiler generators and related tools
description:	Yacc, and the rest of its family

language:	ABC
package:	Grammar analysis tools
version:	1
parts:		analysis tools, samples, documentation
author: 	Steven Pemberton <Steven.Pemberton@cwi.nl>
location:	ftp programming/languages/abc/examples/grammar/*
		from ftp.eu.net or ftp.nluug.net
description:	Grammar analysis program written in ABC (q.v.) for
		answering such questions as "what are the start
		symbols of all rules", "what symbols can follow this
		symbol", "which rules are left recursive", and so on.
		Includes a grammar of ISO Pascal.
reference:	Ftp archive includes an article explaining the package.
ports:		unix, MSDOS, atari, mac 
contact:	Steven.Pemberton@cwi.nl
updated:	1993/07/05

language:	? attribute grammar ?
package:	Alpha
version:	pre-release
parts:		semantic-analysis generator?, documentation(german)
author: 	Andreas Koschinsky <koschins@cs.tu-berlin.de>
location:	from author
description:	I have written a compiler generator. The generator is called
		Alpha and uses attribute grammars as specification calculus.
		Alpha is the result of a thesis at Technische Universitaet
		Berlin. I am looking for someone who would like to test and use
		Alpha.	Alpha generates compilers from a compiler
		specification. This specification describes a compiler in
		terminology of attribute grammars. Parser and Scanner are
		generated by means of Bison and Flex.  Alpha generates an
		ASE-evaluator (Jazayeri and Walter).  The documentation is in
		german since it is a thesis at a german university.
updated:	1993/02/16

language:	attribute-grammar extension of Yacc and Lex
package:	Ox
version:	G1.01
parts:		Yacc/Lex/C preprocessor, tutorial, reference manual,
		man page, examples, Ox-ready parsers (C, C++, Pascal, Ada,
		Fortran)
author: 	Kurt Bischoff <bischoff@cs.iastate.edu>
location:	ftp pub/ox/* from ftp.cs.iastate.edu
description:	Ox generalizes the function of Yacc in the way that attribute
		grammars generalize context-free grammars.  Ordinary Yacc and
		Lex specifications may be augmented with definitions of
		synthesized and inherited attributes written in C syntax.  Ox
		checks these specifications for consistency and completeness,
		and generates from them a program that builds and decorates
		attributed parse trees.  Ox accepts a most general class of
		attribute grammars.  The user may specify postdecoration
		traversals for easy ordering of side effects such as code
		generation.  Ox handles the tedious and error-prone details of
		writing code for parse-tree management, so its use eases
		problems of security and maintainability associated with that
		aspect of translator development.  Ox is a preprocessor,
		and extends the syntax and semantics of Yacc, Lex, and C.
reference:	Most compiler textbooks have descriptions of attribute
		grammars.
features:	LALR(1), semantic-analyzer generation.
bugs:		none known.  Report bugs to ox-project@cs.iastate.edu.
restriction:	Use of Ox is free.  Ox-generated code is the property of
		the Ox user.
ports:		Unix
contact:	ox-request@cs.iastate.edu
updated:	1993/11/14

language:	BNF (Extended)
package:	Gray
version:	3
parts:		parser generator(Forth)
author: 	Martin Anton Ertl <anton@mips.complang.tuwien.ac.at>
location:	author; version 2 is on various ftp sites
description:	Gray is a parser generator written in Forth.  It takes 
		grammars in an extended BNF and produces executable Forth 
		code for recursive descent parsers.  There is no special 
		support for error handling.
requires:	Forth
ports:		TILE Release 2 by Mikael Patel
updated:	1992/05/22

language:	BNF ??
package:	ZUSE
version:	?
parts:		parser generator(?)
author: 	Arthur Pyster
location:	? Univ Calif at Santa Barbara ?
description:	ll(1) paser generator
requires:	Pascal
updated:	1986/09/23

language:	BNF ??
package:	FMQ
version:	?
parts:		paser generator w/error corrector generator
author: 	Jon Mauney
location:	ftp from csczar.ncsu.edu
description:	?
status: 	?
contact:	?
updated:	1990/03/31

language:	BNF ??
package:	ATS (Attribute Translation System)
version:	?
parts:		?
author: 	? University of Saskatchewan ?
location:	?
description:	generates table-driven LL(1) parsers with full insert-only
		error recovery.  It also handles full left-attribute semantic
		handling, which is a dream compared to using YACC's parser
		actions.
status: 	?
contact:	? (suggested: Dave Bocking <bocking@cs.usask.ca>)
updated:	1988/11/29

language:	BNF (Extended)
package:	PCCTS (Purdue Compiler-Construction Tool Set)
version:	1.20
parts:		scanner generator, parser generator (pred-LL(k)), 
		documentation, tutorial
author: 	Terence J. Parr <parrt@acm.org>, Will E. Cohen
		<cohenw@ecn.purdue.edu>, Henry G. Dietz <hankd@ecn.purdue.edu>,
		Russel W. Quong <quong@ecn.purdue.edu>
location:	ftp pub/pccts/1.20/pccts.tar.Z from marvin.ecn.purdue.edu
    UK: 	ftp computing/programming/languages/tools/pccts/* 
		from src.doc.ic.ac.uk
    Macintosh:	ftp pub/mac/* from maya.dei.unipd.it 
description:	PCCTS is similar to a highly integrated version of YACC
		and LEX; where ANTLR (ANother Tool for Language
		Recognition) corresponds to YACC and DLG (DFA-based
		Lexical analyzer Generator) functions like LEX.
		However, PCCTS has many additional features which make
		it easier to use for a wide range of translation
		problems.  PCCTS grammars contain specifications for
		lexical and syntactic analysis with selective backtracking
		("infinite lookahead"), semantic predicates, intermediate-form
		construction and error reporting. Rules may employ Extended
		BNF (EBNF) grammar constructs and may define parameters,
		return values and local variables.  Languages described in
		PCCTS are recognized via LL(k) parsers constructed in pure,
		human-readable, C code.  Selective backtracking is available
		to handle non-LL(k) constructs.  PCCTS parsers may be compiled 
		with C++. Version 1.20 now generates C++ code as well as K&R
		and ANSI C variants.
ports:		Unix, DOS, OS/2, Macintosh
portability:	very high
discussion:	send mail with a body of "subscribe pccts-users your_name" 
		to pccts-users-request@ahpcrc.umn.edu
contact:	Terence J. Parr <parrt@acm.org>
		Roberto Avanzi (mocenigo@maya.dei.unipd.it) (for the Mac port)
updated:	1994/04/29

language:	BNF (very extended), yacc
package:	PRE-CC Xtended
version:	2.30
parts:		library, parser generator (LL(oo)), translator(yacc->)
author: 	Peter Breuer
location:	FTP: ftp.comlab.ox.ac.uk:/pub/Programs/preccx.tar.Z (Unix)
		     ftp.comlab.ox.ac.uk:/pub/Programs/preccx.msdos (MS-DOS)
                     ftp.comlab.ox.ac.uk:
			/pub/Documents/techpapers/Jonathan.Bowen/preccx-uug.ps.Z
		(more recent versions available by subscription)
		URL: http://www.comlab.ox.ac.uk/archive/redo/precc.html
description:	PRECCX is an infinite-lookahead compiler compiler for context
		dependent grammars.  The generated code is ANSI C.
		Specification scripts are in very EBNF with inherited and
		synthetic attributes allowed. Scripts can be compiled in
		separate modules, and linked together later.  Meta-production
		rules allowed.	The technology is essentially LL(oo) with
		optimizations. A converter for yacc scripts is available.
reference:	"The PRECC Compiler-Compiler" by P.T. Breuer and J.P. Bowen.
		In E. Davies and A. Findlay (eds.),
		Proc. UKUUG/SUKUG Joint New Year 1993 Conference,
		St. Cross Centre, Oxford, UK, 6-8 January 1993,
		ISBN 1 873611 06 4 (UKUUG), 0 9520700 0 6 (SUKUG)
		UKUUG/SUKUG Secretariat, Owles Hall, Buntingford,
		Herts SG9 9PL, UK, pp 167-182, 1993.

		"A PREttier Compiler-Compiler: Generating Higher Order
		Parsers in C"  P.T. Breuer and J.P. Bowen.
		Oxford University Computing Laboratory Technical Report
		PRG-TR-20-92, 25pp, November 1992. Accepted by
		Software - Practice and Experience, 1994.
		FTP: ftp.comlab.ox.ac.uk
		       /pub/Documents/techreports/TR-20-92.ps.Z
ports:		unix, MS-DOS
contact:	Peter Breuer <ptb@comlab.ox.ac.uk>,
		Jonathan Bowen <bowen@comlab.ox.ac.uk>
updated:	1994/06/02

language:	BNF ??
package:	LLGen
version:	?
parts:		parser generator
author: 	? Fischer and LeBlanc ?
location:	? ftp from csczar.ncsu.edu ?
description:	LL(1) parser generator
conformance:	subset of FMQ
reference:	"Crafting A Compiler", by Fischer and LeBlanc
status: 	?
contact:	?
updated:	1990/03/31

language:	BNF
package:	wacco
version:	1.1, July 91
parts:		parser generator
author: 	Parag Patel (parag@netcom.com, parag@sde.hp.com)
location:	comp.sources.misc volume ?
description:	Wacco is a recursive descent LL(1) parser generator that
		generates C++ code.  Its syntax is similar to YACC
		with a lot of sugaring.  It can also do attribute-driven
		parsing.  The source is bootstrapped wacco code.
ports:		HP-UX s300 and s800, Sparc, and 4.3BSD (on HP)
portability:	Host machine must be 32 bits.
contact:	?
updated:	?

language:	BNF (Extended), BNF (yacc), Modula-2
package:	GMD Toolbox for Compiler Construction (aka Cocktail)
version:	9209
parts:		parser generator (LALR -> C, Modula-2), documentation,
		parser generator (LL(1) -> C, Modula-2), tests,
		scanner generator (-> C, Modula-2), tests
		translator (Extended BNF -> BNF), translator (Modula-2 -> C),
		translator (BNF (yacc) -> Extended BNF), examples
		abstract syntax tree generator, attribute-evaluator generator,
		code generator
author: 	?
location:	? ftp pub/cocktail/dos from ftp.karlsruhe.gmd.de
		   (many name servers having trouble resolving this address)
    OS/2:	ftp.eb.ele.tue.nl/pub/src/cocktail/dos-os2.zoo 
description:	A huge set of compiler building tools. 
requires:	(ms-dos only) DJ Delorie's DOS extender (go32)
	(OS/2 only) emx programming environment for OS/2
ports:		msdos, unix, os/2
discussion:	subscribe to Cocktail using listserv@eb.ele.tue.nl
contact:	Josef Grosch <grosch@karlsruhe.gmd.de>
    OS/2:	Willem Jan Withagen <wjw@eb.ele.tue.nl>
updated:	1992/10/01

language:	BNF ????
package:	T-gen
version:	2.1
parts:		parser generator, documentation, ?
author: 	Justin Graver <graver@comm.mot.com>
location:	ftp pub/st80_r41/T-gen2.1/* from st.cs.uiuc.edu
description:	T-gen is a general-purpose object-oriented tool for the 
		automatic generation of string-to-object translators. 
		It is written in Smalltalk and lives in the Smalltalk 
		programming environment.  T-gen supports the generation 
		of both top-down (LL) and bottom-up (LR) parsers, which 
		will automatically generate derivation trees, abstract 
		syntax trees, or arbitrary Smalltalk objects.  The simple 
		specification syntax and graphical user interface are 
		intended to enhance the learning, comprehension, and 
		usefulness of T-gen.
requires:	Smalltalk-80
ports:		ParcPlace Objectworks/Smalltalk 4.0 & 4.1
updated:	1992/10/18

language:	BNF 
package:	Eli Compiler Construction System
version:	3.5
parts:		?, documentation
author: 	?
location:	ftp pub/cs/distribs/eli/* from ftp.cs.colorado.edu
    Europe:	ftp unix/eli from ftp.uni-paderborn.de
description:	Eli integrates off-the-shelf tools and libraries with
		specialized language processors to generate complete compilers
		quickly and reliably.  It simplifies the development of new
		special-purpose languages, implementation of existing languages
		on new hardware and extension of the constructs and features of
		existing languages.
ports:		Sun-4 (SunOS 4 & 5), Ultrix/MIPS, RS/6000, HP-UX, SGI, Linux
discussion:	<eli-request@cs.colorado.edu>
contact:	<compiler@cs.colorado.edu>, <compiler@uni-paderborn.de>
updated:	1993/11/01

language:	BNF
package:	tom (demo for Tomita Parsing algorithm)
version:	1
parts:		parser generator, parser interpreter, examples, documentation
author: 	Mark Hopkins <mark@omnifest.uwm.edu>
location:	iecc.com in pub/files/tomita.tar.gz
		alt.sources archive from October 4, 1993.
description:	An implementation of the Tomita parsing algorithm using
		LR(0) tables and dynamic programming.
reference:	Kluwer '91, _Generalized LR Parsing_, Tomita ed., 0-7923-9201-9
		"The Tomita Parsing Algorithm ...", comp.compilers May 20, 1994
features:	Cyclic context free grammars are processed.
portability:	System independent
updated:	1993/10/03

language:	BNF (yacc)
package:	NewYacc
version:	1.0
parts:		parser generator, documenation
author: 	Jack Callahan <callahan@mimsy.cs.umd.edu> 
location:	ftp src/newyacc.1.0.*.Z from flubber.cs.umd.edu
description:	[someone want to fill it in? --ed]
reference:	see Dec 89 CACM for a brief overview of NewYacc.
updated:	1992/02/10

language:	BNF (yacc)
package:	bison
version:	1.22
parts:		parser generator, documentation
author: 	? Robert Corbett and Richard Stallman <rms@gnu.mit.edu>
location:	ftp bison-1.16.tar.Z from a GNU archive site
description:	?
bugs:		bug-gnu-utils@prep.ai.mit.edu
restriction:	!! will apply the GNU General Public License to *your* code !!
ports:		unix, atari, ?
updated:	1993/09/14

language:	BNF (yacc), Lex
package:	Bison++ and Flex++
version:	1.21-8 (bison), 2.3.8-7 (flex), 5 (flex++bison++misc)
parts:		translator, documentation, postscript, examples, DOS binary
author: 	Alain Coetmeur <coetmeur@icdc.fr>
location:	cse.unl.edu in ~ftp/pub/nandy/c++/tools/LATEST/*
    Europe:	mirrored on ftp.th-darmstadt.de
description:	A retargeting of bison-1 and flex 2.3 to C++, able to
		generate classes.  As with Bison and Flex, these two tools
		are independent but designed for mutual compatibility.
		The version numbering has been changed for consistency with
		Flex and Bison, so versions of flex3.0.x and bison2.x of this
		package are are actually earlier versions, not later.
		Examples are provided to help in getting started.
conformance:	Mostly compatible with flex2.3 and bison 1 in C, apart
		from the ability to generate classes.
features:	Almost all symbol names can be redefined, parsers can be
		shared in C and C++ in the same headers... very extensible...
		flex++ support IOSTREAM and STDIO in C++.
bugs:		Contact coetmeur@icdc.fr (current author and maintainer).
restriction:	GNU License for bison++. Same as flex for flex++.
ports:		SUNOS4, DOS, and same ports as Flex/Bison, Windows NT (tested)
portability:	Larger memory model required on DOS (DOS binary supplied).
status: 	active, supported, might not support flex 2.4
discussion:	coetmeur@icdc.fr, news: comp.compiler, or comp.lang.c++
help:		coetmeur@icdc.fr, news: comp.compiler, or comp.lang.c++
		for substantial problems.
support:	see help, no commercial support. (volunteer ?)
announcements:	mail list locally maintained by coetmeur@icdc.fr,
		news: comp.compiler comp.lang.c++
updated:	1994/02/07
lref:		C
lref:		C++
lref:		Lex
lref:		Yacc

language:	BNF (yacc)
package:	bison-A2.2
version:	2.2 (corresponds to gnu bison 1.22)
parts:		parser generator, C-parser, C++parser, documentation
author:		Fred Hansen <wjh+@cmu.edu>
location:	ftp://ftp.andrew.cmu.edu/pub/AUIS/bison/bison-A2.2.tar.gz
		also in contrib/andrew on the XV11R6 distribution in directories
		   overhead/bison, overhead/mkparser (but not the C++ version
		   of the parser)
description:	This is the standard gnu bison with a number of improvments:
		license-free parsers for C and C++, only one external symbol
		for each grammar, permits multiple grammars per application,
		better error reports on the grammar.
conformance:	grammars are the same as bison and yacc; but run-time errors
		are handled differently, so semantic rules must be changed
features:	tokens in the grammar can be expressed as ">=" instead of GE
bugs:		send bugs to info-andrew-bugs@andrew.cmu.edu
restriction:	none (unless you use the native gnu-bison parser)
ports:		has been tested on most Unix platforms
portability:	generation of names for temp files is system dependent.
discussion:	info-andrew@andrew.cmu.edu   (mirrored to comp.soft-sys.andrew)
support:	supported by the Andrew Consortium
contributions:	your organization is invited to join the Andrew Consortium
		info-andrew-request@andrew.cmu.edu
updated:        1994/05/09

language:	BNF (yacc)
package:	? jaccl ?
version:	?
parts:		parser generator
author: 	Dave Jones <djones@megatest.uucp>
location:	?
description:	a LR(1) parser generator
updated:	1989/09/08

language:	BNF (yacc)
package:	byacc (Berkeley Yacc)
version:	1.9
parts:		parser generator
author: 	Robert Corbett <Robert.Corbett@eng.sun.com>
location:	ftp pub/byacc.tar.1.9.Z from vangogh.CS.Berkeley.EDU
description:	probably the best yacc variant around.	Previously known as
		Zoo, and before that, as Zeus.
updated:	1993/02/22

language:	BNF (yacc), Lex
package:	Lex/Yacc for Turbo Pascal uploaded
version:	?
parts:		parser generator, scanner generator, documentation?
author: 	?
location:	iecc.com (140.186.81.1) at pub/file/lyprg.zip.
description:	Lex and Yacc retargeted to Pascal.
contact:	? dpoole@hydrogen.oscs.montana.edu (David Poole)
updated:	1993/07/02

language:	BNF (yacc), Ada
package:	aflex-ayacc
version:	1.2a
parts:		parser generator (Ada), scanner generator (Ada)
author: 	IRUS (Irvine Research Unit in Software)
location:	ftp pub/irus/aflex-ayacc_1.2a.tar.Z from liege.ics.uci.edu
description:	Lex and Yacc equivalents that produce Ada output
announcements:	irus-software-request@ics.uci.edu
contact:	irus-software-request@ics.uci.edu
updated:	1993/01/06

language:	BNF (yacc), Perl
package:	perl-byacc
version:	1.8.2
parts:		parser-generator(perl)
author: 	Rick Ohnemus <rick@IMD.Sterling.COM>
location:	ftp local/perl-byacc.tar.Z from ftp.sterling.com
description:	A modified version of byacc that generates perl code.  Has '-p'
		switch so multiple parsers can be used in one program (C or
		perl).
portability:	Should work on most (?) Unix systems.  Also works with 
		SAS/C 6.x on AMIGAs.
updated:	1993/01/24

language:	BNF (yacc), Standard ML
package:	New SML-Yacc and SML-Lex
version:	??
parts:		??
author: 	Andrew Appel <appel@tyrolia.princeton.edu>
location:	princeton.edu in pub/ml, files mlyacc94.tar.Z, lexgen94.tar.Z.
description:	??
updated:	1994/05/23

language:	BNF (variant), Icon
package:	Ibpag2 (Icon-Based Parser Generation System 2)
version:	1.0 (beta)
parts:		parser generator (Icon, SLR(1))
author: 	Richard L. Goerwitz <goer@midway.uchicago.edu>
location:	comp.sources.misc archive
description:	Ibpag2 is a parser generator for Icon.	It does most
		of what you would expect.  Latest version can handle both
		SLR(1) and even GLR (Tomita) grammars.
ports:		unix
portability:	? (Unix dependencies?)
updated:	1993/07/13

language:	BNF ?, Gofer
package:	Ratatosk ?
version:	?
parts:		parser generatr (Gofer)
author: 	Torben AEgidius Mogensen <torbenm@diku.dk>
location:	ftp pub/diku/dists/Ratatosk.tar.Z from ftp.diku.dk
description:	Ratatosk is a SLR parser generator in Gofer (a Haskell variant)
		that generates purely functional parsers (also in Gofer). Even
		though the sematic value of a production is a function of the
		attributes of its right-hand side (and thus apparently purely
		synthesized), inherited attributes are easily simulated by
		using higher order functions.
ports:		?
updated:	?

language:	BNF
package:	lalr.ss - An LALR(1) parser generator
version:	0.9 
parts:		parser generator (->Scheme)
author: 	Mark Johnson <mj@cs.brown.edu>
location:	ftp new/lalr.shar from the Scheme Repository
description:	A LALR(1) parser generator in and for Scheme.
requires:	Scheme
updated:	1993/05/24

language:	BURS ?
package:	Iburg
version:	?
parts:		parser generator?
author: 	Christopher W. Fraser <cwf@research.att.com>, David R. Hanson
		<drh@princeton.edu>, Todd A. Proebsting <todd@cs.arizona.edu>
location:	ftp pub/iburg.tar.Z from ftp.cs.princeton.edu
description:	Iburg is a program that generates a fast tree parser.  It is
		compatible with Burg. Both programs accept a cost-augmented
		tree grammar and emit a C program that discovers an optimal
		parse of trees in the language described by the grammar. They
		have been used to construct fast optimal instruction selectors
		for use in code generation.  Burg uses BURS; Iburg's matchers
		do dynamic programming at compile time.
updated:	1993/02/10

language:	Candle, IDL (Interface Description Language)
package:	Scorpion System
version:	6.0
parts:		software development environment for developing
		software development environments, documentation
author: 	University of Arizona
location:	ftp scorpion/* from cs.arizona.edu
description:	20 tools that can be used to construct specialized
		programming environments.
		The Scorpion Project was started by Prof. Richard
		Snodgrass as an outgrowth of the SoftLab Project (which pro-
		duced the IDL Toolkit) that he started when he was at the
		University of North Carolina.  The Scorpion Project is
		directed by him at the University of Arizona and by Karen
		Shannon at the University of North Carolina at Chapel Hill.
reference:	"The Interface Description Language: Definition and Use," 
		by Richard Snodgrass, Computer Science Press, 1989,
		ISBN 0-7167-8198-0
ports:		Sun-3, Sun-4, Vax, Decstation, Iris, Sequent, HP9000
discussion:	info-scorpion-request@cs.arizona.edu
contact:	scorpion-project@cs.arizona.edu
updated:	1993/11/04

language:	COCOL (EBNF variant)
package:	COCO/R
version:	1.36
parts:		parser generator(LL(1))
author: 	Hanspeter Moessenboeck <moessenboeck@inf.ethz.ch>
		Port to Modula-2 done by Marc Brandis, Christof Brass 
		and Pat Terry <cspt@alpha.ru.ac.za>
location:	neptune.inf.ethz.ch:/pub/Coco
		ftp.psg.com:/pub/modula-2/coco
		cs.ru.ac.za:/pub/coco
		pluto.fit.qut.edu.au:/pub/coco
description:	Coco/R generates recursive descent parsers and their associated
		scanners from attributed grammars.  Coco/R can bootstrap itself
		to generate its own driver, parser, scanner, and semantic
		evaluator from the attributed grammar CR.ATG.  This grammar
		thus serves as an an example of how to write compiler
		descriptions for Coco.	There are also other simpler examples
		showing its use.
reference:	_A compiler generator for microcomputers_, by Rechenberg 
		and Mossenbock (Prentice Hall, 1989, 0-13-155136-1)
bugs:		MS-DOS related versions: Pat Terry <cspt@alpha.ru.ac.za>
		Other: Hanspeter Moessenboeck <moessenboeck@inf.ethz.ch>
requires:	Oberon or Modula-2
ports:		MS-DOS: TopSpeed Modula-2; FST 2.0; FST 3.1; StonyBrook
		QuickMod 2.2; Logitech 3.03.  Macintosh: Apple MacMeth
status: 	Oberon version is freely available?, Modula-2 version is
		free to academic sites; commercial use requires a license
updated:	1994/06/23

language:	EAG (Extended Affix Grammar)
package:	EAG
version:	first public release
parts:		recognizer generator, transduccer generator, 
		translator generator, editor generator, documentation
author: 	Marc Seutter <marcs@cs.kun.nl>
location:	ftp pub/eag/* from hades.cs.kun.nl
description:	The Extended Affix Grammar formalism, or EAG for short, is a
		formalism for describing both the context free and the context
		sensitive syntax of languages.	EAG is a member of the family
		of two-level grammars. They are very closely related to
		two-level van Wijngaarden grammars.  The EAG compiler will
		generate either a recognizer or a transducer or a translator
		or a syntax directed editor for a language described in the EAG
		formalism.
updated:	1993/09/14

language:	EBNF
package:	ETO
version:	test version
parts:		parser, postscript document, examples
author: 	Lin Li <china@bernina.ethz.ch>
location:	FTP: fi.ethz.ch under /pub/ETO/eto-09.*
description:	ETO is an object oriented universal syntax checker.  It takes
		an EBNF specification for a language and then uses it on an
		input file to check its syntax.
updated:	1994/06/03

language:	lex
package:	flex
version:	2.3.8
parts:		scanner generator
author: 	Vern Paxson <vern@ee.lbl.gov>
location:	ftp flex-2.3.8.tar.Z from a GNU archive site or ftp.ee.lbl.gov
description:	?
updated:	?

language:	Regular Expressions
package:	re2c
version:	alpha
parts:		translator (re->c)
author: 	?? peter@csg.uwaterloo.ca
location:	csg.uwaterloo.ca in /pub/peter/re2c.0.5.tar.gz
description:	A regular expression to C converter.
updated:	?? 1994/04/29

language:	Milarepa 
package:	Milarepa Perl/BNF Parser 
version:	Prototype 1.0
parts:		parser-generator, examples, tutorial
author: 	Jeffrey Kegler <jeffrey@netcom.com>
location:	via anonymous ftp at
		alexia.lis.uiuc.edu:/pub/perl/marpa-1.0.tar.Z
description:	Milarepa takes a source grammar in the Milarepa language (a
		straightforward mix of BNF and Perl) and generates a Perl file,
		which, when enclosed in a simple wrapper, parses some third
		language described by the source grammar.
		This is intended to be a real hacker's parser.	It is not
		restricted to LR(k), and the parse logic follows directly from
		the BNF.  It handles ambiguous grammars, ambiguous tokens
		(tokens which were not positively identified by the lexer) and
		allows the programmer to change the start symbol.  The grammar
		may not be left recursive.  The input must be divided into
		sentences of a finite maximum length.  There is no fixed
		distinction between terminals and non-terminals, that is, a
		symbol can both match the input AND be on the left hand side of
		a production.  Multiple Marpa grammars are allowed in a single
		perl program.
		It's only a prototype primarily due to poor speed.  This is
		intended to be remedied after Perl 5.0 is out.
requires:	perl
updated:	1994/04/27

language:	Pascal, Lisp, APL, Scheme, SASL, CLU, Smalltalk, Prolog
package:	Tim Budd's C++ implementation of Kamin's interpreters
version:	?
parts:		interpretors, documentation
author: 	Tim Budd <budd@cs.orst.edu>
location:	? ftp pub/budd/kamin/*.shar from cs.orst.edu ?
description:	a set of interpretors written as subclasses based on
		"Programming Languages, An Interpreter-Based Approach",
		by Samuel Kamin.
requires:	C++
status: 	? 
contact:	Tim Budd <budd@fog.cs.orst.edu>
updated:	1991/09/12

language:	Relation Grammar
package:	rl
version:	?
parts:		?
author: 	Kent Wittenburg <kentw@bellcore.com>
location:	fto rl/* from flash.bellcore.com
description:	The RL files contain code for defining Relational Grammars and
		using them in a bottom-up parser to recognize and/or parse
		expressions in Relational Languages.  The approach is a
		simplification of that described in Wittenburg, Weitzman, and
		Talley (1991), Unification-Based Grammars and Tabular Parsing
		for Graphical Languages, Journal of Visual Languages and
		Computing 2:347-370.
		This code is designed to support the definition and parsing of
		Relational Languages, which are characterized as sets of
		objects standing in user-defined relations.  Correctness and
		completeness is independent of the order in which the input is
		given to the parser.  Data to be parsed can be in many forms as
		long as an interface is supported for queries and predicates
		for the relations used in grammar productions.	To date, this
		software has been used to parse recursive pen-based input such
		as math expressions and flowcharts; to check for data
		integrity and design conformance in databases; to
		automatically generate constraints in drag-and-drop style
		graphical interfaces; and to generate graphical displays by
		parsing relational data and generating output code.
requires:	Common Lisp
ports:		Allegro Common Lisp 4.1, Macintosh Common Lisp 2.0
updated:	1992/10/31

language:	S/SL (Syntax Semantic Language)
package:	ssl
version:	?
parts:		parser bytecode compiler, runtime
author: 	Rick Holt, Jim Cordy <cordy@qucis.queensu.ca> (language), 
		Rayan Zachariassen <rayan@cs.toronto.edu> (C implementation)
location:	ftp pub/ssl.tar.Z from neat.cs.toronto.edu
description:	A better characterization is that S/SL is a language 
		explicitly designed for making efficient recusive-descent 
		parsers.  Unlike most other languages, practicially the 
		LEAST expensive thing you can do in S/SL is recur.  A
		small language that defines input/output/error token
		names (& values), semantic operations (which are really
		escapes to a programming language but allow good
		abstration in the pseudo-code), and a pseudo-code
		program that defines a grammar by the token stream the
		program accepts.  Alternation, control flow, and
		1-symbol lookahead constructs are part of the
		language.  What I call an S/SL "implementation", is a
		program that compiles this S/SL pseudo-code into a
		table (think byte-codes) that is interpreted by the
		S/SL table-walker (interpreter).  I think the pseudo-code 
		language is LR(1), and that the semantic mechanisms turn it
		into LR(N) relatively easily.
		+ more powerful and cleaner than yac
		- slower than yacc
reference:	+ Cordy, J.R. and Holt, R.C. [1980] Specification of S/SL:
		Syntax/Semantic Language, Computer Systems Research
		Institute, University of Toronto.  
		+ "An Introduction to S/SL: Syntax/Semantic Language" by 
		R.C. Holt, J.R.  Cordy, and D.B. Wortman, in ACM Transactions
		on Programming Languages and Systems (TOPLAS), Vol 4, No.
		2, April 1982, Pages 149-178.
updated:	1989/09/25

language:	TXL
package:	TXL: Tree Transformation Language
version:	7.4
parts:		translator, documentation, tutorial, examples
author: 	Jim Cordy <cordy@qucis.queensu.ca>
location:	ftp pub/txl/* from ftp.qucis.queensu.ca 
description:	TXL is a language for performing source to source
		transformations and is well suited for rapidly prototyping
		new languages and language processors.	It has also been used to
		prototype specification languages, command languages, and more
		traditional program transformation tasks such as constant
		folding, type inference, source optimization and reverse
		engineering.  TXL takes as input an arbitrary context-free
		grammar in extended BNF-like notation, and a set of
		show-by-example transformation rules to be applied to inputs
		parsed using the grammar.  TXL is a functional/rule-based
		hybrid programming language, using the paradigm of structural
		transformation.
reference:	Several listed in software documentation
updated:	1993/08/04

language:	BNF (extended)
package:	SORCERER: A Simple Tree Parser Generator
version:	1.00B
parts:		translator, documentation, tutorial, examples
author: 	Terence Parr <parrt@s1.arc.umn.edu>
location:	ftp pub/pccts/sorcerer/* from marvin.ecn.purdue.edu 
description:	SORCERER is more suitable for the class of translation problems
		lying between those solved by code-generator generators and by
		full source-to-source translator generators.  SORCERER
		generates simple, flexible, top-down, tree parsers that, in
		contrast to code-generators, may execute actions at any point
		during a tree walk.  SORCERER accepts extended BNF notation,
		allows predicates to direct the tree walk with semantic and
		syntactic context information, and does not rely on any
		particular intermediate form, parser generator, or other
		pre-existing application.
reference:	Several listed in software documentation
discussion:	send mail with a body of "subscribe pccts-users your_name" to
		pccts-users@ahpcrc.umn.edu. "your_name" can be email, or full.
help:		from mailing list
support:	actively supported, from mailing list
updated:	1994/02/15

mathematical tools and languages
-------------------------------------------------------------------------------
category:	mathematical tools and languages
description:	These are either special-purpose languages and tools, or
		general purpose languages and tools that have traditionally
		been used for mathematical and scientific computing task.
lref:		Fortran 
lref:		PCN
lref:		CLP
lref:		Sisal

language:	APL
package:	I-APL
version:	?
parts:		?
author: 	?
location:	ftp languages/apl/* from watserv1.waterloo.edu
description:	?
updated:	1992/07/06

language:	APL
package:	APLWEB
version:	?
parts:		translator(web->apl), translator(web->TeX)
author: 	Dr. Christoph von Basum <CvB@erasmus.hrz.uni-bielefeld.de>
location:	ftp languages/apl/aplweb/* from watserv1.uwaterloo.ca
description:	[Should this be listed with the Web entries? -- Ed.]
updated:	1992/12/07

language:	APL
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	J
package:	J-mode
version:	?
parts:		emacs macros
author: 	?
location:	ftp pub/j/gmacs/j-interaction-mode.el from think.com
description:	add on to J
updated:	1991/03/04

language:	RLaB language (math manipulation - MATLAB-like)
package:	RLaB
version:	0.99i
parts:		interpreter, libraries, documentation
author: 	v. 0.95:  Ian Searle <ians@eskimo.com>
		v. 0.99i: Matt Wette <mwette@mr-ed.jpl.nasa.gov>
location:	v. 0.95:  ftp pub/RLaB/* from evans.ee.adfa.oz.au
		v. 0.99i: csi.jpl.nasa.gov in /pub/matlab/RLaB
		[Could someone explain/rectify this? -- Mark]
description:	RLaB is a "MATLAB-like" matrix-oriented programming
		language/toolbox.  RLaB focuses on creating a good experimental
		environment (or laboratory) in which to do matrix math
		Currently RLaB has numeric scalars and matrices (real and
		complex), and string scalars, and matrices. RLaB also contains
		a list variable type, which is a heterogeneous associative
		array.
bugs:		v. 0.95: Ian Searle <ians@eskimo.com>
restriction:	GNU General Public License
requires:	GNUPLOT, lib[IF]77.a (from f2c)
ports:		many unix, OS/2, Amiga
updated:	1994/05/14

language:	octave language (math manipulation - MATLAB-like)
package:	octave
version:	1.0
parts:		interpreter, libraries, documentation
author: 	John W. Eaton
location:	ftp /pub/octave/* from ftp.che.utexas.edu
		also, any GNU archive site (see archive listing below)
description:	Octave is a high-level language, primarily intended for
		numerical computations.  It provides a convenient command line
		interface for solving linear and nonlinear problems
		numerically.
		Octave can do arithmetic for real and complex scalars and
		matrices, solve sets of nonlinear algebraic equations,
		integrate functions over finite and infinite intervals, and
		integrate systems of ordinary differential and
		differential-algebraic equations.
bugs:		bug-octave@che.utexas.edu
restriction:	GNU General Public License
requires:	gnuplot, C++ compiler and FORTRAN compiler or f2c translator.
ports:		several
updated:	1994/2/23

language:	FUDGIT language (math manipulation)
package:	FUDGIT
version:	2.27
parts:		interpreter
author: 	Thomas Koenig <ig25@rz.uni-karlsruhe.de> ??
location:	ftp /pub/linux/sources/usr.bin/fudgit-* from tsx-11.mit.edu ??
description:	FUDGIT is a double-precision multi-purpose fitting program.  It
		can manipulate complete columns of numbers in the form of
		vector arithmetic. FUDGIT is also an expression language
		interpreter understanding most of C grammar except pointers.
		Morever, FUDGIT is a front end for any plotting program
		supporting commands from stdin. It is a nice mathematical
		complement to GNUPLOT, for example.
requires:	GNUPLOT
ports:		AIX, HPUX, Linux, IRIX, NeXT, SunOS, Ultrix
updated:	1993/02/22

language:	Unix BC (arbitrary-precision arithmetic language)
package:	C-BC
version:	1.1
parts:		bytecode compiler, interpreter, documentation, examples
author: 	Mark Hopkins <mark@omnifest.uwm.edu>
location:	alt.sources (10/04/93), or contact author by E-mail.
description:	A strongly typed version of BC with expanded C-like syntax,
		more base types, with ability to form array and pointer types
		of any dimension and to allocate/free arrays at run-time.
conformance:	Most POSIX-BC features supported, except functions must be
		declared consistently and declared before first use.  String
		handling slightly different.
reference:	C-BC implementation notes contained with software documentation
requires:	ANSI-C compiler
ports:		DOS, Unix
portability:	No system dependent features present.
updated:	1993/08/23

language:	Unix BC (arbitrary-precision arithmetic language)
package:	GNU BC
version:	1.02
parts:		parser (yacc), interpreter, BC math library
author: 	Philip A. Nelson <phil@cs.wwu.edu>
location:	ftp bc-1.02.tar.Z from a GNU archive site
description:	BC is an arbitrary precision numeric processing language with a
		C-like syntax that traditionally provided a front-end to DC.
		This version, however, is self-contained and internally
		executes its own compiled code (unrelated to DC code).
conformance:	Superset of POSIX BC (P10003.2/D11), with a POSIX-only mode.
restriction:	Source code falls under the GNU CopyLeft.
requires:	vsprintf and vfprintf routines
ports:		Unix (BSD, System V, MINIX, POSIX)
updated:	?

language:	Calc?  (symbolic math calculator)
package:	Calc
version:	2.02
parts:		interpreter, emacs mode, documentation
author: 	Dave Gillespie <daveg@cs.caltech.edu>
location:	ftp calc-2.02.tar.z from a GNU archive site
description:	Calc is an extensible, advanced desk calculator and
		mathematical tool written in Emacs Lisp that runs as part of
		GNU Emacs.  It is accompanied by the "Calc Manual", which
		serves as both a tutorial and a reference.  If you wish, you
		can use Calc as only a simple four-function calculator, but it
		also provides additional features including choice of algebraic
		or RPN (stack-based) entry, logarithms, trigonometric and
		financial functions, arbitrary precision, complex numbers,
		vectors, matrices, dates, times, infinities, sets, algebraic
		simplification, differentiation, and integration.
bugs:		?
updated:	?

language:	C-like caluculator
package:	Arbitrary precision calculator
version:	1.26.4
parts:		interpreter
author: 	David I. Bell <dbell@canb.auug.org.au>
location:	ftp pub/calc from ftp.uu.net
description:	Arbitrary precision C-like calculator [similar to BC? --ed]
ports:		Linux
updated:	1993/06/15

language:	Unix DC (arbitrary-precision arithmetic language)
package:	GNU DC
version:	0.2
parts:		interpreter
author: 	?
location:	ftp dc-0.2.tar.Z from a GNU archive site
description:	DC is the language for an arbitrary precision postfix
		calculator.  This version is a subset of DC that handles all
		the Unix DC operations, except the (undocumented) array
		operations.
status: 	Attempting integration with GNU BC.
updated:	1993/05/21

language:	Fortran
package:	f2c
version:	1993.04.28
parts:		translator (to C), postscript documentation, man pages, 
		support libraries.
author: 	S. I. Feldman, D. M. Gay, M. W. Maimone and N. L. Schryer
location:	ftp from netlib@research.att.com:netlib/f2c/src/*
description:	translator (Fortran 77 to ANSI C or C++)
bugs:		D. M. Gay <dmg@research.att.com>
updated:	1993 April 27

language:	Fortran
package:	Floppy
version:	?
parts:		?
author: 	?
location:	ffccc in comp.sources.misc archive volume 12
description:	?
contact:	?
updated:	1992/08/04

language:	Fortran
package:	Flow
version:	?
parts:		?
author: 	Julian James Bunn <julian@vxcrna.cxern.ch>
location:	comp.sources.misc archive volume 31
description:	The Flow program is a companion to Floppy, it allows the user 
		to produce various reports on the structure of Fortran 
		77 code, such as flow diagrams and common block tables.
requires:	Floppy
ports:		VMS, Unix, CMS
updated:	?

language:	Fortran
package:	Adaptor (Automatic DAta Parallelism TranslatOR)
version:	1.0
parts:		preprocessor, library, documentation
author: 	?
location:	ftp gmd/adaptor/adp_1.0.tar.Z from ftp.gmd.de
description:	Adaptor is a tool that transforms data parallel
		programs written in Fortran with array extensions,
		parallel loops, and  layout directives	to parallel
		programs with explicit message passing.
		ADAPTOR is not a compiler but a source to source
		transformation that generates Fortran 77 host and
		node programs with message passing.  The new
		generated source codes have to be compiled by the
		compiler of the parallel machine. 
ports:		CM-5, iPCS/860, Meiko CS1/CS2, KSR 1, SGI, Alliant,
		network of Suns, or RS/6000s
contact:	Thomas Brandes <brandes@gmd.de>
updated:	1993/06

language:	Fortran, C
package:	cfortran.h
version:	2.6
parts:		macros, documentation, examples
author: 	Burkhard Burow
location:	ftp cfortran/* from zebra.desy.de
description:	cfortran.h is an easy-to-use powerful bridge between
		C and FORTRAN. It provides a completely transparent, machine
		independent interface between C and FORTRAN routines and
		global data.
		cfortran.h provides macros which allow the C preprocessor to
		translate a simple description of a C (Fortran) routine or
		global data into a Fortran (C) interface.
reference:	reviewed in RS/Magazine November 1992 and
		a user's experiences with cfortran.h are to be described
		in the 1/93 issue of Computers in Physics.
ports:		VAX VMS or Ultrix, DECstation, Silicon Graphics, IBM RS/6000,
		Sun, CRAY, Apollo, HP9000, LynxOS, f2c, NAG f90.
portability:	high
contact:	burow@vxdesy.cern.ch
updated:	1992/04/12

language:	Fortran
package:	fsplit
version:	?
parts:		?
author: 	?
location:	?
description:	a tool to split up monolithic fortran programs
updated:	?

language:	Fortran
package:	?
version:	?
parts:		?
author: 	Steve Mccrea <mccrea@gdwest.gd.com>
location:	?
description:	a tool to split up monolithic fortran programs
requires:	new awk
updated:	?

language:	Fortran
package:	Fortran77 -> Fortran90 converter
version:	? 1
parts:		translator(Fortran 77 -> Fortran 90), documentation?
author: 	metcalf@cernvm.cern.ch <Michael Metcalf>
location:	ftp pub/MandR/convert.f90 from jkr.cc.rl.ac.uk
description:	A Fortran77 to Fortran90 translator.  There's a number of
		significant differences between the two Fortrans that makes
		a package like this useful.
updated:	1993/07/17

language:	J
package:	J from ISI
version:	6
parts:		interpreter, tutorial
author: 	Kenneth E. Iverson and Roger Hui <hui@yrloc.ipsa.reuter.com>
location:	ftp languages/apl/j/* from watserv1.waterloo.edu
description:	J was designed and developed by Ken Iverson and Roger Hui.  It
		is similar to the language APL, departing from APL in using
		using the ASCII alphabet exclusively, but employing a spelling
		scheme that retains the advantages of the special alphabet
		required by APL. It has added features and control structures
		that extend its power beyond standard APL.  Although it can be
		used as a conventional procedural programming language, it can
		also be used as a pure functional programming language.
ports:		Dec, NeXT, SGI, Sun-3, Sun-4, VAX, RS/6000, MIPS, Mac, Acorn
		IBM-PC, Atari, 3b1, Amiga
updated:	1992/10/31

language:	Ratfor
package:	? ratfor ?
version:	?
parts:		translator(Ratfor->Fortran IV)
author: 	Brian Kernighan and P.J. Plauger (wrote the book anyway)
location:	comp.sources.unix archives volume 13
description:	Ratfor is a front end language for Fortran.  It was designed
		to give structured control structures to Fortran.  It is
		mainly of historical significance.
updated:	?

language:	Y (cross between C and Ratfor)
package:	y+po
version:	?
parts:		compiler
author: 	Jack W. Davidson and Christopher W. Fraser
location:	ftp pub/y+po.tar.Z from ftp.cs.princeton.edu
description:	Davidson/Fraser peephole optimizer PO [1-3] [where the GCC RTL
		idea and other optimization ideas came from] along with the Y
		compiler [cross between C+ratfor] is ftpable from
		ftp.cs.princeton.edu: /pub/y+po.tar.Z.	It is a copy of the
		original distribution from the University of Arizona during the
		early 80's, totally unsupported, almost forgotten [do not bug
		the authors] old code, possibly of interest to
		compiler/language hackers.
reference:	Jack W. Davidson and Christopher W. Fraser, "The Design and
		Application of a Retargetable Peephole Optimizer", TOPLAS, Apr.
		1980.
		Jack W. Davidson, "Simplifying Code Through Peephole
		Optimization" Technical Report TR81-19, The University of
		Arizona, Tucson, AZ, 1981.
		Jack W. Davidson and Christopher W. Fraser, "Register
		Allocation and Exhaustive Peephole Optimization"
		Software-Practice and Experience, Sep. 1984.
status: 	history
updated:	?

electrical engineering languages
-------------------------------------------------------------------------------
category:	electrical engineering languages
description:	These are languages used for simulating, designing, and
		specifying circuits.

language:	CASE-DSP (Computer Aided Software Eng. for Digital Signal Proc)
package:	Ptolemy
version:	0.4.1
parts:		grahpical algorithm layout, code generator, simulator
author: 	?
location:	ftp pub/ptolemy/* from ptolemy.bekeley.edu
description:	Ptolemy provides a highly flexible foundation for the
		specification, simulation, and rapid prototyping of systems.
		It is an object oriented framework within which diverse models
		of computation can co-exist and interact.  For example, using
		Ptolemy a data-flow system can be easily connected to a
		hardware simulator which in turn may be connected to a
		discrete-event system, etc.  Because of this, Ptolemy can be
		used to model entire systems.
		In addition, Ptolemy now has code generation capabilities.
		from a flow graph description, Ptolemy can generate both C code
		and DSP assembly code for rapid prototyping.  Note that code
		generation is not yet complete, and is included in the current
		release for demonstration purposes only.
requires:	C++, C
ports:		Sun-4, MIPS/Ultrix; DSP56001, DSP96002.
status: 	active research project
discussion:	ptolemy-hackers-request@ohm.berkeley.edu
contact:	ptolemy@ohm.berkeley.edu
updated:	1993/04/22

language:	EDIF (Electronic Design Interchange Format)
package:	Berkeley EDIF200 
version:	7.6
parts:		translator-building toolkit
author: 	Wendell C. Baker and Prof A. Richard Newton of the Electronics 
		Research Laboratory, Department of Electrical Engineering and 
		Computer Sciences at the University of California, Berkeley, CA
location:	ftp from pub/edif in ic.berkeley.edu
description:	?
restriction:	no-profit w/o permission
ports:		?
updated:	1990/07

language:	Verilog, XNF
package:	XNF to Verilog Translator
version:	?
parts:		translator(XNF->Verilog)
author: 	M J Colley <martin@essex.ac.uk>
location:	ftp pub/dank/xnf2ver.tar.Z from punisher.caltech.edu
description:	This program was written by a postgraduate student as part
		of his M.Sc course, it was designed to form part a larger
		system operating with the Cadence Edge 2.1 framework. This
		should be born in mind when considering the construction
		and/or operation of the program.
updated:	?

language:	VHDL
package:	ALLIANCE
version:	1.1
parts:		compiler, simulator, tools and environment, documentation
author: 	?
location:	ftp pub/cao-vlsi/alliance from ftp-masi.ibp.fr
description:	ALLIANCE 1.1 is a complete set of CAD tools for teaching
		Digital CMOS VLSI Design in Universities. It includes VHDL
		compiler and simulator, logic synthesis tools, automatic place
		and route, etc...  ALLIANCE is the result of a ten years effort
		at University Pierre et Marie Curie (PARIS VI, France).
ports:		Sun4, also not well supported: Mips/Ultrix, 386/SystemV
discussion:	alliance-request@masi.ibp.fr
contact:	cao-vlsi@masi.ibp.fr
updated:	1993/02/16
-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!gatech!news-feed-1.peachnet.edu!news.duke.edu!MathWorks.Com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p5of5]
Message-ID: <free5-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free5-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free4-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:48 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1354
Xref: bloom-beacon.mit.edu comp.compilers:3321 comp.lang.misc:5189 comp.archives.admin:679 news.answers:23371 comp.answers:6569

Archive-name: free-compilers/part5
Last-modified: 1994/6/30
Version: 6.5

Wirth family languages
------------------------------------------------------------------------------
category:	Wirth family languages
description:	These are the languages that were either designed by Niklaus
		Wirth are are descended from them.  
lref:		IFP

language:	CLU
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Modula-2, Pascal
package:	m2
version:	? 7/2/92 ?
parts:		? compiler ?
author: 	Michael L. Powell.  See description below.
location:	ftp pub/DEC/Modula-2/m2.tar.Z from gatekeeper.dec.com
description:	A modula-2 compiler for VAX and MIPS.  A Pascal
		compiler for VAX is also included.  The Pascal compiler
		accepts a language that is almost identical to Berkeley
		Pascal.  It was originally designed and built by Michael L.
		Powell, in 1984.  Joel McCormack made it faster, fixed lots of
		bugs, and swiped/wrote a User's Manual.  Len Lattanzi ported it
		to the MIPS.
conformance:	extensions:	
		+ foreign function and data interface
		+ dynamic array variables
		+ subarray parameters
		+ multi-dimensional open array parameters
		+ inline proceedures
		+ longfloat type
		+ type-checked interface to C library I/O routines
restriction:	must pass changes back to Digital
ports:		vax (ultrix, bsd), mips (ultrix)
contact:	modula-2@decwrl.pa.dec.com
updated:	1992/07/06

language:	Modula-2
package:	Ulm's Modula-2 System
version:	2.2.1
parts:		compiler, library, tools
author: 	Andreas Borchert <borchert@mathematik.uni-ulm.de>
		compiler derived from the ETHZ compiler for the Lilith system
location:	ftp pub/soft/modula/ulm/sun3/modula-2.2.1.tar.Z from
		titania.mathematik.uni-ulm.de.	Please get the READ_ME too.
description:	?
conformance:	PIM3
restriction:	commercial use requires licence;
		compiler sources available by separate licence agreement
		(licence fee is not required if it is possible to
		transfer the sources across the network)
requires:	gas-1.36 (to be found in the same directory)
ports:		Sun3, Nixdorf Targon/31, Concurrent 3200 Series
contact:	Andreas Borchert <borchert@mathematik.uni-ulm.de>
updated:	1992/03/02 

language:	Modula-2
package:	mtc
version:	?
parts:		translator(C)
author: 	?
location:	ftp pub/unix/programming/compilerbau/mtc.tar.Z 
		from ftp.uni-stuttgart.de 
description:	A Modula-2 to C translator
ports:		?
updated:	1994/04/29

language:	Modula-2
package:	mocka
version:	9404
parts:		compiler, library, examples, docs
author: 	? Holger Hopp <hopp@ira.uka.de>
location:	ftp /pub/mocka/linux/mocka9404* from i44.s10.ira.uka.de 
		or ftp /pub/Linux/devel/modula-2/mocka9404* 
			from sunsite.unc.edu
description:	A free version of a Modula-2 compiler for the Intel X86
		under Linux or 386BSD (and derivatives?). Source code
		in Modula-2 is available.
ports:		Linux and 386BSD (also commercial versions)
updated:	1994/04/29

language:	Modula-2* (parallel extension)
package:	IPD Modula-2* Programming Environment
version:	9401
parts:		translator (->C), debugger (SUN4 only), X Windows
		user panel, automatic cross-architecture make,
		sequential and parallel libraries, examples, documentation
author: 	IPD Modula-2* team <msc@ira.uka.de> consisting of the
		following kernel contributors:
		   Thomas Gauweiler, Stefan U. Haenssgen, Ernst A. Heinz,
		   Paul Lukowicz, Hendrik Mager, Michael Philippsen.
location:	ftp.ira.uka.de (129.13.10.90) in pub/programming/modula2star/
description:	Modula-2* is an extension of Modula-2 for highly parallel,
		portable programs.  IPD Modula-2* is provided freely for
		research, educational and classroom use.  A complete sequential
		Modula-2 environment in provided complemented with a set of
		parallel libraries, which even include routines for
		implementing low-level parallel operations.  The employment of
		of C translator allows increased accessibility to actual
		parallel machines (many have nothing lower-level than C), at
		the expense of Modula-2 features of arrays bounds checking
		and symbolic debugging at the Modula-2* level.
		[An interpreter could be written with functionality subsuming
		 that of a symbolic debugger. -- Mark]
conformance:	PIM but not ISO compliant
reference:	*  J.R. Smith. "The design and analysis of parallel
		   algorithms. Chapter 3: Modula-2*." Oxford University
		   Press, December 1992.
		*  M. Philippsen, E.A. Heinz, and P. Lukowicz. "Compiling
		   machine-independent parallel programs." ACM SIGPLAN
		   Notices, v. 28, no. 8, pp. 99-108, August 1993.
		*  M. Philippsen, T.M. Warschko, W.F. Tichy, C.G. Herter,
		   E.A. Heinz, and P. Lukowicz.  "Project Triton: Towards
		   improved programmability of parallel computers." In
		   D.J. Lija and P.L. Bird (eds), The Interaction of
		   Compilation Technology and Computer Architecture, Kluwer
		   Academic Publishers, 1994.
		Others available from i41s10.ira.uka.de (129.13.13.110)
		in pub/m2s/*.ps
ports:		386 and above with BSDI/386 or Linux (sequential),
		KSR-1/KSR-2 with KSR-OS (sequential and parallel),
		DECStation (R3000/R4000) with Ultrix (sequential),
		   MP-1/MP-2 (DECStation frontend) with MP-Ultrix (parallel)
		SUN (Sun-3, Sun-4 SPARCStation) with SunOS (sequential),
portability:	sources are for GMD Mocka Modula-2 compiler
status: 	supported
updated:	???

language:	Modula-2, Modula-3
package:	M2toM3
version:	1.01
parts:		translator(Modula-2 -> Modula-3), libraries
author: 	Peter Klein <pk@i3.informatik.rwth-aachen.de>
location:	ftp pub/Modula3 from martha.informatik.rwth-aachen.de
description:	M2toM3 is a simple Modula-2 to Modula-3 translator which
		covers most of the syntactic differences between those
		languages.  No context sensitive analysis is done, so WITH
		statements, local modules, enumeration type literals and
		variant RECORDS have to be dealt with by hand.
		Part of the SUN Modula 2 library is emulated by the Modula 3
		library
requires:	a Modula-3 system
updated:	1992/12

language:	pm2
package:	PRAM emulator and parallel modula-2 compiler ??
version:	?
parts:		compiler, emulator
author: 	?
location:	ftp pub/pram/* from cs.joensuu.fi
description:	A software emulator for parallel random access machine (PRAM)
		and a parallel modula-2 compiler for the emulator.  A PRAM
		consists of P processors, an unbounded shared memory, and a
		common clock. Each processor is a random access machine (RAM)
		consisting of R registers, a program counter, and a read-only
		signature register. Each RAM has an identical program, but the
		RAMs can branch to different parts of the program. The RAMs
		execute the program synchronously one instruction in one clock
		cycle.
		pm2 programming language is Modula-2/Pascal mixture having
		extensions for parallel execution in a PRAM. Parallelism is
		expressed by pardo-loop- structure. Additional features include
		privat/shared variables, two synchronization strategies, load
		balancing and parallel dynamic memory allocation.
contact:	Simo Juvaste <sjuva@cs.joensuu.fi>
updated:	1993/02/17

language:	Modula-3
package:	SRC Modula-3
version:	2.11
parts:		compiler(->C), runtime, library, documentation
author: 	?
location:	ftp pub/DEC/Modula-3/m3-*.tar.Z from gatekeeper.dec.com
    MSDOS:	ftp pub/DEC/Modula-3/contrib/m3pc* from gatekeeper.dec.com
description:	The goal of Modula-3 is to be as simple and safe as it
		can be while meeting the needs of modern systems
		programmers.  Instead of exploring new features, we
		studied the features of the Modula family of languages
		that have proven themselves in practice and tried to
		simplify them into a harmonious language.  We found
		that most of the successful features were aimed at one
		of two main goals: greater robustness, and a simpler,
		more systematic type system.  Modula-3 retains one of
		Modula-2's most successful features, the provision for
		explicit interfaces between modules.  It adds objects
		and classes, exception handling, garbage collection,
		lightweight processes (or threads), and the isolation
		of unsafe features.
conformance:	implements the language defined in SPwM3.
ports:		i386/AIX 68020/DomainOS Acorn/RISCiX MIPS/Ultrix 68020/HP-UX
		RS6000/AIX IBMRT/4.3 68000/NextStep i860/SVR4 SPARC/SunOS
		68020/SunOS sun386/SunOS Multimax/4.3 VAX/Ultrix
discussion:	comp.lang.modula3
contact:	Bill Kalsow <kalsow@src.dec.com>
updated:	1992/02/09

language:	Oberon2
package:	Oberon-2 LEX/YACC definition 
version:	1.4
parts:		parser(yacc), scanner(lex)
author: 	Stephen J Bevan <bevan@cs.man.ac.uk>
location:	ftp pub/oberon/tools/o2lexyac.tar.Z from ftp.psg.com
		or mail bevan@cs.man.ac.uk with Subject "b-server-request~
		and body "send oberon/oberon_2_p_v1.4.shar"
description:	A LEX and YACC grammar for Oberon 2 based on the one given
		in the listed reference.
reference:	The Programming Language Oberon-2
		H. M\"{o}ssenb\"{o}ck, N. Wirth
		Institut f\"{u}r Computersysteme, ETH Z\"{u}rich
		January 1992
		ftp Oberon/Docu/Oberon2.Report.ps.Z from neptune.inf.ethz.ch
restriction:	Portions of the source under copyright by U. Manchester.
status: 	un-officially supported
updated:	1992/07/06

language:	Oberon
package:	Ceres workstation Oberon System
version:	?
parts:		compiler
author: 	?
location:	ftp Oberon/? from neptune.ethz.ch
description:	file format is Oberon, binary header
status: 	The sources to the various _full_ implementations are indeed
		not available but the source to most of the complete Ceres
		workstation Oberon System, including NS32032 code generator but
		less low level system specific is available. This includes the
		complete Oberon compiler written in Oberon.
updated:	?

language:	Parallaxis
package:	parallaxis
version:	2.0
parts:		?, simulator, x-based profiler
author: 	?
location:	ftp pub/parallaxis from ftp.informatik.uni-stuttgart.de
description:	Parallaxis is a procedural programming language based
		on Modula-2, but extended for data parallel (SIMD) programming.
		The main approach for machine independent parallel programming 
		is to include a description of the virtual parallel machine 
		with each parallel algorithm.
ports:		MP-1, CM-2, Sun-3, Sun-4, DECstation, HP 700, RS/6000
contact:	? Thomas Braunl <braunl@informatik.uni-stuttgart.de> ?
updated:	1992/10/23

language:	Pascal
package:	p2c
version:	1.20
parts:		translator(Pascal->C)
author: 	Dave Gillespie <daveg@synaptics.com>
location:	ftp ? from csvax.cs.caltech.edu
description:	?
conformance:	supports ANSI/ISO standard Pascal as well as substantial 
		subsets of HP, Turbo, VAX, and many other Pascal dialects.
ports:		?
updated:	1990/04/13

language:	Pascal
package:	Pascal P4 compiler and interpreter
version:	? 1
parts:		compiler, assembler/interpreter, documentation
author: 	Urs Ammann, Kesav Nori, Christian Jacobi
location:	ftp pascal/* from ftp.cwi.nl
description:	A compiler for Pascal written in Pascal, producing an
		intermediate code, with an assembler and interpreter
		for the code.
reference:	Pascal Implementation, by Steven Pemberton and Martin
		Daniels, published by Ellis Horwood, Chichester, UK
		(an imprint of Prentice Hall), ISBN: 0-13-653-0311.
		Also available in Japanese.
contact:	Steven.Pemberton@cwi.nl
updated:	1993/07/05

language:	Pascal
package:	? iso_pascal ?
version:	?
parts:		scanner(lex), parser(yacc)
author: 	?
location:	comp.sources.unix archive volume 13
description:	?
updated:	?

language:	Pascal
package:	pasos2
version:	Alpha
parts:		Compiler, run-time library
author: 	Willem Jan Withagen <wjw@eb.ele.tue.nl>
location:	ftp pub/src/pascal/pasos2* from ftp.eb.ele.tue.nl
description:	a PASCAL/i386 compiler which generates 
		code for OS/2 and DOS. It uses EMX as DOS extender and
		GNU/GAS,  MASM or TASM as assembler.
updated:	1993/12/17

language:	Pascal
package:	ptc
version:	?
parts:		translator(Pascal->C)
author: 	?
location:	ftp languages/ptc from uxc.sco.uiuc.edu ?  (use archie?)
description:	?
contact:	?
updated:	?

language:	Turbo Pascal, Turbo C
package:	tptc
version:	?
parts:		translator(Turbo Pascal->Turbo C)
author: 	?
location:	ftp mirrors/msdos/turbopas/tptc17*.zip from wuarchive.wustl.edu
description:	(It does come with full source and a student recently used it
		as a start for a language that included stacks and queues as a
		built-in data type.
contact:	?
updated:	?

language:	Pascal
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

assemblers
-------------------------------------------------------------------------------
category:	assemblers

language:	various assembly
package:	GNU assembler (GAS)
version:	2.3
parts:		assembler, documentation
author: 	?
location:	ftp gas-*.tar.z from a GNU archive site
description:	Many CPU types are now handled, and COFF and IEEE-695 formats
		are supported as well as standard a.out.
bugs:		bug-gnu-utils@prep.ai.mit.edu
ports:		Sun-3, Sun-4, i386/{386BSD, BSD/386, Linux, PS/2-AIX},
		VAX/{Ultrix,BSD,VMS}
updated:	1993/11/11

language:	various assembly
package:	fas: Frankenstein Cross Assemblers
version:	?
parts:		base assembler, parser modules (yacc), documentation?
author: 	Mark Zenier
location:	ftp.njit.edu:/pub/msdos/frankasm/frankasm.zoo
		[Inform me of the other sites -Mark]
description:	A reconfigurable assembler package, especially suited for
		8-bit processors, consisting of a base assembler module and
		a yacc parser, for each microprocessor, to handle mnemonics and
		addressing.  Second party parser modules available from many
		sites.
requires:	YACC
updated:	?

language:	6502, Z80, 8085, 68xx
package:	?
version:	?
parts:		?
author: 	msmakela@cc.helsinki.fi and Alan R. Baldwin
location:	ftp ? from ccosun.caltech.edu
description:	I have enhanced a set of 68xx and Z80 and 8085 cross assemblers
		to support 6502. These assemblers run on MS-DOS computers or on
		any systems that support standard Kerninghan & Richie C, for
		example, Amiga, Atari ST and any "big" machines
updated:	1993/03/10

language:	6502
package:	?
version:	?
parts:		assembler, manual
author: 	Doug Jones <jones@cs.uiowa.edu> ?
location:	send mail to author
description:	Supports macro and conditional features, even, as well as 
		being usable for linkage editing of object files.
requires:	Pascal
updated:	?

language:	mc6809
package:	usim
version:	? 0.90
parts:		simulator, documentation
author: 	Ray P. Bellis <rpb@psy.ox.ac.uk>
location:	ftp /pub/mc6809/usim-* from ftp.cns.ox.ac.uk
		Alt.sources archive at FTP site:
		   wuarchive.wustl.edu in usenet/alt.sources/articles
		   files 10405.Z 10406.Z and 10407.Z
description:	a mc6809 simulator
updated:	? 1993/02/14

language:	mc6809
package:	6809, E-Forth
version:	?
parts:		assembler, simulator
author: 	Lennart Benschop <lennart@blade.stack.urc.tue.nl>
location:	alt.sources, 1993/11/03 <2b8i2r$j0e@tuegate.tue.nl>
description:	An assembler and simulator for the Motorola M6809 processor.
		Also included is a Forth interpreter, E-Forth written
		in 6809.
ports:		assembler: Unix, DOS; simulator: Unix
updated:	1993/11/03

language:	68HC11
package:	68HC11 simulator
version:	? 1
parts:		simulator
author: 	Ted Dunning <ted@nmsu.edu>
location:	ftp pub/non-lexical/6811/sim6811.shar from crl.nmsu.edu
description:	An opcode simulator for the 68HC11 processor.  Interrupts,
		hardware I/O, and half carries are still outside the loop.
		[Adding interrupts may require simulating at the clock phase
		level -Mark]
ports:		unix?, ms-dos
updated:	1993/07/28

language:	8051
package:	CAS 8051 Assembler
version:	1.2
parts:		assembler/linker, disassembler, documentation, examples
author: 	Mark Hopkins <mark@freenet.uwm.edu>
location:	ftp pub/8051/assem from lyman.pppl.gov
    Europe:	ftp pub/microprocs/MCS-51/csd4-archive/assem from nic.funet.fi
description:	experimental one-pass assembler for the 8051 with C-like
		syntax.  Most features of a modern assembler included except
		macros (soon to be added).  Other software tools and
		applications contained in /pub/compilers/8051/*.
requires:	ANSI-C compiler
ports:		MSDOS, Ultrix, Sun4 (contact author)
updated:	1993/07/22

language:	8051
package:	as31 - An 8031/8051 assembler.
version:	? 1
parts:		assembler, parser(yacc), documentation
author: 	Ken Stauffer <stauffer@cpsc.ucalgary.ca>
		(Theo Deraadt wrote the S-record output routines)
location:	comp.sources.misc volume 10
description:	Assembler with ability to produce a variety of object output
		formats, including S-records.
ports:		SUN 3 / SUN 4 (SunOS 4.0), Tandy 6000 (Xenix)
portability:	File I/O may require porting on non-Unixs.
updated:	1990/01/26

language:	Motorola DSP56000
package:	?
version:	1.1
parts:		assembler
author: 	Quinn Jensen <jensenq@qcj.icon.com>
location:	alt.sources archive or ftp ? from wuarchive.wustl.edu
description:	?
updated:	?

language:	Motorola DSP56001
package:	a56
version:	1.1
parts:		assembler
author: 	Quinn C. Jensen <jensenq@qcj.icon.com>
location:	alt.sources archive
description:	?
updated:	1992/08/10

language:	80486
package:	WDASM17B.ZIP - Windows 80486 Disassembler for Windows 3.1
version:	1.7b
parts:		disassembler
author: 	Eric Grass <S876795@UMSLVMA.UMSL.EDU>
location:	SIMTEL20, pd1:<msdos.windows3>
description:	An interactive 80486 disassembler for Windows 3.1.  Multiple
		options for formatting disassembly exist.
ports:		Windows3.1
portability:	Windows-specific
updated:	1993/06/29

language:	Assembly (SPARC)
package:	elfdis
version:	2.3
parts:		disassembler
author: 	Bruce Ediger <bediger@teal.csn.org>
location:	comp.sources.misc archives volume 42, issue 83
description:	An object code disassembler for SPARC which, unlike the native
		SPARC disassembler, uses the relocation and dynamic linking
		information in the Elf file.
updated:	1994/05/08

macro preprocessors
-------------------------------------------------------------------------------
category:	macro preprocessors
description:	These are tools that expand macros for another language.
iref:		(C) GNU CC
iref:		(C) lcc    [I assume lcc has a preprocessor? --ed]

language:	C preprocessor
package:	Decus cpp
version:	?
parts:		pre-processor
author: 	Martin Minow 
location:	included in the X11R5 distribution as contrib/util/cpp
description:	An almost-ANSI C preprocessor.	It is shipped with X11R5
		because some systems don't have a working cpp.
ports:		VMS (Vax C, Decus C), RSX-11M, RSTS/E, P/OS, and RT11,
		A/UX, Apollo Domain/IX 9.6, etc.
portability:	very high
updated:	?

language:	C-Refine, C++-Refine, *-Refine
package:	crefine
version:	3.0
parts:		pre-processor, documentation
author: 	Lutz Prechelt <prechelt@ira.uka.de>
location:	aquire from any comp.sources.reviewed archive
description:	C-Refine is a preprocessor for C and languages that
		vaguely resemble C's syntax.  It allows symbolic naming
		of code fragments so as to redistribute complexity and
		provide running commentary.
ports:		unix, msdos, atari, amiga.
portability:	high
updated:	1992/07/16

language:	m4
package:	pd/bsd m4
version:	?
parts:		interpreter, man page
author: 	Ozan Yigit <oz@sis.yorku.ca>, 
		Richard A. O'Keefe <ok@goanna.cs.rmit.OZ.AU>
location:	ftp from any 386BSD, NetBSD, or FreeBSD archive
description:	A macro preprocessor, more flexible than cpp
conformance:	?
updated:	1993/11/03

language:	m4
package:	GNU m4
version:	1.1
parts:		interperter, ?
author: 	Francois Pinard <pinard@iro.umontreal.ca>
location:	ftp m4-1.0.tar.Z from a GNU archive site
    Macintosh:	ftp pub/software/mac/src/mpw-c/* from nic.switch.ch.
description:	A macro preprocessor, more flexible than cpp.
		It copies its input to the output, expanding macros.  Macros
		are either built-in or user-defined.  `m4' has built-in
		functions for including files, running Unix commands, doing
		integer arithmetic, manipulating text in various ways,
		recursing, etc.  `m4' can be used either as a front-end to a
		compiler or as a macro processor in its own right.
conformance:	?
restriction:	GNU General Public License
updated:	1993/11/08

special purpose languages
-------------------------------------------------------------------------------
category:	special purpose languages
description:	Languages with very specific purposes that are the only free
		language in that niche (otherwise they would have a category)

language:	ADL (Adventure Definition Language)
package:	ADL
version:	?
parts:		interpreter
author: 	Ross Cunniff <cunniff@fc.hp.com>, Tim Brengle
location:	comp.sources.games archive volume 2
description:	An adventure language, semi-object-oriented with LISP-like
		syntax.  A superset of DDL.
updated:	?

language:	ASA
package:	Adaptive Simulated Annealing (ASA)
version:	1.53
parts:		?
author: 	Lester Ingber <ingber@cco.caltech.edu>
location:	ftp pub/ingber/? from ftp.caltech.edu  
description:	? Language interface to neural net simulator?
discussion:	asa-request@alumni.caltech.edu
updated:	1993/11/14

language:	ASN.1 (Abstract Syntax Notation One) (ITU TS X.208/ISO 8824)
package:	snacc (Sample Neufeld ASN.1 to C/C++ Compiler)
version:	1.1
parts:		compiler, runtime BER libraries, utility progs
author: 	Mike Sample <msample@cs.ubc.ca>
location:	ftp /pub/local/src/snacc/snacc1.1.tar.Z from cs.ubc.ca
description:	ASN.1 is a language used to describe data structures
		in a machine and implementation lang independent way.  Basic
		Encoding Rules (BER) provide a universal (contiguous) 
		representation of data values. ASN.1 & BER were designed to
		exchange data (with complex structure) over networks.
		OSI Application protocols such as X.400 MHS (email) and 
		X.500 directory and others protocols such as SNMP use ASN.1
		to describe the PDUs they exchange.
		Snacc compiles 1990 ASN.1 (including some macros) data 
		structures into C, C++ or type tables. The generated 
		C/C++ includes a .h file with the equivalent data struct
		and a .c/.C file for the BER encode and decode, print and
		free routines.
reference:	Michael Sample and Gerald Neufeld, "Implementing Efficient
		Encoders and Decoders for Network Data Representations",
		IEEE INFOCOM '93 Proceedings, Vol 3, pp 1143-1153, Mar 1993
		Michael Sample, "How Fast Can ASN.1 Encoding Rules Go?",
		M.Sc. Thesis, University of British Columbia, Apr 1993
restriction:	Compiler under GNU Public License. No restriction on libs
		and C/C++/tables generated by snacc.
		If you use it in a commercial product please let us know.
requires:	yacc (or bison), lex (or flex) and cc (ANSI or non-ANSI)
contact:	Barry Brachman <brachman@cs.ubc.ca> or <snacc-bugs@cs.ubc.ca>
updated:	1993/07/12

language:	Duel (a <practical> C debugging language)
package:	DUEL
version:	1.10
parts:		interpreter, stand-alone module, documentation, test suites
author: 	Michael Golan <mg@cs.princeton.edu>
location:	ftp duel/* from ftp.cs.princeton.edu
description:	DUEL acts as front end to gdb.	It implements a language
		designed for debbuging C programs.  It maily features 
		efficient ways to select and display data items.  It is
		normally linked into the gdb executable, but could stand
		alone.	It interprets a subset of C in addition to its 
		own language.
requires:	gdb
status: 	author is pushing the system hard.
updated:	1993/03/20

language:	IDL (Project DOE's Interface Definition Language)
package:	SunSoft OMG IDL CFE
version:	1.2
parts:		compiler front end, documentation
author: 	SunSoft Inc.
location:	ftp pub/OMG_IDL_CFE_1.2/* from omg.org
description:	OMG's (Object Management Group) CORBA 1.1 (Common
		Object Request Broker Architecture) specification
		provides the standard interface definition between
		OMG-compliant objects.	IDL (Interface Definition
		Language) is the base mechanism for object
		interaction.  The SunSoft OMG IDL CFE (Compiler Front
		End) provides a complete framework for building CORBA
		1.1-compliant preprocessors for OMG IDL.  To use
		SunSoft OMG IDL CFE, you must write a back-end; full
		instructions are included.  A complete compiler of IDL would
		translate IDL into client side and server side routines for
		remote communication in the same manner as the currrent Sun
		RPCL compiler. The additional degree of freedom that the IDL
		compiler front end provides is that it allows integration of 
		new back ends which can translate IDL to various programming
		languages.  Several companies including Sunsoft are building
		back ends to the CFE which translate IDL into target languages,
		e.g. Pascal or C++, in the context of planned CORBA-compliant
		products.
requires:	C++ 2.1 conformant C++ compiler
contact:	idl-cfe@sun.com
updated:	1993/05/04

language:	NeuDL
package:	NeuDL - Neural-Network Description Language
version:	0.2
parts:		NeuDL interpreter, translator (NewDL->C++), user manual,
		NeuDL paper, examples
author: 	Joey Rogers <jrogers@buster.eng.ua.edu>
location:	cs.ua.edu in /pub/neudl/NeuDLver02.tar.gz
description:	A prototype of a neural network description language with a
		C++ - like syntax currently limited to backpropagation neural
		nets.  There is enough flexibility in the language, though, to
		allow users to create dynamic neural net configurations.  The
		source is written in C++.
updated:	1994/05/23

language:	NewsClip ?
package:	NewsClip
version:	1.01
parts:		translator(NewsClip->C), examples, documentation
author: 	Looking Glass Software Limited but distributed by 
		ClariNet Communications Corp.
location:	?
description:	NewsClip is a very high level language designed for
		writing netnews filters.  It translates into C.
		It includes support for various newsreaders.
restriction:	Cannot sell the output of the filters.	Donation is hinted at.
status: 	supported for ClariNet customers only
contact:	newsclip@clarinet.com
updated:	1992/10/25

language:	PROGRESS
package:	PROGRESS
version:	RWTH 5.10
parts:		environment, interpreter, database, ?
author: 	Dr. Andy Schuerr <andy@i3.informatik.rwth-aachen.de>,
		Albert Zuendorf <albert@i3.informatik.rwth-aachen.de>
location:	send mail to authors
    sun4-bin:	ftp pub/unix/PROGRES/? from ftp.informatik.rwth-aachen.de
description:	PROGRES is an integrated environment for a very high level
		programming language which has a formally defined semantics
		based on "PROgrammed Graph Rewriting Systems". This language
		supports the following programming paradigms/purposes:	1)
		Structurally object-oriented specification of attributed graph
		structures with multiple inheritance hierarchies and types of
		types (for parametric polymorphy).  2) Declarative/relational
		specification of derived attributes, node sets, binary
		relationships (directed edges), and Boolean constraints.  3)
		Rule-oriented/visual specification of parameterized graph
		rewrite rules with complex application conditions.  4)
		Nondeterministic & imperative programming of composite graph
		transformations (with built-in backtracking and cancelling
		arbitrary sequences of failing graph modifications).
		Therefore, PROGRES may be used as 1) a very high level
		programming language for implementing abstract data types with
		a graph-like internal structure, 2) a visual database
		programming language for the graph-oriented database system
		GRAS (which is available as free software under the GNU license
		conditions), 3) a rule-oriented language for rapid prototyping
		nondeterministically specified data/rule base transformations.
		Furthermore, PROGRES is an almost statically typed language
		which additionally offers "down casting" operators for runtime
		checked type casting/conversion (in order to avoid severe
		restrictions concerning the language's expressiveness).  
		PROGRESS is meant to be used with GRAS, which is also available
updated:	1993/11/02

language:	Tiny
package:	Omega test, Extended Tiny
version:	3.2.2
parts:		translator(fortran->tiny), tiny interpreter?, analysis tools
author: 	William Pugh <pugh@cs.umd.edu> and others
location:	ftp pub/omega from ftp.cs.umd.edu
description:	The Omega test is implemented in an extended version of
		Michael Wolfe's tiny tool, a research/educational tool
		for examining array data dependence algorithms and
		program transformations for scientific computations.
		The extended version of tiny can be used as a
		educational or research tool.  The Omega test: A system
		for performing symbolic manipulations of conjunctions
		of linear constraints over integer variables.  The
		Omega test dependence analyzer: A system built on top
		of the Omega test to analyze array data dependences.
contact:	omega@cs.umd.edu
updated:	1992/11/13

language:	Extended Tiny
package:	Extended Tiny
version:	3.0 (Dec 12th, 1992)
parts:		programming environment, dependence tester, tests
		translator(Fortran->tiny), documentation, tech. reports
author: 	original author: Michael Wolfe <cse.ogi.edu>,
		extended by William Pugh et al. <pugh@cs.umd.edu>
location:	ftp pub/omega from cs.umd.edu
description:	A research/educational tool for experimenting with
		array data dependence tests and reordering transformations.
		It works with a language tiny, which does not have procedures,
		goto's, pointers, or other features that complicate dependence
		testing. The original version of tiny was written by Michael
		Wolfe, and has been extended substantially by a research group
		at the University of Maryland. Michael Wolfe has made further
		extensions to his version of tiny.
ports:		Any unix system (xterm helpful but not required)
contact:	Omega test research group <omega@cs.umd.edu>
updated:	1993/01/23

language:	SQL
package:	_lex & yacc_ by Levine, Mason & Brown published by O'Reilly
version:	?
parts:		book, grammar
author: 	Levine, Mason & Brown
location:	buy the book, or ftp published/oreilly/nutshell/lexyacc/? 
		from ftp.uu.net.
description:	In _lex & yacc_, by Levine, Mason & Brown an SQL parser
		is included as an example grammar
updated:	?

language:	SQL
package:	MultiCal System
version:	?
parts:		?
author: 	Richard Snodgrass?
location:	ftp tsql/multical from FTP.cs.arizona.edu.
description:	[Anyone care to write a description? - ed]
restriction:	public domain, freely available
contact:	rts@cs.arizona.edu
updated:	?

language:	ModSim - U. S. Army ModSim compiler
package:	USAModSim
version:	1.0
parts:		compiler(->C), compilation manager, browser, library, 
		database interface language, documentation
author: 	?
location:	ftp from max.cecer.army.mil in /ftp/isle
description:	ModSim is a general-purpose, block-structured, object-
		oriented programming language with built in support
		for Simulation. Its "parent languages" are Modula-2 and
		Simula. It supports multiple inheritance, templates,
		reference types, polymorphism, and process-oriented
		simulation with synchronous and asynchronous activities
		using explicit simulation time.
		The documentation is extensive (>300 pages) and very good.
ports:		SPARC/SunOS, Silicon Graphics.
		According to the Doc, there is a DOS-Version (not found
		on the server.
contact:	Charles Herring <herring@lincoln.cecer.army.mil>
updated:	1993/12/29

natural languages
-------------------------------------------------------------------------------
category:	natural languages
description:	These are tools that interact with human languages.

language:	natural languages 
package:	Pleuk grammar development system
version:	1.0
parts:		shell, examples, documentation
author: 	Jo Calder <jcalder@cs.sfu.ca>, Kevin Humphreys 
		<kwh@cogsci.ed.ac.uk>, Chris Brew <chrisbr@cogsci.ed.ac.uk>,
		Mike Reape <mreape@cs.tcd.ie>
location:	ftp from hostname ai.uga.edu: /ai.natural.language/
description:	A shell for grammar development, handles various grammatical
		formalisms.
requires:	SICStus Prolog version 2.1#6 or later, and other programs
		readily available from the public domain.
contact:	pleuk@cogsci.ed.ac.uk.	
updated:	1993/06/18

language:	natural languages
package:	proof
version:	?
parts:		parser, documentation
author: 	Craig R. Latta <latta@xcf.Berkeley.EDU>
location:	ftp src/local/proof/* from scam.berkeley.edu
description:	a left-associative natural language grammar scanner
bugs:		proof@xcf.berkeley.edu
ports:		Decstation3100 Sun-4
discussion:	proof-request@xcf.berkeley.edu ("Subject: add me")
updated:	1991/09/23

curiosities
-------------------------------------------------------------------------------
category:	curiosities
description:	These are the languages and tools that I could not fit into one
		of the other categories.   I am quite willing to reclassify
		these if provided with a rational way to do so.

language:	a1 (Address 1 code)
package:	a1 code interpreter
version:	? 1
parts:		interpreter, examples
author: 	Matthew Newhook <matthew@engr.mun.ca>
location:	garfield.cs.mun.ca:/pub/a1/a1.tar.Z
description:	An address 1 code interpreter used to test compiler output.
requires:	gcc 2.4.2 or higher
portability:	Ports to machine without memory segment protection unverified.
updated:	1993/06/02

language:	INTERCAL
package:	C-INTERCAL
version:	0.9
parts:		compiler, library, documentation
author: 	Eric S. Raymond <esr@snark.thyrsus.com>
location:	ftp pub/intercal/intercal0.9.* from sequoia.lle.rochester.edu
description:	INTERCAL is possibly the most elaborate and long-lived joke
		in the history of programming languages.  It was first designed
		by Don Woods and Jim Lyons in 1972 as a deliberate attempt
		to produce a language as unlike any existing one as possible.
		The manual, describing features of horrifying uniqueness,
		became an underground classic.	ESR wrote C-INTERCAL in 1990
		as a break from editing _The_New_Hacker's_Dictionary_, adding
		to it the first implementation of COME FROM under its own name.
		The compiler has since been maintained and extended by an
		international community of technomasochists.  The distribution
		includes extensive documentation and a program library.
		C-INTERCAL is actually an INTERCAL-to-C source translator which
		then calls the local C compiler to generate a binary.  The code
		is thus quite portable.
contact:	Steve Swales <steve@bat.lle.rochester.edu>
updated:	1993/05/20

language:	Logo
package:	logo
version:	4
parts:		interpreter
author: 	?
location:	comp.sources.unix archive volume 10
description:	?
updated:	?

language:	Logo
package:	Berkeley Logo
version:	3.0
parts:		interpreter
author: 	Brian Harvey <bh@anarres.CS.Berkeley.EDU>
location:	ftp pub/ucblogo/* from anarres.cs.berkeley.edu
description:	+ Logo programs are compatible among Unix, PC, and Mac.
		+ "richer" than MswLogo?
		- pretty slow.
		- doesn't do anything fancy about graphics.  (One turtle.)
ports:		unix, pc, mac
updated:	1993/08/06

language:	Logo
package:	MswLogo
version:	3.5
parts:		interpreter
author: 	George Mills <mills@athena.lkg.dec.com>
location:	ftp pub/comp.lang.logo/programs/mswlogo from cher.media.mit.edu
		Source may require emailing George Mills.
description:	A windows front-end for Berkeley Logo
bugs:		George Mills <mills@athena.lkg.dec.com>
ports:		MS Windows 3.x
status: 	activly developed
updated:	1993/10/15

language:	Loglan'82
package:	Loglan82
version:	?
parts:		Cross-Compiler (->C)
author: 	?
location:	ftp pub/Loglan82 from infpc1.univ-pau.fr
description:	The academic community has a need for one language which
		enables to teach all elements of object programming: classes &
		objects, coroutines, processes (in Loglan'82 processes are
		objects which are able to act in parallel), inheritance,
		exception handling, dynamic arrays etc.
		Loglan'82 offers the complete sets of programming tools used in
		object and modular and structural programming. It is suggested
		to use it duringthe first two years of teaching and afterwards
		too.
		Loglan'82 supports other styles of programming e.g. programming
		by rules, functional programming etc.
restriction:	GNU General Public License
requires:	?
announcements:	send "SUBSCRIBE loglan82 <your_first_name> <your_name>" 
		to loglan82-request@crisv1.univ-pau.fr
contact:	Andrzej.Salwicki@univ-pau.fr
updated:	1994/2/15

unable to classify due to lack of knowledge
-------------------------------------------------------------------------------
category:	unable to classify due to lack of knowledge
description:	[Please help. --ed]

contact:	Jack Hsu <tcl-archive@barkley.berkeley.edu>
language:	FMPL of Accardi
package:	FMPL interpreter
version:	1
parts:		interpreter, documentation
author: 	Jon Blow <blojo@xcf.berkeley.edu>
location:	ftp src/local/fmpl/* from xcf.berkeley.edu
description:	FMPL is an experimental prototype-based object-oriented 
		programming language developed at the Experimental Computing
		Facility of the University of California, Berkeley.
		+ lambda-calculus based constructs.
		+ event-driven (mainly I/O events)
updated:	1992/06/02

language:	Common Lisp
package:	Garnet
version:	2.2
parts:		user interface builder
author: 	The Garnet project
location:	ftp /usr/garnet/garnet from a.gp.cs.cmu.edu
description:	Garnet is a user interface development environment for Common
		Lisp and X11.  It helps you create graphical, interactive
		user interfaces for your software.  Garnet is a large scale
		system containing many features and parts including a custom
		object-oriented programming system which uses a
		prototype-instance model.  It includes postscript support,
		gester recognition, and Motif emulation.
contact:	Brad_Myers@bam.garnet.cs.cmu.edu
updated:	October 15, 1993

language:	Garnet
package:	Multi-Garnet
version:	2.1
parts:		?
author: 	Michael Sannella <sannella@cs.washington.edu>
location:	ftp /usr/garnet/alpha/src/contrib/multi-garnet 
		from a.gp.cs.cmu.edu
description:	better contstraint system for Garnet ??
updated:	1992/09/21

language:	Isabelle
package:	Issabelle-93
version:	?
parts:		?
author: 	Written by Lawrence C Paulson and Tobias Nipkow?
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp/ops5* from
		ftp.cs.cmu.edu
description:	Isabelle is a generic theorem prover.  New logics are
		introduced by specifying their syntax and rules of inference.
		Proof procedures can be expressed using tactics and tacticals.
		The latest version, Isabelle-93, is significantly faster than
		Isabelle-92 and has several other improvements.
requires:	?
contact:	Larry.Paulson@cl.cam.ac.uk
		Tobias.Nipkow@informatik.tu-muenchen.de?
updated:	1993/12/20

-------------------------------------------------------------------------------
references
-------------------------------------------------------------------------------

name:		The Apple II Programmer's Catalog of Languages and Toolkits
version:	2.8
author: 	Larry W. Virden <lvirden@cas.org>
location:	posted to comp.sys.apple2, comp.lang.misc; ftp from
		idiom.berkeley.ca.us
description:	A survey of language tools available for the Apple ][.
updated:	1993/11/28

name:		Catalog of embeddable Languages.
version:	2
author: 	Colas Nahaboo <colas@bagheera.inria.fr>
location:	posted to comp.lang.misc,comp.lang.tcl; 
		ftp pub/EmbeddedInterpretersCatalog.txt from avahi.inria.fr
description:	Descriptions of languages from the point of view of 
		embedding them.
updated:	1992/07/09

name:		Compilers bibliography
version:	1.5
author: 	Charlie A. Lins
location:	ftp pub/oberon/comp_bib_1.4.Z from ftp.apple.com
description:	It includes all the POPLs, PLDIs, Compiler Construction, 
		TOPLAS, and LOPAS.  Plus various articles and papers from 
		other sources on compilers and related topics.
updated:	1992/10/31

name:		haskell-status
version:	?
author: 	Simon Peyton Jones <simonpj@dcs.glasgow.ac.uk>
location:	posted occaisionally to ???  
description:	A report, detailing the current features and status of
		all the implementations of Haskell.
updated:	?

name:		Language List
version:	2.1
author: 	Bill Kinnersley <billk@hawk.cs.ukans.edu>
location:	posted regularly to comp.lang.misc; 
		ftp pub/comp.compilers/LanguageList* from primost.cs.wisc.edu;
		ftp pub/compilers-list/LanguageList* from idiom.berkeley.ca.us
description:	Descriptions of almost every computer language there is.
		Many references to available source code.
updated:	1993/09/11

name:		Numerical Analysis Using Non-Procedural Paradigms
version:	published thesis
author: 	Steve Sullivan <sullivan@teal.csn.org>
location:	send email to author; or an ascii version of the comparision
		can be found in the comp.compilers archives, posted 1993/11/16
description:	A thesis, that among other things, compares and benchmarks
		C++, Modula-3, Standard ML, Haskell, Sather, and Common Lisp
updated:	1993

name:		The Lisp FAQs
version:	1.30
author: 	Mark Kantrowitz <mkant+@cs.cmu.edu>
location:	posted regularly to comp.lang.lisp,news.answers,comp.answers
description:	Details of many lisps and systems written in lisps 
		including many languages not covered elsewhere.
updated:	1993/02/08

name:		Survey of Interpreted Languages
version:	?
author: 	Terrence Monroe Brannon <tb06@CS1.CC.Lehigh.ED>
location:	Posted to comp.lang.tcl,comp.lang.misc,comp.lang.perl,
		gnu.emacs.help,news.answers; or ftp 
		pub/gnu/emacs/elisp-ar*/pack*/Hy*Act*F*/survey-inter*-languages
		from archive.cis.ohio-state.edu.
description:	Detailed comparision of a few interpreters: Emacs Lisp, 
		Perl, Python, and Tcl.
updated:	?

-------------------------------------------------------------------------------
archives
-------------------------------------------------------------------------------

language:	Ada
package:	AdaX
location:	ftp pub/AdaX/* from falcon.stars.rosslyn.unisys.com
description:	an archive of X libraries for Ada.  Includes Motif
		[note, I chose this server out of many somewhat randomly.
		Use archie to find others --ed]
contact:	?

language:	APL, J
package:	APL, J, and other APL Software at Waterloo
location:	ftp languages/apl/index from watserv1.waterloo.edu
contact:	Leroy J. (Lee) Dickey <ljdickey@math.waterloo.edu>

language:	Assembler (Motorola)
location:	ftp bode.ee.ualberta.ca : /pub/dos/motorola
description:	An archive of development software and tools for the
		Motorola microcontroller series.  Includes assemblers,
		a C compiler (6809), and applications.	Comes mainly
		from the Austin Texas Motorola BBS.

language:	Assembler (Various)
package:	The Beowulf archive?
location:	hpcsos.col.hp.com : /misc/ns32k/beowulf
description:	An archive of assemblers for various 8-bit microcontrollers

language:	Assembler, Forth (8051)
package:	The Siemens 8051 archive
location:	ftp pub/8051/signetics-bbs from lyman.pppl.gov
description:	An archive for development software and tools for the 8051
		microcontroller.
contact:	jsm@phoenix.princeton.edu

language:	Assembler (8051)
package:	The CAS archive.
location:	lyman.pppl.gov : /pub/8051/siemens-bbs
		nic.funet.fi: /pub/microprocs/MCS-51/csd4-archive
description:	Another archive for development software and tools for the 8051
		microcontroller.  May be converted into a general
		microprocessor archive in the future.
language:	C, C++, Objective-C, yacc, lex, postscript, 
		sh, awk, smalltalk, sed
package:	the GNU archive sites
location:	NOTE:	Many gnu files are now compressed with gzip.  You can
		tell a gzip'ed file because it has a lower-case .z or
		.gz rather than the capital .Z that compress uses.
		Gzip is available from these same archives
		ftp pub/gnu/* from prep.ai.mit.edu
    USA:	ftp mirrors4/gnu/* from wuarchive.wustl.edu
		ftp pub/src/gnu/* from ftp.cs.widener.edu
		ftp gnu/* from uxc.cso.uiuc.edu
		ftp mirrors/gnu/* from col.hp.com
		ftp pub/GNU/* from gatekeeper.dec.com
		ftp packages/gnu/* from ftp.uu.net
    Japan:	ftp ? from ftp.cs.titech.ac.jp
		ftp ftpsync/prep/* from utsun.s.u-tokyo.ac.jp
    Australia:	ftp gnu/* from archie.au
    Europe:	ftp gnu/* from src.doc.ic.ac.uk
		ftp pub/GNU/*/* from ftp.informatik.tu-muenchen.de [re-org'ed]
		ftp pub/gnu/* from ftp.informatik.rwth-aachen.de
		ftp pub/gnu/* from nic.funet.fi
		ftp pub/gnu/* from ugle.unit.no
		ftp pub/gnu/* from isy.liu.se
		ftp pub/gnu/* from ftp.stacken.kth.se
		ftp pub/gnu/* from sunic.sunet.se [re-org'ed]
		ftp pub/gnu/* from ftp.win.tue.nl
		ftp pub/gnu/* from ftp.diku.dk
		ftp software/gnu/* from ftp.eunet.ch
		ftp gnu/* from archive.eu.net [re-org'ed]
description:	There are many sites which mirror the master gnu archives
		which live on prep.ai.mit.edu.	Please do not use 
		the master archive without good reason.
restriction:	Most GNU programs are CopyLeft'ed.  That means that they 
		are distributed under the terms of the GNU General
		Public License or GNU Library General Public License.
		The CopyLeft is only a concern if you want to use
		actual GNU code in your program.  Using Gcc or any of
		the other tools is completely safe from a copyright
		point-of-view with the sole exception of bison which
		includes GNU code in its output.  If you use a GNU
		library, you must supply an unlinked version of your
		program.

language:	Forth
location:	anonymous@asterix.inescn.pt[192.35.246.17]:pub/forth
description:	Forth implementations and programs
contact:	Paulo A. D. Ferreira <?>

language:	Haskell
location:	anonymous@ftp.cs.chalmers.se:pub/haskell/library 
		anonymous@nebula.cs.yale.edu:pub/haskell/library
		anonymous@ftp.dcs.glasgow.ac.uk:pub/haskell/library
description:	An archive of Haskell and Gofer programs

language:	lisp
package:	MIT AI Lab archives
location:	ftp pub/* from ftp.ai.mit.edu
description:	archive of lisp extensions, utilities, and libraries
contact:	?

language:	lisp
package:	Lisp Utilities collection
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp from ftp.cs.cmu.edu
description:	???
contact:	cl-utilities-request@cs.cmu.edu

language:	Scheme
package:	The Scheme Repository
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	an archive of scheme material including a bibliography, 
		the R4RS report, sample code, utilities, and implementations.
contact:	Ozan S. Yigit <scheme@nexus.yorku.ca>

language:	Smalltalk
package:	Manchester Smalltalk Goodies Library
location:	ftp uiuc/st*/* from st.cs.uiuc.edu
    UK: 	ftp uiuc/st*/* from mushroom.cs.man.ac.uk
description:	a large collection of libraries for smalltalk.
		Created by Alan Wills, administered by Mario Wolczko.
contact:	goodies-lib@cs.man.ac.uk

language:	Tcl
package:	Tcl/Tk Contrib Archive
location:	ftp tcl/* from barkley.berkeley.edu
description:	An archive of Tcl/tk things.
contact:	Jack Hsu <tcl-archive@barkley.berkeley.edu>

language:	TeX
package:	CTAN (Comprehensive TeX Archive Network
location:	ftp ~ftp/tex-archive/* from ftp.shsu.edu
    Europe:	ftp ? from ftp.uni-stuttgart.de 		
description:	A large archive site of most all things TeX-related, including
		literate programming tools such as WEB and derivatives.

-------------------------------------------------------------------------------
cross-reference
-------------------------------------------------------------------------------
These are additional categories.  When an implementation is in a category
rather than a language, the language is indicated in (parenthesis).

category:	command shells
description:	These are the languages that treat bare words as programs
		to execute.
lref:		csh
lref:		ERGO-Shell
lref:		es
lref:		Korn Shell
lref:		Q
lref:		rc
lref:		ssh
lref:		Z-shell

category:	compiler frontend/backend glue
description:	These are the languages used to glue semantic analysers to
		code generators.
lref:		C	-- C is often used as an intermediate step
lref:		RTL
lref:		lcc	-- [what is the lcc intermediate code called? --ed]
lref:		SUIF

category:	database
description:	These are the languages that are specifically designed
		for database access.
lref:		Aditi
lref:		CORAL
lref:		GNU E
lref:		PROGRESS

category:	distributed
description:	These are languages that include constructs that specifically 
		support distributed programming.
lref:		Hermes
lref:		Glish
iref:		(TCL) TCL-DP

category:	dynamic foriegn functions
description:	These tools can dynamically load C code at run-time.
lref:		CommonLisp
lref:		Python
iref:		(Perl) Dylperl
iref:		(Scheme) Elk

category:	editor construction
description:	These are languages that are embedded in editors
lref:		IVY
lref:		S-Lang
iref:		(Lisp) elisp

category:	educational
description:	These are languages that are either designed for teaching,
		or are often used that way.
lref:		ABC
lref:		C
lref:		Logo
lref:		O'small
lref:		Pascal
lref:		Scheme

category:	embeddable
description:	These tools can be used as scripting languages for programs
		written in C.  They are all interpreted.
lref:		IVY
lref:		Perl5
lref:		Python
lref:		S-Lang
lref:		TCL
iref:		(C) ae
iref:		(Scheme) Elk
iref:		(Scheme) siod

category:	glue
description:	These are languages that are designed to tie other programs
		and libraries together.  
cref:		dynamic foriegn functions
cref:		command shells
lref:		Glish
lref:		REXX

category:	graphic user interface support
description:	These are the languages that have support for writing 
		gui programs. 
cref:		C variants
lref:		CommonLisp
lref:		LIFE
lref:		Python
lref:		(Scheme) Ezd
iref:		(Caml Light) Caml Light
iref:		(Prolog) PI
iref:		(Prolog) XWIP
iref:		(Scheme) Elk
iref:		(Scheme) STk
iref:		(TCL) Tk
iref:		(TCL) Wafe

category:	interactive
description:	These are the languages that are meant to be used 
		interactively.	[I'm sure there are more.  Tell me! --ed]
lref:		Caml
lref:		CommonLisp
lref:		Q
iref:		(C) ae

category:	reflective
description:	from Rainer Joswig (rainer@ki6.informatik.uni-hamburg.de) :
		To make it short: Reflective Languages have access to their own
		implementation. One can ask about the state of the running
		system and/or change aspects of the language.
lref:		ABCL ???
lref:		ABCL/1
lref:		MeldC
lref:		3-Lisp
lref:		CLOS with MOP (Meta Object Protocol)

category:	terminal graphics support
description:	These are languages that can access curses, or have an
		equivalent.
cref:		C variants
lref:		ici
iref:		(Common Lisp) CLISP
iref:		(Perl) curseperl
iref:		Python
iref:		(Scheme) scm

category:	text manipulation
description:	These languages have very high-level features for 
		manipulating text.  
cref:		compiler generators and related tools
lref:		Icon
lref:		Lex
lref:		Perl
lref:		Snobol4

category:	unix tool building
description:	These are languages that are appropriate for building tools
		in a Unix environment.	To be included, direct access to 
		most system features is required.
lref:		C
lref:		ici
lref:		Perl
lref:		Python
lref:		TCL

category:	window manager construction
description:	These are languages that are built into window managers
iref:		(Lisp) WOOL
-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
};
#else /* BIG_CONFIG */
static struct ResDesc resource[] = {
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {

.\" Copyright (c) 1993, 1994 by Todd Austin
.\" See section COPYING for conditions for redistribution.
.TH Tetra 1 "Last Update: June 7, 1993" "Wisconsin Arch. Tools" "Wisconsin Arch. Tools"

.SH NAME
Tetra \- fine-grain parallelism analyzer

.SH SYNOPSIS
\fIprog\fR.tetra \fIparam-file\fR \fIexec-file\fR \fItrace-file\fR

.SH DESCRIPTION
\fITetra\fR is a tool for evaluating serial program performance under
the resource and control constraints of fine-grain parallel
processors.  \fITetra\fR's primary advantage to the architecture
designer is its ability to quickly generate performance metrics for
yet to be designed architectures.  All the user needs to specify is
the capabilities of the architecture (e.g., number of functional
units, issue model, etc.), rather than its implementation (see Section
\fBCONFIGURATION\fR for more details).

\fITetra\fR employs a four step process.  First, it extracts a
(somewhat) canonical form of the program from a serial instruction
trace generated by QPT.  It then applies control and resource
constraint scheduling to produce an execution graph.  The global
control and resource constraint scheduling is directed by a processor
model specification supplied to the program (again, see Section
\fBCONFIGURATION\fR for more details on configuring \fITetra\fR).
Finally, the resulting execution graph is analyzed to evaluate the
serial program's performance under the specified architectural model.
Some early experiences with a preliminary version of this tool are
documented in [1], the internals of this tool are documented in [2].

The control scheduler supports scheduling based on both the control
flow graph and the less restrictive control dependence graph.  Both
control scheduling models also support speculation using predefined or
user installed branch predictors.  The resource scheduler supports
five scheduling heuristics (of varying cost, performance, and
capability) which limit the amount of processor (functional unit) and
memory resources (physical renaming store) available when building the
execution graph.

Once scheduled, \fITetra\fR provides a number of ways to analyze the
program's performance.  These include parallelism profiles, storage
demand profiles, data sharing distributions, data lifetime analysis,
and control distance (branch, loop, and call stack) distributions.
All reporting mechanisms are detailed in the \fBCONFIGURATION\fR
section.

The software is very modular, allowing it to be easily used as a test
bed for new ideas.  See Section \fBMODULES\fR for a description of all
modules used in the \fITetra\fR source distribution.  \fITetra\fR is
currently only targeted for MIPS-based systems, but porting it to
other architectures supported by QPT requires very little coding (just
a few constants and an instruction dependency decoder).  The
complexity of porting \fITetra\fR to architectures not supported by
QPT depends on the level of functionality supported by the new host's
tracer.

.SH INSTALLATION
To install \fITetra\fR, first unpack the distribution.  The method of
doing this really depends on the distribution you get.  Next, configure
the "Makefile" for the proper compilation environment.  Currently,
\fITetra\fR can be compiled only on MIPS Ultrix machines (DECstations)
using either MIPS "cc" compiler or AT&T C++ compiler version 3.0.1 or
later versions.  If you compile with the AT&T compiler, you can
optionally get run time checking for array and pointer accesses using
the Safe-C macros (the file README.safec describes these macros).
Select the proper compiler by editing the variables at the top of the
"Makefile".

Next, \fITetra\fR needs to be targeted to an implemented architecture.
Currently only the MIPS architecture is supported.  Type "make mips"
to set up \fITetra\fR for MIPS.

Next, add the variable TETRA_DIR to your environment.  This is done
differently depending on your default login shell.  For example, with
"csh" or "tcsh" the variable is set with a line in the file
"~/.cshrc":
.EX
setenv TETRA_DIR /var/home/austin/research/tetra
.EE

Next, configure \fITetra\fR by editing (or creating) the "config.h".
There are many valid examples in the "config/" directory, also see
Section \fBCONFIGURATION\fR for complete details on \fITetra\fR
configuration.

Next, compile \fITetra\fR by executing the command "make".  This
produces the library "tetra.a" which must subsequently be linked to
the \fIQPT\fR regeneration program (see Section \fBLINKING\fR).

To summarize, installation involves the following steps:
.EX
- unpack the distribution
- edit the variables in "Makefile" to reflect your compile
  environment
- type "make mips" (to set up Tetra for the MIPS/Ultrix
  architecture)
- add the TETRA_DIR environment variable to your environment
- config Tetra by modifying, or creating "config.h"
- type "make" to make the "tetra.a" library
- read the rest of this man page
.EE

There are also a number of useful utilities (currently undocumented,
except for a short description in Section \fBMODULES\fR) in the
"utils/" directory.  Doing a "make" in that directory will build
all of the utilities.  Some of the scripts in the "utils/" directory
will not operate properly until this is done.  Also, depending on your
configuration, you might have to change some of the variables at the
top of the shell scripts.

.SH CONFIGURATION
\fITetra\fR is configured via compilation.  That is, to add certain
options you must recompile the distribution.  This ensures that
\fITetra\fR executes as quickly as possible, since no run time checks
are used to determine which options are running.  Two files affect the
configuration.  "config.h" is the compile time configuration, and
"\fIprog\fR.param" is a program specific run time configuration.  This
section details both files.

To turn on and off options in the "config.h" file, change #undef's to
#define's or change the #define's to #undef's.  Some options are
mutually exclusive, if you request an impossible configuration, you
will get a syntax error in the file "config-check.h".  The line with
the syntax error will indicate what is wrong with the configuration.
Be sure to re-compile and re-link after changing "config.h", this is
not necessary when changing "\fIprog\fR.param".  There are numerous
examples of valid "config.h" files in the directory "config/".

Some options will require run time parameters.  These are supplied
through the ".param" file.  This file contains lines in the form of:
.EX
# this is a comment
variable = value
.EE
Comments can be inserted by putting a '#' in the leftmost column of
the line.  Variables are set via assignment; they and their input
value formats are detailed below.

The following is an example input file named "cc1.param":
.EX
#
# GNU cc1 parameter file
#
maxInsts = 250000000
fuDistParam = 0:2048:1
dsDistParam = 0:2048:1
storageExParam = 0:2048:1
lifeExParam = 0:2048:1
brDistParam = 0:2048:1
loopDistParam = 0:2048:1
callDistParam = 0:2048:1
totalFUs = 10
fuRHistParam = 0:2048:1:0
pTraceParam = 0:2048:1
loopLenParam = 0:2048:1
loopDepthParam = 0:1024:1
loopInstParam = 0:1024:1
callDepthParam = 0:1024:1
callInstParam = 0:1024:1
frameSizeParam = 0:8192:4
stackDepthParam = 0:32768:4
mallocSizeParam = 0:4096:10
.EE

The following listed options are manipulated via the "config.h" file
(their required ".param" inputs are also detailed below).

There are two input options that do not have corresponding "config.h"
options.   These are:

.IP maxInsts
Set "maxInsts" in the parameter input file to the maximum number of
instructions analyzed.  After reaching this value, all statistics are
output and the tetra process terminates.  This can also be
accomplished via the USR1 signal (see Section \fBSIGNALS\fR).  The
default value of this option is "ULONG_MAX".

.IP syscallsStall
Set "syscallsStall" to a non-zero value to observe conservative system
call assumption during execution, otherwise, optimistics system call
assumptions are used.  See [1] or [2] for more details.  The default
value of this input is "1".

.PP
The following options control the metrics generated:

.IP FU_STATS
Define FU_STATS if you want to record the functional unit resource
demand profiles (parallelism profiles).  FU_STATS requires the input
"fuDistParam" to be set to the desired profile distribution size.  This is
in the form "base:slots:grain", where "base" is the first level to be
recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the file "fuTotal.Stats".
.IP FULL_FU_STATS
Define FULL_FU_STATS to include all the functional unit statistics.
Collecting per-functional unit type statistics is very memory
expensive; otherwise, only aggregate functional unit stats will be
shown, depending on the number of functional units, using FU_STATS can
save a lot of memory and some processing resources.  FULL_FU_STATS
requires the input "fuDistParam" to be set to the desired profile
distribution size.  This is in the form "base:slots:grain", where
"base" is the first level to be recorded, "slots" is the total number
of buckets in the profile distribution, and "grain" is the number of
levels contained in each bucket.  The results are written to the files
"fuInteger.Stats", "fuFPoint.Stats", "fuMemory.Stats",
"fuControl.Stats", and "fuTotal.Stats".
.IP PHYSICAL_EXACT_STATS
Define PHYSICAL_EXACT_STATS if you want to generate the physical
storage usage profiles (exact lifetime form), exact lifetime
statistics only show storage being needed from the time of allocation
to the time of last reference.  PHYSICAL_EXACT_STATS requires the
input "storageExParam" to be set to the desired profile
distribution size.  This is in the form "base:slots:grain", where
"base" is the first level to be recorded, "slots" is the total number
of buckets in the profile distribution, and "grain" is the number of
levels contained in each bucket.  The results are written to the files
"regExDemand.Stats", "memExDemand.Stats", and "totalExDemand.Stats".
.IP SHARING_STATS
Define SHARING_STATS if you want to measure the degree of sharing
statistics by register, memory, and aggregate.  The degree of sharing
of a value is the total number of times that it passed to other
computations.  SHARING_STATS requires the input "dsDistParam" to be
set to the desired frequency distribution size.  This is in the form
"base:slots:grain", where "base" is the first level to be recorded,
"slots" is the total number of buckets in the profile distribution,
and "grain" is the number of levels contained in each bucket.  The
results are written to the files "dsReg.Stats", "dsMem.Stats", and
"dsTotal.Stats".
.IP LIFE_EXACT_STATS
Define LIFE_EXACT_STATS if you want to generate the physical storage
lifetime distribution (exact lifetime form).  Exact lifetime
statistics only show storage being needed from the time of allocation
to the time of last reference.  LIFE_EXACT_STATS requires the input
"lifeExParam" to be set to the desired frequency distribution size.  This
is in the form "base:slots:grain", where "base" is the first level to
be recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the files "regExLife.Stats",
"memExLife.Stats", and "totalExLife.Stats".
.IP DEP_DIST_OMR
Define DEP_DIST_OMR to include only the most restrictive dependence
(that is, the dependence connected to the immediately preceding DDG
level; these are a superset of the edges that must be realized to
insure that the critical path of the DDGs execution is not
lengthened).  This option has no inputs, and creates specific output
file.
.IP BRANCH_DISTANCE
Define BRANCH_DISTANCE to generate the branch control distance
distribution for the data dependencies of each operation placed in the
DDG.  The branch distance of a DDG edge is defined as the number of
conditional branches that must be resolved (or speculated) in the
serial trace before the consuming operation can be issued.  The
BRANCH_DISTANCE results are not affected by any speculation model that
may be executing.  BRANCH_DISTANCE requires the input "brDistParam" to
be set to the desired frequency distribution size.  This
is in the form "base:slots:grain", where "base" is the first level to
be recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the files "regBrDist.Stats",
"memBrDist.Stats", and "totalBrDist.Stats" -- or "regBrDistOMR.Stats",
"memBrDistOMR.Stats", and "totalBrDistOMR.Stats" if DEP_DIST_OMR is
defined.
.IP LOOP_DISTANCE
Define LOOP_DISTANCE to generate the loop control distance
distribution in loop iterations of the data dependencies for each
operation placed in the DDG, distances are shown by register and
memory.  The loop distance of a data dependence is the number of loop
iterations that must be issued before the consuming operations is
issued.  The LOOP_DISTANCE results are not affected by any speculation
model that may be executing.  LOOP_DISTANCE requires the input
"loopDistParam" to be set to the desired frequency distribution size.
This is in the form "base:slots:grain", where "base" is the first
level to be recorded, "slots" is the total number of buckets in the
profile distribution, and "grain" is the number of levels contained in
each bucket.  The results are written to the files
"regLoopDist.Stats", "memLoopDist.Stats", and "totalLoopDist.Stats" --
or "regLoopDistOMR.Stats", "memLoopDistOMR.Stats", and
"totalLoopDistOMR.Stats" if DEP_DIST_OMR is defined.
.IP CALL_DISTANCE
Define CALL_DISTANCE to generate the call control distance
distribution in call stack depths for each data dependencies placed in
the DDG, dependence distances are shown by register and memory.  The
call distance is the distance, on the call stack, between the
producing operation and the consuming operation.  The CALL_DISTANCE
results are not affected by any speculation model that may be
executing.  CALL_DISTANCE requires the input "callDistParam" to be set
to the desired frequency distribution size. This is in the form
"base:slots:grain", where "base" is the first level to be recorded,
"slots" is the total number of buckets in the profile distribution,
and "grain" is the number of levels contained in each bucket.  The
results are written to the files "regCallDist.Stats",
"memCallDist.Stats", and "totalCallDist.Stats" -- or
"regCallDistOMR.Stats", "memCallDistOMR.Stats", and
"totalCallDistOMR.Stats" if DEP_DIST_OMR is defined.

.PP
The following options control the control scheduling and speculation
model used:

.IP CFG_SCHEDULE
Define CFG_SCHEDULE to enable control scheduling via the control flow
graph issue model, see "control.[hc]" or the tech-report [2] for
details on this model.  This option requires no input and creates no
specific output file.
.IP CDG_SCHEDULE
Define CFG_SCHEDULE to enable control scheduling via the control
dependence graph model, see "control.[hc]" or the tech-report [2] for
details on this model.  This option requires no input and creates no
specific output file. (See Section \fBCAVEATS\fR for more information
on preparing \fIQPT\fR for control dependence graph scheduling.
.IP CONST_HIT_RATE
Define CONST_HIT_RATE for a straight forward n% predictor.  This
predictor hits on prediction in the range of [-1,100], where a hit
rate of -1 indicates continuous failure and 100 continuous success,
and any other value, n, hits n% of the time.  CONST_HIT_RATE requires
the input "percentHit" to be set to the hit rate of the predictor.
.IP TWO_BIT_COUNTER
Define TWO_BIT_COUNTER for a two bit predictor per branch, by default
it uses an unlimited branch history cache, that is, it remembers the
history of any branch ever encountered.  See "control.[hc]" or the
tech-report [2] for details on this speculation model.
.IP LIMITED_BRANCH_HISTORY
Define LIMITED_BRANCH_HISTORY to limit the amount of saved history
when doing TWO_BIT_COUNTER speculation, the table is managed as a
direct mapped cache.  LIMITED_BRANCH_HISTORY requires the input
"brHistTSize" to be set of the set size of the direct mapped two bit
counter branch history cache.  "brHistTSize" must be a power of two.

.PP
The following options control resource constrained schedule
generation:

.IP LIMITED_FU_SCHEDULE
Define LIMITED_FU_SCHEDULE to limit the functional units available
during execution, all operations are allocated from the same pool.
This option requires that a scheduling model be defined (see below).
LIMITED_FU_SCHEDULE requires the input "totalFUs" to be set to the
total number of functional units available for scheduling.
.IP LIMITED_STORAGE_SCHEDULE
Define LIMITED_STORAGE_SCHEDULE to limit the amount of physical
storage resources available when constructing the DDG, all storage
required by the program is treated uniformly and allocated from the
same pool.  To separate the allocation pools into register and memory
resources would certainly give dubious results, as there is no
guarantee that the compiler would allocate the same values to
registers and memory, especially under wildly different processor
models.  There are other limitations inherent in storage constrained
scheduling, namely, the extent of the storage use is not know when it
is allocated, thus it cannot be de-allocated until the storage is
re-used, as this the first point at which we know the storage is no
longer needed.  LIMITED_STORAGE_SCHEDULE requires the input
"totalStorage" to be set to the total number of storage locations.
If this is too small, deadlock may occur during scheduling -- if this
is larger then the active name space of the program, deadlock can not
occur.

.PP
The following options control which scheduling technique is in force
when generating resource constrained schedules:

.IP HISTORY_SCHEDULE
Define HISTORY_SCHEDULE to schedule operations using the HISTORY
scheduling technique.  This is a memory and processor intensive,
near-optimal scheduling technique, it uses a resource history buffer
to limit the amount of any resource in a particular level of the DDG,
this can only be used with fixed length resource demands (i.e., it
only works with functional units, not storage constrained schedules),
see "rhist.[hc]" or the tech-report [2] for more details.
HISTORY_SCHEDULE requires the input "fuRHistParam" to be set to the
desired resource history buffer size.  This is in the form
"base:slots:grain:maxExpansions", where "base" is the first level to
be recorded (usually 0), "slots" is the total number of buckets in the
resource history buffer, "grain" is the number of levels contained in
the buffer, and "maxExpansions" is the maximum number of times the
buffer size will be doubled before \fITetra\fR doubles the grain
instead (this prevents the memory intensive HISTORY scheduler from
gobbling up all memory, at the cost of scheduling accuracy).
.IP LIST_SCHEDULE_BF
Define LIST_SCHEDULE_BF to schedule operations under resource
constraints using the more memory and processor fugal, sub-optimal
scheduling technique, see the file "listbfheap.[hc]" or the
tech-report [2] for details.  This option requires no input.
.IP LIST_SCHEDULE_FF
Define LIST_SCHEDULE_BF to schedule operations under resource
constraints using the more memory and processor fugal, sub-optimal
scheduling technique, see the file "listffheap.[hc]" or the
tech-report [2] for details.  This option requires no input.
.IP RND_RBN_SCHEDULE
Define RND_RBN_SCHEDULE to schedule operations under resource
constraints using the very processor fugal, sub-optimal round robin
scheduling technique, see "rrqueue.[hc]" or the tech-report [2] for
details.
.IP RANDOM_SCHEDULE
Define RANDOM_SCHEDULE to schedule operations under resource
constraints using the very processor fugal, sub-optimal random
selection scheduling technique, see "randheap.[hc]" or the tech-report
[2] for details.

.PP
The following options control intrinsic trace statistic gathering.

.IP OPCODE_STATS
Define OPCODE_STATS to gather instruction frequency distribution.  The
results are written to the file "opcode.Stats".
.IP ICLASS_STATS
Define ICLASS_STATS to gather instruction class (FUClasses in
paradefs.h) frequency statistics.  The results are written to the file
"iClass.Stats".
.IP CCLASS_STATS
Define CCLASS_STATS to gather instruction control class
(ControlClasses in paradefs.h) frequency statistics.  The results are
written to the file "cClass.Stats".
.IP DATA_STATS
Define DATA_STATS to gather an aggregate read/write,
text/data/heap/stack, and reg/mem reference frequency distribution.
The results are written to the file "data.Stats".
.IP LOOP_LENGTH_STATS
Define LOOP_LENGTH_STATS to gather loop iteration length statistics.
The resulting probability density function shows the fraction of loop
instances running for <n> iterations.  The results are written to the
file "loopLen.Stats".
.IP LOOP_DEPTH_STATS
Define LOOP_DEPTH_STATS to gather loop depth statistics.  The
resulting probability density function shows the number of loops
executed at each depth.  The results are written to the file
"loopDepth.Stats".
.IP LOOP_INST_STATS
Define LOOP_INST_STATS to show loop depth distribution probed at each
instruction executed (in other words, the amount of time spent at each
depth).  The results are written to the file "loopInst.Stats".
.IP CALL_DEPTH_STATS
Define CALL_DEPTH_STATS to gather call stack depth statistics.  The
resulting probability density function shows the number of calls
occurring at each depth.  The results are written to the file
"callDepth.Stats".
.IP CALL_INST_STATS
Define CALL_INST_STATS to show the number of procedure instances at
all possible call stack depths.  The results are written to the file
"callInst.Stats".
.IP FRAME_SIZE_STATS
Define FRAME_SIZE_STATS to show the distribution of frames by size.
The results are written to the file "frameSize.Stats".
.IP STACK_DEPTH_STATS
Define STACK_DEPTH_STATS to show the distribution of stack depth
measured after each instruction.  The results are written to the file
"stackDepth.Stats".
.IP MALLOC_SIZE_STATS
Define MALLOC_SIZE_STATS to gather the malloc size distribution.  The
results are written to the file "mallocSize.Stats".
.IP MALLOC_FREE_STATS
Define MALLOC_STATS to gather the number of malloc's and free's.  The
results are written to the file "mallocFree.Stats".

.PP
The following are miscellaneous options:

.IP NO_SEATBELTS
Define NO_SEATBELTS to remove all Safe-C spatial and temporal checks
this option is required if you are not compiling with ATT C++ V3.0+
(see README.safec for more details).
.IP NO_SPATIAL_CHECKS
Define NO_SPATIAL_CHECKS to turn off all Safe-C spatial error checking
(see README.safec for more details).
.IP NO_TEMPORAL_CHECKS
Define NO_TEMPORAL_CHECKS to turn off all Safe-C temporal error
checking (see README.safec for more details).
.IP NO_PREASSERT
Define NO_PREASSERT if you want all semi-critical pre-assertions
(preassert()) removed.
.IP NO_POSTASSERT
Define NO_POSTASSERT if you want all semi-critical post-assertions
(postassert()) removed, these are currently unused.
.IP NO_DEBUG
Define NO_DEBUG if you want all assertions (assert(), preassert(),
postassert()) removed.  NDEBUG is an alias for NO_DEBUG.  This option
is not recommended.
.IP INST_ANNOUNCE
Set INST_ANNOUNCE to the number of instructions between announcements.
Announcements indicate how many instructions have been analyzed as
well as a number of other statistics.
.IP VERBOSE_ANNOUNCEMENTS
Set VERBOSE_ANNOUNCEMENTS to see more statistics every INST_ANNOUNCE
instructions.
.IP CHECK_ADDRESSES
Set CHECK_ADDRESSES to turn on address validity checking.  In the
past, \fIQPT\fR has had some difficulty producing correct addresses
during regeneration due primarily to the complexity of the dynamic
slicing/address generation code it employs.  This test is on the
program's critical path, thus it is expensive.
.IP UNIT_LATENCY
Define UNIT_LATENCY to schedule all operations with unit latency
(1),otherwise the schedule will use the latencies in the opTable (see
machine.c).
.IP CHECK_SCHEDULER
Define CHECK_SCHEDULER if you would like a scheduler consistency
checker ran on the resource heap every INST_ANNOUNCE instructions.
.IP PRINT_PTRACE
Define PRINT_PTRACE to enable parallel trace printing.  Defining this
shows parallel instruction with jump/branch offsets, load/store
addresses are absolute, absolute instruction PC addresses, edge
connections, and speculation results if speculation is enabled.  This
is a very memory expensive option, so it is generally only useful on
small programs.  This option requires no input.  The parallel trace is
written to the file "pTrace.log".

.SH LINKING
\fItetra.a\fR is not directly executable.  It must be first linked to
a \fIQPT\fR generated regeneration file.  For example, if the file to
be analyzed is "foo", the following sequence is used to generate
"foo.tetra":
.EX
- edit "config.h" to the desired configuration
- do a "make" to create the appropriate "tetra.a"
- run QPT on "foo" using "qpt -t -o +19 foo", or
  "qpt -t -cd -o +19 foo" if control dependence
  scheduling is to be performed
- compile the QPT regeneration files ("foo_sma0*.c")
  using the command "utils/CClocal foo"
- link the regeneration files "foo_sma0*.c" to "tetra.a"
  using the command "utils/LDlocal foo"
- execute "foo.tetra", for example if the parameter
  file is named "foo.param", and the trace file named
  "foo.Trace", use the following command,
  "foo.tetra foo.param foo foo.Trace"
.EE
The trace file name "-" allows the tetra program to read
the trace from "stdin".

.SH SIGNALS
\fITetra\fR executables support asynchronous interfacing via the USR1
and USR2 signals.  Upon reception of signal USR1, the \fItetra\fR
executable will terminate early, rather than waiting for "maxInsts" or
end-of-trace to occur.  Upon reception of signal USR2, the the
\fItetra\fR executable will dump out intermediate statistics and
continue analysis.

USR1 and USR2 signals are sent to the process via the "kill" command.
From the command line execute:
.EX
kill -USR1 <tetra_pid>

or

kill -USR2 <tetra_pid>
.EE
Where "<tetra_pid>" is the process ID of the tetra process, obtained
via the command "ps".

.SH MODULES
.TP 20
README
Read this file first!
.TP 20
BLURB
What is \fITetra\fR?
.TP 20
README.safec
Rudimentary details on Safe-C.
.TP 20
MANIFEST
File descriptions.
.TP 20
COPYING
\fITetra\fR distribution/modification agreement.
.TP 20
THANKS
Acknowledgements.
.TP 20
TODO
Possible projects, optimizations, fixes.
.TP 20
ChangeLog
History of changes to \fITetra\fR.
.TP 20
Makefile
\fITetra\fR make file.
.TP 20
bitops.h
Bit manipulation routines
.TP 20
cdist.[hc]
Control distance computation routines.
.TP 20
config.h
\fITetra\fR configuration file.
.TP 20
config-check.h
\fITetra\fR configuration check expressions.
.TP 20
control.[hc]
Routines implementing control scheduling and branch speculation.
.TP 20
dist.[hc]
Generic frequency/probability distribution routines.
.TP 20
fixheap.[hc]
Fixed size heap manager.
.TP 20
globals.[hc]
Machine independent global variables.
.TP 20
listbfheap.[hc]
LIST-BF scheduler routines.
.TP 20
listffheap.[hc]
LIST-FF scheduler routines.
.TP 20
livewell.[hc]
Live well hash table routines.
.TP 20
machine-mips.[hc]
MIPS/Ultrix machine specific routines.
.TP 20
main.c
\fITetra\fR main line code.
.TP 20
newvers.sh
Auto-versioning shell script -- only needed for development.
.TP 20
paradefs.h
\fITetra\fR global type definitions.
.TP 20
paths.h
\fITetra\fR file names.
.TP 20
ptrace.[hc]
Parallel trace printing routines.
.TP 20
qpt-4.1.diffs
QPT version 4.1 control dependence computation diffs
.TP 20
qpt_events.h
\fIQPT\fR interface and signal definitions.
.TP 20
randheap.[hc]
RANDOM scheduler routines.
.TP 20
resource.[hc]
Scheduler independent resource constraint scheduling routines.
.TP 20
rhist.[hc]
HISTORY scheduling implementation.
.TP 20
rrqueue.[hc]
RND_RBN scheduler routines.
.TP 20
safec.[hc]
Generic Safe-C run time check package -- requires C++ compiler.
.TP 20
schedule.[hc]
\fITetra\fR scheduling core routines.
.TP 20
sys.h
Generic programming support defs and routines.
.TP 20
tetra.1
\fITetra\fR manual page.
.TP 20
tracer.[hc]
\fIQPT\fR interface code.
.TP 20
tstats.[hc]
Intrinsic trace analysis routines.
.TP 20
version
Current \fITetra\fR compile version.
.TP 20
version.c
Current \fITetra\fR compile version and date.
.TP 20
utils/CCcondor
Compile \fIQPT\fR files for condor execution.
.TP 20
utils/CClocal
Compile \fIQPT\fR files for local execution.
.TP 20
utils/DBXcondor
Debug a condor core dump.
.TP 20
utils/DBXlocal
Debug a local core dump.
.TP 20
utils/LDTrGen
Link a \fIQPT\fR trace generator.
.TP 20
utils/LDTrunc
Link a \fIQPT\fR trace truncator.
.TP 20
utils/LDValidate
Link a \fIQPT\fR trace validator.
.TP 20
utils/LDcondor
Link \fIQPT\fR files for condor -- (probably) C++ only.
.TP 20
utils/LDlocal
Link \fIQPT\fR files for local execution.
.TP 20
utils/_main.c
Condor C++ startup file.
.TP 20
utils/pcompact.c
\fITetra\fR profile compacter.
.TP 20
utils/prof2pdf.c
Profile to PDF utility.
.TP 20
utils/pdf2cdf.c
PDF to CDF utility.
.TP 20
utils/qpt_decode.c
Disassemble a \fITetra\fR trace stream -- MIPS only.
.TP 20
utils/qpt_events.h
\fIQPT\fR interface and signal definitions.
.TP 20
utils/qpt_trace.c
Trace redirection for \fIQPT\fR programs.
.TP 20
utils/qpt_trgen.c
Generate a \fIQPT\fR trace stream.
.TP 20
utils/qpt_trunc.c
Truncate a \fIQPT\fR execution at <n> instructions.
.TP 20
utils/qpt_validate.c
Check \fIQPT\fR generated address traces.
.TP 20
utils/Trace
Generate a \fIQPT\fR trace.

.SH "SEE ALSO"
qpt(1).  \fIQPT\fR is available from Jim Larus (larus@cs.wisc.edu).

[1] Todd M. Austin and Gurindar S. Sohi,
``Dynamic Dependency Analysis of Ordinary Programs'',
\fIConference Proceedings of the 19th Annual
International Symposium on Computer Architecture,\fP
pp. 342-351, May 1992.

[2] Todd M. Austin and Gurindar S. Sohi, ``Tetra: Evaluation of Serial
Program Performance on Fine-Grain Parallel Processors'', University of
Wisconsin Technical Report, 1993.

.SH CAVEATS
\fITetra\fR is not useful without \fIQPT\fR.  \fIQPT\fR is available
from Jim Larus (larus@cs.wisc.edu).

Control dependence scheduling requires "qpt-x.diffs" to be applied
to \fIQPT\fR (where "x" is the qpt version the patch expects).  This
is accomplished by unpacking the appropriate \fIQPT\fR distribution
into a directory named "qpt-x" (same as the diffs file), and then
executing the following command \fIabove\fR that directory:
.EX
patch < qpt-x.diffs
.EE
This should patch \fIQPT\fR to include a new option "-cd" which adds
control dependence information to the regeneration file.  When you
execute the patched version of \fIQPT\fR, the opening message will
include the string "+Tetra support".

.SH BUGS
Resource history buffer resets do not work unless "syscallsStall" is
enabled (non-zero).

\fITetra\fR is still not officially released, nor has it been fully
tested, please be wary.

.SH AUTHORS
Tetra was written by Todd Austin (austin@cs.wisc.edu), University of
Wisconsin-Madison.

The author of this work wishes to thank the following people for their
contributions to this work.

.IP
Guri Sohi, for his guidance and suggestions during the
implementation of our research.
.IP
Alain Kagi, for graciously offering to write the Fibonacci
heap implementation, simply because, as he puts it, "it
was an interesting thing to do", and for his invaluable input
to this research.
.IP
Jim Larus, the author of QPT, for first allowing us to use
his tracer, and also for the remarkably quick support he
offered us to the frequent questions and occasional bug.
.IP
Tom Ball, for his input to our research, and for his support
of QPT.
.IP
Dionisios Pnevmatikatos, Scott Breach, Alvy Lebeck, Babak Falsafi,
Steve Reinhardt, and Vikram Adve for their input to this work.

.SH COPYING
Copyright (c) 1993 by Todd Austin
.br
See the file COPYING for conditions for redistribution.
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
};
#endif /* BIG_CONFIG */

/* functional unit to resource descriptor mapping, this is constructed
   from the resource descriptors at initialization time, the first dimension
   of the array is indexed by the resource class of the instruction needing
   a resource, the second dimension is a '-1' terminated list of indexes
   into RESOURCES of resource that can handle this instruction, the resource
   descriptors in the list are ordered in the same order as they are
   soecified above */
long fuClassToRes[NUM_FU_CLASSES][N_ELT(resource)];
long fuClassToResOpLatency[NUM_FU_CLASSES][N_ELT(resource)];
long fuClassToResIssueLatency[NUM_FU_CLASSES][N_ELT(resource)];

void
DumpResourceTables(void)
{
  ulong i, j;

  fprintf(stderr, "fuClassToRes:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource) && fuClassToRes[i][j] != -1; j++) {
      fprintf(stderr, "%s ", resource[fuClassToRes[i][j]].name);
    }
    fprintf(stderr, "\n");
  }

  fprintf(stderr, "fuClassToResOpLatency:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource); j++) {
      if (fuClassToResOpLatency[i][j] != -1)
	fprintf(stderr, "%s:%d ",
		resource[j].name, (int)fuClassToResOpLatency[i][j]);
    }
    fprintf(stderr, "\n");
  }

  fprintf(stderr, "fuClassToResIssueLatency:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource); j++) {
      if (fuClassToResIssueLatency[i][j] != -1)
	fprintf(stderr, "%s:%d ",
		resource[j].name, (int)fuClassToResIssueLatency[i][j]);
    }
    fprintf(stderr, "\n");
  }
}

void
InitFUMap(void)
{
  ulong i, j, k, index;

  /* init OUTTOFU map */
  for (i=0; i<RS_BIT_SIZE; i++)
    outToFU[i] = -1;

  /* initialize FUCLASSTORES */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    for (j=0; j<N_ELT(resource); j++) {
      fuClassToRes[i][j] = -1;
      fuClassToResOpLatency[i][j] = -1;
      fuClassToResIssueLatency[i][j] = -1;
    }
  }

  /* build FUClass -> usable resource table */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    index = 0;
    for (j=0; j<N_ELT(resource); j++) {
      for (k=0; k<NUM_FU_CLASSES; k++) {
	if (resource[j].x[k].fuClass != NA &&
	    resource[j].x[k].fuClass == i) {
	  /* this resource can service this class */
	  fuClassToRes[i][index++] = j;
	}
      }
    }
    if (i != NA && !index)
      fatal("there is no resource defined to execute FUClass `%s'",
	    fuClassDesc[i]);
  }

  /* build FUClass -> resource operation latency table */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    for (j=0; j<N_ELT(resource); j++) {
      for (k=0; k<NUM_FU_CLASSES; k++) {
	if (resource[j].x[k].fuClass != NA &&
	    resource[j].x[k].fuClass == i) {
	  fuClassToResOpLatency[i][j] = resource[j].x[k].opLatency;
	  fuClassToResIssueLatency[i][j] = resource[j].x[k].issueLatency;
	}
      }
    }
  }
}


/** TLB/pre-translation resources **/

/* TLB parameters */
static ulong nTLB = 0;			/* total number of TLBs (0 - ignore) */
static ulong opLatTLB = 1;		/* operation latency */
static ulong issueLatTLB = 1;		/* issue latency (deg of pipelining) */

/* TLB/pre-translation state */
static long long *whenAvailable = NULL;	/* cycle when next issue possible */
static int valid[NUM_REGS];		/* pre-translation valid bits */

/* pre-translation stats */
long long invalidOverrun = 0;		/* invalidated with overrun */
long long invalidNoOverrun = 0;		/* not invalidated with overrun */
long long doubleValid = 0;		/* time saw two valid inputs */
long long directTLBAccess = 0;		/* TLB access elided */
long long elidedTLBAccess = 0;		/* TLB access elided */
long long TLBAccess = 0;		/* total TLB accesses */

void
InitTLB(void)
{
  int i;

  if (!nTLB) {
    info("TLB configuration: none");
    return;
  }

  for (i=0; i<NUM_REGS; i++)
    valid[i] = FALSE;
    
  if (!(whenAvailable = calloc(nTLB, sizeof(long long))))
    fatal("out of virtual memory");
  info("TLB configuration: nTLB=%lu, opLatTLB=%lu, issueLatTLB=%lu",
       nTLB, opLatTLB, issueLatTLB);
}

/* Compiler-Assisted Address Translation semantics:
     get a translation resource for the pointer in register REG or for a direct
     address if DIRECT is non-zero, needed at time WHEN, returns the latency of
     the operation */
static inline ulong
GetTLBLat(int direct, int reg, enum InstClass ic, long long when)
{
  int i, firstAvailable;
  long long earliestAvailable, whenDone, whenAvail;

  assert(when >= cycle);

  /* no latency impact if not doing xlations or instruction is not a ld/st */
  if (ic != MemRead && ic != MemWrite)
    return 0;

  TLBAccess++;

  if (!nTLB)
    return 0;

  /* direct translation resources are unlimited (one per pipe) */
  if (direct) {
    directTLBAccess++;
    return /* translation completed in the decode stage */0;
  }

  /* indirect access, base in register REG */

  /* is the pre-translation valid, can determine this by end of ID stage */
  if (elideTranslations && valid[reg]) {
    elidedTLBAccess++;
    return 0;
  }

  /* locate the first available TLB resource */
  for (i=0,firstAvailable=-1,earliestAvailable=0xffffffff; i < nTLB; i++) {
    if (whenAvailable[i] < earliestAvailable) {
      earliestAvailable = whenAvailable[i];
      firstAvailable = i;
    }
  }
  /* use TLB resource at index FIRSTAVAILABLE */
  if (firstAvailable < 0 || firstAvailable >= nTLB)
    panic("no TLBs");

  /* let's NOT do the time warp */
  whenAvail = max(when, whenAvailable[firstAvailable]);
  /* compute when the translated result may be used in a memory operation */
  whenDone = whenAvail + opLatTLB;
  /* compute when this resource can be used again */
  whenAvailable[firstAvailable] = whenAvail + issueLatTLB;

  assert(whenDone >= when);

  /* FIXME: should stop future accesses on this register */
  valid[reg] = TRUE;

  return whenDone-when;
}


/** branch target buffer **/

struct BTBEnt {
  ulong addr;			/* address of branch being tracked */
  uchar state;			/* 0, 1 -> not taken /// 2, 3, taken */
  ulong target;			/* last destination when taken */
};

static ulong btbSize = 1024;
#define BTBHASH(addr)					\
  ((((addr) >> 16) ^ (addr)) & (btbSize-1))

static struct BTBEnt *btbTable = NULL;

static void
DumpBTB(void)
{
  ulong i;

  fprintf(stderr, "@@@ BTB contents:\n");
  for (i=0; i<btbSize; i++)
    if (btbTable[i].addr)
      fprintf(stderr, "\t[%5d]  addr: 0x%08x  state: %3d %s  target: 0x%08x\n",
	      (int)i, (int)btbTable[i].addr, (int)btbTable[i].state,
	      (btbTable[i].state >= 2) ? "(taken)    " : "(not taken)",
	      (int)btbTable[i].target);
    else
      fprintf(stderr, "\t[%5d]  unused\n", (int)i);
  fprintf(stderr, "@@@ end of BTB contents\n");
}

static void
InitBTB(ulong size)
{
  if ((size & (size-1)) != 0)
    fatal("BTB size, `%d', must be a power of two", size);
  btbSize = size;
  if (!(btbTable = calloc(size, sizeof(struct BTBEnt))))
    fatal("cannot allocate BTB storage");
}

/* return TARGET if address is currently recorded as taken */
static ulong
BTBLookup(ulong addr)
{
  struct BTBEnt *p = &btbTable[BTBHASH(addr)];
  if (p->addr == addr)
    return (p->state >= 2) ? /* taken */ p->target : /* not taken */ addr + 8;

  /* no record of this address holding a control inst */
  return 0;
}

static void
BTBUpdate(ulong addr, int taken, ulong target)
{
  struct BTBEnt *p = &btbTable[BTBHASH(addr)];
  if (p->addr == addr) {
    /* update current information */
    if (taken) {
      if (p->state < 3)
	p->state++;
      p->target = target;
    }
    else { /* not taken */
      if (p->state > 0)
	p->state--;
      /* leave target alone */
    }      
  }
  else {
    /* enter a new branch in the table */
    p->addr = addr;
    p->state = (taken) ? 2 : 1;
    p->target = target;
  }
}  


/** 3-WRITEBACK **/
ulong N3;
struct SSInst *IR3;
ulong *PC3, *NPC3;
enum Opcode *OP3;
enum FUClass *FU3;
enum InstClass *IC3;
RegSet busy;

/** event queue definitions handler **/

struct WBEvent {
  struct WBEvent *next;		/* next write back event in the sorted list */
  long long	when;		/* time to schedule write back event */
  ulong		reg;		/* register to free */
};

struct WBEvent *evQueue;
struct WBEvent *freeList;

void DumpEventQueue(void)
{
  struct WBEvent *node;

  fprintf(stderr, "\tEvQueue: ");
  for (node=evQueue; node; node=node->next)
#if 0
    fprintf(stderr, "when: 0x%08x%08x reg:%d%c  ",
	    (int)LLHIGH(node->when), (int)LLLOW(node->when),
	    (int)node->reg, node->reg ? '+' : ' ');
#else
    fprintf(stderr, "when: %15.0f reg:%d%c  ",
	    (double)node->when,
	    (int)node->reg,
	    node->reg ? '+' : ' ');
#endif
  fprintf(stderr, "\n");
}

void
InitEventQueue(void)
{
  ulong i;
  struct WBEvent *node;

  for (i=0; i<MAX_STATE; i++) {
    if (!(node = calloc(1, sizeof(struct WBEvent))))
      error("could not allocate WB event record");
    node->next = freeList;
    freeList = node;
  }
}

void
ScheduleEvent(long long when, ulong reg)
{
  struct WBEvent *prev, *node, *new;

  assert(when >= cycle);

  if (when == cycle) {
    /* do this now */
    RSClearBit(busy, reg);
    outToFU[reg] = -1;
    return;
  }

  /* locate insertion point */
  for (prev=NULL, node=evQueue;
       node && node->when < when;
       prev=node, node=node->next);

  /* get a free event record, better be one */
  assert(freeList);
  new = freeList;
  freeList = freeList->next;

  if (prev) {
    /* insert middle or end */
    new->next = prev->next;
    prev->next = new;
  }
  else {
    /* insert beginning */
    new->next = evQueue;
    evQueue = new;
  }

  /* plug in event data */
  new->when = when;
  new->reg = reg;
}

void
SquashWriteBack(void)
{
  int i;

  N3 = 0;
  RSClear(busy);
  for (i=0; i<RS_BIT_SIZE; i++)
    outToFU[i] = -1;
}

void
InitWriteBack(void)
{
  if (!(IR3 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC3 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC3 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(OP3 = calloc(numIssue, sizeof(enum Opcode))))
    fatal("out of memory");
  if (!(FU3 = calloc(numIssue, sizeof(enum FUClass))))
    fatal("out of memory");
  if (!(IC3 = calloc(numIssue, sizeof(enum InstClass))))
    fatal("out of memory");
  SquashWriteBack();
}

void
WriteBack(void)
{
  ulong i;

  /* commit any writeback events */
  while (evQueue && evQueue->when <= cycle) {
    struct WBEvent *p;

    /* clear the register busy bits */
    RSClearBit(busy, evQueue->reg);
    outToFU[evQueue->reg] = -1;

    /* return the event record to the free list */
    p = evQueue;
    evQueue = evQueue->next;
    p->next = freeList;
    freeList = p;
  }

  /* free up resources */
  for (i=0; i<N_ELT(resource); i++) {
    if (resource[i].busy > 0)
      resource[i].busy--;
  }

  /* all instruction processed */
  N3 = 0;
}


/** 2-EXECUTE **/
ulong N2;
struct SSInst *IR2;
ulong *PC2, *NPC2;
enum Opcode *OP2;
enum FUClass *FU2;
enum InstClass *IC2;
int *res2;			/* index of the resource allocated for inst */
int *out1_2, *out2_2;		/* outputs for inst */

void
SquashExecute(void)
{
  N2 = 0;
}

void
InitExecute(void)
{
  if (!(IR2 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC2 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC2 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(OP2 = calloc(numIssue, sizeof(enum Opcode))))
    fatal("out of memory");
  if (!(FU2 = calloc(numIssue, sizeof(enum FUClass))))
    fatal("out of memory");
  if (!(IC2 = calloc(numIssue, sizeof(enum InstClass))))
    fatal("out of memory");
  if (!(res2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  if (!(out1_2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  if (!(out2_2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  SquashExecute();
}

#define SET_NPC(EXPR)		(nextPC = (EXPR))
#define CPC			(PC2[i])

#define GPR(N)			(R[N])
#define SET_GPR(N,EXPR)		(R[N] = (EXPR))


Article: 28329 of comp.text.tex
Path: news.doit.wisc.edu!saimiri.primate.wisc.edu!caen!math.ohio-state.edu!howland.reston.ans.net!vixen.cso.uiuc.edu!nntp-server.caltech.edu!hot.caltech.edu!bobby
From: bobby@hot.caltech.edu (Bobby Bodenheimer)
Newsgroups: comp.text.tex,fr.comp.text.tex,comp.answers,news.answers
Subject: TeX, LaTeX, etc.: Frequently Asked Questions with Answers [Monthly]
Supersedes: <tex-faq_784267264@hot.caltech.edu>
Followup-To: comp.text.tex
Date: 8 Nov 1994 04:03:17 GMT
Organization: California Institute of Technology, Pasadena, CA.
Lines: 1210
Approved: news-answers-request@MIT.Edu
Expires: 6 Jan 1995 04:03:12 GMT
Message-ID: <tex-faq_784267392@hot.caltech.edu>
Reply-To: bobby@hot.caltech.edu
NNTP-Posting-Host: hot.caltech.edu
Keywords: monthly faq
Originator: bobby@hot.caltech.edu
Xref: news.doit.wisc.edu comp.text.tex:28329 comp.answers:7441 news.answers:23103

Archive-name: tex-faq

Comp.text.tex is a forum for the discussion of TeX, LaTeX and other
related things. TeX is a software system written by Donald Knuth to
typeset text, especially text containing mathematics. LaTeX is a set
of macros written in TeX, designed to simplify the the typesetting of
a document by allowing the user to concentrate on the content and
structure of the document rather than the exact appearance of the
finished product. METAFONT, also discussed here, is a program which
allows the user to design their own fonts. The definitive reference
for TeX is _The TeXbook_, by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13447-0, paperback 0-201-13448-9). For LaTeX, see _LaTeX, a
Document Preparation System_ by Leslie Lamport (Addison Wesley, 1986,
ISBN 0-201-15790-X); the second edition of this book covers LaTeX2e.
Full documentation for LaTeX2e can be found in _The LaTeX Companion_
by Michael Goossens, Frank Mittelbach, and Alexander Samarin (Addison
Wesley, 1993, ISBN 0-201-54199-8). For METAFONT, see _The
METAFONTbook_ by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13445-4). The American Mathematical Society has two macro
packages which are also popular, called AMS-TeX and AMS-LaTeX.

This article contains answers to some frequently asked questions on
comp.text.tex. Please don't ask these questions again, as they've been
answered many times before.

Malencontreusement, je n'ai ni le temps ni la comp\'etence pour
traduire cet article en fran\c{c}ais. Je prie donc, le lecture
interess\'e par fr.comp.text.tex d'avoir l'indulgence d'accepter la
version anglaise.

This is version 1.48 for November, last changed 11/7/94.

This article includes answers to:

  1) How can I get a copy of this article?
  2) Where can I get a DVI to PostScript conversion program?
  3) How can I include a PostScript figure in LaTeX?
  4) Where can I find a DVI previewer for machine Y running Q?
  5) Where can I get the manual for PiCTeX?
  6) In LaTeX, I put some definitions in my document, but I get the error
     ``Use of \@ doesn't match its definition.'' What's wrong?
  7) What is OzTeX and where can I get it (TeX for the Mac)?
  8) What is Fig and where can I get it?
  9) How do I get WEB for C, FORTRAN, or some other language?
  10) How can I typeset music in TeX?
  11) What is TUG and TUGboat?
  12) How do I convert Adobe's afm files to tfm format?
  13) In LaTeX, how do I get a double-spaced document?
  14) In LaTeX, how do I include a file in the verbatim environment?
  15) In LaTeX, how do I do Y?
  16) Where can I find a TeX macro or LaTeX style file for doing Y?
  17) How do I generate an index in TeX/LaTeX?
  18) How do I get METAFONT to do what I want it to do?
  19) Where do I get TeX/LaTeX for machine Y running Q?
  20) Where can I get a thesis style for LaTeX?
  21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
      and so on?
  22) What repositories of TeX material are available, and how can I
      access them?
  23) How do I use PostScript fonts with LaTeX?
  24) How can I convert from format Y to TeX or LaTeX, and vice-versa?
  25) How do I get a file into the major style repositories?
  26) Where can I get font Y?
  27) Where can I get a dvi driver for the HP LaserJet?
  28) TeX and LaTeX are hyphenating words weirdly. What can I do?
  29) How can I convert a TeX or LaTeX file into a plain ASCII file,
      with all the formatting intact, a la nroff?
  30) How do I enlarge TeX? I keep getting ``memory capacity exceeded''
      errors.
  31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
      numbered. What do I do?
  32) Where do I find documentation about BibTeX?
  33) How do I use BibTeX with plain TeX?
  34) How do I draw Feynman diagrams in LaTeX?
  35) What is the New Font Selection Scheme (NFSS)?
  36) In LaTeX, my cross-references for floats (figures and tables) are
      incorrect. What's wrong?
  37) I want to change the margins in LaTeX. What can I do?
  38) How do I find the width of a letter, word, or phrase in TeX?
  39) In LaTeX, is there a comment or ``ignore'' environment with which
      I can exclude blocks of text from the .dvi file?
  40) Where can I find a spelling checker for my TeX file?
  41) What is LaTeX2e?
  42) In LaTeX, how can I define a new log-like function?
  43) In LaTeX, how do I put a \sqrt in my \caption statement?
  44) In LaTeX, how do I get thin and thick \hlines in a table?
  45) In LaTeX, how do I number the bibliography using Arabic numbers without
      square brackets or using superscripts?
  46) In LaTeX, why are my cites all numbered zero?
  47) In LaTeX, my figures get put on a page by themselves with too much
      whitespace, but when I tried \begin{figure}[t] they get printed at
      the end. Why?
  48) In LaTeX, how do I make a line break in a section title?
  49) In LaTeX, how do I number equations by section?

If you are looking, for instance, for the answer to question 17, and wish
to skip everything else, you can search ahead for the regular expression
``^17)''.

These are all legitimate questions, but they seem to appear too 
frequently for long-time readers of the list. 

Many of the answers below tell you that you can obtain something
through anonymous ftp. ``Ftp'' stands for file transfer protocol, and
is also the name of a program implementing the protocol. The program
allows users to transfer files to and from remote sites, if the sites
are connected via a network such as the Internet. ``Anonymous ftp'' 
indicates a user may connect to a remote site as the user 
``anonymous'' with a password consisting of their email address, and
thus be able to retrieve files from that site. Remember, anonymous
ftp is a privilege and the system administrators for these sites 
have made these files available out of their own generosity. Therefore
please restrict your ftp'ing to non-prime hours at the various sites.

I would like to acknowledge Don Hosek, Ken Yap, Tomas Rokicki, Micah
Beck, David Carlisle, and Donald Arseneau who provided many of the
answers.  Joe Weening, Hal Perkins, Walter Carlip, Max Hailpern, Tad
Guy, Raymond Chen, Henning Schulzrinne, Sebastian Rahtz, Mark James,
Peter Galko, Mike Ernst, Rainer Sch\"opf, Oren Patashnik, Philippe
Louarn, Rafal Zbikowski, Anita Marie Hoover, David Rhead, Darrell
McCauley, Cameron Smith, Emma Pease, Patrick McPhee, Karl Berry, Robin
Fairbairns, Joohee Jeong, Sam Steingold, J\"org Knappen, Barbara
Beeton, Norman Ramsay, and Richard Mathar provided additional material
and criticisms. The format of this document is based on the Frequently
Asked Questions written by Steve Hayman which formerly appeared in
comp.unix.wizards. Any mistakes are mine. Send corrections,
suggestions, and additions to bobby@hot.caltech.edu.

1) How can I get a copy of this article?

   You're reading it aren't you? SAVE it :-). This article is posted
   monthly to comp.text.tex and cross-posted to news.answers. It is
   therefore archived at any site that archives news.answers.
   News.answers is archived on rtfm.mit.edu, and this article is
   available there via anonymous ftp in the directory
   ./pub/usenet/news.answers/tex-faq. If you do not have anonymous
   ftp, send an e-mail message containing the lines ``SENDME FAQ.'' to
   fileserv@shsu.edu (fileserv@shsu.bitnet).  Another way to retrieve
   it via email is through the mailserver at rtfm: send a message
   containing the lines ``help'' and ``index'' to
   mail-server@rtfm.mit.edu for information on how to obtain it.
 
   Other news.answers/FAQ archives are: cnam.cnam.fr (163.173.128.6)
   in the anonymous ftp directory /pub/FAQ; ftp.uu.net (192.48.96.2)
   in the anonymous ftp directory /pub/usenet (also available via mail
   server requests to netlib@uunet.uu.net, or via uunet's 1-900
   anonymous UUCP phone number); and ftp.cs.ruu.nl (131.211.80.17) in
   the anonymous ftp directory NEWS.ANSWERS (also accessible via mail
   server requests to mail-server@cs.ruu.nl). Many of the archives
   mentioned in question 22 also maintain current versions of this
   document.

2) Where can I get a DVI to PostScript conversion program?

   Two good DVI to PostScript conversion programs that run under
   Unix are:
     dvips - by Tomas Rokicki. This driver is very nice and has the
       ability to deal with virtual fonts. Available via anonymous ftp
       from labrea.stanford.edu (36.8.0.112) in ./pub. Dvips is
       written in C and ports easily to other operating systems.  It
       is available for VMS via anonymous ftp from any CTAN site (see
       question 22) and also through the DECUS library (see question
       22). A precompiled version for MSDOS is available from
       monu1.cc.monash.edu.au (130.194.1.101) in ./pub/dvips54.zip,
       from shape.mps.ohio-state.edu (128.146.110.30) in
       ./pub/msdos/dvips/dvips54.zip, or from any CTAN site (see
       question 22) in ./systems/msdos/drivers/dvips.  If you wish to
       use postscript fonts, get dvipslib.zip as well.  Documentation
       is available in dvips.ps.Z. Karl Berry has a version of dvips
       called dvipsk which has a configure script and path searching
       code similar to that in his other programs (e.g., web2c).  It
       is available via anonymous ftp from ftp.cs.umb.edu
       (158.121.104.33) in ./pub/tex/.

     dvitops - by James Clark. Available via anonymous ftp from any CTAN site
       (see question 22, e.g., pip.shsu.edu (192.92.115.10)), in 
       ./tex-archive/dviware/dvitops. Dvitops is written in C and will 
       compile under Unix, MSDOS, VMS, and Primos.

3) How can I include a PostScript figure in LaTeX?

   In LaTeX2e, the best way is \usepackage[dvips]{graphics}.

   Perhaps the best way to do this is to use the psfig macros written
   by Trevor Darrell. They are available via anonymous ftp from
   any CTAN site (see question 22) in graphics/psfig. You will
   also need a dvi to PostScript conversion program that supports
   \specials. The ones mentioned in question 2 do, and come with a
   version of psfig ready to use with them. The psfig macros work best
   with Encapsulated PostScript Files (EPS). In particular, psfig will
   need the file to have a BoundingBox (see Appendix C of the
   _PostScript Language Reference Manual_). If you don't have an EPS
   file, life can be difficult.

   To allow resizing by dvips (see question 2) with PostScript files
   that are not EPS files, add the one line comment
   %%BoundingBox: llx lly urx ury" 
   prior to any non-comment line in the PostScript file. The four
   ``lower left'' and ``upper right'' arguments must be numbers to
   indicate the lower left and upper right corner in units of 1/72 of
   an inch. Otherwise, dvips assumes the PostScript file fills a whole
   page.

   One further note about including PostScript figures is that they
   are not part of the dvi file, but are included when you use a dvi
   to PostScript conversion program. As a result, most dvi previewers
   will simply show the blank space TeX has reserved for your figure,
   not the figure itself. LaTeX2e (see question 41) will have a standard
   interface for graphics inclusion, rotation, color, and other 
   driver-related features.

   Anil K. Goel has written a long document describing in detail how to
   include figures, pictures, and images in LaTeX documents. It is available
   via anonymous ftp from math.uwaterloo.ca (129.97.140.144) in
   ./pub/figsInLatex.ps.Z. A dvi file with the included PostScript files
   is also available.

4) Where can I find a DVI previewer for machine Y running Q?

   This briefly lists some previewers available via anonymous ftp. All
   are available from any CTAN site (see question 22) in addition to the
   sites listed below:
      dvipage - For SunView. This was published in volume 15 of 
        comp.sources.unix and is available at sites that archive
        this. One such source is archive.cis.ohio-state.edu 
        (128.146.8.52).
      xtex - For the X Window System. Available via anonymous ftp 
        from ftp.cs.colorado.edu (128.138.243.151) in 
        ./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z.
      dviapollo- for Apollo Domain. Available via anonymous ftp from
        labrea.stanford.edu (36.8.0.112) in ./pub/dviapollo.tar.Z.
      dvidis - For VAXstation VWS. Available via anonymous ftp from
        src.doc.ic.ac.uk (146.169.2.1) in /packages/tex/dviware/dvidis.
      xdvi - Also for the X Window System. Available via anonymous ftp
        from ftp.x.org (192.112.44.100) in ./contrib/xdvi.tar.Z. Karl
        Berry has a version of called xdvik with features analogous
        to his dvipsk (see question 2) available via anonymous ftp from
        ftp.cs.umb.edu (158.121.104.33) in ./pub/tex.
      dvitovdu - for Tektronix 4010 and other terminals under Unix.
        Available via anonymous ftp from wsmr-simtel20.army.mil
        (192.88.110.20) in the directory pd6:<unix-c.printers> as
        dvi2vdu.tar-z (ftp in ``tenex'' mode).
      dvi2tty - A dvi to ASCII conversion program, for normal terminals.
        Available from ftp.cs.ruu.nl (131.211.80.17) in 
        ./pub/TEX/DVI/dvi2tty.shar. A VMS version is available from
        fileserv@shsu.edu (see question 22).
      texsgi - For SGI under Irix. Available via anonymous ftp from 
        ftp.brl.mil (128.63.16.158) in ./info-iris/tex. Both a binary 
        and source are available, but be sure to get the fonts as well.
   
5) Where can I get the manual for PiCTeX?

   The PiCTeX manual is not free. It is available for $30 ($35 with the
   disk) from the TeX Users Group:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

   The proceeds from this sale go to Michael Wichura, the author of PiCTeX,
   and TUG.

6) In LaTeX, I put some definitions in my document, but I get the error
   ``Use of \@ doesn't match its definition.'' What's wrong?

   Definitions should be be in a style file, and if you move them there,
   you should have no problem.

   If you don't want to do that, you need to include \makeatletter
   before the definitions to allow the ``internal'' LaTeX commands to
   be accessed.  These commands are normally protected from change by
   having @ in them.  Since @ is not a letter, it is normally not
   allowed as part of a multi-letter command name. To access internal
   commands you need to tell LaTeX to pretend that @ is a letter.
   This happens automatically when LaTeX reads a style file, but in
   your main document you need to surround the offending commands with
   \makeatletter ... \makeatother.

7) What is OzTeX and where can I get it (TeX for the Mac)?

   OzTeX is a public domain version of TeX for the Macintosh. A DVI
   Previewer and PostScript driver are also included. It should run on
   any Macintosh Plus, SE, II, or newer model, but will not work on a
   128K or 512K Mac. It was written by Andrew Trevorrow, and is available 
   via anonymous ftp from from midway.uchicago.edu (128.135.12.73) in 
   ./pub/OzTeX, which contains other public domain TeX-related software 
   for the Mac as well, or on a floppy disk from TUG (see question 11). 
   Questions about OzTeX may be directed to oztex@midway.uchicago.edu.
   
8) What is Fig and where can I get it?

   Fig is a menu driven tool similar to MacDraw that allows you to
   draw objects on the screen of a Sun Workstation running SunView.
   TransFig is a set of tools which translate the code fig produces to
   other graphics languages including PostScript and the LaTeX picture
   environment. Both are available via anonymous ftp from
   ftp.cs.cornell.edu (128.84.218.75) in ./pub/fig. Both Fig and
   TransFig are also available from the Clarkson archive server at
   sun.soe.clarkson.edu (see question 22). Fig is supported by Micah
   Beck (beck@cs.cornell.edu) and Transfig is maintained by Brian
   Smith (bvsmith@lbl.gov). Another tool for fig conversion is fig2MF
   which generates METAFONT code from fig input. It is available from
   the CTAN archives discussed in question 22.

   XFig is essentially the same program except it runs under the X
   Window System. It is available via anonymous ftp from ftp.x.org
   (192.112.44.100) in ./contrib/applications/drawing_tools/xfig. It
   was written by Brian Smith.

9) How do I get WEB for C, FORTRAN, or some other language?

   TeX is written in the programming language WEB; WEB is a tool to
   implement the concept of ``literate programming.'' For more information
   on literate programming, see the newsgroup comp.programming.literate.

   There is a version of WEB for C called CWEB written by Silvio Levy. It
   is available via anonymous ftp from princeton.edu (128.112.128.1) in 
   the directory ./pub/cweb.

   There is a version of WEB called Spidery WEB which supports many 
   languages including ADA, awk, and C. It was written by Norman Ramsey 
   and, while not in the public domain, is usable free. It is available 
   via anonymous ftp from pip.shsu.edu (192.92.115.10) in 
   tex-archive/web/spiderweb.

   FWEB is a version of WEB for Fortran, Ratfor, and C written by John
   Krommes (krommes@lyman.pppl.gov). Version 1.13 is available via
   anonymous ftp from lyman.pppl.gov (192.55.106.129) in ./pub/fweb.

   SchemeWEB is a Unix filter that translates SchemeWEB into LaTeX source
   or Scheme source. It was written by John Ramsdell and is available from
   sun.soe.clarkson.edu (128.153.12.3) in ./pub/tex/tex-programs/schemeweb.

   APLWEB is a version of WEB for APL and is available from
   watserv1.waterloo.edu (129.97.129.140) in ./languages/apl.

   There are three flavors of WEB that are language-independent and
   have substantial user communities: funnelweb, noweb, and nuweb.
   NoWeb and NuWeb both emphasize simplicity; NoWeb is a bit simpler
   and more flexible, but NuWeb is more portable and easier to
   install.  FunnelWeb is more complex, but is routinely used on a
   wide variety of machines.  All three systems are available from any
   CTAN site (see question 22) in directory
   /tex-archive/web/{funnelweb,noweb,nuweb}.  An introduction to NoWeb
   appeared in the September 1994 IEEE Software, page 97.  Funnelweb
   also appeared in comp.sources.unix volume 26 issue 121, posted 11
   April 1993.

   Most of the above are also available from your nearest CTAN site
   (see question 22).

10) How can I typeset music in TeX?

    A package called MuTeX, written by Andrea Steinbach and Angelika
    Schofer, aids in doing this. It is available via anonymous ftp
    from ftp.cs.ruu.nl (131.211.80.17) in pub/TEX/MuTeX.tar.Z.  This
    package allows you to typeset single-staff music and lyrics.

    A more powerful package which allows the typesetting of orchestral
    and polyphonic music is MusicTeX, written by Daniel Taupin 
    (taupin@frups51.bitnet). It is available via anonymous ftp from
    rsovax.ups.circe.fr (130.84.128.100) [.musictex]. It should also
    be available from the archive sites detailed in question 22.

    There is a mailing list for discussion of typesetting music in TeX.
    To subscribe, send a request to mutex-request@stolaf.edu.

11) What is TUG and TUGboat?

    TUG is the TeX Users Group. TUGboat is their newsletter, containing
    useful articles about TeX and METAFONT. TUG also distributes
    TeX-related microcomputer software on disks. Inquiries should be 
    directed to:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

12) How do I convert Adobe's afm files to tfm format?

    An afm2tfm program is distributed with dvips, available via
    anonymous ftp from labrea.stanford.edu (36.8.0.112) in ./pub. Alan
    Jeffrey's fontinst package is an afm2tfm converter written in TeX 
    and will be used to support the PostScript tfm files for LaTeX2e
    (see question 41). It is available from any CTAN site (see question
    22).

    For the Macintosh, there is a program called EdMetrics which does
    the job (and more). It is available free from:
              Blue Sky Research
              534 Southwest Third Avenue
              Portland, Oregon 97204 (USA)
              800-622-8398 or 503-222-9571

13) In LaTeX, how do I get a double-spaced document?

    Are you producing a thesis, and trying to obey regulations that were
    drafted in the typewriter era?  LaTeX is a typesetting system, so the
    appropriate design conventions are for ``real books''.  Find whoever
    is responsible for the regulations, and try to get the wording changed
    to cater for typeset theses (e.g., to say ``if using a typesetting 
    system, aim to make your thesis look like a well-designed book'').

    If you fail to convince your officials, or want some inter-line 
    space for copy-editing:
     - In LaTeX2e, use \linespread. For double-spaced output, use
       \linespread{1.6}.
     - Try changing \baselinestretch: \renewcommand{\baselinestretch}{1.2}
       may be enough to give officials the impression you've kept
       to their regulations.  Don't try changing \baselineskip: its
       value is reset at any size-changing command.
     - Alternatively, get doublespace.sty from any CTAN site (see question 22,
       e.g., pip.shsu.edu (192.92.115.10)) in 
       ./tex-archive/macros/latex/contrib/misc. There's also a setspace.sty
       in the same directory which is more flexible, and consistent with the
       latest release of LaTeX.

    It's not worth going to a lot of trouble.  (If officials won't allow
    standard typographic conventions, you won't be able to produce an
    aesthetically pleasing document anyway!)

14) In LaTeX, how do I include a file in the verbatim environment?

    A good way to do this is to use Rainer Sch\"opf's verbatim.sty,
    which provides the command \verbatiminput that takes a file
    as an argument. This package is available from any CTAN site (see 
    question 22) in ./tex-archive/macros/latex/distribs. Several
    files are needed.

    Another way to do this is to use the alltt environment defined in
    the style file alltt.sty available from the CTAN archives in 
    ./tex-archive/macros/latex/contrib/misc/alltt.sty.

15) In LaTeX, how do I do Y?

    If you can't figure out how to do something in LaTeX after you
    have read the manual very carefully, asked your local LaTeX
    guru, and thought about it, there is a LaTeX help service 
    available. Please note that the way to accomplish something 
    in LaTeX is often by using an appropriate style file, so please
    check this also (see question 16). If none of this works, send mail 
    in English describing your problem to latex-help@cs.stanford.edu. 
    If you haven't gotten a reply to your problem within about a week, 
    send mail to latex-help-coordinator@cs.stanford.edu.

16) Where can I find a TeX macro or LaTeX style file for doing Y?

    Before you ask for a TeX macro or LaTeX style file to do something, 
    please search the TeX macro index written by David M. Jones
    (dmjones@theory.lcs.mit.edu) and available via anonymous ftp
    from theory.lcs.mit.edu (18.52.0.92) in ./pub/tex/TeX-index. Those 
    without access to anonymous ftp can send a message containing the
    line ``send tex TeX-index'' to archive-server@theory.lcs.mit.edu.
    The index is an excellent reference document with plenty of 
    cross-references. Also, many of the archive sites mentioned in
    question 22 maintain extensive latex style collections, which you
    can look through if you need something not in the index.

    Another possibility is to use the searching features of the CTAN
    archives (see question 22). Once you have an anonymous ftp connection
    established to a CTAN site, you can type the command `quote site index
    <term>' and it will provide a list of files with the string <term> in
    their names.
    
17) How do I generate an index in TeX/LaTeX?

    Making an index is not trivial. There are several indexing programs
    which aid in doing this. The following are available from any CTAN
    site (see question 22):
      makeindex - for LaTeX under Unix (but runs under other OS's
         without changes). A version for the Macintosh is available from
         Johnny Tolliver at tolliver%atf.mfenet@nmfecc.llnl.gov. The 
         Makeindex documentation is a good source of information on how 
         to create your own index. Makeindex can be used with some TeX macro
         packages other than LaTeX, such as Eplain.
      idxtex - for LaTeX under VMS.
      texix - for TeX on CMS and Macintosh machines.
      texindex - for LaTeX under Unix. Available from
         comp.sources.misc archives in Volume 23.

18) How do I get METAFONT to do what I want it to do?

    METAFONT allows you to create your own fonts, and ordinary TeX users
    will never need to use it. METAFONT, unlike TeX, requires some 
    customization. Each output device for which you will be generating 
    fonts needs a mode associated with it. Modes are defined using the 
    mode_def convention described on page 94 of _The METAFONTbook_. So 
    first create a file, which we will call local.mf, containing all the 
    mode_defs you will be using. The file modes.mf by Karl Berry,
    available via anonymous ftp from ftp.cs.umb.edu (158.121.104.33) in
    ./pub/tex is a good starting point for this. Listings of settings for 
    various output devices are also published periodically in TUGboat 
    (see question 11). Now create a plain base file using inimf, plain.mf, 
    and local.mf:
       % inimf
       This is METAFONT....
       **plain                 # you type plain
       (output)
       *input local            # you type this
       (output)
       *dump                   # you type this
       Beginning to dump on file plain....
       (output)
       %
    This should create a base file named plain.base (or something close)
    and should be moved to the directory containing the base files on
    your system.
 
    Now you need to make sure METAFONT loads this base when it starts
    up. If METAFONT loads the plain base by default on your system, then
    you're ready to go. Under Unix, we might, for instance define a 
    command mf which executes ``virmf &plain,'' loading the plain base
    file.
 
    The usual way to create a font with plain METAFONT is to then start 
    it with the line
       \mode=<mode name>; mag=<magnification>; input <font file name>
    in response to the * prompt or on the METAFONT command line. If 
    <mode name> is unknown or omitted, then the mode defaults to proof 
    mode. If this has happened METAFONT will produce an output file
    called <font file name>.2602gf. The <magnification> is a floating 
    point number or magstep (magsteps are defined in _The METAFONTbook_ 
    and _The TeXbook_). If mag=<magnification> is omitted, then the 
    default is 1. For example, to generate cmr10 at 12pt for an epson 
    printer you would type
       mf \mode=epson; mag=1.2; input cmr10
    Note that under Unix the '\' and ';' characters must usually be 
    escaped, so this would typically look something like
       mf \\mode=epson\; mag=1.2\; input cmr10
 
    If you don't have inimf or need a special mode that isn't in the
    base, you can put its commands in a file (e.g., ln03.mf) and invoke
    it on the fly with the \smode command. For example, to create 
    ln03.300gf for an LN03 printer, using the file
	% This is ln03.mf as of 2/27/90
	% mode_def courtesy of John Sauter
	proofing:=0;
	fontmaking:=1;
	tracingtitles:=0;
	pixels_per_inch:=300;
	blacker:=0.65;
	fillin:=-0.1;
	o_correction:=.5;
    (note the absence of the mode_def and enddef commands), you would type
       mf \smode="ln03"; input cmr10
    
19) Where do I get TeX/LaTeX for machine Y running Q?

    Unix - The Unix TeX distribution is available via anonymous ftp from any 
       CTAN archive (see question 22). The Northwest Computing Support Center
       was ordered closed by the University of Washington, thus Unix TeX
       can no longer be ordered.

       Instructions for retrieving TeX via anonymous ftp are available
       in the document FTP.nwc, itself available via anonymous ftp from
       ftp.cs.umb.edu (158.21.104.33) in ./pub/tex.

       Note: The Unix version of TeX allows your ``macros'' or ``inputs''
       and ``fonts'' directories to be hierarchically organized with
       further subdirectories, rather than dumping everything into one
       directory. This can cause TeX to start very slowly. The cure
       for this problem is to insure each subdirectory contains either
       only directories or only files.

    AIX - TeX for the IBM RS6000 running AIX can be found on
       ftp.dante.de (129.206.100.192) in ./tex-archive/systems/unix/aix3.2.

    386/ix - Executables for the 386/ix are available via anonymous ftp 
       from tik.vtt.fi (130.188.52.2) in ./pub/tex/bin-386ix and from 
       math.berkeley.edu (128.32.183.94) in ./pub/tex386ix.tar.Z.

    PC - A TeX package for the PC, including LaTeX, BibTeX, previewers,
       and drivers is available via anonymous ftp from 
       vax.eedsp.gatech.edu (130.207.226.24) in ./pub/TeX. The variety here
       is sbtex version 30 by Wayne Sullivan. EmTeX, another TeX package 
       for the PC by Eberhard Mattes, is available via anonymous ftp from 
       ftp.dante.de (129.206.100.192) in 
       ./tex-archive/systems/msdos/emtex and also from niord.shsu.edu
       (192.92.115.8) in [.emtex]. This package includes LaTeX, METAFONT,
       BibTeX, etc., as well. Documentation is available in both German 
       and English.

    Mac - see question 7 for a public domain version (OzTeX). Another version
       is CMacTeX, which has TeX 3.14, METAFONT 2.7, a screen previewer,
       dvips, a PostScript printing utility for the LaserWriter, and some font
       managing utilities. It is available from the CTAN archives discussed
       in question 22. 

    TOPS-20 - TeX was originally written on a DEC-10 under WAITS, and so
       was easily ported to TOPS-20. A Distribution that runs on TOPS-20 
       is available via anonymous ftp from ftp.math.utah.edu 
       (128.110.198.34) in ./pub/tex/pub/web.

    VAX/VMS - TeX for VMS is available from any CTAN site (see question 22)
       in the directory ./systems/vms. Standard tape distribution is 
       through DECUS.

    Atari - TeX is available for the Atari ST from atari.archive.umich.edu
       (141.211.165.41) in ./atari/tex. If anonymous ftp is not available
       to you, send a message containing the line ``help'' to
       atari@atari.archive.umich.edu. The mail server can uuencode
       binary files. Another version can be obtained via anonymous
       ftp from ifi.informatik.uni-stuttgart.de (129.69.211.1) in
       ./pub/atari.st/tex. There is also lots of TeX stuff for the
       Atari on the CTAN and ftp.cs.ruu.nl archives mentioned in
       question 22.

    Amiga - A full implementation of TeX 3.1 call PasTeX and METAFONT 2.7
        are available via anonymous ftp from merlin.etsu.edu (192.43.199.20)
        in ./ab20/AMIGA. It is also available via anonymous ftp from
        forwiss.uni-passau.de (132.231.20.10) in ./pub/amiga/tex. 
        You can also order a CDROM containing this and other amiga software
        from Walnut Creek CDROM, (510) 947-5997.

    Tandy 6000 - If you are interested in building TeX on this machine
        contact Ken Yap (ken@syd.dit.csiro.au), and he'll help you.

20) Where can I get a thesis style for LaTeX?

    Thesis styles are usually very specific to your University, so it's
    usually not profitable to ask the whole newsgroup for one. If you
    want to write your own, a good place to start is the ucthesis style
    available from any CTAN archive in macros/latex/contrib/ucthesis
    (see question 22).

21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
    and so on?

    These symbols are known as ``blackboard bold'' and are available in
    the AMS fonts ``msam'' (e.g., ``msam10'' for 10pt) and ``msbm''. 
    They replace the older ``msxm'' and ``msym''. The fonts have a large
    number of mathematical symbols to supplement the ones 
    provided by TeX. The fonts are available via anonymous ftp from
    e-math.ams.com (130.44.1.100) in the directory ./ams/amsfonts.
    Two files which load the fonts and define the symbols are provided,
    and both work with either TeX or LaTeX. Questions or suggestions 
    regarding these fonts should be directed to 
    tech-support@math.ams.com.

    A geometric sans serif blackboard bold font by Alan Jeffrey is available
    from any CTAN archive (see question 22) in ./tex-archive/fonts/bbold.

    A set of LaTeX macros for a ``lazy person's'' blackboard bold are:
       \newcommand{\R}{{\sf R\hspace*{-0.9ex}\rule{0.15ex}%
       {1.5ex}\hspace*{0.9ex}}}
       \newcommand{\N}{{\sf N\hspace*{-1.0ex}\rule{0.15ex}%
       {1.3ex}\hspace*{1.0ex}}}
       \newcommand{\Q}{{\sf Q\hspace*{-1.1ex}\rule{0.15ex}%
       {1.5ex}\hspace*{1.1ex}}}
       \newcommand{\C}{{\sf C\hspace*{-0.9ex}\rule{0.15ex}%
       {1.3ex}\hspace*{0.9ex}}}

22) What repositories of TeX material are available, and how can I access
    them?
 
    To aid the archiving and retrieval of of TeX-related files, a TUG
    working group developed the Comprehensive TeX Archive Network
    (CTAN).  Each CTAN site has identical material, and maintains
    authoritative versions of its material.  These collections are
    extensive; in particular, almost everything mentioned in this
    document is archived at the CTAN sites, even if not explicitly
    stated.

    The CTAN sites are currently ftp.dante.de (129.206.100.192)
    ftp.tex.ac.uk (134.151.44.19), and pip.shsu.edu (192.92.115.10). 
    The organization of TeX files on all these sites is identical and
    starts at ./tex-archive. To reduce network load, please use the
    CTAN site or mirror closest to you. A complete and current list
    of CTAN sites and mirrors can be obtained by using the finger
    utility to finger ctan_us@ftp.SHSU.edu.

    To find software at a CTAN site, use anonymous ftp to the host,
    and then execute the command `quote site index <search-term>'.

    The mail servers of the CTAN sites are not yet identical, but this is
    planned. Here are the current methods of access via electronic mail:
      - For the UK site, send a message to texserver@tex.ac.uk. The
        first non-blank line of the message must contain a valid
        TeXserver command (help, directory, files, whereis, search,
        or path). The program will then mail you a response notifying
        you that your request has been received. If you fail to get a
        response from the TeXserver, you may need to use the ``path''
        command to help the program out. For Internet users the
        return address is of the form name%site@nsfnet-relay, while
        for Bitnet and EARN it is name%site@earn-relay (i.e., include
        a line that says ``path name%site@nsfnet-relay'' along with a
        line containing ``help''). 
      - For ftp.dante.de, send a message containing the line
        ``help'' to mail-server@ftp.dante.de.
      - For the SHSU site, send a message with the line "help" to
        ftpmail@ftp.shsu.edu. This provides an ftp-like interface
        through mail.

    There are several other repositories of TeX material available:
      - ftp.cs.ruu.nl (131.211.80.17) also contains a substantial TeX
        archive with ftp access. To use it via email, send a message
        containing the line ``help'' to mail-server@cs.ruu.nl. This mail 
        server can send binary files in a variety of different formats.
      - There are LISTSERV facilities for TeX at LISTSERV@DHDURZ1.BITNET. 
        Send a message containing the line ``help'' to this address.
      - For users on BITNET, access to anonymous ftp for some files can
        be obtained indirectly by sending mail to BITFTP@PUCC.BITNET.
        Send a message containing the line ``help'' to this address for
        more information.
     
    There is also the DECUS TeX collection, a collection of TeX material
    for VMS, Unix, MS-DOS, and the Macintosh. It is available via 
    anonymous ftp from wuarchive.wustl.edu (128.252.135.4) in ./decus/tex.
    It can also be obtained from the DECUS Library (reference number 
    VS0058) in the US, or through your DECUS office outside of the US. To 
    contact the DECUS Library, send mail or call:
                 The DECUS Program Library
                 334 South Street SHR3-1/T25
                 Shrewsbury, MA 01545-4195
                 (800)332-3755
    The last update to this collection was in February 1991, so it is old.
     
    Another good source of information is NETWORK SOURCES OF TeX WARE by
    Peter Flynn which appeared in TeXhax, volume 90, issues 45-47 (in
    May 1990).      

23) How do I use PostScript fonts with LaTeX?

    The best way to do this is to install LaTeX2e (see question 41)
    and use the PSNFSS2e package written by Sebastian Rahtz. It is
    available from all the major archives mentioned in question
    22. Other methods for using PostScript fonts in LaTeX are
    cumbersome at best.

24) How can I convert from format Y to TeX or LaTeX, and vice-versa?

    troff - TROFF-TO-LATEX.TAR-Z is available via anonymous ftp from
      wsmr-simtel20.army.mil (192.88.110.20) in the directory 
      pd2:<unix-c.textproc>. This program, written by Kamal Al-Yahya 
      at Stanford, assists in the translation of a troff document into 
      LaTeX format.  It recognizes most -ms and -man macros, plus most 
      eqn and some tbl preprocessor commands. Anything fancier needs 
      to be done by hand.  Two style files are provided.  There 
      is also a man page (which converts very well to LaTeX :-).  
      The program is copyrighted but free. An enhanced version of this
      program, tr2latex, is available from 
      ftp.informatik.rwth-aachen.de (137.226.112.172) in ./pub/TeX. 
      The DECUS TeX distribution (see question 22) also contains a program
      which converts troff to TeX. If you are interested in obtaining a copy
      of this program without getting the entire DECUS TeX distribution, 
      send the command: SENDME TROFFTOTEX in the body of a mail message to
      FILESERV@SHSU.BITNET (FILESERV@SHSU.edu), or use anonymous ftp to the
      directory [.TROFFTOTEX] on Niord.SHSU.edu (192.92.115.8). 

    scribe - Mark James has a copy of scribe2latex he has been
      unable to test but which he will let anyone interested have.
      Send email to jamesm@procor.dialogic.com. The program was written
      by Van Jacobson of Lawrence Berkeley Laboratory.

    wordperfect -  wp2latex.zip is available on wuarchive.wustl.edu
      (128.252.135.4) in the directory ./mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in the directory pd1:<msdos.tex>.
      This is a PC program written in Turbo Pascal by R. C. Houtepen at
      the Eindhoven University in the Netherlands.  It converts
      WordPerfect 5.0 documents to LaTeX.  Pascal source is included.
      Users find it ``helpful'' and ``decent'' in spite of some
      limitations. It gets high marks for handling font changes.
      Limitations include no indices, table of contents, margins or
      graphics.  It also won't handle the new features of WordPerfect
      5.1, in particular the equation formatter. The program is
      copyrighted but free.

      Glenn Geers of the University of Sydney (glenn@qed.physics.su.oz.au)
      is translating wp2latex into C and adding some WordPerfect 5.1
      features, in particular its equation handling.  This is an ongoing
      project; the most recent version can be retrieved via anonymous ftp
      from suphys.physics.su.oz.au (129.78.129.1) in ./wp2latex. It was 
      posted to alt.sources on 8 August 1990.

      Commercial packages are available for DOS which convert from
      WordPerfect to LaTeX, and from TeX and LaTeX to WordPerfect, but
      I am unaware of any free products which do this.

    PC-Write - pcwritex.arc is available on wuarchive.wustl.edu
      (128.252.135.4) in directory mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in directory pd1:<msdos.tex>.
      This is a print driver for PC-Write that ``prints'' a PC-Write V2.71
      document to a TeX-compatible disk file.  It was written by Peter
      Flynn at University College, Cork, Ireland.  It is public domain.  

    runoff - Peter Vanroose (vanroose@esat.kuleuven.ac.be) has 
      written a RUNOFF-to-TeX conversion program in VMS Pascal.  It is 
      available from comp.text archives (they do exist, don't they?  The 
      program was submitted in December 1987) or from the author 
      (peter@dit.lth.se) or from Mark James (jamesm@procor.dialogic.com).

    refer/Tib - There are a few programs for converting bibliographic data 
      between BibTeX and refer/Tib formats.  They are available via 
      anonymous ftp from ftp.ai.mit.edu (128.52.32.11) in the 
      directory ./pub/refer-to-bibtex.  In spite of the directory name, 
      it also contains a  shell script to convert BibTeX to REFER as 
      well. Unfortunately, this collection is not maintained.

    RTF - A program for converting Microsoft's Rich Text Format to TeX
      is available via anonymous ftp from astro.princeton.edu
      (128.112.128.131) in ./pub/rtf2TeX.tar.Z. It was written and is
      maintained by Robert Lupton (rhl@astro.princeton.edu). There is
      also an rtf2LateX written by Erwin Wechtl available from 
      ftp.vmars.tuwien.ac.at (128.130.39.16) in ./pub/misc.

    Microsoft Word - A rudimentary program for converting MS-Word
      to LaTeX is wd2latex, for MS-DOS, available via anonymous ftp
      from any CTAN site (see question 22). A better idea, however, 
      is to convert the document to RTF format and use the RTF 
      converter mentioned above.
    
    In addition, a group at Ohio State University is working on a common
    document format based on SGML.  In theory any format could be
    translated to or from this one.  Also, Framemaker supposedly has
    ``import filters'' to aid in the translation from alien formats
    (presumably including TeX) to Framemaker; perhaps other desktop
    publishing programs have similar things.
      
25) How do I get a file into the major style repositories?
    
    Use anonymous ftp to any CTAN archive (see question 22) and
    retrieve the file README.uploads in the root directory. It contains
    instructions for uploading files and notifying the appropriate
    people for that site.

    If you cannot use ftp, mail your contribution to sty-mgr@shsu.edu
    and it will be passed along. You will make everyone's life easier
    if you choose a descriptive and unique name for your submission, so
    it's probably good idea to browse through some of the styles
    already available to insure your style file's name is not already
    in use.

26) Where can I get font Y?

    A comprehensive list of METAFONT fonts is posted to Comp.fonts
    about once every six weeks by Lee Quin (lee@sq.sq.com). It contains
    both commercial fonts and fonts available via anonymous ftp. Most
    of the fonts available via anonymous ftp are available from
    the CTAN archives (see question 22). Also, the file wujastyk.txh
    ./tex-archive/digests/texhax/txh/wujastyk.txh is a copy of
    Dominik Wujastyk's font article, and contains information on
    METAFONT fonts as well.

27) Where can I get a dvi driver for the HP LaserJet?

    PC - The emtex package mentioned in question 19 contains a driver for
       the LaserJet, dvihplj. 

    Version 2.10 of the Beebe drivers support the LaserJet. These drivers
    will compile under Unix, VMS, and on the Atari ST and DEC-20's. They
    are available from ftp.math.utah.edu (128.110.198.34) in ./pub/tex/dvi.

28) TeX and LaTeX are hyphenating words weirdly. What can I do?

    You have a version mismatch problem. The hyphenation algorithm changed
    between version 2.9 and 3.0. If you are using TeX version 3.0 or
    later, make sure you have plain.tex and lplain.tex files with a
    version number of at least 3.0.

    For those of you curious about the change, here's what happened:
    in versions of TeX before 3.0 the hyphenation algorithm would not
    break a word if the part before the break was not at least two
    characters long, and the part after the break at least three 
    characters long. Starting with version 3.0 two integer parameters,
    \lefthyphenmin and \righthyphenmin, control the length of these
    fragments. These are set to 2 and 3, respectively, in the new
    plain and lplain formats. They can be set to any value, of course,
    but if \lefthyphenmin + \righthyphenmin is greater than 62, all
    hyphenation is suppressed.

29) How can I convert a TeX or LaTeX file into a plain ASCII file,
    with all the formatting intact, a la nroff?

    Ralph Droms (droms@bucknell.edu) has a style file and a C program
    that provide the LaTeX equivalent of nroff. Although it doesn't do
    a good job with tables and math, it's the best way to convert that
    I've seen. The software is available for anonymous ftp from
    sol.cs.bucknell.edu (134.82.1.8) in ./droms/txt-dist.tar. This is a
    modification of the dvi2tty program; the original often does an
    acceptable job and can be gotten from any CTAN site (see question 22).

    Another possibility is to use screen.sty, available from all the
    major archives. However you need a program called crudetype to
    process the resulting dvi file. It is available from
    emx.utexas.edu (128.83.186.11) in
    ./pub/mnt/source/tex/tex-3.0/DVIware/lpr-viewers/crudetype and
    from ftp.uni-stuttgart.de (129.69.8.13) in
    ./tex-archive/dviware/screenview. Another possibility is to use
    the LaTeX-to-ASCII conversion program, l2a, available from
    comp.sources.misc archives (one archive site is ftp.uu.net
    (192.48.96.9)), although this is really more of a de-TeXing
    program. If you are running under Unix and have C++ and perl, you
    might try Jonathan Monsarrat's LameTeX package (which actually
    does much more than this), available from wilma.cs.brown.edu
    (128.148.33.66) in ./pub/lametex.tar.Z.

30) How do I enlarge TeX? I keep getting `memory capacity exceeded'
    errors.

    Most of the time, a ``memory capacity exceeded'' error can be fixed
    without enlarging TeX.  The most common causes are unmatched braces,
    extra-long lines, and poorly-written macros.  Extra-long lines
    are often introduced when files are transferred incorrectly between
    operating systems.  (The tell-tale sign of an extra-long line error
    is when the complaint is that the `buf_size' has overflowed.)

    If you really need to extend your TeX's capacity, the proper method
    varies depending on your installation.  In the purest form, you
    change the parameters in module 11 (``The following parameters can
    be changed...'')  In less pure forms, you might need to modify a
    change file, or perhaps change some environment variables.  Consult
    the documentation that came with your particular implementation.

31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
    numbered. What do I do?

    If you see this, you are using the \maketitle command too. This is
    not a bug but a feature! The standard LaTeX styles are written so
    that initial pages (pages containing a \maketitle, \part, or \chapter)
    have a different page style than the rest of the document. Hence, the
    above commands internally issue a \thispagestyle{plain}. This is
    usually not acceptable behavior is the page style is `empty'.

    Possible workarounds include:   
     - Put \thispagestyle{empty} immediately after the \maketitle command, 
       with no blank line between them.
     - Use fancyheadings.sty, available from any CTAN (see question 22).
       In this style, the style for initial pages can be customized as well.

32) Where do I find documentation about BibTeX?

    BibTeX, a program originally designed to produce bibliographies in
    conjunction with LaTeX, is explained in Section 4.3 and Appendix B 
    of Leslie Lamport's LaTeX manual.  The ``BibTeXing'' document, 
    contained in the file btxdoc.tex, gives a more complete description.
    _The LaTeX Companion_ also has information on BibTeX and writing 
    BibTeX style files.

    The ``Designing BibTeX Styles'' document, contained in the file 
    btxhak.tex, explains the postfix stack-based language used to
    write BibTeX styles (.bst files).  The file btxbst.doc is the template
    file for the four standard styles (plain, abbrv, alpha, unsrt). It
    also contains the documentation for them.

    The current Unix-BibTeX man page, contained in the file
    bibtex.1, was updated in January 1992 and is about one page long.
    There's an old and obsolete version floating around, written in 1985
    before ``BibTeXing'' and ``Designing BibTeX Styles'' appeared, that is
    several pages long.  You should ignore it (or throw it away), since it
    describes BibTeX version 0.98, style files of which are incompatible 
    with the current version, 0.99 (to be precise, 0.99c).

    All files mentioned in this answer are available via anonymous ftp
    from labrea.stanford.edu (36.8.0.112) in the BibTeX ftp area, 
    tex/bibtex. All the non-Unix files should be available on any system 
    that runs BibTeX; if they're not on your system, please complain to 
    your BibTeX installer or to your distribution source.

33) How do I use BibTeX with plain TeX?

    The file btxmac.tex contains TeX macros and documentation for using
    BibTeX with plain TeX, either directly or with Karl Berry's Eplain
    package. It is available via anonymous ftp from labrea.stanford.edu
    (36.8.0.112) in tex/bibtex (see question 32 for more information 
    about BibTeX).

34) How do I draw Feynman diagrams in LaTeX?

    Michael Levine's macro package for drawing Feynman diagrams in LaTeX
    is available via mail-server from physics.utoronto.ca. Send a message
    containing the line ``send INDEX'' to mail-server@physics.utoronto.ca
    for information on how to retrieve it. It is also available from any
    CTAN site or mirror (see question 22).

35) What is the New Font Selection Scheme (NFSS)?

    NFSS is an extension to LaTeX written by Frank Mittelbach and Rainer
    Sch\"opf. It is described in TUGboat, volume 10 (1989), No. 2.
    In traditional typesetting, fonts are described by four parameters:
    the family (e.g., computer modern), the series (i.e., the weight and
    width of the font, like light or bold), the shape (e.g., italic), and
    the size. NFSS is a mechanism allowing the user to change any of these
    independently. NFSS makes it relatively easy to use nonstandard fonts
    such as the PostScript ones with LaTeX, and easy to change math fonts.
    It also allows dynamic loading of fonts at runtime (not when the
    format file is created).

    NFSS is no longer supported for LaTeX version 2.09, but is standard
    with LaTeX2e (see question 41).

    There is one caveat that applies to LaTeX documents written for
    the OLD scheme: some of them use special styles for special fonts
    which will not work under the NFSS.

36) In LaTeX, my cross-references for floats (figures and tables) are
    incorrect. What's wrong?

    The \label command must come after the \caption command, or
    be part of it. For example,
       \begin{figure}               \begin{figure}
       \caption{A Figure}    or     \caption{A Figure\label{fig}}
       \label{fig}                  \end{figure}
       \end{figure}

37) I want to change the margins in LaTeX. What can I do?

    This answer first helps you change the margins throughout a
    document, then tells you how to change the margins in a portion
    of the document.

    Perhaps the easiest way to get more out of a page in LaTeX is to
    get fullpage.sty, available from all the major archive servers
    mentioned in question 22. This sets the margins of the page identical
    to those of Plain TeX, i.e., 1-inch margins at all four sides of the
    paper. It also contains an adjustment for A4 paper.

    Here is a brief explanation of what's going on with the page
    parameters in LaTeX. They are explained in section C.4.2 of the
    LaTeX manual (p. 163). The margin parameters represent measurements
    made to the DVI file. The origin in DVI coordinates is one inch
    from the top of the paper and one inch from the left side. This
    explains the ``one inch less than'' terminology used in the LaTeX
    manual. In DVI coordinates, positive horizontal measurements extend
    right across the page, and positive vertical measurements extend down
    the page. Thus, for margins closer to the left and top edges of the
    page than 1 inch, the corresponding parameters, e.g.,
    \evensidemargin, \oddsidemargin, \topmargin, can be set to negative
    values.

    Finally, to change the margins of a document within the document,
    modifying the parameters listed on page 163 will not work. They
    can only be changed in the preamble of the document, i.e, before
    the \begin{document} statement. To adjust the margins within a
    document we define an environment which does it:
      \newenvironment{changemargin}[2]{\begin{list}{}{
         \setlength{\topsep}{0pt}\setlength{\leftmargin}{0pt}
         \setlength{\rightmargin}{0pt}
         \setlength{\listparindent}{\parindent}
         \setlength{\itemindent}{\parindent}
         \setlength{\parsep}{0pt plus 1pt}
         \addtolength{\leftmargin}{#1}\addtolength{\rightmargin}{#2}
         }\item }{\end{list}}
    This environment takes two arguments, and will indent the left
    and right margins by their values, respectively. Negative values
    will cause the margins to be widened, so
    \begin{changemargin}{-1cm}{-1cm} widens the left and right margins
    by 1cm.

38) How do I find the width of a letter, word, or phrase in TeX?

    Put the word in a box, and measure the width of the box. For example,
        \setbox0=\hbox{hi}
        width=\wd0
    Note that if the quantity in the hbox is a phrase, the actual 
    measurement only approximates this width, since the interword glue
    can be adjusted in paragraph mode.

    In LaTeX, the following works (taken from the manual):
        \newlength{\gnat}
        \settowidth{\gnat}{\em small}
    This sets the value of the length command \gnat to the width of ``small''
    in emphasized text.

39) In LaTeX, is there a comment or ``ignore'' environment with which
    I can exclude blocks of text from the .dvi file?

    Rainer Sch\"opf's verbatim.sty provides a comment environment which
    excludes everything between \begin{comment} and \end{comment}. It is
    available via anonymous ftp from any CTAN site (see question 22) in
    ./tex-archive/macros/latex/distribs. Several files are needed to
    install the package. A more general environment for doing this is
    comment.sty, also available from the CTAN sites in
    ./tex-archive/macros/latex/contrib/misc.

40) Where can I find a spelling checker for my TeX file?

    For Unix, ispell is probably the program of choice. It is available
    from any CTAN site (see question 22) in ./tex-archive/support/ispell.

    For DOS, jspell is an extended version of ispell, and is available via
    anonymous ftp from oak.oakland.edu (141.210.10.117) in 
    ./pub/msdos/tex/jspell*.zip.

    For VMS, a spell checker can be found via anonymous ftp from ftp.spc.edu
    in  [.MACRO32.SAVESETS]. Retrieve SPELL.ZIP and SPELL_DICTIONARY.ZIP. 

41) What is LaTeX2e?

    LaTeX2e is the new standard version of LaTeX, prepared and
    supported by the LaTeX3 project team. It is the current version of
    LaTeX and is available from any CTAN site (see question 22) in
    ./tex-archive/macros/latex. LaTeX 2.09 is no longer supported.

    LaTeX2e is upwardly compatible with LaTeX 2.09, but supports many new
    features, including:
     - NFSS (see question 35) is now standard.
     - SliTeX is consolidated into it, and there is no longer a need for
       a separate program.
     - The output routine gives better control of floating environments,
       such as figures.
     - There is a documented interface to style files.
     - Enhanced box commands, e.g., options to specify the height of a 
       minipage.
     - \ref is now robust and can be used in \caption.
     - \newcommand can define commands with optional arguments.
     - A standard package for color and graphics inclusion.

    Since LaTeX2e is supported, you can report bugs or problems with it by
    typing `latex latexbug' and sending the report it generates to 
    latex-bugs@rus.uni-stuttgart.de.

42) In LaTeX, how can I define a new log-like function?

    Use the \mathop command, as in:
         \newcommand{\diag}{\mathop{\mathrm{diag}}}

    Subscripts and superscripts to \diag will be done identically to \lim.
    If you want your subscripts and superscripts placed to the right, do:
         \newcommand{\diag}{\mathop{\mathrm{diag}}\nolimits}

    Older versions of LaTeX may not define \mathrm; alternatively, use
    {\rm diag}.

43) In LaTeX, how do I put a \sqrt in my \caption statement?

    \sqrt is a fragile command and the argument to \caption is ordinarily
    a moving argument. Therefore \sqrt needs to be preceded with a \protect
    command.

44) In LaTeX, how do I get thin and thick \hlines in a table?

    In the preamble, do: 
         \setlength{\doublerulesep}{\arrayrulewidth}.
    Then in a table or array, do:
         <stuff in the table>  \\\hline         %thin hline
         <more stuff in table> \\\hline\hline   %thick hline

45) In LaTeX, how do I number the bibliography using Arabic numbers without
    square brackets or using superscripts?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\@biblabel[1]{#1.}     % Arabic numbers, no brackets
         \renewcommand\@biblabel[1]{$^{#1}$} % Superscripts

46) In LaTeX, why are my cites all numbered zero?

    Your document style and your version of LaTeX are incompatible.
    Since this may reflect an incomplete update done at some point,
    you should probably get the complete distribution (see question
    22).

    This problem usually occurs using an old university style file
    which is not maintained. If you are going to correct the style
    file, the definition of \thebibliography needs to be updated from
    article.cls (or article.sty).

47) In LaTeX, my figures get put on a page by themselves with too much
    whitespace, but when I tried \begin{figure}[t] they get printed at
    the end. Why?

    Your figures are bigger than \floatpagefraction, but you are
    willing to accept pages with less text than the default.  Use:
         \renewcommand\floatpagefraction{.9}
         \renewcommand\topfraction{.9}
         \renewcommand\bottomfraction{.9}
         \renewcommand\textfraction{.1}

    You can adjust the cut-off value if you like, but it makes no
    sense to go higher than .95 (LaTeX's default value is only .5).
    Also, the first 3 values should be equal, and the last should be
    1 - \floatpagefraction.  Otherwise, you are likely to get floats
    flushed to the end.

48) In LaTeX, how do I make a line break in a section title?

    It is better to try to prevent bad breaks by using ~ than to force
    good breaks. Unfortunately, LaTeX's default styles make titles with
    flush margins and most other styles have followed, so this may not
    work in many cases. You should definitely avoid hyphenation in titles.

    To force line breaks in a title, but not in the table of contents,
    use the optional argument for \section:
         \section[This is the Title]{This is\\ the Title}

    One benefit of this is that \\ is safe and no \protect is needed.

49) In LaTeX, how do I number equations by section?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\theequation{\thesection.\arabic{equation}}
         \@addtoreset{equation}{section}

    If you have chapters with a preamble that comes before the first
    section, you should not put equations there, as you will get funny
    numbers like 3.0.1. There are also two style files available from
    any CTAN site called seceqn.sty and apeqnum.sty. The first numbers
    equations by section, and the second gives individual equation
    numbers to equations in the appendix.

-- 
Bobby Bodenheimer				@hot.caltech.edu
// ARPA  : bobby@hot.caltech.edu                |
// BITNET: bobby@caltech.bitnet                 | Woof!
// UUCP  : {amdahl,ames!elroy}!cit-vax!bobby    | 


Article: 28330 of comp.text.tex
Path: news.doit.wisc.edu!saimiri.primate.wisc.edu!caen!spool.mu.edu!howland.reston.ans.net!agate!dog.ee.lbl.gov!overload.lbl.gov!lll-winken.llnl.gov!fnnews.fnal.gov!nntp-server.caltech.edu!hot.caltech.edu!bobby
From: bobby@hot.caltech.edu (Bobby Bodenheimer)
Newsgroups: comp.text.tex,fr.comp.text.tex,comp.answers,news.answers
Subject: TeX, LaTeX, etc.: Frequently Asked Questions with Answers [Monthly]
Supersedes: <tex-faq_784267264@hot.caltech.edu>
Followup-To: comp.text.tex
Date: 8 Nov 1994 04:08:37 GMT
Organization: California Institute of Technology, Pasadena, CA.
Lines: 1210
Approved: news-answers-request@MIT.Edu
Expires: 6 Jan 1995 04:08:34 GMT
Message-ID: <tex-faq_784267714@hot.caltech.edu>
Reply-To: bobby@hot.caltech.edu
NNTP-Posting-Host: hot.caltech.edu
Keywords: monthly faq
Originator: bobby@hot.caltech.edu
Xref: news.doit.wisc.edu comp.text.tex:28330 comp.answers:7442 news.answers:23104

Archive-name: tex-faq

Comp.text.tex is a forum for the discussion of TeX, LaTeX and other
related things. TeX is a software system written by Donald Knuth to
typeset text, especially text containing mathematics. LaTeX is a set
of macros written in TeX, designed to simplify the the typesetting of
a document by allowing the user to concentrate on the content and
structure of the document rather than the exact appearance of the
finished product. METAFONT, also discussed here, is a program which
allows the user to design their own fonts. The definitive reference
for TeX is _The TeXbook_, by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13447-0, paperback 0-201-13448-9). For LaTeX, see _LaTeX, a
Document Preparation System_ by Leslie Lamport (Addison Wesley, 1986,
ISBN 0-201-15790-X); the second edition of this book covers LaTeX2e.
Full documentation for LaTeX2e can be found in _The LaTeX Companion_
by Michael Goossens, Frank Mittelbach, and Alexander Samarin (Addison
Wesley, 1993, ISBN 0-201-54199-8). For METAFONT, see _The
METAFONTbook_ by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13445-4). The American Mathematical Society has two macro
packages which are also popular, called AMS-TeX and AMS-LaTeX.

This article contains answers to some frequently asked questions on
comp.text.tex. Please don't ask these questions again, as they've been
answered many times before.

Malencontreusement, je n'ai ni le temps ni la comp\'etence pour
traduire cet article en fran\c{c}ais. Je prie donc, le lecture
interess\'e par fr.comp.text.tex d'avoir l'indulgence d'accepter la
version anglaise.

This is version 1.48 for November, last changed 11/7/94.

This article includes answers to:

  1) How can I get a copy of this article?
  2) Where can I get a DVI to PostScript conversion program?
  3) How can I include a PostScript figure in LaTeX?
  4) Where can I find a DVI previewer for machine Y running Q?
  5) Where can I get the manual for PiCTeX?
  6) In LaTeX, I put some definitions in my document, but I get the error
     ``Use of \@ doesn't match its definition.'' What's wrong?
  7) What is OzTeX and where can I get it (TeX for the Mac)?
  8) What is Fig and where can I get it?
  9) How do I get WEB for C, FORTRAN, or some other language?
  10) How can I typeset music in TeX?
  11) What is TUG and TUGboat?
  12) How do I convert Adobe's afm files to tfm format?
  13) In LaTeX, how do I get a double-spaced document?
  14) In LaTeX, how do I include a file in the verbatim environment?
  15) In LaTeX, how do I do Y?
  16) Where can I find a TeX macro or LaTeX style file for doing Y?
  17) How do I generate an index in TeX/LaTeX?
  18) How do I get METAFONT to do what I want it to do?
  19) Where do I get TeX/LaTeX for machine Y running Q?
  20) Where can I get a thesis style for LaTeX?
  21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
      and so on?
  22) What repositories of TeX material are available, and how can I
      access them?
  23) How do I use PostScript fonts with LaTeX?
  24) How can I convert from format Y to TeX or LaTeX, and vice-versa?
  25) How do I get a file into the major style repositories?
  26) Where can I get font Y?
  27) Where can I get a dvi driver for the HP LaserJet?
  28) TeX and LaTeX are hyphenating words weirdly. What can I do?
  29) How can I convert a TeX or LaTeX file into a plain ASCII file,
      with all the formatting intact, a la nroff?
  30) How do I enlarge TeX? I keep getting ``memory capacity exceeded''
      errors.
  31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
      numbered. What do I do?
  32) Where do I find documentation about BibTeX?
  33) How do I use BibTeX with plain TeX?
  34) How do I draw Feynman diagrams in LaTeX?
  35) What is the New Font Selection Scheme (NFSS)?
  36) In LaTeX, my cross-references for floats (figures and tables) are
      incorrect. What's wrong?
  37) I want to change the margins in LaTeX. What can I do?
  38) How do I find the width of a letter, word, or phrase in TeX?
  39) In LaTeX, is there a comment or ``ignore'' environment with which
      I can exclude blocks of text from the .dvi file?
  40) Where can I find a spelling checker for my TeX file?
  41) What is LaTeX2e?
  42) In LaTeX, how can I define a new log-like function?
  43) In LaTeX, how do I put a \sqrt in my \caption statement?
  44) In LaTeX, how do I get thin and thick \hlines in a table?
  45) In LaTeX, how do I number the bibliography using Arabic numbers without
      square brackets or using superscripts?
  46) In LaTeX, why are my cites all numbered zero?
  47) In LaTeX, my figures get put on a page by themselves with too much
      whitespace, but when I tried \begin{figure}[t] they get printed at
      the end. Why?
  48) In LaTeX, how do I make a line break in a section title?
  49) In LaTeX, how do I number equations by section?

If you are looking, for instance, for the answer to question 17, and wish
to skip everything else, you can search ahead for the regular expression
``^17)''.

These are all legitimate questions, but they seem to appear too 
frequently for long-time readers of the list. 

Many of the answers below tell you that you can obtain something
through anonymous ftp. ``Ftp'' stands for file transfer protocol, and
is also the name of a program implementing the protocol. The program
allows users to transfer files to and from remote sites, if the sites
are connected via a network such as the Internet. ``Anonymous ftp'' 
indicates a user may connect to a remote site as the user 
``anonymous'' with a password consisting of their email address, and
thus be able to retrieve files from that site. Remember, anonymous
ftp is a privilege and the system administrators for these sites 
have made these files available out of their own generosity. Therefore
please restrict your ftp'ing to non-prime hours at the various sites.

I would like to acknowledge Don Hosek, Ken Yap, Tomas Rokicki, Micah
Beck, David Carlisle, and Donald Arseneau who provided many of the
answers.  Joe Weening, Hal Perkins, Walter Carlip, Max Hailpern, Tad
Guy, Raymond Chen, Henning Schulzrinne, Sebastian Rahtz, Mark James,
Peter Galko, Mike Ernst, Rainer Sch\"opf, Oren Patashnik, Philippe
Louarn, Rafal Zbikowski, Anita Marie Hoover, David Rhead, Darrell
McCauley, Cameron Smith, Emma Pease, Patrick McPhee, Karl Berry, Robin
Fairbairns, Joohee Jeong, Sam Steingold, J\"org Knappen, Barbara
Beeton, Norman Ramsay, and Richard Mathar provided additional material
and criticisms. The format of this document is based on the Frequently
Asked Questions written by Steve Hayman which formerly appeared in
comp.unix.wizards. Any mistakes are mine. Send corrections,
suggestions, and additions to bobby@hot.caltech.edu.

1) How can I get a copy of this article?

   You're reading it aren't you? SAVE it :-). This article is posted
   monthly to comp.text.tex and cross-posted to news.answers. It is
   therefore archived at any site that archives news.answers.
   News.answers is archived on rtfm.mit.edu, and this article is
   available there via anonymous ftp in the directory
   ./pub/usenet/news.answers/tex-faq. If you do not have anonymous
   ftp, send an e-mail message containing the lines ``SENDME FAQ.'' to
   fileserv@shsu.edu (fileserv@shsu.bitnet).  Another way to retrieve
   it via email is through the mailserver at rtfm: send a message
   containing the lines ``help'' and ``index'' to
   mail-server@rtfm.mit.edu for information on how to obtain it.
 
   Other news.answers/FAQ archives are: cnam.cnam.fr (163.173.128.6)
   in the anonymous ftp directory /pub/FAQ; ftp.uu.net (192.48.96.2)
   in the anonymous ftp directory /pub/usenet (also available via mail
   server requests to netlib@uunet.uu.net, or via uunet's 1-900
   anonymous UUCP phone number); and ftp.cs.ruu.nl (131.211.80.17) in
   the anonymous ftp directory NEWS.ANSWERS (also accessible via mail
   server requests to mail-server@cs.ruu.nl). Many of the archives
   mentioned in question 22 also maintain current versions of this
   document.

2) Where can I get a DVI to PostScript conversion program?

   Two good DVI to PostScript conversion programs that run under
   Unix are:
     dvips - by Tomas Rokicki. This driver is very nice and has the
       ability to deal with virtual fonts. Available via anonymous ftp
       from labrea.stanford.edu (36.8.0.112) in ./pub. Dvips is
       written in C and ports easily to other operating systems.  It
       is available for VMS via anonymous ftp from any CTAN site (see
       question 22) and also through the DECUS library (see question
       22). A precompiled version for MSDOS is available from
       monu1.cc.monash.edu.au (130.194.1.101) in ./pub/dvips54.zip,
       from shape.mps.ohio-state.edu (128.146.110.30) in
       ./pub/msdos/dvips/dvips54.zip, or from any CTAN site (see
       question 22) in ./systems/msdos/drivers/dvips.  If you wish to
       use postscript fonts, get dvipslib.zip as well.  Documentation
       is available in dvips.ps.Z. Karl Berry has a version of dvips
       called dvipsk which has a configure script and path searching
       code similar to that in his other programs (e.g., web2c).  It
       is available via anonymous ftp from ftp.cs.umb.edu
       (158.121.104.33) in ./pub/tex/.

     dvitops - by James Clark. Available via anonymous ftp from any CTAN site
       (see question 22, e.g., pip.shsu.edu (192.92.115.10)), in 
       ./tex-archive/dviware/dvitops. Dvitops is written in C and will 
       compile under Unix, MSDOS, VMS, and Primos.

3) How can I include a PostScript figure in LaTeX?

   In LaTeX2e, the best way is \usepackage[dvips]{graphics}.

   Perhaps the best way to do this is to use the psfig macros written
   by Trevor Darrell. They are available via anonymous ftp from
   any CTAN site (see question 22) in graphics/psfig. You will
   also need a dvi to PostScript conversion program that supports
   \specials. The ones mentioned in question 2 do, and come with a
   version of psfig ready to use with them. The psfig macros work best
   with Encapsulated PostScript Files (EPS). In particular, psfig will
   need the file to have a BoundingBox (see Appendix C of the
   _PostScript Language Reference Manual_). If you don't have an EPS
   file, life can be difficult.

   To allow resizing by dvips (see question 2) with PostScript files
   that are not EPS files, add the one line comment
   %%BoundingBox: llx lly urx ury" 
   prior to any non-comment line in the PostScript file. The four
   ``lower left'' and ``upper right'' arguments must be numbers to
   indicate the lower left and upper right corner in units of 1/72 of
   an inch. Otherwise, dvips assumes the PostScript file fills a whole
   page.

   One further note about including PostScript figures is that they
   are not part of the dvi file, but are included when you use a dvi
   to PostScript conversion program. As a result, most dvi previewers
   will simply show the blank space TeX has reserved for your figure,
   not the figure itself. LaTeX2e (see question 41) will have a standard
   interface for graphics inclusion, rotation, color, and other 
   driver-related features.

   Anil K. Goel has written a long document describing in detail how to
   include figures, pictures, and images in LaTeX documents. It is available
   via anonymous ftp from math.uwaterloo.ca (129.97.140.144) in
   ./pub/figsInLatex.ps.Z. A dvi file with the included PostScript files
   is also available.

4) Where can I find a DVI previewer for machine Y running Q?

   This briefly lists some previewers available via anonymous ftp. All
   are available from any CTAN site (see question 22) in addition to the
   sites listed below:
      dvipage - For SunView. This was published in volume 15 of 
        comp.sources.unix and is available at sites that archive
        this. One such source is archive.cis.ohio-state.edu 
        (128.146.8.52).
      xtex - For the X Window System. Available via anonymous ftp 
        from ftp.cs.colorado.edu (128.138.243.151) in 
        ./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z.
      dviapollo- for Apollo Domain. Available via anonymous ftp from
        labrea.stanford.edu (36.8.0.112) in ./pub/dviapollo.tar.Z.
      dvidis - For VAXstation VWS. Available via anonymous ftp from
        src.doc.ic.ac.uk (146.169.2.1) in /packages/tex/dviware/dvidis.
      xdvi - Also for the X Window System. Available via anonymous ftp
        from ftp.x.org (192.112.44.100) in ./contrib/xdvi.tar.Z. Karl
        Berry has a version of called xdvik with features analogous
        to his dvipsk (see question 2) available via anonymous ftp from
        ftp.cs.umb.edu (158.121.104.33) in ./pub/tex.
      dvitovdu - for Tektronix 4010 and other terminals under Unix.
        Available via anonymous ftp from wsmr-simtel20.army.mil
        (192.88.110.20) in the directory pd6:<unix-c.printers> as
        dvi2vdu.tar-z (ftp in ``tenex'' mode).
      dvi2tty - A dvi to ASCII conversion program, for normal terminals.
        Available from ftp.cs.ruu.nl (131.211.80.17) in 
        ./pub/TEX/DVI/dvi2tty.shar. A VMS version is available from
        fileserv@shsu.edu (see question 22).
      texsgi - For SGI under Irix. Available via anonymous ftp from 
        ftp.brl.mil (128.63.16.158) in ./info-iris/tex. Both a binary 
        and source are available, but be sure to get the fonts as well.
   
5) Where can I get the manual for PiCTeX?

   The PiCTeX manual is not free. It is available for $30 ($35 with the
   disk) from the TeX Users Group:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

   The proceeds from this sale go to Michael Wichura, the author of PiCTeX,
   and TUG.

6) In LaTeX, I put some definitions in my document, but I get the error
   ``Use of \@ doesn't match its definition.'' What's wrong?

   Definitions should be be in a style file, and if you move them there,
   you should have no problem.

   If you don't want to do that, you need to include \makeatletter
   before the definitions to allow the ``internal'' LaTeX commands to
   be accessed.  These commands are normally protected from change by
   having @ in them.  Since @ is not a letter, it is normally not
   allowed as part of a multi-letter command name. To access internal
   commands you need to tell LaTeX to pretend that @ is a letter.
   This happens automatically when LaTeX reads a style file, but in
   your main document you need to surround the offending commands with
   \makeatletter ... \makeatother.

7) What is OzTeX and where can I get it (TeX for the Mac)?

   OzTeX is a public domain version of TeX for the Macintosh. A DVI
   Previewer and PostScript driver are also included. It should run on
   any Macintosh Plus, SE, II, or newer model, but will not work on a
   128K or 512K Mac. It was written by Andrew Trevorrow, and is available 
   via anonymous ftp from from midway.uchicago.edu (128.135.12.73) in 
   ./pub/OzTeX, which contains other public domain TeX-related software 
   for the Mac as well, or on a floppy disk from TUG (see question 11). 
   Questions about OzTeX may be directed to oztex@midway.uchicago.edu.
   
8) What is Fig and where can I get it?

   Fig is a menu driven tool similar to MacDraw that allows you to
   draw objects on the screen of a Sun Workstation running SunView.
   TransFig is a set of tools which translate the code fig produces to
   other graphics languages including PostScript and the LaTeX picture
   environment. Both are available via anonymous ftp from
   ftp.cs.cornell.edu (128.84.218.75) in ./pub/fig. Both Fig and
   TransFig are also available from the Clarkson archive server at
   sun.soe.clarkson.edu (see question 22). Fig is supported by Micah
   Beck (beck@cs.cornell.edu) and Transfig is maintained by Brian
   Smith (bvsmith@lbl.gov). Another tool for fig conversion is fig2MF
   which generates METAFONT code from fig input. It is available from
   the CTAN archives discussed in question 22.

   XFig is essentially the same program except it runs under the X
   Window System. It is available via anonymous ftp from ftp.x.org
   (192.112.44.100) in ./contrib/applications/drawing_tools/xfig. It
   was written by Brian Smith.

9) How do I get WEB for C, FORTRAN, or some other language?

   TeX is written in the programming language WEB; WEB is a tool to
   implement the concept of ``literate programming.'' For more information
   on literate programming, see the newsgroup comp.programming.literate.

   There is a version of WEB for C called CWEB written by Silvio Levy. It
   is available via anonymous ftp from princeton.edu (128.112.128.1) in 
   the directory ./pub/cweb.

   There is a version of WEB called Spidery WEB which supports many 
   languages including ADA, awk, and C. It was written by Norman Ramsey 
   and, while not in the public domain, is usable free. It is available 
   via anonymous ftp from pip.shsu.edu (192.92.115.10) in 
   tex-archive/web/spiderweb.

   FWEB is a version of WEB for Fortran, Ratfor, and C written by John
   Krommes (krommes@lyman.pppl.gov). Version 1.13 is available via
   anonymous ftp from lyman.pppl.gov (192.55.106.129) in ./pub/fweb.

   SchemeWEB is a Unix filter that translates SchemeWEB into LaTeX source
   or Scheme source. It was written by John Ramsdell and is available from
   sun.soe.clarkson.edu (128.153.12.3) in ./pub/tex/tex-programs/schemeweb.

   APLWEB is a version of WEB for APL and is available from
   watserv1.waterloo.edu (129.97.129.140) in ./languages/apl.

   There are three flavors of WEB that are language-independent and
   have substantial user communities: funnelweb, noweb, and nuweb.
   NoWeb and NuWeb both emphasize simplicity; NoWeb is a bit simpler
   and more flexible, but NuWeb is more portable and easier to
   install.  FunnelWeb is more complex, but is routinely used on a
   wide variety of machines.  All three systems are available from any
   CTAN site (see question 22) in directory
   /tex-archive/web/{funnelweb,noweb,nuweb}.  An introduction to NoWeb
   appeared in the September 1994 IEEE Software, page 97.  Funnelweb
   also appeared in comp.sources.unix volume 26 issue 121, posted 11
   April 1993.

   Most of the above are also available from your nearest CTAN site
   (see question 22).

10) How can I typeset music in TeX?

    A package called MuTeX, written by Andrea Steinbach and Angelika
    Schofer, aids in doing this. It is available via anonymous ftp
    from ftp.cs.ruu.nl (131.211.80.17) in pub/TEX/MuTeX.tar.Z.  This
    package allows you to typeset single-staff music and lyrics.

    A more powerful package which allows the typesetting of orchestral
    and polyphonic music is MusicTeX, written by Daniel Taupin 
    (taupin@frups51.bitnet). It is available via anonymous ftp from
    rsovax.ups.circe.fr (130.84.128.100) [.musictex]. It should also
    be available from the archive sites detailed in question 22.

    There is a mailing list for discussion of typesetting music in TeX.
    To subscribe, send a request to mutex-request@stolaf.edu.

11) What is TUG and TUGboat?

    TUG is the TeX Users Group. TUGboat is their newsletter, containing
    useful articles about TeX and METAFONT. TUG also distributes
    TeX-related microcomputer software on disks. Inquiries should be 
    directed to:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

12) How do I convert Adobe's afm files to tfm format?

    An afm2tfm program is distributed with dvips, available via
    anonymous ftp from labrea.stanford.edu (36.8.0.112) in ./pub. Alan
    Jeffrey's fontinst package is an afm2tfm converter written in TeX 
    and will be used to support the PostScript tfm files for LaTeX2e
    (see question 41). It is available from any CTAN site (see question
    22).

    For the Macintosh, there is a program called EdMetrics which does
    the job (and more). It is available free from:
              Blue Sky Research
              534 Southwest Third Avenue
              Portland, Oregon 97204 (USA)
              800-622-8398 or 503-222-9571

13) In LaTeX, how do I get a double-spaced document?

    Are you producing a thesis, and trying to obey regulations that were
    drafted in the typewriter era?  LaTeX is a typesetting system, so the
    appropriate design conventions are for ``real books''.  Find whoever
    is responsible for the regulations, and try to get the wording changed
    to cater for typeset theses (e.g., to say ``if using a typesetting 
    system, aim to make your thesis look like a well-designed book'').

    If you fail to convince your officials, or want some inter-line 
    space for copy-editing:
     - In LaTeX2e, use \linespread. For double-spaced output, use
       \linespread{1.6}.
     - Try changing \baselinestretch: \renewcommand{\baselinestretch}{1.2}
       may be enough to give officials the impression you've kept
       to their regulations.  Don't try changing \baselineskip: its
       value is reset at any size-changing command.
     - Alternatively, get doublespace.sty from any CTAN site (see question 22,
       e.g., pip.shsu.edu (192.92.115.10)) in 
       ./tex-archive/macros/latex/contrib/misc. There's also a setspace.sty
       in the same directory which is more flexible, and consistent with the
       latest release of LaTeX.

    It's not worth going to a lot of trouble.  (If officials won't allow
    standard typographic conventions, you won't be able to produce an
    aesthetically pleasing document anyway!)

14) In LaTeX, how do I include a file in the verbatim environment?

    A good way to do this is to use Rainer Sch\"opf's verbatim.sty,
    which provides the command \verbatiminput that takes a file
    as an argument. This package is available from any CTAN site (see 
    question 22) in ./tex-archive/macros/latex/distribs. Several
    files are needed.

    Another way to do this is to use the alltt environment defined in
    the style file alltt.sty available from the CTAN archives in 
    ./tex-archive/macros/latex/contrib/misc/alltt.sty.

15) In LaTeX, how do I do Y?

    If you can't figure out how to do something in LaTeX after you
    have read the manual very carefully, asked your local LaTeX
    guru, and thought about it, there is a LaTeX help service 
    available. Please note that the way to accomplish something 
    in LaTeX is often by using an appropriate style file, so please
    check this also (see question 16). If none of this works, send mail 
    in English describing your problem to latex-help@cs.stanford.edu. 
    If you haven't gotten a reply to your problem within about a week, 
    send mail to latex-help-coordinator@cs.stanford.edu.

16) Where can I find a TeX macro or LaTeX style file for doing Y?

    Before you ask for a TeX macro or LaTeX style file to do something, 
    please search the TeX macro index written by David M. Jones
    (dmjones@theory.lcs.mit.edu) and available via anonymous ftp
    from theory.lcs.mit.edu (18.52.0.92) in ./pub/tex/TeX-index. Those 
    without access to anonymous ftp can send a message containing the
    line ``send tex TeX-index'' to archive-server@theory.lcs.mit.edu.
    The index is an excellent reference document with plenty of 
    cross-references. Also, many of the archive sites mentioned in
    question 22 maintain extensive latex style collections, which you
    can look through if you need something not in the index.

    Another possibility is to use the searching features of the CTAN
    archives (see question 22). Once you have an anonymous ftp connection
    established to a CTAN site, you can type the command `quote site index
    <term>' and it will provide a list of files with the string <term> in
    their names.
    
17) How do I generate an index in TeX/LaTeX?

    Making an index is not trivial. There are several indexing programs
    which aid in doing this. The following are available from any CTAN
    site (see question 22):
      makeindex - for LaTeX under Unix (but runs under other OS's
         without changes). A version for the Macintosh is available from
         Johnny Tolliver at tolliver%atf.mfenet@nmfecc.llnl.gov. The 
         Makeindex documentation is a good source of information on how 
         to create your own index. Makeindex can be used with some TeX macro
         packages other than LaTeX, such as Eplain.
      idxtex - for LaTeX under VMS.
      texix - for TeX on CMS and Macintosh machines.
      texindex - for LaTeX under Unix. Available from
         comp.sources.misc archives in Volume 23.

18) How do I get METAFONT to do what I want it to do?

    METAFONT allows you to create your own fonts, and ordinary TeX users
    will never need to use it. METAFONT, unlike TeX, requires some 
    customization. Each output device for which you will be generating 
    fonts needs a mode associated with it. Modes are defined using the 
    mode_def convention described on page 94 of _The METAFONTbook_. So 
    first create a file, which we will call local.mf, containing all the 
    mode_defs you will be using. The file modes.mf by Karl Berry,
    available via anonymous ftp from ftp.cs.umb.edu (158.121.104.33) in
    ./pub/tex is a good starting point for this. Listings of settings for 
    various output devices are also published periodically in TUGboat 
    (see question 11). Now create a plain base file using inimf, plain.mf, 
    and local.mf:
       % inimf
       This is METAFONT....
       **plain                 # you type plain
       (output)
       *input local            # you type this
       (output)
       *dump                   # you type this
       Beginning to dump on file plain....
       (output)
       %
    This should create a base file named plain.base (or something close)
    and should be moved to the directory containing the base files on
    your system.
 
    Now you need to make sure METAFONT loads this base when it starts
    up. If METAFONT loads the plain base by default on your system, then
    you're ready to go. Under Unix, we might, for instance define a 
    command mf which executes ``virmf &plain,'' loading the plain base
    file.
 
    The usual way to create a font with plain METAFONT is to then start 
    it with the line
       \mode=<mode name>; mag=<magnification>; input <font file name>
    in response to the * prompt or on the METAFONT command line. If 
    <mode name> is unknown or omitted, then the mode defaults to proof 
    mode. If this has happened METAFONT will produce an output file
    called <font file name>.2602gf. The <magnification> is a floating 
    point number or magstep (magsteps are defined in _The METAFONTbook_ 
    and _The TeXbook_). If mag=<magnification> is omitted, then the 
    default is 1. For example, to generate cmr10 at 12pt for an epson 
    printer you would type
       mf \mode=epson; mag=1.2; input cmr10
    Note that under Unix the '\' and ';' characters must usually be 
    escaped, so this would typically look something like
       mf \\mode=epson\; mag=1.2\; input cmr10
 
    If you don't have inimf or need a special mode that isn't in the
    base, you can put its commands in a file (e.g., ln03.mf) and invoke
    it on the fly with the \smode command. For example, to create 
    ln03.300gf for an LN03 printer, using the file
	% This is ln03.mf as of 2/27/90
	% mode_def courtesy of John Sauter
	proofing:=0;
	fontmaking:=1;
	tracingtitles:=0;
	pixels_per_inch:=300;
	blacker:=0.65;
	fillin:=-0.1;
	o_correction:=.5;
    (note the absence of the mode_def and enddef commands), you would type
       mf \smode="ln03"; input cmr10
    
19) Where do I get TeX/LaTeX for machine Y running Q?

    Unix - The Unix TeX distribution is available via anonymous ftp from any 
       CTAN archive (see question 22). The Northwest Computing Support Center
       was ordered closed by the University of Washington, thus Unix TeX
       can no longer be ordered.

       Instructions for retrieving TeX via anonymous ftp are available
       in the document FTP.nwc, itself available via anonymous ftp from
       ftp.cs.umb.edu (158.21.104.33) in ./pub/tex.

       Note: The Unix version of TeX allows your ``macros'' or ``inputs''
       and ``fonts'' directories to be hierarchically organized with
       further subdirectories, rather than dumping everything into one
       directory. This can cause TeX to start very slowly. The cure
       for this problem is to insure each subdirectory contains either
       only directories or only files.

    AIX - TeX for the IBM RS6000 running AIX can be found on
       ftp.dante.de (129.206.100.192) in ./tex-archive/systems/unix/aix3.2.

    386/ix - Executables for the 386/ix are available via anonymous ftp 
       from tik.vtt.fi (130.188.52.2) in ./pub/tex/bin-386ix and from 
       math.berkeley.edu (128.32.183.94) in ./pub/tex386ix.tar.Z.

    PC - A TeX package for the PC, including LaTeX, BibTeX, previewers,
       and drivers is available via anonymous ftp from 
       vax.eedsp.gatech.edu (130.207.226.24) in ./pub/TeX. The variety here
       is sbtex version 30 by Wayne Sullivan. EmTeX, another TeX package 
       for the PC by Eberhard Mattes, is available via anonymous ftp from 
       ftp.dante.de (129.206.100.192) in 
       ./tex-archive/systems/msdos/emtex and also from niord.shsu.edu
       (192.92.115.8) in [.emtex]. This package includes LaTeX, METAFONT,
       BibTeX, etc., as well. Documentation is available in both German 
       and English.

    Mac - see question 7 for a public domain version (OzTeX). Another version
       is CMacTeX, which has TeX 3.14, METAFONT 2.7, a screen previewer,
       dvips, a PostScript printing utility for the LaserWriter, and some font
       managing utilities. It is available from the CTAN archives discussed
       in question 22. 

    TOPS-20 - TeX was originally written on a DEC-10 under WAITS, and so
       was easily ported to TOPS-20. A Distribution that runs on TOPS-20 
       is available via anonymous ftp from ftp.math.utah.edu 
       (128.110.198.34) in ./pub/tex/pub/web.

    VAX/VMS - TeX for VMS is available from any CTAN site (see question 22)
       in the directory ./systems/vms. Standard tape distribution is 
       through DECUS.

    Atari - TeX is available for the Atari ST from atari.archive.umich.edu
       (141.211.165.41) in ./atari/tex. If anonymous ftp is not available
       to you, send a message containing the line ``help'' to
       atari@atari.archive.umich.edu. The mail server can uuencode
       binary files. Another version can be obtained via anonymous
       ftp from ifi.informatik.uni-stuttgart.de (129.69.211.1) in
       ./pub/atari.st/tex. There is also lots of TeX stuff for the
       Atari on the CTAN and ftp.cs.ruu.nl archives mentioned in
       question 22.

    Amiga - A full implementation of TeX 3.1 call PasTeX and METAFONT 2.7
        are available via anonymous ftp from merlin.etsu.edu (192.43.199.20)
        in ./ab20/AMIGA. It is also available via anonymous ftp from
        forwiss.uni-passau.de (132.231.20.10) in ./pub/amiga/tex. 
        You can also order a CDROM containing this and other amiga software
        from Walnut Creek CDROM, (510) 947-5997.

    Tandy 6000 - If you are interested in building TeX on this machine
        contact Ken Yap (ken@syd.dit.csiro.au), and he'll help you.

20) Where can I get a thesis style for LaTeX?

    Thesis styles are usually very specific to your University, so it's
    usually not profitable to ask the whole newsgroup for one. If you
    want to write your own, a good place to start is the ucthesis style
    available from any CTAN archive in macros/latex/contrib/ucthesis
    (see question 22).

21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
    and so on?

    These symbols are known as ``blackboard bold'' and are available in
    the AMS fonts ``msam'' (e.g., ``msam10'' for 10pt) and ``msbm''. 
    They replace the older ``msxm'' and ``msym''. The fonts have a large
    number of mathematical symbols to supplement the ones 
    provided by TeX. The fonts are available via anonymous ftp from
    e-math.ams.com (130.44.1.100) in the directory ./ams/amsfonts.
    Two files which load the fonts and define the symbols are provided,
    and both work with either TeX or LaTeX. Questions or suggestions 
    regarding these fonts should be directed to 
    tech-support@math.ams.com.

    A geometric sans serif blackboard bold font by Alan Jeffrey is available
    from any CTAN archive (see question 22) in ./tex-archive/fonts/bbold.

    A set of LaTeX macros for a ``lazy person's'' blackboard bold are:
       \newcommand{\R}{{\sf R\hspace*{-0.9ex}\rule{0.15ex}%
       {1.5ex}\hspace*{0.9ex}}}
       \newcommand{\N}{{\sf N\hspace*{-1.0ex}\rule{0.15ex}%
       {1.3ex}\hspace*{1.0ex}}}
       \newcommand{\Q}{{\sf Q\hspace*{-1.1ex}\rule{0.15ex}%
       {1.5ex}\hspace*{1.1ex}}}
       \newcommand{\C}{{\sf C\hspace*{-0.9ex}\rule{0.15ex}%
       {1.3ex}\hspace*{0.9ex}}}

22) What repositories of TeX material are available, and how can I access
    them?
 
    To aid the archiving and retrieval of of TeX-related files, a TUG
    working group developed the Comprehensive TeX Archive Network
    (CTAN).  Each CTAN site has identical material, and maintains
    authoritative versions of its material.  These collections are
    extensive; in particular, almost everything mentioned in this
    document is archived at the CTAN sites, even if not explicitly
    stated.

    The CTAN sites are currently ftp.dante.de (129.206.100.192)
    ftp.tex.ac.uk (134.151.44.19), and pip.shsu.edu (192.92.115.10). 
    The organization of TeX files on all these sites is identical and
    starts at ./tex-archive. To reduce network load, please use the
    CTAN site or mirror closest to you. A complete and current list
    of CTAN sites and mirrors can be obtained by using the finger
    utility to finger ctan_us@ftp.SHSU.edu.

    To find software at a CTAN site, use anonymous ftp to the host,
    and then execute the command `quote site index <search-term>'.

    The mail servers of the CTAN sites are not yet identical, but this is
    planned. Here are the current methods of access via electronic mail:
      - For the UK site, send a message to texserver@tex.ac.uk. The
        first non-blank line of the message must contain a valid
        TeXserver command (help, directory, files, whereis, search,
        or path). The program will then mail you a response notifying
        you that your request has been received. If you fail to get a
        response from the TeXserver, you may need to use the ``path''
        command to help the program out. For Internet users the
        return address is of the form name%site@nsfnet-relay, while
        for Bitnet and EARN it is name%site@earn-relay (i.e., include
        a line that says ``path name%site@nsfnet-relay'' along with a
        line containing ``help''). 
      - For ftp.dante.de, send a message containing the line
        ``help'' to mail-server@ftp.dante.de.
      - For the SHSU site, send a message with the line "help" to
        ftpmail@ftp.shsu.edu. This provides an ftp-like interface
        through mail.

    There are several other repositories of TeX material available:
      - ftp.cs.ruu.nl (131.211.80.17) also contains a substantial TeX
        archive with ftp access. To use it via email, send a message
        containing the line ``help'' to mail-server@cs.ruu.nl. This mail 
        server can send binary files in a variety of different formats.
      - There are LISTSERV facilities for TeX at LISTSERV@DHDURZ1.BITNET. 
        Send a message containing the line ``help'' to this address.
      - For users on BITNET, access to anonymous ftp for some files can
        be obtained indirectly by sending mail to BITFTP@PUCC.BITNET.
        Send a message containing the line ``help'' to this address for
        more information.
     
    There is also the DECUS TeX collection, a collection of TeX material
    for VMS, Unix, MS-DOS, and the Macintosh. It is available via 
    anonymous ftp from wuarchive.wustl.edu (128.252.135.4) in ./decus/tex.
    It can also be obtained from the DECUS Library (reference number 
    VS0058) in the US, or through your DECUS office outside of the US. To 
    contact the DECUS Library, send mail or call:
                 The DECUS Program Library
                 334 South Street SHR3-1/T25
                 Shrewsbury, MA 01545-4195
                 (800)332-3755
    The last update to this collection was in February 1991, so it is old.
     
    Another good source of information is NETWORK SOURCES OF TeX WARE by
    Peter Flynn which appeared in TeXhax, volume 90, issues 45-47 (in
    May 1990).      

23) How do I use PostScript fonts with LaTeX?

    The best way to do this is to install LaTeX2e (see question 41)
    and use the PSNFSS2e package written by Sebastian Rahtz. It is
    available from all the major archives mentioned in question
    22. Other methods for using PostScript fonts in LaTeX are
    cumbersome at best.

24) How can I convert from format Y to TeX or LaTeX, and vice-versa?

    troff - TROFF-TO-LATEX.TAR-Z is available via anonymous ftp from
      wsmr-simtel20.army.mil (192.88.110.20) in the directory 
      pd2:<unix-c.textproc>. This program, written by Kamal Al-Yahya 
      at Stanford, assists in the translation of a troff document into 
      LaTeX format.  It recognizes most -ms and -man macros, plus most 
      eqn and some tbl preprocessor commands. Anything fancier needs 
      to be done by hand.  Two style files are provided.  There 
      is also a man page (which converts very well to LaTeX :-).  
      The program is copyrighted but free. An enhanced version of this
      program, tr2latex, is available from 
      ftp.informatik.rwth-aachen.de (137.226.112.172) in ./pub/TeX. 
      The DECUS TeX distribution (see question 22) also contains a program
      which converts troff to TeX. If you are interested in obtaining a copy
      of this program without getting the entire DECUS TeX distribution, 
      send the command: SENDME TROFFTOTEX in the body of a mail message to
      FILESERV@SHSU.BITNET (FILESERV@SHSU.edu), or use anonymous ftp to the
      directory [.TROFFTOTEX] on Niord.SHSU.edu (192.92.115.8). 

    scribe - Mark James has a copy of scribe2latex he has been
      unable to test but which he will let anyone interested have.
      Send email to jamesm@procor.dialogic.com. The program was written
      by Van Jacobson of Lawrence Berkeley Laboratory.

    wordperfect -  wp2latex.zip is available on wuarchive.wustl.edu
      (128.252.135.4) in the directory ./mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in the directory pd1:<msdos.tex>.
      This is a PC program written in Turbo Pascal by R. C. Houtepen at
      the Eindhoven University in the Netherlands.  It converts
      WordPerfect 5.0 documents to LaTeX.  Pascal source is included.
      Users find it ``helpful'' and ``decent'' in spite of some
      limitations. It gets high marks for handling font changes.
      Limitations include no indices, table of contents, margins or
      graphics.  It also won't handle the new features of WordPerfect
      5.1, in particular the equation formatter. The program is
      copyrighted but free.

      Glenn Geers of the University of Sydney (glenn@qed.physics.su.oz.au)
      is translating wp2latex into C and adding some WordPerfect 5.1
      features, in particular its equation handling.  This is an ongoing
      project; the most recent version can be retrieved via anonymous ftp
      from suphys.physics.su.oz.au (129.78.129.1) in ./wp2latex. It was 
      posted to alt.sources on 8 August 1990.

      Commercial packages are available for DOS which convert from
      WordPerfect to LaTeX, and from TeX and LaTeX to WordPerfect, but
      I am unaware of any free products which do this.

    PC-Write - pcwritex.arc is available on wuarchive.wustl.edu
      (128.252.135.4) in directory mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in directory pd1:<msdos.tex>.
      This is a print driver for PC-Write that ``prints'' a PC-Write V2.71
      document to a TeX-compatible disk file.  It was written by Peter
      Flynn at University College, Cork, Ireland.  It is public domain.  

    runoff - Peter Vanroose (vanroose@esat.kuleuven.ac.be) has 
      written a RUNOFF-to-TeX conversion program in VMS Pascal.  It is 
      available from comp.text archives (they do exist, don't they?  The 
      program was submitted in December 1987) or from the author 
      (peter@dit.lth.se) or from Mark James (jamesm@procor.dialogic.com).

    refer/Tib - There are a few programs for converting bibliographic data 
      between BibTeX and refer/Tib formats.  They are available via 
      anonymous ftp from ftp.ai.mit.edu (128.52.32.11) in the 
      directory ./pub/refer-to-bibtex.  In spite of the directory name, 
      it also contains a  shell script to convert BibTeX to REFER as 
      well. Unfortunately, this collection is not maintained.

    RTF - A program for converting Microsoft's Rich Text Format to TeX
      is available via anonymous ftp from astro.princeton.edu
      (128.112.128.131) in ./pub/rtf2TeX.tar.Z. It was written and is
      maintained by Robert Lupton (rhl@astro.princeton.edu). There is
      also an rtf2LateX written by Erwin Wechtl available from 
      ftp.vmars.tuwien.ac.at (128.130.39.16) in ./pub/misc.

    Microsoft Word - A rudimentary program for converting MS-Word
      to LaTeX is wd2latex, for MS-DOS, available via anonymous ftp
      from any CTAN site (see question 22). A better idea, however, 
      is to convert the document to RTF format and use the RTF 
      converter mentioned above.
    
    In addition, a group at Ohio State University is working on a common
    document format based on SGML.  In theory any format could be
    translated to or from this one.  Also, Framemaker supposedly has
    ``import filters'' to aid in the translation from alien formats
    (presumably including TeX) to Framemaker; perhaps other desktop
    publishing programs have similar things.
      
25) How do I get a file into the major style repositories?
    
    Use anonymous ftp to any CTAN archive (see question 22) and
    retrieve the file README.uploads in the root directory. It contains
    instructions for uploading files and notifying the appropriate
    people for that site.

    If you cannot use ftp, mail your contribution to sty-mgr@shsu.edu
    and it will be passed along. You will make everyone's life easier
    if you choose a descriptive and unique name for your submission, so
    it's probably good idea to browse through some of the styles
    already available to insure your style file's name is not already
    in use.

26) Where can I get font Y?

    A comprehensive list of METAFONT fonts is posted to Comp.fonts
    about once every six weeks by Lee Quin (lee@sq.sq.com). It contains
    both commercial fonts and fonts available via anonymous ftp. Most
    of the fonts available via anonymous ftp are available from
    the CTAN archives (see question 22). Also, the file wujastyk.txh
    ./tex-archive/digests/texhax/txh/wujastyk.txh is a copy of
    Dominik Wujastyk's font article, and contains information on
    METAFONT fonts as well.

27) Where can I get a dvi driver for the HP LaserJet?

    PC - The emtex package mentioned in question 19 contains a driver for
       the LaserJet, dvihplj. 

    Version 2.10 of the Beebe drivers support the LaserJet. These drivers
    will compile under Unix, VMS, and on the Atari ST and DEC-20's. They
    are available from ftp.math.utah.edu (128.110.198.34) in ./pub/tex/dvi.

28) TeX and LaTeX are hyphenating words weirdly. What can I do?

    You have a version mismatch problem. The hyphenation algorithm changed
    between version 2.9 and 3.0. If you are using TeX version 3.0 or
    later, make sure you have plain.tex and lplain.tex files with a
    version number of at least 3.0.

    For those of you curious about the change, here's what happened:
    in versions of TeX before 3.0 the hyphenation algorithm would not
    break a word if the part before the break was not at least two
    characters long, and the part after the break at least three 
    characters long. Starting with version 3.0 two integer parameters,
    \lefthyphenmin and \righthyphenmin, control the length of these
    fragments. These are set to 2 and 3, respectively, in the new
    plain and lplain formats. They can be set to any value, of course,
    but if \lefthyphenmin + \righthyphenmin is greater than 62, all
    hyphenation is suppressed.

29) How can I convert a TeX or LaTeX file into a plain ASCII file,
    with all the formatting intact, a la nroff?

    Ralph Droms (droms@bucknell.edu) has a style file and a C program
    that provide the LaTeX equivalent of nroff. Although it doesn't do
    a good job with tables and math, it's the best way to convert that
    I've seen. The software is available for anonymous ftp from
    sol.cs.bucknell.edu (134.82.1.8) in ./droms/txt-dist.tar. This is a
    modification of the dvi2tty program; the original often does an
    acceptable job and can be gotten from any CTAN site (see question 22).

    Another possibility is to use screen.sty, available from all the
    major archives. However you need a program called crudetype to
    process the resulting dvi file. It is available from
    emx.utexas.edu (128.83.186.11) in
    ./pub/mnt/source/tex/tex-3.0/DVIware/lpr-viewers/crudetype and
    from ftp.uni-stuttgart.de (129.69.8.13) in
    ./tex-archive/dviware/screenview. Another possibility is to use
    the LaTeX-to-ASCII conversion program, l2a, available from
    comp.sources.misc archives (one archive site is ftp.uu.net
    (192.48.96.9)), although this is really more of a de-TeXing
    program. If you are running under Unix and have C++ and perl, you
    might try Jonathan Monsarrat's LameTeX package (which actually
    does much more than this), available from wilma.cs.brown.edu
    (128.148.33.66) in ./pub/lametex.tar.Z.

30) How do I enlarge TeX? I keep getting `memory capacity exceeded'
    errors.

    Most of the time, a ``memory capacity exceeded'' error can be fixed
    without enlarging TeX.  The most common causes are unmatched braces,
    extra-long lines, and poorly-written macros.  Extra-long lines
    are often introduced when files are transferred incorrectly between
    operating systems.  (The tell-tale sign of an extra-long line error
    is when the complaint is that the `buf_size' has overflowed.)

    If you really need to extend your TeX's capacity, the proper method
    varies depending on your installation.  In the purest form, you
    change the parameters in module 11 (``The following parameters can
    be changed...'')  In less pure forms, you might need to modify a
    change file, or perhaps change some environment variables.  Consult
    the documentation that came with your particular implementation.

31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
    numbered. What do I do?

    If you see this, you are using the \maketitle command too. This is
    not a bug but a feature! The standard LaTeX styles are written so
    that initial pages (pages containing a \maketitle, \part, or \chapter)
    have a different page style than the rest of the document. Hence, the
    above commands internally issue a \thispagestyle{plain}. This is
    usually not acceptable behavior is the page style is `empty'.

    Possible workarounds include:   
     - Put \thispagestyle{empty} immediately after the \maketitle command, 
       with no blank line between them.
     - Use fancyheadings.sty, available from any CTAN (see question 22).
       In this style, the style for initial pages can be customized as well.

32) Where do I find documentation about BibTeX?

    BibTeX, a program originally designed to produce bibliographies in
    conjunction with LaTeX, is explained in Section 4.3 and Appendix B 
    of Leslie Lamport's LaTeX manual.  The ``BibTeXing'' document, 
    contained in the file btxdoc.tex, gives a more complete description.
    _The LaTeX Companion_ also has information on BibTeX and writing 
    BibTeX style files.

    The ``Designing BibTeX Styles'' document, contained in the file 
    btxhak.tex, explains the postfix stack-based language used to
    write BibTeX styles (.bst files).  The file btxbst.doc is the template
    file for the four standard styles (plain, abbrv, alpha, unsrt). It
    also contains the documentation for them.

    The current Unix-BibTeX man page, contained in the file
    bibtex.1, was updated in January 1992 and is about one page long.
    There's an old and obsolete version floating around, written in 1985
    before ``BibTeXing'' and ``Designing BibTeX Styles'' appeared, that is
    several pages long.  You should ignore it (or throw it away), since it
    describes BibTeX version 0.98, style files of which are incompatible 
    with the current version, 0.99 (to be precise, 0.99c).

    All files mentioned in this answer are available via anonymous ftp
    from labrea.stanford.edu (36.8.0.112) in the BibTeX ftp area, 
    tex/bibtex. All the non-Unix files should be available on any system 
    that runs BibTeX; if they're not on your system, please complain to 
    your BibTeX installer or to your distribution source.

33) How do I use BibTeX with plain TeX?

    The file btxmac.tex contains TeX macros and documentation for using
    BibTeX with plain TeX, either directly or with Karl Berry's Eplain
    package. It is available via anonymous ftp from labrea.stanford.edu
    (36.8.0.112) in tex/bibtex (see question 32 for more information 
    about BibTeX).

34) How do I draw Feynman diagrams in LaTeX?

    Michael Levine's macro package for drawing Feynman diagrams in LaTeX
    is available via mail-server from physics.utoronto.ca. Send a message
    containing the line ``send INDEX'' to mail-server@physics.utoronto.ca
    for information on how to retrieve it. It is also available from any
    CTAN site or mirror (see question 22).

35) What is the New Font Selection Scheme (NFSS)?

    NFSS is an extension to LaTeX written by Frank Mittelbach and Rainer
    Sch\"opf. It is described in TUGboat, volume 10 (1989), No. 2.
    In traditional typesetting, fonts are described by four parameters:
    the family (e.g., computer modern), the series (i.e., the weight and
    width of the font, like light or bold), the shape (e.g., italic), and
    the size. NFSS is a mechanism allowing the user to change any of these
    independently. NFSS makes it relatively easy to use nonstandard fonts
    such as the PostScript ones with LaTeX, and easy to change math fonts.
    It also allows dynamic loading of fonts at runtime (not when the
    format file is created).

    NFSS is no longer supported for LaTeX version 2.09, but is standard
    with LaTeX2e (see question 41).

    There is one caveat that applies to LaTeX documents written for
    the OLD scheme: some of them use special styles for special fonts
    which will not work under the NFSS.

36) In LaTeX, my cross-references for floats (figures and tables) are
    incorrect. What's wrong?

    The \label command must come after the \caption command, or
    be part of it. For example,
       \begin{figure}               \begin{figure}
       \caption{A Figure}    or     \caption{A Figure\label{fig}}
       \label{fig}                  \end{figure}
       \end{figure}

37) I want to change the margins in LaTeX. What can I do?

    This answer first helps you change the margins throughout a
    document, then tells you how to change the margins in a portion
    of the document.

    Perhaps the easiest way to get more out of a page in LaTeX is to
    get fullpage.sty, available from all the major archive servers
    mentioned in question 22. This sets the margins of the page identical
    to those of Plain TeX, i.e., 1-inch margins at all four sides of the
    paper. It also contains an adjustment for A4 paper.

    Here is a brief explanation of what's going on with the page
    parameters in LaTeX. They are explained in section C.4.2 of the
    LaTeX manual (p. 163). The margin parameters represent measurements
    made to the DVI file. The origin in DVI coordinates is one inch
    from the top of the paper and one inch from the left side. This
    explains the ``one inch less than'' terminology used in the LaTeX
    manual. In DVI coordinates, positive horizontal measurements extend
    right across the page, and positive vertical measurements extend down
    the page. Thus, for margins closer to the left and top edges of the
    page than 1 inch, the corresponding parameters, e.g.,
    \evensidemargin, \oddsidemargin, \topmargin, can be set to negative
    values.

    Finally, to change the margins of a document within the document,
    modifying the parameters listed on page 163 will not work. They
    can only be changed in the preamble of the document, i.e, before
    the \begin{document} statement. To adjust the margins within a
    document we define an environment which does it:
      \newenvironment{changemargin}[2]{\begin{list}{}{
         \setlength{\topsep}{0pt}\setlength{\leftmargin}{0pt}
         \setlength{\rightmargin}{0pt}
         \setlength{\listparindent}{\parindent}
         \setlength{\itemindent}{\parindent}
         \setlength{\parsep}{0pt plus 1pt}
         \addtolength{\leftmargin}{#1}\addtolength{\rightmargin}{#2}
         }\item }{\end{list}}
    This environment takes two arguments, and will indent the left
    and right margins by their values, respectively. Negative values
    will cause the margins to be widened, so
    \begin{changemargin}{-1cm}{-1cm} widens the left and right margins
    by 1cm.

38) How do I find the width of a letter, word, or phrase in TeX?

    Put the word in a box, and measure the width of the box. For example,
        \setbox0=\hbox{hi}
        width=\wd0
    Note that if the quantity in the hbox is a phrase, the actual 
    measurement only approximates this width, since the interword glue
    can be adjusted in paragraph mode.

    In LaTeX, the following works (taken from the manual):
        \newlength{\gnat}
        \settowidth{\gnat}{\em small}
    This sets the value of the length command \gnat to the width of ``small''
    in emphasized text.

39) In LaTeX, is there a comment or ``ignore'' environment with which
    I can exclude blocks of text from the .dvi file?

    Rainer Sch\"opf's verbatim.sty provides a comment environment which
    excludes everything between \begin{comment} and \end{comment}. It is
    available via anonymous ftp from any CTAN site (see question 22) in
    ./tex-archive/macros/latex/distribs. Several files are needed to
    install the package. A more general environment for doing this is
    comment.sty, also available from the CTAN sites in
    ./tex-archive/macros/latex/contrib/misc.

40) Where can I find a spelling checker for my TeX file?

    For Unix, ispell is probably the program of choice. It is available
    from any CTAN site (see question 22) in ./tex-archive/support/ispell.

    For DOS, jspell is an extended version of ispell, and is available via
    anonymous ftp from oak.oakland.edu (141.210.10.117) in 
    ./pub/msdos/tex/jspell*.zip.

    For VMS, a spell checker can be found via anonymous ftp from ftp.spc.edu
    in  [.MACRO32.SAVESETS]. Retrieve SPELL.ZIP and SPELL_DICTIONARY.ZIP. 

41) What is LaTeX2e?

    LaTeX2e is the new standard version of LaTeX, prepared and
    supported by the LaTeX3 project team. It is the current version of
    LaTeX and is available from any CTAN site (see question 22) in
    ./tex-archive/macros/latex. LaTeX 2.09 is no longer supported.

    LaTeX2e is upwardly compatible with LaTeX 2.09, but supports many new
    features, including:
     - NFSS (see question 35) is now standard.
     - SliTeX is consolidated into it, and there is no longer a need for
       a separate program.
     - The output routine gives better control of floating environments,
       such as figures.
     - There is a documented interface to style files.
     - Enhanced box commands, e.g., options to specify the height of a 
       minipage.
     - \ref is now robust and can be used in \caption.
     - \newcommand can define commands with optional arguments.
     - A standard package for color and graphics inclusion.

    Since LaTeX2e is supported, you can report bugs or problems with it by
    typing `latex latexbug' and sending the report it generates to 
    latex-bugs@rus.uni-stuttgart.de.

42) In LaTeX, how can I define a new log-like function?

    Use the \mathop command, as in:
         \newcommand{\diag}{\mathop{\mathrm{diag}}}

    Subscripts and superscripts to \diag will be done identically to \lim.
    If you want your subscripts and superscripts placed to the right, do:
         \newcommand{\diag}{\mathop{\mathrm{diag}}\nolimits}

    Older versions of LaTeX may not define \mathrm; alternatively, use
    {\rm diag}.

43) In LaTeX, how do I put a \sqrt in my \caption statement?

    \sqrt is a fragile command and the argument to \caption is ordinarily
    a moving argument. Therefore \sqrt needs to be preceded with a \protect
    command.

44) In LaTeX, how do I get thin and thick \hlines in a table?

    In the preamble, do: 
         \setlength{\doublerulesep}{\arrayrulewidth}.
    Then in a table or array, do:
         <stuff in the table>  \\\hline         %thin hline
         <more stuff in table> \\\hline\hline   %thick hline

45) In LaTeX, how do I number the bibliography using Arabic numbers without
    square brackets or using superscripts?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\@biblabel[1]{#1.}     % Arabic numbers, no brackets
         \renewcommand\@biblabel[1]{$^{#1}$} % Superscripts

46) In LaTeX, why are my cites all numbered zero?

    Your document style and your version of LaTeX are incompatible.
    Since this may reflect an incomplete update done at some point,
    you should probably get the complete distribution (see question
    22).

    This problem usually occurs using an old university style file
    which is not maintained. If you are going to correct the style
    file, the definition of \thebibliography needs to be updated from
    article.cls (or article.sty).

47) In LaTeX, my figures get put on a page by themselves with too much
    whitespace, but when I tried \begin{figure}[t] they get printed at
    the end. Why?

    Your figures are bigger than \floatpagefraction, but you are
    willing to accept pages with less text than the default.  Use:
         \renewcommand\floatpagefraction{.9}
         \renewcommand\topfraction{.9}
         \renewcommand\bottomfraction{.9}
         \renewcommand\textfraction{.1}

    You can adjust the cut-off value if you like, but it makes no
    sense to go higher than .95 (LaTeX's default value is only .5).
    Also, the first 3 values should be equal, and the last should be
    1 - \floatpagefraction.  Otherwise, you are likely to get floats
    flushed to the end.

48) In LaTeX, how do I make a line break in a section title?

    It is better to try to prevent bad breaks by using ~ than to force
    good breaks. Unfortunately, LaTeX's default styles make titles with
    flush margins and most other styles have followed, so this may not
    work in many cases. You should definitely avoid hyphenation in titles.

    To force line breaks in a title, but not in the table of contents,
    use the optional argument for \section:
         \section[This is the Title]{This is\\ the Title}

    One benefit of this is that \\ is safe and no \protect is needed.

49) In LaTeX, how do I number equations by section?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\theequation{\thesection.\arabic{equation}}
         \@addtoreset{equation}{section}

    If you have chapters with a preamble that comes before the first
    section, you should not put equations there, as you will get funny
    numbers like 3.0.1. There are also two style files available from
    any CTAN site called seceqn.sty and apeqnum.sty. The first numbers
    equations by section, and the second gives individual equation
    numbers to equations in the appendix.

-- 
Bobby Bodenheimer				@hot.caltech.edu
// ARPA  : bobby@hot.caltech.edu                |
// BITNET: bobby@caltech.bitnet                 | Woof!
// UUCP  : {amdahl,ames!elroy}!cit-vax!bobby    | 


#define FPR_L(N)		(F.l[(N)^1])
#define SET_FPR_L(N,EXPR)	(F.l[(N)^1] = (EXPR))
#define FPR_F(N)		(F.f[(N)^1])
#define SET_FPR_F(N,EXPR)	(F.f[(N)^1] = (EXPR))
#define FPR_D(N)		(F.d[(N) >> 1])
#define SET_FPR_D(N,EXPR)	(F.d[(N) >> 1] = (EXPR))

#define SET_HI(EXPR)		(HI = (EXPR))
#define SET_LO(EXPR)		(LO = (EXPR))
#define FC			(FCond)
#define SET_FC(EXPR)		(FCond = (EXPR))

#define TCacheAccess(cp, op, addr, dest, sz, tally)			\
  (blockingCache							\
   ? ({									\
	 ulong lat;							\
	 lat = CacheAccess(cp, op, addr, dest, sz, cycle, tally);	\
	 pipeStats.dcStall += numIssue * lat;				\
	 cycle += lat;							\

####################################################################
#### Compiling SPECINT92/benchspec/008.espresso...
####################################################################
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" espresso-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cofactor.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c compl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compl.c:78: warning: static declaration for `compl_special_cases' follows non-static
compl.c:161: warning: static declaration for `compl_merge' follows non-static
compl.c:253: warning: static declaration for `compl_lift' follows non-static
compl.c:290: warning: static declaration for `compl_lift_onset' follows non-static
compl.c:325: warning: static declaration for `compl_lift_onset_complex' follows non-static
compl.c:363: warning: static declaration for `compl_d1merge' follows non-static
compl.c:385: warning: static declaration for `compl_cube' follows non-static
compl.c:459: warning: static declaration for `simp_comp_special_cases' follows non-static
compl.c:596: warning: static declaration for `simplify_special_cases' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c contain.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cubestr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrmisc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c equiv.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c espresso.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c essen.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c exact.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expand.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gasp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c globals.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c irred.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c map.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c opo.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
opo.c:608: warning: static declaration for `minimize' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pair.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c primes.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c set.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c setc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sharp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sminterf.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sparse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c verify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cpu_time.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c prtime.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c strsav.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c matrix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rows.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cols.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dominate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c mincov.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
mincov.c:255: warning: static declaration for `select_column' follows non-static
mincov.c:312: warning: static declaration for `select_essential' follows non-static
mincov.c:353: warning: static declaration for `verify_cover' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gimpel.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c solution.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c part.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
part.c:48: warning: `visit_col' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c indep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c qsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs espresso-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o espresso-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" espresso-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cofactor.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c compl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compl.c:78: warning: static declaration for `compl_special_cases' follows non-static
compl.c:161: warning: static declaration for `compl_merge' follows non-static
compl.c:253: warning: static declaration for `compl_lift' follows non-static
compl.c:290: warning: static declaration for `compl_lift_onset' follows non-static
compl.c:325: warning: static declaration for `compl_lift_onset_complex' follows non-static
compl.c:363: warning: static declaration for `compl_d1merge' follows non-static
compl.c:385: warning: static declaration for `compl_cube' follows non-static
compl.c:459: warning: static declaration for `simp_comp_special_cases' follows non-static
compl.c:596: warning: static declaration for `simplify_special_cases' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c contain.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cubestr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrmisc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c equiv.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c espresso.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c essen.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c exact.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expand.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gasp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c globals.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c irred.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c map.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c opo.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
opo.c:608: warning: static declaration for `minimize' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pair.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c primes.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c set.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c setc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sharp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sminterf.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sparse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c verify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cpu_time.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c prtime.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c strsav.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c matrix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rows.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cols.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dominate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c mincov.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
mincov.c:255: warning: static declaration for `select_column' follows non-static
mincov.c:312: warning: static declaration for `select_essential' follows non-static
mincov.c:353: warning: static declaration for `verify_cover' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gimpel.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c solution.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c part.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
part.c:48: warning: `visit_col' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c indep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c qsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs espresso-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o espresso-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
####################################################################
#### Compiling SPECINT92/benchspec/022.li...
####################################################################
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" xlisp-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlbfun.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlbfun.c:189: warning: static declaration for `bquote1' follows non-static
xlbfun.c:319: warning: `placeform' was declared implicitly `extern' and later `static'
xlbfun.c:396: warning: static declaration for `defun' follows non-static
xlbfun.c:468: warning: static declaration for `makesymbol' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlcont.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlcont.c:110: warning: `keypresent' was declared implicitly `extern' and later `static'
xlcont.c:211: warning: static declaration for `let' follows non-static
xlcont.c:259: warning: static declaration for `prog' follows non-static
xlcont.c:334: warning: static declaration for `progx' follows non-static
xlcont.c:398: warning: static declaration for `doloop' follows non-static
xlcont.c:755: warning: `dobindings' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xldbug.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldbug.c:75: warning: `doerror' was declared implicitly `extern' and later `static'
xldbug.c:87: warning: `breakloop' was declared implicitly `extern' and later `static'
xldbug.c:162: warning: static declaration for `stacktop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xldmem.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldmem.c:210: warning: static declaration for `newnode' follows non-static
xldmem.c:235: warning: static declaration for `stralloc' follows non-static
xldmem.c:253: warning: static declaration for `strsave' follows non-static
xldmem.c:401: warning: `sweep' was declared implicitly `extern' and later `static'
xldmem.c:486: warning: `livecar' was declared implicitly `extern' and later `static'
xldmem.c:512: warning: `livecdr' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xleval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xleval.c:105: warning: static declaration for `evform' follows non-static
xleval.c:158: warning: static declaration for `evalhook' follows non-static
xleval.c:235: warning: static declaration for `evfun' follows non-static
xleval.c:338: warning: `iskeyword' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlfio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlfio.c:90: warning: static declaration for `printit' follows non-static
xlfio.c:132: warning: static declaration for `flatsize' follows non-static
xlfio.c:170: warning: static declaration for `openit' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlftab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlglob.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlinit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlisp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xljump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xljump.c:127: warning: `findtarget' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xllist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xllist.c:66: warning: static declaration for `cxr' follows non-static
xllist.c:316: warning: static declaration for `subst' follows non-static
xllist.c:362: warning: static declaration for `sublis' follows non-static
xllist.c:382: warning: static declaration for `assoc' follows non-static
xllist.c:471: warning: static declaration for `nth' follows non-static
xllist.c:553: warning: static declaration for `map' follows non-static
xllist.c:829: warning: static declaration for `cequal' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlmath.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlmath.c:108: warning: static declaration for `binary' follows non-static
xlmath.c:295: warning: static declaration for `unary' follows non-static
xlmath.c:379: warning: static declaration for `predicate' follows non-static
xlmath.c:461: warning: static declaration for `compare' follows non-static
xlmath.c:523: warning: `badiop' was declared implicitly `extern' and later `static'
xlmath.c:529: warning: `badfop' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlobj.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlobj.c:342: warning: static declaration for `entermsg' follows non-static
xlobj.c:363: warning: static declaration for `findmsg' follows non-static
xlobj.c:385: warning: static declaration for `sendmsg' follows non-static
xlobj.c:443: warning: `getivcnt' was declared implicitly `extern' and later `static'
xlobj.c:453: warning: `listlength' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlprin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlprin.c:107: warning: `putstring' was declared implicitly `extern' and later `static'
xlprin.c:152: warning: `putatm' was declared implicitly `extern' and later `static'
xlprin.c:161: warning: `putdec' was declared implicitly `extern' and later `static'
xlprin.c:169: warning: `putfloat' was declared implicitly `extern' and later `static'
xlprin.c:177: warning: `putoct' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlread.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlread.c:392: warning: static declaration for `phexnumber' follows non-static
xlread.c:410: warning: static declaration for `plist' follows non-static
xlread.c:477: warning: static declaration for `pvector' follows non-static
xlread.c:528: warning: static declaration for `pquote' follows non-static
xlread.c:553: warning: static declaration for `pname' follows non-static
xlread.c:575: warning: static declaration for `tentry' follows non-static
xlread.c:586: warning: `nextch' was declared implicitly `extern' and later `static'
xlread.c:598: warning: `checkeof' was declared implicitly `extern' and later `static'
xlread.c:609: warning: `badeof' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlstr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsubr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsym.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlsym.c:192: warning: static declaration for `findprop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsys.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unixstuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs xlisp-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o xlisp-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" xlisp-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlbfun.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlbfun.c:189: warning: static declaration for `bquote1' follows non-static
xlbfun.c:319: warning: `placeform' was declared implicitly `extern' and later `static'
xlbfun.c:396: warning: static declaration for `defun' follows non-static
xlbfun.c:468: warning: static declaration for `makesymbol' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlcont.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlcont.c:110: warning: `keypresent' was declared implicitly `extern' and later `static'
xlcont.c:211: warning: static declaration for `let' follows non-static
xlcont.c:259: warning: static declaration for `prog' follows non-static
xlcont.c:334: warning: static declaration for `progx' follows non-static
xlcont.c:398: warning: static declaration for `doloop' follows non-static
xlcont.c:755: warning: `dobindings' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xldbug.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldbug.c:75: warning: `doerror' was declared implicitly `extern' and later `static'
xldbug.c:87: warning: `breakloop' was declared implicitly `extern' and later `static'
xldbug.c:162: warning: static declaration for `stacktop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xldmem.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldmem.c:210: warning: static declaration for `newnode' follows non-static
xldmem.c:235: warning: static declaration for `stralloc' follows non-static
xldmem.c:253: warning: static declaration for `strsave' follows non-static
xldmem.c:401: warning: `sweep' was declared implicitly `extern' and later `static'
xldmem.c:486: warning: `livecar' was declared implicitly `extern' and later `static'
xldmem.c:512: warning: `livecdr' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xleval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xleval.c:105: warning: static declaration for `evform' follows non-static
xleval.c:158: warning: static declaration for `evalhook' follows non-static
xleval.c:235: warning: static declaration for `evfun' follows non-static
xleval.c:338: warning: `iskeyword' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlfio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlfio.c:90: warning: static declaration for `printit' follows non-static
xlfio.c:132: warning: static declaration for `flatsize' follows non-static
xlfio.c:170: warning: static declaration for `openit' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlftab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlglob.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlinit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlisp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xljump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xljump.c:127: warning: `findtarget' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xllist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xllist.c:66: warning: static declaration for `cxr' follows non-static
xllist.c:316: warning: static declaration for `subst' follows non-static
xllist.c:362: warning: static declaration for `sublis' follows non-static
xllist.c:382: warning: static declaration for `assoc' follows non-static
xllist.c:471: warning: static declaration for `nth' follows non-static
xllist.c:553: warning: static declaration for `map' follows non-static
xllist.c:829: warning: static declaration for `cequal' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlmath.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlmath.c:108: warning: static declaration for `binary' follows non-static
xlmath.c:295: warning: static declaration for `unary' follows non-static
xlmath.c:379: warning: static declaration for `predicate' follows non-static
xlmath.c:461: warning: static declaration for `compare' follows non-static
xlmath.c:523: warning: `badiop' was declared implicitly `extern' and later `static'
xlmath.c:529: warning: `badfop' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlobj.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlobj.c:342: warning: static declaration for `entermsg' follows non-static
xlobj.c:363: warning: static declaration for `findmsg' follows non-static
xlobj.c:385: warning: static declaration for `sendmsg' follows non-static
xlobj.c:443: warning: `getivcnt' was declared implicitly `extern' and later `static'
xlobj.c:453: warning: `listlength' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlprin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlprin.c:107: warning: `putstring' was declared implicitly `extern' and later `static'
xlprin.c:152: warning: `putatm' was declared implicitly `extern' and later `static'
xlprin.c:161: warning: `putdec' was declared implicitly `extern' and later `static'
xlprin.c:169: warning: `putfloat' was declared implicitly `extern' and later `static'
xlprin.c:177: warning: `putoct' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlread.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlread.c:392: warning: static declaration for `phexnumber' follows non-static
xlread.c:410: warning: static declaration for `plist' follows non-static
xlread.c:477: warning: static declaration for `pvector' follows non-static
xlread.c:528: warning: static declaration for `pquote' follows non-static
xlread.c:553: warning: static declaration for `pname' follows non-static
xlread.c:575: warning: static declaration for `tentry' follows non-static
xlread.c:586: warning: `nextch' was declared implicitly `extern' and later `static'
xlread.c:598: warning: `checkeof' was declared implicitly `extern' and later `static'
xlread.c:609: warning: `badeof' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlstr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsubr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsym.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlsym.c:192: warning: static declaration for `findprop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsys.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unixstuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs xlisp-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o xlisp-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
####################################################################
#### Compiling SPECINT92/benchspec/023.eqntott...
####################################################################
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" eqntott-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c bnode.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c canon.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cover.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c duple.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c merge.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
merge.c: In function `trymerge':
merge.c:167: warning: type mismatch with previous external decl
merge.c:31: warning: previous external decl of `pthash'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c nt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c prexpr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c procargs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pterm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pterm_ops.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c putpla.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c read_ones.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rmcvd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c substitute.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c x.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c y.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c yystuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs eqntott-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o eqntott-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" eqntott-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c bnode.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c canon.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cover.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c duple.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c merge.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
merge.c: In function `trymerge':
merge.c:167: warning: type mismatch with previous external decl
merge.c:31: warning: previous external decl of `pthash'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c nt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c prexpr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c procargs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pterm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pterm_ops.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c putpla.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c read_ones.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rmcvd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c substitute.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c x.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c y.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c yystuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs eqntott-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o eqntott-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
####################################################################
#### Compiling SPECINT92/benchspec/026.compress...
####################################################################
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" compress-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c compress.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compress.c: In function `main':
compress.c:437: warning: assignment from incompatible pointer type
compress.c:437: warning: comparison of distinct pointer types lacks a cast
compress.c:438: warning: passing arg 2 of `signal' from incompatible pointer type
compress.c:439: warning: passing arg 2 of `signal' from incompatible pointer type
ld-ss -write-relocs compress-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o compress-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" compress-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c compress.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compress.c: In function `main':
compress.c:437: warning: assignment from incompatible pointer type
compress.c:437: warning: comparison of distinct pointer types lacks a cast
compress.c:438: warning: passing arg 2 of `signal' from incompatible pointer type
compress.c:439: warning: passing arg 2 of `signal' from incompatible pointer type
ld-ss -write-relocs compress-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o compress-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
####################################################################
#### Compiling SPECINT92/benchspec/072.sc...
####################################################################
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" sc-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
sc.c: In function `signals':
sc.c:1455: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1456: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1457: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1458: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1459: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1460: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c interp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
interp.c: In function `dotime':
interp.c:398: warning: passing arg 1 of `time' from incompatible pointer type
interp.c:403: warning: passing arg 1 of `localtime' from incompatible pointer type
interp.c: In function `dodate':
interp.c:742: warning: passing arg 1 of `ctime' from incompatible pointer type
interp.c: In function `doext':
interp.c:836: warning: assignment makes pointer from integer without a cast
interp.c: In function `RealEvalAll':
interp.c:1000: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1013: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `let':
interp.c:1376: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1383: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `slet':
interp.c:1419: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1426: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmds.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c crypt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xmalloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c range.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c help.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c lex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
lex.c: In function `nmgetch':
lex.c:468: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c: In function `strtof':
lex.c:591: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:591: warning: assignment from incompatible pointer type
lex.c:595: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:662: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gram.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs sc-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses -ltermcap -lm \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o sc-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses -ltermcap -lm \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" sc-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
sc.c: In function `signals':
sc.c:1455: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1456: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1457: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1458: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1459: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1460: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c interp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
interp.c: In function `dotime':
interp.c:398: warning: passing arg 1 of `time' from incompatible pointer type
interp.c:403: warning: passing arg 1 of `localtime' from incompatible pointer type
interp.c: In function `dodate':
interp.c:742: warning: passing arg 1 of `ctime' from incompatible pointer type
interp.c: In function `doext':
interp.c:836: warning: assignment makes pointer from integer without a cast
interp.c: In function `RealEvalAll':
interp.c:1000: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1013: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `let':
interp.c:1376: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1383: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `slet':
interp.c:1419: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1426: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmds.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c crypt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xmalloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c range.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c help.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c lex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
lex.c: In function `nmgetch':
lex.c:468: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c: In function `strtof':
lex.c:591: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:591: warning: assignment from incompatible pointer type
lex.c:595: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:662: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gram.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs sc-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses-red -ltermcap-red -lm-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o sc-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses-red -ltermcap-red -lm-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
####################################################################
#### Compiling SPECINT92/benchspec/085.gcc...
####################################################################
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" cc1-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-parse.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-decl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-typeck.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-convert.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c toplev.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c print-tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stor-layout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c fold-const.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stmt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expmed.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c explow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c optabs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c varasm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c symout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dbxout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sdbout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c emit-rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-emit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c integrate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c jump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c loop.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c flow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stupid.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c combine.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regclass.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c local-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c global-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reload.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reload1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c caller-save.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-peep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c final.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-extract.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-output.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs cc1-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o cc1-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" cc1-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-parse.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-decl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-typeck.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-convert.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c toplev.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c print-tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stor-layout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c fold-const.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stmt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expmed.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c explow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c optabs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c varasm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c symout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dbxout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sdbout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c emit-rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-emit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c integrate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c jump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c loop.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c flow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stupid.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c combine.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regclass.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c local-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c global-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reload.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reload1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c caller-save.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-peep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c final.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-extract.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-output.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs cc1-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o cc1-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
####################################################################
#### Compiling SPECINT92/benchspec/aaa.elvis...
####################################################################
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" elvis-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c blk.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c e_ctype.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c curses.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
curses.c: In function `getsize':
curses.c:761: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cut.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c input.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c modify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move3.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move4.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move5.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c opts.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c recycle.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c redraw.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regexp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regexp.c: In function `regcomp':
regexp.c:439: warning: assignment discards `volatile' from pointer target type
regexp.c:591: warning: return discards `volatile' from pointer target type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regsub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c system.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tmp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vars.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vcmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vi.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs elvis-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap -lcurses \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o elvis-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap -lcurses \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" elvis-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c blk.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c e_ctype.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c curses.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
curses.c: In function `getsize':
curses.c:761: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cut.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c input.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c modify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move3.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move4.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move5.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c opts.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c recycle.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c redraw.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regexp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regexp.c: In function `regcomp':
regexp.c:439: warning: assignment discards `volatile' from pointer target type
regexp.c:591: warning: return discards `volatile' from pointer target type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regsub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c system.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tmp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vars.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vcmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vi.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs elvis-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap-red -lcurses-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o elvis-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap-red -lcurses-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
####################################################################
#### Compiling SPECINT92/benchspec/bbb.perl...
####################################################################
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" perl-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c perly.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c array.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cons.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c consarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c doarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
doarg.c: In function `do_sprintf':
doarg.c:995: warning: initialization makes pointer from integer without a cast
doarg.c:1009: warning: initialization makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c doio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dolist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c eval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
eval.c: In function `eval':
eval.c:1674: warning: passing arg 1 of `time' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c form.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c perl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
perl.c: In function `main':
perl.c:143: warning: passing arg 1 of `sprintf' makes pointer from integer without a cast
perl.c:827: warning: assignment makes pointer from integer without a cast
perl.c:862: warning: assignment makes pointer from integer without a cast
perl.c: In function `incpush':
perl.c:949: warning: assignment makes pointer from integer without a cast
perl.c: In function `savelines':
perl.c:972: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regcomp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regcomp.c: In function `regcomp':
regcomp.c:248: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regexec.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c str.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c toke.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
toke.c: In function `checkcomma':
toke.c:1503: warning: assignment makes pointer from integer without a cast
toke.c: In function `scansubst':
toke.c:1809: warning: assignment makes pointer from integer without a cast
toke.c: In function `scanstr':
toke.c:2317: warning: assignment makes pointer from integer without a cast
toke.c: In function `load_format':
toke.c:2550: warning: assignment makes pointer from integer without a cast
toke.c:2671: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c util.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
util.c: In function `scanhex':
util.c:1770: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c usersub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs perl-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o perl-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" perl-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c perly.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c array.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cons.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c consarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c doarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
doarg.c: In function `do_sprintf':
doarg.c:995: warning: initialization makes pointer from integer without a cast
doarg.c:1009: warning: initialization makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c doio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dolist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c eval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
eval.c: In function `eval':
eval.c:1674: warning: passing arg 1 of `time' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c form.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c perl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
perl.c: In function `main':
perl.c:143: warning: passing arg 1 of `sprintf' makes pointer from integer without a cast
perl.c:827: warning: assignment makes pointer from integer without a cast
perl.c:862: warning: assignment makes pointer from integer without a cast
perl.c: In function `incpush':
perl.c:949: warning: assignment makes pointer from integer without a cast
perl.c: In function `savelines':
perl.c:972: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regcomp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regcomp.c: In function `regcomp':
regcomp.c:248: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regexec.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c str.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c toke.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
toke.c: In function `checkcomma':
toke.c:1503: warning: assignment makes pointer from integer without a cast
toke.c: In function `scansubst':
toke.c:1809: warning: assignment makes pointer from integer without a cast
toke.c: In function `scanstr':
toke.c:2317: warning: assignment makes pointer from integer without a cast
toke.c: In function `load_format':
toke.c:2550: warning: assignment makes pointer from integer without a cast
toke.c:2671: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c util.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
util.c: In function `scanhex':
util.c:1770: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c usersub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs perl-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o perl-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
####################################################################
#### Compiling SPECINT92/benchspec/ccc.grep...
####################################################################
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" grep-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c grep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dfa.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c kwset.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c search.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs grep-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o grep-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" grep-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c grep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dfa.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c kwset.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c search.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs grep-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o grep-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
	 /* observed latency */0;					\
       })								\
   : CacheAccess(cp, op, addr, dest, sz, cycle, tally))

#define READ_MEM_UNSIGNED(DST,SRC,SZ,DIRECT)				\
  (memLat=TCacheAccess(dCache, Read, SRC, (uchar *)&temp##SZ, SZ, TRUE),\
   DST = (ulong)temp##SZ)
#define READ_MEM_SIGNED(DST,SRC,SZ,DIRECT)				\
  (memLat=TCacheAccess(dCache, Read, SRC, (uchar *)&temp##SZ, SZ, TRUE),\
   DST = (ulong)temp##SZ,						\
   ((DST) & (1 << ((SZ*8)-1))) ? DST |= (~((1 << (SZ*8))-1)) : 0)
#define WRITE_MEM(SRC,DST,SZ,DIRECT)					\
  (temp##SZ=(ulong)SRC,							\
   memLat=TCacheAccess(dCache, Write, DST, (uchar *)&temp##SZ, SZ, TRUE))

#define SYSCALL(INST)		(Syscall(DCacheAccess, INST))

static void
DCacheAccess(enum MemCmd cmd,		/* Read or Write */
	     ulong addr,		/* address to access */
	     uchar *p,			/* where to copy to/from */
	     int numBytes)		/* xfer length */
{
  CacheAccess(dCache, cmd, addr, p, numBytes, cycle, FALSE);
}

#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)
#define CONNECT(OP)
#define IMPL  Timing
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
#undef IMPL

extern ulong PC;
extern ulong Ihead, Itail;
extern struct SSInst *IR1;
extern ulong *PC1, *NPC1;
void SquashIDecode(void);

/* current VM page size */
static unsigned long pageSize = 4096;

/* virtual page number accessor */
#define VPN(addr)	((addr) & ~(pageSize-1))

static inline void
RegUpdate(unsigned long reg, unsigned long result,
	  unsigned long srcA, int validA, unsigned long srcB, int validB)
{
  unsigned long srcVPN;
  unsigned long destVPN;

  /* $r0 is always invalid as a pointer value */
  if (reg == 0)
    return;

  /* either valid, but not both, makes the result valid */
  valid[reg] = (validA || validB) && !(validA && validB);

  if (validA && validB)
    doubleValid++;

  if (valid[reg]) {
    if (validA)
      srcVPN = VPN(srcA);
    else
      srcVPN = VPN(srcB);

    destVPN = VPN(result);

    if (srcVPN != destVPN) {
      /* ran off the page */
      valid[reg] = FALSE;
      invalidOverrun++;
    }
    else
      invalidNoOverrun++;	/* still valid!!! */
  }
}

void
Execute(void)
{
  ulong i, nextPC;
  struct SSInst inst;
  uchar temp1;
  ushort temp2;
  ulong temp4;
  ulong exLat, memLat;
  unsigned long srcA, srcB;
  int validA, validB;
  int ldst, direct, jamFailed;

  for (i=0; i<N2; i++) {

    /* maintain R[0] semantics */
    R[0] = 0;

    assert(IC2[i] != Trap || N2 == 1);

    nextPC = PC2[i] + 8;
    inst = IR2[i];
    exLat = 0; memLat = 0;
    ldst = FALSE; direct = FALSE; jamFailed = TRUE;
    dirMode = FALSE; jamMode = FALSE; pCalcMode = FALSE; dualMode = FALSE;

    srcA = 0; validA = FALSE;
    srcB = 0; validB = FALSE;

    switch (OP2[i]) {

Article: 10118 of alt.sources
Path: uwvax!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!agate!doc.ic.ac.uk!uknet!pipex!sunic!news.funet.fi!nntp.hut.fi!nntp.hut.fi!tri
From: tri@snakemail.hut.fi (Timo Rinne)
Newsgroups: alt.sources
Subject: Re: Where is this code???
Date: 26 Feb 1994 13:49:33 GMT
Organization: Helsinki University of Technology
Lines: 755
Distribution: world
Message-ID: <TRI.94Feb26154933@gamma.hut.fi>
References: <2kl8t5INNlqd@owl.csrv.uidaho.edu>
Reply-To: Timo.Rinne@hut.fi
NNTP-Posting-Host: gamma.hut.fi
In-reply-to: ander882@priest.cs.uidaho.edu's message of 25 Feb 1994 16:27:17 GMT

>>>>> ander882@priest.cs.uidaho.edu (Craig J. Anderson) said:
> For a project (as described below) I'm in search of the following program.
> I've tried to reach the author but the mail keeps bouncing back and I don't
> know where the archives are.  Please help.

> language:	C, C++
> package:	Cyclo - cyclomatic complexity tool
> version:	the one and only version
> parts:		code analysis tool
> author:		Roger D Binns 
> how to get:	alt.sources archive, 1993/06/28, <C9C2rH.EE@brunel.ac.uk>
> description:	It measures cyclomatic complexity, shows function calls and 
> 		can draw flowgraphs of ANSI C and C++ code.
> requires:	lex, C++
> updated:	1993/06/28

begin 644 cyclo.tar.gz
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
1^[_O_^1L]O\#ZI&/*P`P`@!@
`
end


    case LB:
    case LBD:
    case LBU:
    case LBUD:
    case LH:
    case LHD:
    case LHU:
    case LHUD:
    case LW:
    case LWL:
    case LWR:
    case LWD:
#if 0
    case LBJ:
    case LBUJ:
    case LHJ:
    case LHUJ:
    case LWJ:
#endif
      /* input from memory */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case LAD:
    case LUI:
      /* input from instruction */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case ADD:
    case ADDU:
    case SUB:
    case SUBU:
    case AND_:
    case OR:
    case XOR:
    case NOR:
    case SLL:
    case SLLV:
    case SRL:
    case SRLV:
    case SRA:
    case SRAV:
      srcA = GPR(RS); validA = valid[RS];
      srcB = GPR(RT); validB = valid[RT];
      break;
    case ADDI:
    case ADDIU:
    case ANDI:
    case ORI:
    case XORI:
      srcA = GPR(RS); validA = valid[RS];
      srcB = IMM; validB = /* not a pointer */FALSE;
      break;
    case SLT:
    case SLTI:
    case SLTU:
    case SLTIU:
      /* definately not pointer results */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case MFC1:
      /* definately not a pointer result */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case MFLO:
    case MFHI:
      /* not valid pointer sources */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case JAL:
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case JALR:
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    default:
      /* not valid pointer sources */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
    }

    switch (OP2[i]) {
#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)	\
    case OP:								\
      EXPR; numInsts++;							\
      break;
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)\
    case OP:								\
      EXPR; ldst = TRUE; direct = DIRECT; numInsts++;			\
      break;
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)					\
    case OP:								\
      error("tried to execute a linking opcode, %d", OP);
#define CONNECT(OP)
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
    default:
      error("bogus opcode `%d' encountered", OP2[i]);
    }

    switch (OP2[i]) {
    case LB:
    case LBU:
    case LH:
    case LHU:
    case LW:
    case LWL:
    case LWR:
    case LUI:
#if 0
    case LBJ:
    case LBUJ:
    case LHJ:
    case LHUJ:
    case LWJ:
#endif
      /* input from memory (or inst for LUI) */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case LBD:
    case LBUD:
    case LHD:
    case LHUD:
    case LWD:
    case LAD:
      /* input from memory */
      RegUpdate(RS, GPR(RS), 0, FALSE, -1, FALSE);
      break;
    case ADD:
    case ADDU:
    case SUB:
    case SUBU:
    case AND_:
    case OR:
    case XOR:
    case NOR:
    case SLL:
    case SLLV:
    case SRL:
    case SRLV:
    case SRA:
    case SRAV:
      RegUpdate(RD, GPR(RD), srcA, validA, srcB, validB);
      break;
    case ADDI:
    case ADDIU:
    case ANDI:
    case ORI:
    case XORI:
      RegUpdate(RT, GPR(RT), srcA, validA, srcB, validB);
      break;
    case SLT:
    case SLTU:
      /* definately not pointer results */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    case SLTI:
    case SLTIU:
      /* definately not pointer results */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case MFC1:
      /* definately not a pointer result */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case MFLO:
    case MFHI:
      /* not valid pointer sources */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    case JAL:
      /* not a valid pointer source */
      RegUpdate(31, GPR(31), 0, FALSE, -1, FALSE);
      break;
    case JALR:
      /* not a valid pointer source */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    default:
      /* rest of instruction do not write an integer register */
    }

    if (verbose && ldst && jamminMan) {
      if (jamFailed)
	info("jam failed    @ 0x%08x, GPR(%d)=0x%08x OFS=%x",
	     PC2[i], BS, GPR(BS), OFS);
      else
	info("jam succeeded @ 0x%08x, GPR(%d)=0x%08x OFS=%x",
	     PC2[i], BS, GPR(BS), OFS);
    }

    if (ldst) {
      enum Opcode op = OP2[i];
      nRefs++;
      if (IC2[i] == MemRead) {
	nReads++;
	if ((unsigned)LB_RR<=(unsigned)op && (unsigned)op<=(unsigned)LWC1_RR)
	  nRRLoads++;
	if (op == LWC1_RR_R2 || op == LW_RR_R2)
	  nRRLoads++;
	if (direct)
	  nDirectLoads++;
	if (jamFailed)
	  nFailedLdJams++;
      }
      else {
	if ((unsigned)SB_RR<=(unsigned)op && (unsigned)op<=(unsigned)SWC1_RR)
	  nRRStores++;
	if (op == SWC1_RR_R2 || op == SW_RR_R2)
	  nRRStores++;
	if (direct)
	  nDirectStores++;
	if (jamFailed)
	  nFailedStJams++;
      }

      if (dirMode)
	nDirMode++;
      else if (jamMode)
	nJamMode++;
      else if (pCalcMode)
	nPCalcMode++;
      else if (dualMode)
	nDualMode++;
    }

    /* compute amount of extra latency noted in the EX stage */
    exLat =
      (/* memory latency, from cache misses */
       memLat
       /* address translation latency */
       + /* GetTLBLat((FU2[i]==DirRdPort || FU2[i]==DirWrPort),
	    BS, IC2[i], cycle) */ 0
       /* failed jam ld/st */
       + ((ldst && (stallIssue || jamFailed || !jamminMan) && IC2[i]==MemRead)
	  ? mjCost : 0));

    if (jamminMan && ldst && jamFailed && !stallIssue) {
      /* this is a mis-speculated and executed memory access */
      nFailedInEX++;
    }

    /* record any lagging loads or stores */
    if (jamminMan && ldst && IC2[i] == MemWrite && (jamFailed || stallIssue)) {
      stalledStore = TRUE;
    }
    if (jamminMan && ldst && IC2[i] == MemRead && (jamFailed || stallIssue)) {
      stalledLoad = TRUE;
    }

    /* schedule the write back event, do this here as non-deterministic
       latencies are generated/computed in the EX stage (e.g., cache miss,
       TLB xlation, failed jams */
    if (out1_2[i])
      ScheduleEvent((cycle-1)+fuClassToResOpLatency[FU2[i]][res2[i]]+exLat,
		    out1_2[i]);
    if (out2_2[i])
      ScheduleEvent((cycle-1)+fuClassToResOpLatency[FU2[i]][res2[i]]+exLat,
		    out2_2[i]);

    if (IC2[i] == CondCtrl || IC2[i] == UncondCtrl) {
      /* did the BTB predict correctly, even if it missed */
      ProbeSample(btbPredRate, (NPC2[i] == nextPC) ? 1 : 0);

      /* update the branch target buffer stats */
      BTBUpdate(/* br addr */PC2[i], /* taken? */(nextPC != (PC2[i] + 8)),
		/* target */nextPC);

      /* was a branch taken? if so, reset the IF stage PC */
      if (/* predicted incorrectly? */ NPC2[i] != nextPC) {

	/* taken if (nextPC != (PC2[i] + 8)) */
	/* not taken if (nextPC == (PC2[i] + 8)) */
	PC = nextPC;

	/* commit this instruction to the next stage, and return */
	IR3[N3] = IR2[i];
	PC3[N3] = PC2[i];
	NPC3[N3] = NPC2[i];
	OP3[N3] = OP2[i];
	FU3[N3] = FU2[i];
	IC3[N3++] = IC2[i];

	/* keep a backtrace */
	DTraceLog("squashing branch @ 0x%08lx: %ld insts", PC2[i], numInsts);

	/* reset any previously set busy bits */
	for (i++; i<N2; i++) {
	  if (out1_2[i]) {
	    RSClearBit(busy, out1_2[i]);
	    outToFU[out1_2[i]] = -1;
	  }
	  if (out2_2[i]) {
	    RSClearBit(busy, out2_2[i]);
	    outToFU[out2_2[i]] = -1;
	  }
	}

	/* squash rest of execute state insts and decode stage */
	SquashExecute();
	SquashIDecode();
	cycle += nCycleMP;
	pipeStats.mpStall += (nCycleMP * numIssue);
	return;
      }
    }

    /* commit this instruction to the next stage */
    IR3[N3] = IR2[i];
    PC3[N3] = PC2[i];
    NPC3[N3] = NPC2[i];
    OP3[N3] = OP2[i];
    FU3[N3] = FU2[i];
    IC3[N3++] = IC2[i];

    /* keep a backtrace */
    DTraceLog("ALU/Ctrl op @ 0x%08lx: %ld insts", PC2[i], numInsts);
  }

  /* all instruction processed */
  N2 = 0;
}


/** 1-IDECODE **/
ulong N1;
ulong Ihead, Itail;
struct SSInst *IR1;
ulong *PC1, *NPC1;

void
SquashIDecode(void)
{
  N1 = 0;
  Ihead = Itail = 0;

  if (stalledStore)
    stalledStore = FALSE;
  if (stalledLoad)
    stalledLoad = FALSE;
}

void
InitIDecode(void)
{
  if (!(IR1 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC1 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC1 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  SquashIDecode();
}

char *regName[] = {
  "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7",
  "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15",
  "r16", "r17", "r18", "r19", "r20", "r21", "r22", "r23",
  "r24", "r25", "r26", "r27", "r28", "r29", "r30", "r31",
  "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7",
  "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15",
  "f16", "f17", "f18", "f19", "f20", "f21", "f22", "f23",
  "f24", "f25", "f26", "f27", "f28", "f29", "f30", "f31",
  "HI", "LO", "FC",
};

void
DumpRegSet(RegSet rs)
{
  ulong i;

  for (i=0; i<RS_BIT_SIZE; i++)
    if (RSBitIsSet(rs, i))
	fprintf(stderr, "%s, ", regName[i]);
  fprintf(stderr, "\n");
}

#undef GPR(N)
#undef CGPR(N)
#undef FPR_L(N)
#undef FPR_F(N)
#undef FPR_D(N)
#undef HI
#undef LO
#undef FC

#define GPR(N)		(N)
#define CGPR(N)		(COMP_OP != COMP_NOP ? N : 0)
#define FPR_L(N)	(((N)+32)&~1)
#define FPR_F(N)	(((N)+32)&~1)
#define FPR_D(N)	(((N)+32)&~1)
#define HI		(0+32+32)
#define LO		(1+32+32)
#define FC		(2+32+32)
#define MEM		(0)
#define CTRL		(0)

#define I_GPR(N)	RSSetBit(inputs, GPR(N))
#define I_CGPR(N)	(COMP_OP != COMP_NOP ? RSSetBit(inputs, GPR(N)) : 0)
#define I_FPR_L(N)	RSSetBit(inputs, FPR_L(N))
#define I_FPR_F(N)	RSSetBit(inputs, FPR_F(N))
#define I_FPR_D(N)	RSSetBit(inputs, FPR_F(N));
#define I_HI		RSSetBit(inputs, HI)
#define I_LO		RSSetBit(inputs, LO)
#define I_FC		RSSetBit(inputs, FC)
#define I_MEM		/* RSSetBit(inputs, MEM) */
#define I_CTRL		/* RSSetBit(inputs, CTRL) */
#define I_NA

#define O_GPR(N)	RSSetBit(outputs, GPR(N))
#define O_CGPR(N)	(COMP_OP != COMP_NOP ? RSSetBit(outputs, GPR(N)) : 0)
#define O_FPR_L(N)	RSSetBit(outputs, FPR_L(N))
#define O_FPR_F(N)	RSSetBit(outputs, FPR_F(N))
#define O_FPR_D(N)	RSSetBit(outputs, FPR_F(N));
#define O_HI		RSSetBit(outputs, HI)
#define O_LO		RSSetBit(outputs, LO)
#define O_FC		RSSetBit(outputs, FC)
#define O_MEM		/* RSSetBit(outputs, MEM) */
#define O_CTRL		/* RSSetBit(outputs, CTRL) */
#define O_NA

ulong WAWstalls = 0;

void
IDecode(void)
{
  ulong i;
  enum Opcode op;
  enum FUClass fu;
  enum InstClass ic;
  ulong out1, out2, in1, in2, in3;
  struct SSInst inst;
  ulong j;
  RegSet inputs;
  RegSet outputs;
  ulong Ntotal = N1;
  int direct;
  int iRes;

  /* a load and store cannot issue in parallel */
  int issuedLoad = FALSE;
  int issuedStore = FALSE;

  /* any empty slots, due to BTB target switch */
  pipeStats.mpStall += numIssue-N1;

  /* no outputs yet */
  RSClear(outputs);

  for (i=0; i<Ntotal; i++) {

    out1 = 0; out2 = 0;
    in1 = 0; in2 = 0; in3 = 0;
    direct = FALSE;
    RSClear(inputs);
    fu = NA;
    iRes = -1;

    SET_OPCODE(op, IR1[Itail]);

    inst = IR1[Itail];

    switch (op) {
#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)	\
    case OP:								\
      fu = RES; ic = CLASS;						\
      out1 = O1; O_##O1; out2 = O2; O_##O2;				\
      in1 = I1; I_##I1; in2 = I2; I_##I2; in3 = I3; I_##I3;		\
      break;
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)\
    case OP:								\
      fu = RES; ic = CLASS;						\
      out1 = O1; O_##O1; out2 = O2; O_##O2;				\
      in1 = I1; I_##I1; in2 = I2; I_##I2; in3 = I3; I_##I3;		\
      direct = DIRECT;							\
      break;
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)					\
    case OP:								\
      error("tried to get dependency info for a linking opcode, %d", OP);
#define CONNECT(OP)
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
    default:
      /* speculatively, we may (try to) decode a bogus opcode */
      /* error("bogus opcode `%d' encountered", op); */
      fu = IntALU; ic = IntComp;
      out1 = 0; out2 = 0;
      in1 = 0; in2 = 0; in3 = 0;
    }

    /* make sure direct loads and stores are typed right */
    /* assert(!direct || RSEmpty(inputs)); */

    /* r0 is a zero source/sink register */
    RSClearBit(inputs, 0);
    RSClearBit(outputs, 0);

    if (ic == Trap) {
      /* system call instruction, this needs to execute all alone,
         the stage of execute is unimportant as all SYSCALL insts will
	 be preceded by a LI R2,0x... instruction, which will always
	 complete in the EX stage */
      if (i == 0) {
	/* commit this instruction to the next stage */
	assert(N2 == 0);
	IR2[N2] = IR1[Itail];
	PC2[N2] = PC1[Itail];
	NPC2[N2] = NPC1[Itail];
	OP2[N2] = op;
	FU2[N2] = fu;
	IC2[N2] = ic;
	out1_2[N2] = out1;
	out2_2[N2] = out2;
	/* no resource allocated */
	res2[N2++] = -1;

	Itail = (Itail + 1) & niMask;
	N1--;
	pipeStats.trapStall += N1;
	pipeStats.computing++;
	return;
      }
      else {
	/* it will execute in the next cycle, otherwise, in either case
	   there is something for the EX stage to do in the next cycle */
	pipeStats.trapStall += N1;
	return;
      }
    }

    /* stall on RAW hazards */
    if (RSInterP(busy, inputs)) {
      /* busy register not ready yet, bail */
      if (in1 && outToFU[in1] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in1]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in1))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else if (in2 && outToFU[in2] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in2]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in2))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else if (in3 && outToFU[in3] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in3]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in3))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else
	panic("OUTTOFU is out of sync");
      return;
    }

    if (!perfectMemory) {
      /* stores must fly alone (no other stores or loads) */

      /* basic pipeline issue constraints */
      if ((ic == MemRead && issuedStore)
	  || (ic == MemWrite && (issuedLoad || issuedStore))) {
	pipeStats.noFUStall += N1;
	return;
      }

      /* extended jamming load/store issue constraints */
      if ((ic == MemRead && stalledStore)
	  || (ic == MemWrite && (stalledLoad || stalledStore))) {
	/* this issue is allowed but must be stalled */
	stallIssue = TRUE;
      }

      /* sanity check */
      assert(!issuedLoad || !issuedStore);
    }

    if (ic == MemRead)
      issuedLoad = TRUE;
    else if (ic == MemWrite)
      issuedStore = TRUE;

    /* get the necessary resources */
    if (fu) {
      int gotOne = FALSE;

      for (j=0; j<N_ELT(resource); j++) {
	if (fuClassToRes[fu][j] != -1) {
	  iRes = fuClassToRes[fu][j];
	  if (resource[iRes].busy == 0) {
	    gotOne = TRUE;
	    resource[iRes].busy = fuClassToResIssueLatency[fu][iRes];
	    break;
	  }
	}
	else {
	  /* do not need to scan the whole list, it is terminated by
	     a `-1' at the end of the resource index list, no functional
	     unit available, so bail */
	  pipeStats.noFUStall += N1;
	  return;
	}
      }
      if (!gotOne) {
	/* no functional unit available, so bail */
	pipeStats.noFUStall += N1;
	return;
      }
    }

    /* registers are now pending results */
    RSOrSet(busy, outputs);
    if (out1)
      outToFU[out1] = iRes;
    if (out2)
      outToFU[out2] = iRes;

    /* commit this instruction to the next stage */
    pipeStats.computing++;
    IR2[N2] = IR1[Itail];
    PC2[N2] = PC1[Itail];
    NPC2[N2] = NPC1[Itail];
    OP2[N2] = op;
    FU2[N2] = fu;
    IC2[N2] = ic;
    out1_2[N2] = out1;
    out2_2[N2] = out2;
    res2[N2++] = iRes;
    Itail = (Itail + 1) & niMask;
    N1--;
  }
  assert(N1 == 0);
}


/** 0-IFETCH **/
ulong PC;

/* fetch up to NUMISSUE instructions, the fetched instructions are
   placed into the circular queue owned by the decode stage; when the
   decode queue is full fetching terminates; fetching also terminates
   when the BTB predicts a jump, since the instructions at the new
   address will not be available until the next cycle */
void
IFetch(void)
{
  ulong i;
  ulong target;
  struct SSInst inst;
  ulong lastPC;
  int done = FALSE;

  for (i=0;
       (i < numIssue)		/* fetch up to NUMISSUE insts */
       && (N1 < numIssue)	/* fetch until IDecode() stage is full */
       && !done;		/* for BTB fetch termination */
       i++) {

    /* fetch instruction */
#if 0
    CacheAccess(iCache, Read, PC, (uchar *)&inst, 8, cycle, TRUE);
#else
    inst = GetInst(PC);
#endif
    lastPC = PC;

    /* possibly use the BTB target */
    if ((target = BTBLookup(PC))) {
      PC = target;
      /* discontinuous stream, so stop fetching until the next cycle */
      done = (target != (PC + 8));
      /* hit in the BTB */
      ProbeSample(btbHitRate, 1);
    }
    else {
      /* missed in the BTB, continue fetching linearly */
      PC += 8;
      /* missed in the BTB */
      ProbeSample(btbHitRate, 0);
    }

    /* commit this instruction to the next stage */
    IR1[Ihead] = inst;
    PC1[Ihead] = lastPC;
    NPC1[Ihead] = PC;
    Ihead = (Ihead + 1) & niMask;
    N1++;
  }
}


void
DumpPipeState(void)
{
  ulong i, j;

  fprintf(stderr, ">>>> Pipe state <<<<\n");
  fprintf(stderr, "\tcycle => %15.0f\n", (double)cycle);
  fprintf(stderr, "\tWriteBack():\n");
  for (i=0; i<N3; i++) {
    fprintf(stderr, "\t\tPC3.%ld: 0x%08lx  NPC3.%ld: 0x%08lx  IR3.%ld: ",
	    i, PC3[i], i, NPC3[i], i);
    DisassembleInst(IR3[i], stderr);
    fprintf(stderr, "\n");
    fprintf(stderr, "\t\tOP3.%ld: %s  FU3.%ld: %s  IC3.%ld: %s\n",
	    i, opName[OP3[i]], i, fuClassDesc[FU3[i]], i, iClassDesc[IC3[i]]);
    fprintf(stderr,
	    "\t\tres2.%ld: %d  out1_2.%ld: 0x%08x  out2_2.%ld: 0x%08x\n",
	    i, res2[i], i, out1_2[i], i, out2_2[i]);
    if (i+1 < N3)
      fprintf(stderr, "\t\t--\n");
  }
  DumpEventQueue();
  fprintf(stderr, "\tBusy: "); DumpRegSet(busy);
  fprintf(stderr, "\tExecute():\n");
  for (i=0; i<N2; i++) {
    fprintf(stderr, "\t\tPC2.%ld: 0x%08lx  NPC2.%ld: 0x%08lx  IR2.%ld: ",
	    i, PC2[i], i, NPC2[i], i);
    DisassembleInst(IR2[i], stderr);
    fprintf(stderr, "\n");
    fprintf(stderr, "\t\tOP2.%ld: %s  FU2.%ld: %s  IC2.%ld: %s\n",
	    i, opName[OP2[i]], i, fuClassDesc[FU2[i]], i, iClassDesc[IC2[i]]);
    if (i+1 < N2)
      fprintf(stderr, "\t\t--\n");
  }
  fprintf(stderr, "\tIDecode():\n");
  for (i=0,j=Itail; i<N1; i++,j=(j+1)&niMask) {
    fprintf(stderr, "\t\tPC1.%ld: 0x%08lx  IR1.%ld: ", i, PC1[j], i);
    DisassembleInst(IR1[j], stderr);
    fprintf(stderr, "\n");
    if (i+1 < N1)
      fprintf(stderr, "\t\t--\n");
  }
  fprintf(stderr, "\tIFetch():\n");
  {
    fprintf(stderr, "\t\tPC: 0x%08lx\n", PC);
  }
}

void
SSOptions(int argc, char **argv)
{
  char c;

  /* parse options */
  NewOpt();
  while ((c = GetOpt(argc, argv, ALL_OPTIONS)) != EOF) {
    switch (c) {
    case 'w':
      numIssue = atoi(optArg);
      if (numIssue == 0)
	fatal("numIssue is zero");
      if ((numIssue & (numIssue-1)) != 0)
	fatal("numIssue is not a power of two, numIssue = %d",
	      numIssue);
      break;
    case 'i':
      /* instruction cache */
      if (!strcmp(optArg, "-")) {
	useICache = FALSE;
	break;
      }
      if (!ParseCacheParam(&iCacheParams, optArg))
	fatal("invalid iCache format: %s", optArg);
      useICache = TRUE;
      break;
    case 'd':
      /* data cache */
      if (!strcmp(optArg, "-")) {
	break;
      }
      if (!ParseCacheParam(&dCacheParams, optArg))
	fatal("invalid dCache format: %s", optArg);
      break;
    /* TLB configuration */
    case 'x':
      if (sscanf(optArg, "%lu:%lu:%lu", &nTLB, &opLatTLB, &issueLatTLB) != 3)
	fatal("invalid TLB configuration (n:opLat:issueLat): %s", optArg);
      break;
    case 'g':
      /* reset page size */
      pageSize = atoi(optArg);
      if ((pageSize & (pageSize - 1)) != 0)
	fatal("page size, %u, is not a power-of-two", pageSize);
      break;
    /* simulation modes */
    case '1':	/* all single cycle loads and stores */
      {
	int i, j;

	info("resetting all ld/st's to 1 cycle...");
	for (i=0; i<N_ELT(resource); i++)
	  for (j=0; j<NUM_FU_CLASSES; j++)
	    if (resource[i].x[j].fuClass == DirRdPort
		|| resource[i].x[j].fuClass == DirWrPort
		|| resource[i].x[j].fuClass == JamRdPort
		|| resource[i].x[j].fuClass == JamWrPort
		|| resource[i].x[j].fuClass == RdPort
		|| resource[i].x[j].fuClass == WrPort) {
	      resource[i].x[j].opLatency = 1;
	      resource[i].x[j].issueLatency = 1;
	    }
	mjCost = 0;
      }
      break;
    case '2':	/* perfect memory performance */
      {
	extern ulong accessLatency;
	extern ulong interLatency;

	info("running with infinitely fast memory...");
	accessLatency = 0;
	interLatency = 0;
      }
      break;
    case '3':	/* ideal memory interface */
      info("running with perfect memory system (no conflicts)...");
      perfectMemory = TRUE;
      break;
    case '4':	/* failed jams have no penalty */
      abort();
      break;
    case '5':
      info("running with %d-cycle mis-prediction latency (was %d)",
	   2 + nCycleMP + 1, 2 + nCycleMP);
      nCycleMP++;
      break;
    case '6':
      {
	int i, gotone = FALSE;
	unsigned long nPipes = 0;

	for (i=0; i<N_ELT(resource); i++) {
	  if (resource[i].x[0].fuClass == DirRdPort
	      || resource[i].x[0].fuClass == DirWrPort
	      || resource[i].x[0].fuClass == JamRdPort
	      || resource[i].x[0].fuClass == JamWrPort
	      || resource[i].x[0].fuClass == RdPort
	      || resource[i].x[0].fuClass == WrPort) {
	    if (resource[i].busy == 0 && !gotone) {
	      resource[i].busy = -1; /* disabled */
	      gotone = TRUE;
	    }
	    nPipes += ((resource[i].busy == 0) ? 1 : 0);
	  }
	}
	info("running with one less ld/st pipes (%d ld/st pipes left)...",
	     nPipes);
      }
      break;
    case '7':
      dirJam = TRUE;
      info("using direct ld/st jam scheme");
      break;
    case '8':	/* all two cycle loads and stores, except direct */
      baseJam = TRUE;
      info("using base jam scheme");
      break;
    case '9':
      altJam = TRUE;
      jamSize = atoi(optArg);
      if ((jamSize & (jamSize-1)) != 0)
	fatal("jamsize (%lu) must be a power-of-two", jamSize);
      info("using alternate jam scheme, setting block size to `%d'", jamSize);
      break;
    case '0':
      {
	int i, j;

	info("resetting all ld/st's to 1 cycle...");
	for (i=0; i<N_ELT(resource); i++)
	  for (j=0; j<NUM_FU_CLASSES; j++)
	    if (resource[i].x[j].fuClass == DirRdPort
		|| resource[i].x[j].fuClass == DirWrPort
		|| resource[i].x[j].fuClass == JamRdPort
		|| resource[i].x[j].fuClass == JamWrPort
		|| resource[i].x[j].fuClass == RdPort
		|| resource[i].x[j].fuClass == WrPort) {
	      resource[i].x[j].opLatency = 1;
	      resource[i].x[j].issueLatency = 1;
	    }
	info("attempting to jam loads and stores...");
	jamminMan = TRUE;
      }
      break;
    }
  }
}

void
SSConfig(void)
{
  char buf[256];

  if (simType != SuperScalar)
    return;
  info("numIssue = %d", numIssue);
  if (useICache)
    info("%s", PrintCacheParam(buf, &iCacheParams));
  info("%s", PrintCacheParam(buf, &dCacheParams));
  info("BTB contains %d entries, direct mapped", btbSize);
  info("page size = %u bytes", pageSize);
  info("running with %d-cycle mis-prediction latency", 2+nCycleMP);
}

void
SuperSimStats(FILE *stream)
{
  long long sum;

  info("executed %.0f cycles", (double)cycle);
  info("avg issue rate + mem %f insts/cycle", (double)numInsts/cycle);

  ProbePrint(btbHitRate, stream, TRUE);
  ProbePrint(btbPredRate, stream, TRUE);
  if (useICache)
    info("iCache miss rate: %f",
	 (double)iCache->misses/max(iCache->hits + iCache->misses, 1));
  info("dCache miss rate: %f",
       (double)dCache->misses/max(dCache->hits + dCache->misses, 1));
  info("detected %lu WAW stalls", WAWstalls);
  info("direct TLB accesses = %.0f of %.0f (%f%%)",
       (double)directTLBAccess, (double)TLBAccess,
       ((double)directTLBAccess/(double)TLBAccess)*100.0);
  info("elided TLB accesses = %.0f of %.0f (%f%%) (%f%% of indirect)",
       (double)elidedTLBAccess, (double)TLBAccess,
       ((double)elidedTLBAccess/(double)TLBAccess)*100.0,
       ((double)elidedTLBAccess/(double)(TLBAccess-directTLBAccess))*100.0);
  info("required TLB accesses = %.0f of %.0f (%f%%)",
       (double)(TLBAccess - (directTLBAccess+elidedTLBAccess)),
       (double)TLBAccess,
       ((double)(TLBAccess - (directTLBAccess+elidedTLBAccess)) /
	(double)TLBAccess) * 100.0);
  info("pre-translation revivals = %.0f or %.0f (%f%%)",
       (double)invalidNoOverrun,
       (double)invalidNoOverrun+(double)invalidOverrun,
       ((double)invalidNoOverrun /
	((double)invalidNoOverrun+(double)invalidOverrun)) * 100.0);
  info("total double valid ALU ops = %.0f", (double)doubleValid);
  fprintf(stream, "nRefs      = %15.0f (100.00%%) {%.0fr/%.0fw}\n",
	  (double)nRefs, (double)nReads, (double)(nRefs - nReads));
  fprintf(stream, "nDirectLds = %15.0f (%6.2f%%)\n",
	  (double)nDirectLoads,
	  100.0 * (double)nDirectLoads/(double)nRefs);
  fprintf(stream, "nDirectSts = %15.0f (%6.2f%%)\n",
	  (double)nDirectStores,
	  100.0 * (double)nDirectStores/(double)nRefs);
  fprintf(stream, "nRRLoads   = %15.0f (%6.2f%%)\n",
	  (double)nRRLoads,
	  100.0 * (double)nRRLoads/(double)nRefs);
  fprintf(stream, "nRRStores  = %15.0f (%6.2f%%)\n",
	  (double)nRRStores,
	  100.0 * (double)nRRStores/(double)nRefs);
  fprintf(stream, "nFailedLdJams = %15.0f (%6.2f%%)\n",
	  (double)nFailedLdJams,
	  100.0 * (double)nFailedLdJams/(double)nReads);
  fprintf(stream, "nFailedStJams = %15.0f (%6.2f%%)\n",
	  (double)nFailedStJams,
	  100.0 * (double)nFailedStJams/(double)(nRefs - nReads));
  sum = nDirMode + nJamMode + nPCalcMode + nDualMode;
  fprintf(stream, "nDirMode      = %15.0f (%6.2f%%)\n",
	  (double)nDirMode, 100.0 * (double)nDirMode/(double)sum);
  fprintf(stream, "nJamMode      = %15.0f (%6.2f%%)\n",
	  (double)nJamMode, 100.0 * (double)nJamMode/(double)sum);
  fprintf(stream, "nPCalcMode    = %15.0f (%6.2f%%)\n",
	  (double)nPCalcMode, 100.0 * (double)nPCalcMode/(double)sum);
  fprintf(stream, "nDualMode     = %15.0f (%6.2f%%)\n",
	  (double)nDualMode, 100.0 * (double)nDualMode/(double)sum);
  fprintf(stream, "nNotFailed    = %15.0f\n", (double)nRefs);
  fprintf(stream, "nFailedInEX    = %15.0f\n", (double)nFailedInEX);
  DumpPipeStats(stream);
}

void
SuperSim(void)
{
  info("starting superscalar simulation");

  /* build the caches */
  iCache = CreateCache(&iCacheParams, TRUE);
  dCache = CreateCache(&dCacheParams, TRUE);

  /* compute the shift count needed to do a "% numIssue" */
  niMask = numIssue-1;
  debug("numIssue = %d, niMask = %x", numIssue, niMask);

  /* initialize simulation probes */
  btbHitRate = ProbeCreate("BTB hit rate", Mean);
  btbPredRate = ProbeCreate("BTB pred accuracy", Mean);

  /* initialize the processor state */
  InitPreciseState();
  BuildMaskMap();
  InitFUMap();
  InitBTB(1024);
  InitEventQueue();
  InitWriteBack();
  InitExecute();
  InitIDecode();
  InitTLB();
  ResetPipeStats();

  PC = progEntry;
  cycle = 0;

  while (1) {

    if (dumpStats) {
      DumpPreciseState(stderr);
      DumpFinalStats(stderr);
      dumpStats = FALSE;
    }

    if (verbose && cycle >= verbose)
      DumpPipeState();

#if 0    /* check for deadlock conditions */
    if (!evQueue && !RSEmpty(busy))
      fatal("event queue is empty and busy bits are set");
#endif

    WriteBack();
    Execute();
    stallIssue = FALSE;
    IDecode();
    /* IFetch() could stall on an i-cache miss, but that is currently
       not supported */
    if (stalledStore)
      stalledStore = FALSE;
    if (stalledLoad)
      stalledLoad = FALSE;
    IFetch();

    cbreak(PC == breakAddr);

    numCycles++; cycle++;
  }
}
      return (VOID *) p;
  return 0;
}
#endif
    
/* Define flags declared in grep.h. */
char *matcher;
int match_icase;
int match_words;
int match_lines;

/* Functions we'll use to search. */
static void (*compile)();
static char *(*execute)();

/* For error messages. */
static char *prog;
static char *filename;
static int errseen;

/* Print a message and possibly an error string.  Remember
   that something awful happened. */
static void
error(mesg, errnum)
#ifdef __STDC__
     const
#endif
     char *mesg;
     int errnum;
{
  if (errnum)
    fprintf(stderr, "%s: %s: %s\n", prog, mesg, strerror(errnum));
  else
    fprintf(stderr, "%s: %s\n", prog, mesg);
  errseen = 1;
}

/* Like error(), but die horribly after printing. */
void
fatal(mesg, errnum)
#ifdef __STDC__
     const
#endif
     char *mesg;
     int errnum;
{
  error(mesg, errnum);
  exit(2);
}

/* Interface to handle errors and fix library lossage. */
char *
xmalloc(size)
     size_t size;
{
  char *result;

  result = malloc(size);
  if (size && !result)
    fatal("memory exhausted", 0);
  return result;
}

/* Interface to handle errors and fix some library lossage. */
char *
xrealloc(ptr, size)
     char *ptr;
     size_t size;
{
  char *result;

  if (ptr)
    result = realloc(ptr, size);
  else
    result = malloc(size);
  if (size && !result)
    fatal("memory exhausted", 0);
  return result;
}

#if !defined(HAVE_VALLOC)
#define valloc malloc
#else
#ifdef __STDC__
extern void *valloc(size_t);
#else
extern char *valloc();
#endif
#endif

/* Hairy buffering mechanism for grep.  The intent is to keep
   all reads aligned on a page boundary and multiples of the
   page size. */

static char *buffer;		/* Base of buffer. */
static size_t bufsalloc;	/* Allocated size of buffer save region. */
static size_t bufalloc;		/* Total buffer size. */
static int bufdesc;		/* File descriptor. */
static char *bufbeg;		/* Beginning of user-visible stuff. */
static char *buflim;		/* Limit of user-visible stuff. */

#if defined(HAVE_WORKING_MMAP)
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/mman.h>

static int bufmapped;		/* True for ordinary files. */
static struct stat bufstat;	/* From fstat(). */
static off_t bufoffset;		/* What read() normally remembers. */
#endif

/* Reset the buffer for a new file.  Initialize
   on the first time through. */
void
reset(fd)
     int fd;
{
  static int initialized;

  if (!initialized)
    {
      initialized = 1;
#ifndef BUFSALLOC
      bufsalloc = MAX(8192, getpagesize());
#else
      bufsalloc = BUFSALLOC;
#endif
      bufalloc = 5 * bufsalloc;
      /* The 1 byte of overflow is a kludge for dfaexec(), which
	 inserts a sentinel newline at the end of the buffer
	 being searched.  There's gotta be a better way... */
      buffer = valloc(bufalloc + 1);
      if (!buffer)
	fatal("memory exhausted", 0);
      bufbeg = buffer;
      buflim = buffer;
    }
  bufdesc = fd;
#if defined(HAVE_WORKING_MMAP)
  if (fstat(fd, &bufstat) < 0 || !S_ISREG(bufstat.st_mode))
    bufmapped = 0;
  else
    {
      bufmapped = 1;
      bufoffset = lseek(fd, 0, 1);
    }
#endif
}

/* Read new stuff into the buffer, saving the specified
   amount of old stuff.  When we're done, 'bufbeg' points
   to the beginning of the buffer contents, and 'buflim'
   points just after the end.  Return count of new stuff. */
static int
fillbuf(save)
     size_t save;
{
  char *nbuffer, *dp, *sp;
  int cc;
#if defined(HAVE_WORKING_MMAP)
  caddr_t maddr;
#endif
  static int pagesize;

  if (pagesize == 0 && (pagesize = getpagesize()) == 0)
    abort();

  if (save > bufsalloc)
    {
      while (save > bufsalloc)
	bufsalloc *= 2;
      bufalloc = 5 * bufsalloc;
      nbuffer = valloc(bufalloc + 1);
      if (!nbuffer)
	fatal("memory exhausted", 0);
    }
  else
    nbuffer = buffer;

  sp = buflim - save;
  dp = nbuffer + bufsalloc - save;
  bufbeg = dp;
  while (save--)
    *dp++ = *sp++;

  /* We may have allocated a new, larger buffer.  Since
     there is no portable vfree(), we just have to forget
     about the old one.  Sorry. */
  buffer = nbuffer;

#if defined(HAVE_WORKING_MMAP)
  if (bufmapped && bufoffset % pagesize == 0
      && bufstat.st_size - bufoffset >= bufalloc - bufsalloc)
    {
      maddr = buffer + bufsalloc;
      maddr = mmap(maddr, bufalloc - bufsalloc, PROT_READ | PROT_WRITE,
		   MAP_PRIVATE | MAP_FIXED, bufdesc, bufoffset);
      if (maddr == (caddr_t) -1)
	{
	  fprintf(stderr, "%s: warning: %s: %s\n", filename,
		  strerror(errno));
	  goto tryread;
	}
#if 0
      /* You might thing this (or MADV_WILLNEED) would help,
	 but it doesn't, at least not on a Sun running 4.1.
	 In fact, it actually slows us down about 30%! */
      madvise(maddr, bufalloc - bufsalloc, MADV_SEQUENTIAL);
#endif
      cc = bufalloc - bufsalloc;
      bufoffset += cc;
    }
  else
    {
    tryread:
      /* We come here when we're not going to use mmap() any more.
	 Note that we need to synchronize the file offset the
	 first time through. */
      if (bufmapped)
	{
	  bufmapped = 0;
	  lseek(bufdesc, bufoffset, 0);
	}
      cc = read(bufdesc, buffer + bufsalloc, bufalloc - bufsalloc);
    }
#else
  cc = read(bufdesc, buffer + bufsalloc, bufalloc - bufsalloc);
#endif
  if (cc > 0)
    buflim = buffer + bufsalloc + cc;
  else
    buflim = buffer + bufsalloc;
  return cc;
}

/* Flags controlling the style of output. */
static int out_quiet;		/* Suppress all normal output. */
static int out_invert;		/* Print nonmatching stuff. */
static int out_file;		/* Print filenames. */
static int out_line;		/* Print line numbers. */
static int out_byte;		/* Print byte offsets. */
static int out_before;		/* Lines of leading context. */
static int out_after;		/* Lines of trailing context. */

/* Internal variables to keep track of byte count, context, etc. */
static size_t totalcc;		/* Total character count before bufbeg. */
static char *lastnl;		/* Pointer after last newline counted. */
static char *lastout;		/* Pointer after last character output;
				   NULL if no character has been output
				   or if it's conceptually before bufbeg. */
static size_t totalnl;		/* Total newline count before lastnl. */
static int pending;		/* Pending lines of output. */

static void
nlscan(lim)
     char *lim;
{
  char *beg;

  for (beg = lastnl; beg < lim; ++beg)
    if (*beg == '\n')
      ++totalnl;
  lastnl = beg;
}

static void
prline(beg, lim, sep)
     char *beg;
     char *lim;
     char sep;
{
  if (out_file)
    printf("%s%c", filename, sep);
  if (out_line)
    {
      nlscan(beg);
      printf("%d%c", ++totalnl, sep);
      lastnl = lim;
    }
  if (out_byte)
    printf("%lu%c", totalcc + (beg - bufbeg), sep);
  fwrite(beg, 1, lim - beg, stdout);
  if (ferror(stdout))
    error("writing output", errno);
  lastout = lim;
}

/* Print pending lines of trailing context prior to LIM. */
static void
prpending(lim)
     char *lim;
{
  char *nl;

  if (!lastout)
    lastout = bufbeg;
  while (pending > 0 && lastout < lim)
    {
      --pending;
      if ((nl = memchr(lastout, '\n', lim - lastout)) != 0)
	++nl;
      else
	nl = lim;
      prline(lastout, nl, '-');
    }
}

/* Print the lines between BEG and LIM.  Deal with context crap.
   If NLINESP is non-null, store a count of lines between BEG and LIM. */
static void
prtext(beg, lim, nlinesp)
     char *beg;
     char *lim;
     int *nlinesp;
{
  static int used;		/* avoid printing "--" before any output */
  char *bp, *p, *nl;
  int i, n;

  if (!out_quiet && pending > 0)
    prpending(beg);

  p = beg;

  if (!out_quiet)
    {
      /* Deal with leading context crap. */

      bp = lastout ? lastout : bufbeg;
      for (i = 0; i < out_before; ++i)
	if (p > bp)
	  do
	    --p;
	  while (p > bp && p[-1] != '\n');

      /* We only print the "--" separator if our output is
	 discontiguous from the last output in the file. */
      if ((out_before || out_after) && used && p != lastout)
	puts("--");

      while (p < beg)
	{
	  nl = memchr(p, '\n', beg - p);
	  prline(p, nl + 1, '-');
	  p = nl + 1;
	}
    }

  if (nlinesp)
    {
      /* Caller wants a line count. */
      for (n = 0; p < lim; ++n)
	{
	  if ((nl = memchr(p, '\n', lim - p)) != 0)
	    ++nl;
	  else
	    nl = lim;
	  if (!out_quiet)
	    prline(p, nl, ':');
	  p = nl;
	}
      *nlinesp = n;
    }
  else
    if (!out_quiet)
      prline(beg, lim, ':');

  pending = out_after;
  used = 1;
}

/* Scan the specified portion of the buffer, matching lines (or
   between matching lines if OUT_INVERT is true).  Return a count of
   lines printed. */
static int
grepbuf(beg, lim)
     char *beg;
     char *lim;
{
  int nlines, n;
  register char *p, *b;
  char *endp;

  nlines = 0;
  p = beg;
  while ((b = (*execute)(p, lim - p, &endp)) != 0)
    {
      /* Avoid matching the empty line at the end of the buffer. */
      if (b == lim && ((b > beg && b[-1] == '\n') || b == beg))
	break;
      if (!out_invert)
	{
	  prtext(b, endp, (int *) 0);
	  nlines += 1;
	}
      else if (p < b)
	{
	  prtext(p, b, &n);
	  nlines += n;
	}
      p = endp;
    }
  if (out_invert && p < lim)
    {
      prtext(p, lim, &n);
      nlines += n;
    }
  return nlines;
}

/* Search a given file.  Return a count of lines printed. */
static int
grep(fd)
     int fd;
{
  int nlines, i;
  size_t residue, save;
  char *beg, *lim;

  reset(fd);

  totalcc = 0;
  lastout = 0;
  totalnl = 0;
  pending = 0;

  nlines = 0;
  residue = 0;
  save = 0;

  for (;;)
    {
      if (fillbuf(save) < 0)
	{
	  error(filename, errno);
	  return nlines;
	}
      lastnl = bufbeg;
      if (lastout)
	lastout = bufbeg;
      if (buflim - bufbeg == save)
	break;
      beg = bufbeg + save - residue;
      for (lim = buflim; lim > beg && lim[-1] != '\n'; --lim)
	;
      residue = buflim - lim;
      if (beg < lim)
	{
	  nlines += grepbuf(beg, lim);
	  if (pending)
	    prpending(lim);
	}
      i = 0;
      beg = lim;
      while (i < out_before && beg > bufbeg && beg != lastout)
	{
	  ++i;
	  do
	    --beg;
	  while (beg > bufbeg && beg[-1] != '\n');
	}
      if (beg != lastout)
	lastout = 0;
      save = residue + lim - beg;
      totalcc += buflim - bufbeg - save;
      if (out_line)
	nlscan(beg);
    }
  if (residue)
    {
      nlines += grepbuf(bufbeg + save - residue, buflim);
      if (pending)
	prpending(buflim);
    }
  return nlines;
}

static char version[] = "GNU grep version 2.0";

#define USAGE \
  "usage: %s [-[[AB] ]<num>] [-[CEFGVchilnqsvwx]] [-[ef]] <expr> [<files...>]\n"

static void
usage()
{
  fprintf(stderr, USAGE, prog);
  exit(2);
}

/* Go through the matchers vector and look for the specified matcher.
   If we find it, install it in compile and execute, and return 1.  */
int
setmatcher(name)
     char *name;
{
  int i;

  for (i = 0; matchers[i].name; ++i)
    if (strcmp(name, matchers[i].name) == 0)
      {
	compile = matchers[i].compile;
	execute = matchers[i].execute;
	return 1;
      }
  return 0;
}  

int
main(argc, argv)
     int argc;
     char *argv[];
{
  char *keys;
  size_t keycc, oldcc, keyalloc;
  int keyfound, count_matches, no_filenames, list_files, suppress_errors;
  int opt, cc, desc, count, status;
  FILE *fp;
  extern char *optarg;
  extern int optind;

  prog = argv[0];
  if (prog && strrchr(prog, '/'))
    prog = strrchr(prog, '/') + 1;

  keys = NULL;
  keycc = 0;
  keyfound = 0;
  count_matches = 0;
  no_filenames = 0;
  list_files = 0;
  suppress_errors = 0;
  matcher = NULL;

  while ((opt = getopt(argc, argv, "0123456789A:B:CEFGVX:bce:f:hiLlnqsvwxy"))
	 != EOF)
    switch (opt)
      {
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
	out_before = 10 * out_before + opt - '0';
	out_after = 10 * out_after + opt - '0';
	break;
      case 'A':
	out_after = atoi(optarg);
	if (out_after < 0)
	  usage();
	break;
      case 'B':
	out_before = atoi(optarg);
	if (out_before < 0)
	  usage();
	break;
      case 'C':
	out_before = out_after = 2;
	break;
      case 'E':
	if (matcher && strcmp(matcher, "egrep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);
	matcher = "posix-egrep";
	break;
      case 'F':
	if (matcher && strcmp(matcher, "fgrep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);;
	matcher = "fgrep";
	break;
      case 'G':
	if (matcher && strcmp(matcher, "grep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);
	matcher = "grep";
	break;
      case 'V':
	fprintf(stderr, "%s\n", version);
	break;
      case 'X':
	if (matcher)
	  fatal("matcher already specified", 0);
	matcher = optarg;
	break;
      case 'b':
	out_byte = 1;
	break;
      case 'c':
	out_quiet = 1;
	count_matches = 1;
	break;
      case 'e':
	cc = strlen(optarg);
	keys = xrealloc(keys, keycc + cc + 1);
	if (keyfound)
	  keys[keycc++] = '\n';
	strcpy(&keys[keycc], optarg);
	keycc += cc;
	keyfound = 1;
	break;
      case 'f':
	fp = strcmp(optarg, "-") != 0 ? fopen(optarg, "r") : stdin;
	if (!fp)
	  fatal(optarg, errno);
	for (keyalloc = 1; keyalloc <= keycc; keyalloc *= 2)
	  ;
	keys = xrealloc(keys, keyalloc);
	oldcc = keycc;
	if (keyfound)
	  keys[keycc++] = '\n';
	while (!feof(fp)
	       && (cc = fread(keys + keycc, 1, keyalloc - keycc, fp)) > 0)
	  {
	    keycc += cc;
	    if (keycc == keyalloc)
	      keys = xrealloc(keys, keyalloc *= 2);
	  }
	if (fp != stdin)
	  fclose(fp);
	/* Nuke the final newline to avoid matching a null string. */
	if (keycc - oldcc > 0 && keys[keycc - 1] == '\n')
	  --keycc;
	keyfound = 1;
	break;
      case 'h':
	no_filenames = 1;
	break;
      case 'i':
      case 'y':			/* For old-timers . . . */
	match_icase = 1;
	break;
      case 'L':
	/* Like -l, except list files that don't contain matches.
	   Inspired by the same option in Hume's gre. */
	out_quiet = 1;
	list_files = -1;
	break;
      case 'l':
	out_quiet = 1;
	list_files = 1;
	break;
      case 'n':
	out_line = 1;
	break;
      case 'q':
	out_quiet = 1;
	break;
      case 's':
	suppress_errors = 1;
	break;
      case 'v':
	out_invert = 1;
	break;
      case 'w':
	match_words = 1;
	break;
      case 'x':
	match_lines = 1;
	break;
      default:
	usage();
	break;
      }

  if (!keyfound)
    if (optind < argc)
      {
	keys = argv[optind++];
	keycc = strlen(keys);
      }
    else
      usage();

  if (!matcher)
    matcher = prog;

  if (!setmatcher(matcher) && !setmatcher("default"))
    abort();

  (*compile)(keys, keycc);

  if (argc - optind > 1 && !no_filenames)
    out_file = 1;

  status = 1;

  if (optind < argc)
    while (optind < argc)
      {
	desc = strcmp(argv[optind], "-") ? open(argv[optind], O_RDONLY) : 0;
	if (desc < 0)
	  {
	    if (!suppress_errors)
	      error(argv[optind], errno);
	  }
	else
	  {
	    filename = desc == 0 ? "(standard input)" : argv[optind];
	    count = grep(desc);
	    if (count_matches)
	      {
		if (out_file)
		  printf("%s:", filename);
		printf("%d\n", count);
	      }
	    if (count)
	      {
		status = 0;
		if (list_files == 1)
		  printf("%s\n", filename);
	      }
	    else if (list_files == -1)
	      printf("%s\n", filename);
	  }
	if (desc != 0)
	  close(desc);
	++optind;
      }
  else
    {
      filename = "(standard input)";
      count = grep(0);
      if (count_matches)
	printf("%d\n", count);
      if (count)
	{
	  status = 0;
	  if (list_files == 1)
	    printf("(standard input)\n");
	}
      else if (list_files == -1)
	printf("(standard input)\n");
    }

  exit(errseen ? 2 : status);
}
9)  Moamar al-Gaddafi
10) Mu'ammar Al Qathafi
11) Muammar Al Qathafi
12) Mo'ammar el-Gadhafi
13) Moamar El Kadhafi
14) Muammar al-Qadhafi
15) Mu'ammar al-Qadhdhafi
16) Mu'ammar Qadafi
17) Moamar Gaddafi
18) Mu'ammar Qadhdhafi
19) Muammar Khaddafi
20) Muammar al-Khaddafi
21) Mu'amar al-Kadafi
/* Getopt for GNU.
   NOTE: getopt is now part of the C library, so if you don't know what
   "Keep this file name-space clean" means, talk to roland@gnu.ai.mit.edu
   before changing it!

   Copyright (C) 1987, 88, 89, 90, 91, 92, 1993
   	Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by the
   Free Software Foundation; either version 2, or (at your option) any
   later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

/* NOTE!!!  AIX requires this to be the first thing in the file.
   Do not put ANYTHING before it!  */
#if !defined (__GNUC__) && defined (_AIX)
 #pragma alloca
#endif

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __GNUC__
#define alloca __builtin_alloca
#else /* not __GNUC__ */
#if defined (HAVE_ALLOCA_H) || (defined(sparc) && (defined(sun) || (!defined(USG) && !defined(SVR4) && !defined(__svr4__))))
#include <alloca.h>
#else
#ifndef _AIX
char *alloca ();
#endif
#endif /* alloca.h */
#endif /* not __GNUC__ */

#if !__STDC__ && !defined(const) && IN_GCC
#define const
#endif

/* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.  */
#ifndef _NO_PROTO
#define _NO_PROTO
#endif

#include <stdio.h>

/* Comment out all this code if we are using the GNU C Library, and are not
   actually compiling the library itself.  This code is part of the GNU C
   Library, but also included in many other GNU distributions.  Compiling
   and linking in this code is a waste when using the GNU C library
   (especially if it is a shared library).  Rather than having every GNU
   program understand `configure --with-gnu-libc' and omit the object files,
   it is simpler to just do this in the source for each such file.  */

#if defined (_LIBC) || !defined (__GNU_LIBRARY__)


/* This needs to come after some library #include
   to get __GNU_LIBRARY__ defined.  */
#ifdef	__GNU_LIBRARY__
#undef	alloca
/* Don't include stdlib.h for non-GNU C libraries because some of them
   contain conflicting prototypes for getopt.  */
#include <stdlib.h>
#else	/* Not GNU C library.  */
#define	__alloca	alloca
#endif	/* GNU C library.  */

/* If GETOPT_COMPAT is defined, `+' as well as `--' can introduce a
   long-named option.  Because this is not POSIX.2 compliant, it is
   being phased out.  */
/* #define GETOPT_COMPAT */

/* This version of `getopt' appears to the caller like standard Unix `getopt'
   but it behaves differently for the user, since it allows the user
   to intersperse the options with the other arguments.

   As `getopt' works, it permutes the elements of ARGV so that,
   when it is done, all the options precede everything else.  Thus
   all application programs are extended to handle flexible argument order.

   Setting the environment variable POSIXLY_CORRECT disables permutation.
   Then the behavior is completely standard.

   GNU application programs can use a third alternative mode in which
   they can distinguish the relative order of options and other arguments.  */

#include "getopt.h"

/* For communication from `getopt' to the caller.
   When `getopt' finds an option that takes an argument,
   the argument value is returned here.
   Also, when `ordering' is RETURN_IN_ORDER,
   each non-option ARGV-element is returned here.  */

char *optarg = 0;

/* Index in ARGV of the next element to be scanned.
   This is used for communication to and from the caller
   and for communication between successive calls to `getopt'.

   On entry to `getopt', zero means this is the first call; initialize.

   When `getopt' returns EOF, this is the index of the first of the
   non-option elements that the caller should itself scan.

   Otherwise, `optind' communicates from one call to the next
   how much of ARGV has been scanned so far.  */

/* XXX 1003.2 says this must be 1 before any call.  */
int optind = 0;

/* The next char to be scanned in the option-element
   in which the last option character we returned was found.
   This allows us to pick up the scan where we left off.

   If this is zero, or a null string, it means resume the scan
   by advancing to the next ARGV-element.  */

static char *nextchar;

/* Callers store zero here to inhibit the error message
   for unrecognized options.  */

int opterr = 1;

/* Set to an option character which was unrecognized.
   This must be initialized on some systems to avoid linking in the
   system's own getopt implementation.  */

int optopt = '?';

/* Describe how to deal with options that follow non-option ARGV-elements.

   If the caller did not specify anything,
   the default is REQUIRE_ORDER if the environment variable
   POSIXLY_CORRECT is defined, PERMUTE otherwise.

   REQUIRE_ORDER means don't recognize them as options;
   stop option processing when the first non-option is seen.
   This is what Unix does.
   This mode of operation is selected by either setting the environment
   variable POSIXLY_CORRECT, or using `+' as the first character
   of the list of option characters.

   PERMUTE is the default.  We permute the contents of ARGV as we scan,
   so that eventually all the non-options are at the end.  This allows options
   to be given in any order, even with programs that were not written to
   expect this.

   RETURN_IN_ORDER is an option available to programs that were written
   to expect options and other ARGV-elements in any order and that care about
   the ordering of the two.  We describe each non-option ARGV-element
   as if it were the argument of an option with character code 1.
   Using `-' as the first character of the list of option characters
   selects this mode of operation.

   The special argument `--' forces an end of option-scanning regardless
   of the value of `ordering'.  In the case of RETURN_IN_ORDER, only
   `--' can cause `getopt' to return EOF with `optind' != ARGC.  */

static enum
{
  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER
} ordering;

#ifdef	__GNU_LIBRARY__
/* We want to avoid inclusion of string.h with non-GNU libraries
   because there are many ways it can cause trouble.
   On some systems, it contains special magic macros that don't work
   in GCC.  */
#include <string.h>
#define	my_index	strchr
#define	my_bcopy(src, dst, n)	memcpy ((dst), (src), (n))
#else

/* Avoid depending on library functions or files
   whose names are inconsistent.  */

char *getenv ();

static char *
my_index (str, chr)
     const char *str;
     int chr;
{
  while (*str)
    {
      if (*str == chr)
	return (char *) str;
      str++;
    }
  return 0;
}

static void
my_bcopy (from, to, size)
     const char *from;
     char *to;
     int size;
{
  int i;
  for (i = 0; i < size; i++)
    to[i] = from[i];
}
#endif				/* GNU C library.  */

/* Handle permutation of arguments.  */

/* Describe the part of ARGV that contains non-options that have
   been skipped.  `first_nonopt' is the index in ARGV of the first of them;
   `last_nonopt' is the index after the last of them.  */

static int first_nonopt;
static int last_nonopt;

/* Exchange two adjacent subsequences of ARGV.
   One subsequence is elements [first_nonopt,last_nonopt)
   which contains all the non-options that have been skipped so far.
   The other is elements [last_nonopt,optind), which contains all
   the options processed since those non-options were skipped.

   `first_nonopt' and `last_nonopt' are relocated so that they describe
   the new indices of the non-options in ARGV after they are moved.  */

static void
exchange (argv)
     char **argv;
{
  int nonopts_size = (last_nonopt - first_nonopt) * sizeof (char *);
  char **temp = (char **) __alloca (nonopts_size);

  /* Interchange the two blocks of data in ARGV.  */

  my_bcopy ((char *) &argv[first_nonopt], (char *) temp, nonopts_size);
  my_bcopy ((char *) &argv[last_nonopt], (char *) &argv[first_nonopt],
	    (optind - last_nonopt) * sizeof (char *));
  my_bcopy ((char *) temp,
	    (char *) &argv[first_nonopt + optind - last_nonopt],
	    nonopts_size);

  /* Update records for the slots the non-options now occupy.  */

  first_nonopt += (optind - last_nonopt);
  last_nonopt = optind;
}

/* Scan elements of ARGV (whose length is ARGC) for option characters
   given in OPTSTRING.

   If an element of ARGV starts with '-', and is not exactly "-" or "--",
   then it is an option element.  The characters of this element
   (aside from the initial '-') are option characters.  If `getopt'
   is called repeatedly, it returns successively each of the option characters
   from each of the option elements.

   If `getopt' finds another option character, it returns that character,
   updating `optind' and `nextchar' so that the next call to `getopt' can
   resume the scan with the following option character or ARGV-element.

   If there are no more option characters, `getopt' returns `EOF'.
   Then `optind' is the index in ARGV of the first ARGV-element
   that is not an option.  (The ARGV-elements have been permuted
   so that those that are not options now come last.)

   OPTSTRING is a string containing the legitimate option characters.
   If an option character is seen that is not listed in OPTSTRING,
   return '?' after printing an error message.  If you set `opterr' to
   zero, the error message is suppressed but we still return '?'.

   If a char in OPTSTRING is followed by a colon, that means it wants an arg,
   so the following text in the same ARGV-element, or the text of the following
   ARGV-element, is returned in `optarg'.  Two colons mean an option that
   wants an optional arg; if there is text in the current ARGV-element,
   it is returned in `optarg', otherwise `optarg' is set to zero.

   If OPTSTRING starts with `-' or `+', it requests different methods of
   handling the non-option ARGV-elements.
   See the comments about RETURN_IN_ORDER and REQUIRE_ORDER, above.

   Long-named options begin with `--' instead of `-'.
   Their names may be abbreviated as long as the abbreviation is unique
   or is an exact match for some defined option.  If they have an
   argument, it follows the option name in the same ARGV-element, separated
   from the option name by a `=', or else the in next ARGV-element.
   When `getopt' finds a long-named option, it returns 0 if that option's
   `flag' field is nonzero, the value of the option's `val' field
   if the `flag' field is zero.

   The elements of ARGV aren't really const, because we permute them.
   But we pretend they're const in the prototype to be compatible
   with other systems.

   LONGOPTS is a vector of `struct option' terminated by an
   element containing a name which is zero.

   LONGIND returns the index in LONGOPT of the long-named option found.
   It is only valid when a long-named option has been found by the most
   recent call.

   If LONG_ONLY is nonzero, '-' as well as '--' can introduce
   long-named options.  */

int
_getopt_internal (argc, argv, optstring, longopts, longind, long_only)
     int argc;
     char *const *argv;
     const char *optstring;
     const struct option *longopts;
     int *longind;
     int long_only;
{
  int option_index;

  optarg = 0;

  /* Initialize the internal data when the first call is made.
     Start processing options with ARGV-element 1 (since ARGV-element 0
     is the program name); the sequence of previously skipped
     non-option ARGV-elements is empty.  */

  if (optind == 0)
    {
      first_nonopt = last_nonopt = optind = 1;

      nextchar = NULL;

      /* Determine how to handle the ordering of options and nonoptions.  */

      if (optstring[0] == '-')
	{
	  ordering = RETURN_IN_ORDER;
	  ++optstring;
	}
      else if (optstring[0] == '+')
	{
	  ordering = REQUIRE_ORDER;
	  ++optstring;
	}
      else if (getenv ("POSIXLY_CORRECT") != NULL)
	ordering = REQUIRE_ORDER;
      else
	ordering = PERMUTE;
    }

  if (nextchar == NULL || *nextchar == '\0')
    {
      if (ordering == PERMUTE)
	{
	  /* If we have just processed some options following some non-options,
	     exchange them so that the options come first.  */

	  if (first_nonopt != last_nonopt && last_nonopt != optind)
	    exchange ((char **) argv);
	  else if (last_nonopt != optind)
	    first_nonopt = optind;

	  /* Now skip any additional non-options
	     and extend the range of non-options previously skipped.  */

	  while (optind < argc
		 && (argv[optind][0] != '-' || argv[optind][1] == '\0')
#ifdef GETOPT_COMPAT
		 && (longopts == NULL
		     || argv[optind][0] != '+' || argv[optind][1] == '\0')
#endif				/* GETOPT_COMPAT */
		 )
	    optind++;
	  last_nonopt = optind;
	}

      /* Special ARGV-element `--' means premature end of options.
	 Skip it like a null option,
	 then exchange with previous non-options as if it were an option,
	 then skip everything else like a non-option.  */

      if (optind != argc && !strcmp (argv[optind], "--"))
	{
	  optind++;

	  if (first_nonopt != last_nonopt && last_nonopt != optind)
	    exchange ((char **) argv);
	  else if (first_nonopt == last_nonopt)
	    first_nonopt = optind;
	  last_nonopt = argc;

	  optind = argc;
	}

      /* If we have done all the ARGV-elements, stop the scan
	 and back over any non-options that we skipped and permuted.  */

      if (optind == argc)
	{
	  /* Set the next-arg-index to point at the non-options
	     that we previously skipped, so the caller will digest them.  */
	  if (first_nonopt != last_nonopt)
	    optind = first_nonopt;
	  return EOF;
	}

      /* If we have come to a non-option and did not permute it,
	 either stop the scan or describe it to the caller and pass it by.  */

      if ((argv[optind][0] != '-' || argv[optind][1] == '\0')
#ifdef GETOPT_COMPAT
	  && (longopts == NULL
	      || argv[optind][0] != '+' || argv[optind][1] == '\0')
#endif				/* GETOPT_COMPAT */
	  )
	{
	  if (ordering == REQUIRE_ORDER)
	    return EOF;
	  optarg = argv[optind++];
	  return 1;
	}

      /* We have found another option-ARGV-element.
	 Start decoding its characters.  */

      nextchar = (argv[optind] + 1
		  + (longopts != NULL && argv[optind][1] == '-'));
    }

  if (longopts != NULL
      && ((argv[optind][0] == '-'
	   && (argv[optind][1] == '-' || long_only))
#ifdef GETOPT_COMPAT
	  || argv[optind][0] == '+'
#endif				/* GETOPT_COMPAT */
	  ))
    {
      const struct option *p;
      char *s = nextchar;
      int exact = 0;
      int ambig = 0;
      const struct option *pfound = NULL;
      int indfound;

      while (*s && *s != '=')
	s++;

      /* Test all options for either exact match or abbreviated matches.  */
      for (p = longopts, option_index = 0; p->name;
	   p++, option_index++)
	if (!strncmp (p->name, nextchar, s - nextchar))
	  {
	    if (s - nextchar == strlen (p->name))
	      {
		/* Exact match found.  */
		pfound = p;
		indfound = option_index;
		exact = 1;
		break;
	      }
	    else if (pfound == NULL)
	      {
		/* First nonexact match found.  */
		pfound = p;
		indfound = option_index;
	      }
	    else
	      /* Second nonexact match found.  */
	      ambig = 1;
	  }

      if (ambig && !exact)
	{
	  if (opterr)
	    fprintf (stderr, "%s: option `%s' is ambiguous\n",
		     argv[0], argv[optind]);
	  nextchar += strlen (nextchar);
	  optind++;
	  return '?';
	}

      if (pfound != NULL)
	{
	  option_index = indfound;
	  optind++;
	  if (*s)
	    {
	      /* Don't test has_arg with >, because some C compilers don't
		 allow it to be used on enums.  */
	      if (pfound->has_arg)
		optarg = s + 1;
	      else
		{
		  if (opterr)
		    {
		      if (argv[optind - 1][1] == '-')
			/* --option */
			fprintf (stderr,
				 "%s: option `--%s' doesn't allow an argument\n",
				 argv[0], pfound->name);
		      else
			/* +option or -option */
			fprintf (stderr,
			     "%s: option `%c%s' doesn't allow an argument\n",
			     argv[0], argv[optind - 1][0], pfound->name);
		    }
		  nextchar += strlen (nextchar);
		  return '?';
		}
	    }
	  else if (pfound->has_arg == 1)
	    {
	      if (optind < argc)
		optarg = argv[optind++];
	      else
		{
		  if (opterr)
		    fprintf (stderr, "%s: option `%s' requires an argument\n",
			     argv[0], argv[optind - 1]);
		  nextchar += strlen (nextchar);
		  return optstring[0] == ':' ? ':' : '?';
		}
	    }
	  nextchar += strlen (nextchar);
	  if (longind != NULL)
	    *longind = option_index;
	  if (pfound->flag)
	    {
	      *(pfound->flag) = pfound->val;
	      return 0;
	    }
	  return pfound->val;
	}
      /* Can't find it as a long option.  If this is not getopt_long_only,
	 or the option starts with '--' or is not a valid short
	 option, then it's an error.
	 Otherwise interpret it as a short option.  */
      if (!long_only || argv[optind][1] == '-'
#ifdef GETOPT_COMPAT
	  || argv[optind][0] == '+'
#endif				/* GETOPT_COMPAT */
	  || my_index (optstring, *nextchar) == NULL)
	{
	  if (opterr)
	    {
	      if (argv[optind][1] == '-')
		/* --option */
		fprintf (stderr, "%s: unrecognized option `--%s'\n",
			 argv[0], nextchar);
	      else
		/* +option or -option */
		fprintf (stderr, "%s: unrecognized option `%c%s'\n",
			 argv[0], argv[optind][0], nextchar);
	    }
	  nextchar = (char *) "";
	  optind++;
	  return '?';
	}
    }

  /* Look at and handle the next option-character.  */

  {
    char c = *nextchar++;
    char *temp = my_index (optstring, c);

    /* Increment `optind' when we start to process its last character.  */
    if (*nextchar == '\0')
      ++optind;

    if (temp == NULL || c == ':')
      {
	if (opterr)
	  {
#if 0
	    if (c < 040 || c >= 0177)
	      fprintf (stderr, "%s: unrecognized option, character code 0%o\n",
		       argv[0], c);
	    else
	      fprintf (stderr, "%s: unrecognized option `-%c'\n", argv[0], c);
#else
	    /* 1003.2 specifies the format of this message.  */
	    fprintf (stderr, "%s: illegal option -- %c\n", argv[0], c);
#endif
	  }
	optopt = c;
	return '?';
      }
    if (temp[1] == ':')
      {
	if (temp[2] == ':')
	  {
	    /* This is an option that accepts an argument optionally.  */
	    if (*nextchar != '\0')
	      {
		optarg = nextchar;
		optind++;
	      }
	    else
	      optarg = 0;
	    nextchar = NULL;
	  }
	else
	  {
	    /* This is an option that requires an argument.  */
	    if (*nextchar != '\0')
	      {
		optarg = nextchar;
		/* If we end this ARGV-element by taking the rest as an arg,
		   we must advance to the next element now.  */
		optind++;
	      }
	    else if (optind == argc)
	      {
		if (opterr)
		  {
#if 0
		    fprintf (stderr, "%s: option `-%c' requires an argument\n",
			     argv[0], c);
#else
		    /* 1003.2 specifies the format of this message.  */
		    fprintf (stderr, "%s: option requires an argument -- %c\n",
			     argv[0], c);
#endif
		  }
		optopt = c;
		if (optstring[0] == ':')
		  c = ':';
		else
		  c = '?';
	      }
	    else
	      /* We already incremented `optind' once;
		 increment it again when taking next ARGV-elt as argument.  */
	      optarg = argv[optind++];
	    nextchar = NULL;
	  }
      }
    return c;
  }
}

int
getopt (argc, argv, optstring)
     int argc;
     char *const *argv;
     const char *optstring;
{
  return _getopt_internal (argc, argv, optstring,
			   (const struct option *) 0,
			   (int *) 0,
			   0);
}

#endif	/* _LIBC or not __GNU_LIBRARY__.  */

#ifdef TEST

/* Compile with -DTEST to make an executable for use in testing
   the above definition of `getopt'.  */

int
main (argc, argv)
     int argc;
     char **argv;
{
  int c;
  int digit_optind = 0;

  while (1)
    {
      int this_option_optind = optind ? optind : 1;

      c = getopt (argc, argv, "abc:d:0123456789");
      if (c == EOF)
	break;

      switch (c)
	{
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	  if (digit_optind != 0 && digit_optind != this_option_optind)
	    printf ("digits occur in two different argv-elements.\n");
	  digit_optind = this_option_optind;
	  printf ("option %c\n", c);
	  break;

	case 'a':
	  printf ("option a\n");
	  break;

	case 'b':
	  printf ("option b\n");
	  break;

	case 'c':
	  printf ("option c with value `%s'\n", optarg);
	  break;

	case '?':
	  break;

	default:
	  printf ("?? getopt returned character code 0%o ??\n", c);
	}
    }

  if (optind < argc)
    {
      printf ("non-option ARGV-elements: ");
      while (optind < argc)
	printf ("%s ", argv[optind++]);
      printf ("\n");
    }

  exit (0);
}

#endif /* TEST */
22) Muammar Ghaddafy
23) Muammar Ghadafi
24) Muammar Ghaddafi
25) Muamar Kaddafi
26) Muammar Quathafi
27) Muammar Gheddafi
28) Muamar Al-Kaddafi
29) Moammar Khadafy
30) Moammar Qudhafi
31) Mu'ammar al-Qaddafi
32) Mulazim Awwal Mu'ammar Muhammad Abu Minyar al-Qadhafi

Article: 9179 of gnu.misc.discuss
Path: daffy!uwvax!uwm.edu!zaphod.mps.ohio-state.edu!usc!enterpoop.mit.edu!ai-lab!life.ai.mit.edu!friedman
From: friedman@gnu.ai.mit.edu (Noah Friedman)
Newsgroups: gnu.misc.discuss
Subject: Re: Why hack?
Date: 23 Mar 93 22:42:09
Organization: Free Software Foundation, 675 Mass Ave. Cambridge, MA 02139
Lines: 182
Message-ID: <FRIEDMAN.93Mar23224209@nutrimat.gnu.ai.mit.edu>
References: <1993Mar22.203522.21684@maths.tcd.ie>
NNTP-Posting-Host: nutrimat.gnu.ai.mit.edu
In-reply-to: tim@maths.tcd.ie's message of Mon, 22 Mar 1993 20:35:22 GMT

In article <1993Mar22.203522.21684@maths.tcd.ie> tim@maths.tcd.ie (Timothy Murphy) writes:
>I wonder if anyone has a copy of Stallman's article "Why Hack?"
>from -- would it be 10? -- years ago.
>
>This was the article where Stallman lambasted computer administrators,
>likening them to the then rulers in E Europe.

I think this might be something of general interest.  It is indeed about 10
years old, and many people may not have seen it. 

Besides, gnu.misc.discuss doesn't have enough flamage yet.  :-)

In general I agree with rms' assertions.  The one exception is that, from
my personal experience, I do not think computer security needs to be an all
or nothing thing.  Moderate levels of security do necessitate some risk,
but that risk can be arbitrarily small (modulo the ability to fix certain
security holes with the source code at hand).

For one, there is a vast difference between internal and external security
in terms of how it affects actual users of a system.  You can keep out
unknowns and still allow great freedom among all the people who have access
to the machine to begin with.  (While I don't approve of proprietary
software, I can see that vendors of proprietary software can't allow
corporate spies onto their systems.)

My general rules of thumb are
   1) Assume minimal security first.  If you don't actually need security,
      you save time and make everyone's lives easier.
   2) Don't waste more time implementing security than you would spend
      recovering the intentional damage from crackers or unintentional
      mistakes by your own users.  Paying a full-time security consultant
      is probably more expensive in the long-run than losing 1 or 2 days of
      work from time to time.
   3) Keep backups.  Do it once a day or more often.  (Backups not only
      insure against intentional damage, but also allow you to recover from
      your own mistakes, hardware failures, and other acts of random
      malevolent dieties.)


Please note that references to the Soviet Union require some context: this
article was written in 1983. 


Here is Stallman's original article:
----------------------------------------------------------------------

Recently the teen-age computer "hacker", the security cracker, has
become a topic of national concern.  But the many articles on the
subject have condemned the cracker without showing the galling aspects
of the way of life he is rebelling against and without questioning its
ethical foundation.  There is no hint that the confused cracker of today
may be resisting, albeit ineffectually, a serious social problem of
tomorrow.

If you look at the social organization of the users on a typical
timeshared computer of today and compare it with other social groups, it
most resembles the Soviet Union.  It is pervaded by suspicion, ruled
arbitrarily by a small oligarchy, and hostile toward outsiders.  This
arouses resentment, which inspires the security crackers.  But the
authoritarian social organization itself is a worse problem than the
crackers are.

Most computer users see no alternative.  I am fortunate in having
experienced one.  At the MIT laboratory where I have worked as a
researcher for ten years, our old computer system treated users as free
equals with a responsibility to cooperate, and guests were welcome.  Our
hospitality guided clever young people to become responsible engineers
rather than crackers.

On the typical computer system, the activities of the ordinary users are
regulated very narrowly and precisely by the elite, who are bound by no
principle of fairness or due process and allow no appeal.  Which files
you can read, which files you cano appeal.  Which files
you can read, which files you can write, how many files you can have,
what programs you can run, how long you can use them, and when you can
log in are under their control.  They can bump you off the computer at
any time.  They can watch what you type as you use the computer; you
cannot watch them.  They can make it very easy for you to do your job,
if they like you, or if you curry favor.  Or they can obstruct you
at every turn, making your life miserable.  You have no recourse.
They can use the commands that change a user's restrictions, and you
cannot, because your restrictions don't permit it.

The users are suspicious of each other, and use "file protection" to
deny each other access to files.  Often this means you cannot make
progress in your work because you need to fix a program you cannot get
at.  People with high morale become discouraged and cynical because of
this.  The authorities are immune to file protection, however, and can
easily erase your file if they do not like what it says.

People outside the organization are viewed with hostility and suspicion.
They are presumed to lack only an opportunity to delete or scramble all
the files on the computer.  If the computer is idle, at night for
example, its computing power goes to waste rather than allow an outsider
to use it for a constructive purpose (such as learning to program).

Now imagine that one of the people outside the organization, the
recipient of all this suspicion and hostility, is a hacker: a person who
is curious, playful and enjoys clever humor.  (When computer researchers
at MIT in the 1960's first began calling themselves "hackers", this is
what they meant.  I am proud to call myself a hacker, and I call
security-breakers "crackers" to emphasize the distinction.)

A hacker, finding a mysterious and complicated computer system, wants to
understand it.  He would like to explore the computer system, to learn
how to use it, or to learn how it works.  He knows in advance what
reception he will get if he simply asks to use the computer when there
is spare time.  And he senses intuitively that computer system
authorities in general are amoral and do not deserve respect.

Naturally, he tries to sneak in and use the computer anyway.  He becomes
a cracker.  If successful, he gets to explore and learn, and can be
proud of his cleverness as well.  Beefed-up security measures only make
the battle of wits more challenging and absorbing.

But if he is only a teen-ager, he is probably not used to the kind of
thinking that would enable him to question the social system he is part
of.  (The teen-agers who are politically aware are usually not the
computer enthusiasts.)  He knows only that he has something to resent.
So he does not make a serious attempt to change the system.  The best he
can manage is instinctive, furtive disobedience.  This is why the young
cracker seems so usure of the rightness of his actions, and occasionally
may do minor damage, almost without noticing.  He has not asked the
question of how he ought to behave, or how the computer owners ought to
behave.

This is also why it is so easy to win a cracker over to the
security-enforcing establishment with personal inducements.  Joining the
authorities will end his direct personal difficulties and recognize his
cleverness, even better than successfully evading them.  Without an
ethical awareness, he does not see that he solves his own problem only
by contributing to similar problems for others.

The software on most computer systems is designed to support the ruling
class just as surely as the KGB is.  The software written and used by
the hackers at MIT was designed to make users free and equal.  Our
system had no restrictions that could be imposed on selected users; all
users were treated alike.  Thus nobody could seize power by restricting
everyone else.  We did not care whether a change to the files was
authorized; we cared whether it was an improvement.  This can only be
decided by human beings, on a case-by-case basis.  So, rather than
having file protection to control changes, we called for discussion
of any planned change.

And if a stranger came to the lab and wanted to play with the computer
when it was not fully needed by us--we let him!  Chances are he would
appreciate some of the value of our work, learn from it, and spread the
knowledge to others.  At best, he would become enthusiastic for our
software and our attitudes, join our lab, and contribute to our work.

People hearing about our lab usually took it for granted that our system
would be destroyed by vandals.  Actually, vandalism was very rare, and
the damage done by vandals was small compared with the damage caused by
the inevitable computer malfunctions and our own mistakes.  Simple
measures analogous to the glass window on a fire alarm discouraged
dangerous activities, deliberate or accidental, without actually
forbidding anything.  Ultimately it was rising commercialism that
destroyed the lab and caused our old computer system to be junked.

The technology of computer security is not suited to any middle ground
between the extremes.  Unless security is iron-fisted and dominates the 
lives of the users, it is easy to circumvent, and useless.  We should
put military secrets, bank records and the like on computers with strict
security.  For other activities, we should have computers that are free
of security, and free of its burdens.

Then we need not attack the symptom of morally confused crackers with
jail threats, security technology, or hiring them as security enforcers
to breed more resentment and new crackers.  We can invite them to use
computers openly on terms of mutual respect, and they will repay our
friendship tenfold.  Their cleverness and curiosity are just what make
for a creative engineer.

So far the issue of security versus freedom on computer systems affects
mainly computer hackers.  But, in the future, computer systems will play
a bigger and bigger role in everyone's life.  And these systems will be
built on today's entrenched authoritarian tradition, unless we stop it.
The crackers are a warning sign of a problem that every American is
going to face--soon.





1)  Muammar Qaddafi
2)  Mo'ammar Gadhafi
3)  Muammar Kaddafi
4)  Muammar Qadhafi
5)  Moammar El Kadhafi
6)  Muammar Gadafi
7)  Mu'ammar al-Qadafi
8)  Moamer El Kazzafi
/* grep.c - main driver file for grep.
   Copyright (C) 1992 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

   Written July 1992 by Mike Haertel.  */

#include <errno.h>
#include <stdio.h>

#ifndef errno
extern int errno;
#endif

#ifdef STDC_HEADERS
#include <stdlib.h>
#else
#include <sys/types.h>
extern char *malloc(), *realloc();
extern void free();
#endif

#if defined(STDC_HEADERS) || defined(HAVE_STRING_H)
#include <string.h>
#ifdef NEED_MEMORY_H
#include <memory.h>
#endif
#else
#include <strings.h>
#ifdef __STDC__
extern void *memchr();
#else
extern char *memchr();
#endif
#define strrchr rindex
#endif

#ifdef HAVE_UNISTD_H
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>
#else
#define O_RDONLY 0
extern int open(), read(), close();
#endif

#include "getpagesize.h"
#include "grep.h"

#undef MAX
#define MAX(A,B) ((A) > (B) ? (A) : (B))

/* Provide missing ANSI features if necessary. */

#ifndef HAVE_STRERROR
extern int sys_nerr;
extern char *sys_errlist[];
#define strerror(E) ((E) < sys_nerr ? sys_errlist[(E)] : "bogus error number")
#endif

#ifndef HAVE_MEMCHR
#ifdef __STDC__
#define VOID void
#else
#define VOID char
#endif
VOID *
memchr(vp, c, n)
     VOID *vp;
     int c;
     size_t n;
{
  unsigned char *p;

  for (p = (unsigned char *) vp; n--; ++p)
    if (*p == c)

/*
 * This file was written by Todd Austin, University of Wisconsin - Madison
 * Department of Computer Sciences
 *
 * Copyright (C) 1994 by Todd Austin
 *
 * This source file is distributed in the hope that it will be useful,
 * but without any warranty.  No author or distributor accepts
 * responsibility to anyone for the consequences of using it or for
 * whether it serves any particular purpose or works at all.
 *
 * Everyone is granted permission to copy, modify and redistribute
 * this source file under the following conditions:
 *
 *    Permission is granted to anyone to make or distribute copies
 *    of this source code, either as received or modified, in any
 *    medium, provided that all copyright notices, permission and
 *    nonwarranty notices are preserved, and that the distributor
 *    grants the recipient permission for further redistribution as
 *    permitted by this document.
 *
 *    Permission is granted to distribute this file in compiled
 *    or executable form under the same conditions applying for
 *    source code, provided that either
 *    A. it is accompanied by the corresponding machine-readable
 *       source code, or
 *    B. it is accompanied by a written offer, with no time limit,
 *       to give anyone a machine-readable copy of the corresponding
 *       source code in return for reimbursement of the cost of
 *       distribution.  This written offer must permit verbatim
 *       duplication by anyone.
 *    C. it is distributed by someone who received only the
 *       executable form, and is accompanied by a copy of the
 *       written offer of source code which s/he received along with it.
 *
 * In other words, you are welcome to use, share and improve this
 * source file.  You are forbidden to forbid anyone else to use, share
 * and improve what you give them.   Help stamp out software-hoarding!
 *
 * ARPANET: austin@cs.wisc.edu
 * US Mail: 1210 W. Dayton Street, Madison, WI 53706
 *
 * $Log: grep-input.txt,v $
 * Revision 1.1.1.1  2000/11/29 14:53:54  cu-cs
 * Grand unification of arm sources.
 *
 *
 * Revision 1.1.2.1  2000/10/31 19:13:55  taustin
 * Yet more benchmarks...
 *
 * Revision 1.6  1994/11/15  21:14:16  austin
 * *** empty log message ***
 *
 * Revision 1.5  1994/11/14  17:08:47  austin
 * *** empty log message ***
 *
 * Revision 1.4  1994/11/09  14:36:07  austin
 * *** empty log message ***
 *
 * Revision 1.3  1994/03/06  17:05:32  austin
 * - added DIRECT option
 *
 * Revision 1.2  1994/02/21  16:22:18  austin
 * - moved RegSet stuff to regs.h
 * - moved cache vars to this file
 * - cache options now work
 * - added probes
 *
 * $Id: grep-input.txt,v 1.1.1.1 2000/11/29 14:53:54 cu-cs Exp $
 */

static char rcsid[] = "$Id: grep-input.txt,v 1.1.1.1 2000/11/29 14:53:54 cu-cs Exp $";

/*
 *	detailed timing simulator code
 */

#include <stdio.h>
#include <math.h>

#include "misc.h"
#include "probe.h"
#include "memory.h"
#include "syscall.h"
#include "state.h"
#include "ss.h"
#include "dtrace.h"

/* bit size of a register set */
#define RS_BIT_SIZE  (32/*GPRs*/+32/*FPRs*/+1/*HI*/+1/*LO*/+1/*FC*/+1/*MEM*/)
#include "regs.h"

/* timing instrumentation */
long long cycle;			/* current cycle, total cycles */

/* non-zero if memory can handle any combination of loads and stores */
int perfectMemory = FALSE;

/* non-zero if pre-translations can be used to elide TLB accesses */
int elideTranslations = TRUE;

/* non-zero if jamming execution */
int jamminMan = FALSE;

/* load/store is stalled (re-executing in the MEM stage) due to a failed jam */
int stalledLoad = FALSE;
int stalledStore = FALSE;

/* just issued insts must stall as well */
int stallIssue = FALSE;

/* use base or alternative jam scheme (pnevmati's) */
int dirMode = FALSE;
int jamMode = FALSE;
int pCalcMode = FALSE;
int dualMode = FALSE;
int dirJam = FALSE;
int baseJam = FALSE;
int altJam = FALSE;
unsigned long jamSize = 0;




		The Tao Of Programming

		Translated By Geoffrey James
		Transcribed By Seth Robertson


		Table of Contents

			Book 1  --  The Silent Void
			Book 2  --  The Ancient Masters
			Book 3  --  Design
			Book 4  --  Coding
			Book 5  --  Maintenance
			Book 6  --  Management
			Book 7  --  Corporate Wisdom
			Book 8  --  Hardware and Software
			Book 9  --  Epilogue


		The Silent Void
		Book One

		   Thus spake the master programmer:
				   
	 "When you have learned to snatch the error code from
	  the trap frame, it will be time for you to leave."

				 1.1

Something mysterious is formed, born in the silent void.  Waiting alone
and unmoving, it is at once still and yet in constant motion.  It is
the source of all programs.  I do not know its name, so I will call it
the Tao of Programming.

If the Tao is great, then the operating system is great.  If the
operating system is great, then the compiler is great.  If the compiler
is greater, then the applications is great.  The user is pleased and
there is harmony in the world.

The Tao of Programming flows far away and returns on the wind of morning.

				  1.2

The Tao gave birth to machine language.  Machine language gave birth to
the assembler.

The assembler gave birth to the compiler.  Now there are ten thousand
languages.

Each language has its purpose, however humble.  Each language expresses
the Yin and Yang of software.  Each language has its place within the Tao.

But do not program in COBOL if you can avoid it.

				  1.3

In the beginning was the Tao.  The Tao gave birth to Space and Time.
Therefore, Space and Time are the Yin and Yang of programming.

Programmers that do not comprehend the Tao are always running out of
time and space for their programs.  Programmers that comprehend the Tao
always have enough time and space to accomplish their goals.

How could it be otherwise?

				  1.4

The wise programmer is told about the Tao and follows it.  The average
programmer is told about the Tao and searches for it.  The foolish
programmer is told about the Tao and laughs at it.

If it were not for laughter, there would be no Tao.

The highest sounds are the hardest to hear.  Going forward is a way to
retreat.  Greater talent shows itself late in life.  Even a perfect
program still has bugs.

			The Ancient Masters
				Book Two

		   Thus spake the master programmer:
				   
   "After three days without programming, life becomes meaningless."

				  2.1

The programmers of old were mysterious and profound.  We cannot fathom
their thoughts, so all we do is describe their appearance.

Aware, like a fox crossing the water.  Alert, like a general on the
battlefield.  Kind, like a hostess greeting her guests. Simple, like
uncarved blocks of wood.  Opaque, like black pools in darkened caves.

Who can tell the secrets of their hearts and minds?

The answer exists only in the Tao.

				  2.2

Grand Master Turing once dreamed that he was a machine.  When he awoke
he exclaimed:

     "I don't know whether I am Turing dreaming that I am a machine,
      or a machine dreaming that I am Turing!"

				  2.3

A programmer from a very large computer company went to a software
conference and then returned to report to his manager, saying: "What
sort of programmers work for other companies?  They behaved badly and
were unconcerned with appearances. Their hair was long and unkempt and
their clothes were wrinkled and old. They crashed out hospitality
suites and they made rude noises during my presentation."

The manager said: "I should have never sent you to the conference.
Those programmers live beyond the physical world.  They consider life
absurd, an accidental coincidence.  They come and go without knowing
limitations.  Without a care, they live only for their programs.  Why
should they bother with social conventions?"

"They are alive within the Tao."

				  2.4

A novice asked the Master: "Here is a programmer that never designs,
documents, or tests his programs.  Yet all who know him consider him
one of the best programmers in the world.  Why is this?"

The Master replies: "That programmer has mastered the Tao.  He has gone
beyond the need for design; he does not become angry when the system
crashes, but accepts the universe without concern.  He has gone beyond
the need for documentation; he no longer cares if anyone else sees
his code.  He has gone beyond the need for testing; each of his
programs are perfect within themselves, serene and elegant, their
purpose self-evident.  Truly, he has entered the mystery of the Tao."

				Design
				Book Three

		   Thus spake the master programmer:
				   

begin 644 input.txt.gz
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
8&O_H)SL7L^1U/KJ-*V;^+QK$NW%C4PL 
 
end
"When program is being tested, it is too late to make design changes."

				  3.1

There once was a man who went to a computer trade show.  Each day as he
entered, the man told the guard at the door:

     "I am a great thief, renowned for my feats of shoplifting.  Be
      forewarned, for this trade show shall not escape unplundered."

This speech disturbed the guard greatly, because there were millions of
dollars of computer equipment inside, so he watched the man carefully.
But the man merely wandered from booth to booth, humming quietly to
himself.

When the man left, the guard took him aside and searched his clothes,
but nothing was to be found.

On the next day of the trade show, the man returned and chided the
guard saying: "I escaped with a vast booty yesterday, but today will be
even better."  So the guard watched him ever more closely, but to no
avail.

On the final day of the trade show, the guard could restrain his
curiosity no longer. "Sir Thief," he said, "I am so perplexed, I cannot
live in peace.  Please enlighten me.  What is it that you are stealing?"

The man smiled.  "I am stealing ideas," he said.

				  3.2

There once was a master programmer who wrote unstructured programs.  A
novice programmer, seeking to imitate him, also began to write
unstructured programs.  When the novice asked the master to evaluate
his progress, the master criticized him for writing unstructured
programs, saying: "What is appropriate for the master is not
appropriate for the novice.  You must understand the Tao before
transcending structure."

				  3.3

There was once a programmer who was attached to the court of the
warlord of Wu.  The warlord asked the programmer: "Which is easier to
design: an accounting package or an operating system?"

"An operating system," replied the programmer.

The warlord uttered an exclamation of disbelief.  "Surely an accounting
package is trivial next to the complexity of an operating system," he said.

"Not so," said the programmer, "when designing an accounting package,
the programmer operates as a mediator between people having different
ideas: how it must operate, how its reports must appear, and how it
must conform to the tax laws.  By contrast, an operating system is not
limited my outside appearances.  When designing an operating system,
the programmer seeks the simplest harmony between machine and ideas.
This is why an operating system is easier to design."

The warlord of Wu nodded and smiled.  "That is all good and well, but
which is easier to debug?"

The programmer made no reply.

				  3.4

A manager went to the master programmer and showed him the requirements
document for a new application.  The manager asked the master: "How
long will it take to design this system if I assign five programmers
to it?"

"It will take one year," said the master promptly.

"But we need this system immediately or even sooner!  How long will it
take it I assign ten programmers to it?"

The master programmer frowned.  "In that case, it will take two years."

"And what if I assign a hundred programmers to it?"

The master programmer shrugged.  "Then the design will never be
completed," he said.

				Coding
				Book Four

		   Thus spake the master programmer:
				   
	      "A well-written program is its own heaven;
	      a poorly-written program is its own hell."

				  4.1

A program should be light and agile, its subroutines connected like a
strings of pearls.  The spirit and intent of the program should be
retained throughout.  There should be neither too little nor too much,
neither needless loops nor useless variables, neither lack of structure
nor overwhelming rigidity.

A program should follow the 'Law of Least Astonishment'.  What is this
law?  It is simply that the program should always respond to the user
in the way that astonishes him least.

A program, no matter how complex, should act as a single unit.  The
program should be directed by the logic within rather than by outward
appearances.

If the program fails in these requirements, it will be in a state of
disorder and confusion.  The only way to correct this is to rewrite the
program.

				  4.2

A novice asked the master: "I have a program that sometimes runs and
sometimes aborts.  I have followed the rules of programming, yet I am
totally baffled. What is the reason for this?"

The master replied: "You are confused because you do not understand the
Tao.  Only a fool expects rational behavior from his fellow humans. Why
do you expect it from a machine that humans have constructed? Computers
simulate determinism; only the Tao is perfect.

The rules of programming are transitory; only the Tao is eternal.
Therefore you must contemplate the Tao before you receive enlightenment."

"But how will I know when I have received enlightenment?" asked the novice.

"Your program will then run correctly," replied the master.

				  4.3

A master was explaining the nature of the Tao to one of his novices,
"The Tao is embodied in all software -- regardless of how
insignificant," said the master.

"Is the Tao in a hand-held calculator?" asked the novice.

"It is," came the reply.

"Is the Tao in a video game?" continued the novice.

"It is even in a video game," said the master.

"And is the Tao in the DOS for a personal computer?"

The master coughed and shifted his position slightly.  "The lesson is
over for today," he said.

				  4.4

Price Wang's programmer was coding software.  His fingers danced upon
the keyboard.  The program compiled without an error message, and the
program ran like a gentle wind.

Excellent!" the Price exclaimed, "Your technique is faultless!"

"Technique?" said the programmer, turning from his terminal, "What I
follow is the Tao -- beyond all technique.  When I first began to
program I would see before me the whole program in one mass.  After
three years I no longer saw this mass. Instead, I used subroutines.
But now I see nothing.  My whole being exists in a formless void.  My
senses are idle.  My spirit, free to work without a plan, follows its
own instinct.  In short, my program writes itself. True, sometimes
there are difficult problems.  I see them coming, I slow down, I watch
silently. Then I change a single line of code and the difficulties
vanish like puffs of idle smoke.  I then compile the program.  I sit
still and let the joy of the work fill my being.  I close my eyes for a
moment and then log off."

Price Wang said, "Would that all of my programmers were as wise!"

			Maintenance
			Book Five

		   Thus spake the master programmer:
				   
	      "Though a program be but three lines long,
	       someday it will have to be maintained."

				  5.1

       A well-used door needs no oil on its hinges.
       A swift-flowing steam does no grow stagnant.
       Neither sound nor thoughts can travel through a vacuum.
       Software rots if not used.

       These are great mysteries.

				  5.2

A manager asked a programmer how long it would take him to finish the
program on which he was working.  "I will be finished tomorrow," the
programmer promptly replied.

"I think you are being unrealistic," said the manager. "Truthfully, how
long will it take?"

The programmer thought for a moment.  "I have some features that I wish
to add.  This will take at least two weeks," he finally said.

"Even that is too much to expect," insisted the manager, "I will be
satisfied if you simply tell me when the program is complete."

The programmer agreed to this.

Several years slated, the manager retired.  On the way to his
retirement lunch, he discovered the programmer asleep at his terminal.
He had been programming all night.

				  5.3

A novice programmer was once assigned to code a simple financial
package.

The novice worked furiously for many days, but when his master reviewed
his program, he discovered that it contained a screen editor, a set of
generalized graphics routines, and artificial intelligence interface,
but not the slightest mention of anything financial.

When the master asked about this, the novice became indignant.  "Don't
be so impatient," he said, "I'll put the financial stuff in eventually."

				  5.4

      Does a good farmer neglect a crop he has planted?
      Does a good teacher overlook even the most humble student?
      Does a good father allow a single child to starve?
      Does a good programmer refuse to maintain his code?

				Management
				Book Six

		   Thus spake the master programmer:
				   
	     "Let the programmer be many and the managers
		 few -- then all will be productive."

				  6.1

When managers hold endless meetings, the programmers write games.  When
accountants talk of quarterly profits, the development budget is about
to be cut.  When senior scientists talk blue sky, the clouds are about
to roll in.

Truly, this is not the Tao of Programming.

When managers make commitments, game programs are ignored.  When
accountants make long-range plans, harmony and order are about to be
restored.  When senior scientists address the problems at hand, the
problems will soon be solved.

Truly, this is the Tao of Programming.

				  6.2

Why are programmers non-productive?
Because their time is wasted in meetings.

Why are programmers rebellious?
Because the management interferes too much.

Why are the programmers resigning one by one?
Because they are burnt out.

Having worked for poor management, they no longer value their jobs.

				  6.3

A manager was about to be fired, but a programmer who worked for him
invented a new program that became popular and sold well.  As a result,
the manager retained his job.

The manager tried to give the programmer a bonus, but the programmer
refused it, saying, "I wrote the program because I though it was an
interesting concept, and thus I expect no reward."

The manager, upon hearing this, remarked, "This programmer, though he
holds a position of small esteem, understands well the proper duty of
an employee.  Lets promote him to the exalted position of management
consultant!"

But when told this, the programmer once more refused, saying, "I exist
so that I can program.  If I were promoted, I would do nothing but
waste everyone's time.  Can I go now?  I have a program that I'm
working one."

				  6.4

A manger went to his programmers and told them: "As regards to your
work hours: you are going to have to come in at nine in the morning and
leave at five in the afternoon."  At this, all of them became angry and
several resigned on the spot.

So the manager said: "All right, in that case you may set your own
working hours, as long as you finish your projects on schedule."  The
programmers, now satisfied, began to come in a noon and work to the wee
hours of the morning.

			Corporate Wisdom
			Book Seven

		   Thus spake the master programmer:
				   
	    "You can demonstrate a program for a corporate
	executive, but you can't make him computer literate."

				  7.1

A novice asked the master: "In the east there is a great tree-structure
that men call 'Corporate Headquarters'.  It is bloated out of shape
with vice-presidents and accountants.  It issues a multitude of memos,
each saying 'Go, Hence!' or 'Go, Hither!' and nobody knows what is
meant.  Every year new names are put onto the branches, but all to no
avail.  How can such an unnatural entity exist?"

The master replies: "You perceive this immense structure and are
disturbed that it has no rational purpose.  Can you not take amusement
from its endless gyrations?  Do you not enjoy the untroubled ease of
programming beneath its sheltering branches?  Why are you bothered by
its uselessness?"

				  7.2

In the east there is a shark which is larger than all other fish.  It
changes into a bird whose winds are like clouds filling the sky.  When
this bird moves across the land, it brings a message from Corporate
Headquarters.  This message it drops into the midst of the program-
mers, like a seagull making its mark upon the beach.  Then the bird
mounts on the wind and, with the blue sky at its back, returns home.

The novice programmer stares in wonder at the bird, for he understands
it not.  The average programmer dreads the coming of the bird, for he
fears its message.  The master programmer continues to work at his
terminal, for he does not know that the bird has come and gone.

				  7.3

The Magician of the Ivory Tower brought his latest invention for the
master programmer to examine.  The magician wheeled a large black box
into the master's office while the master waited in silence.

"This is an integrated, distributed, general-purpose workstation,"
began the magician, "ergonomically designed with a proprietary
operating system, sixth generation languages, and multiple state of the
art user interfaces.  It took my assistants several hundred man years
to construct.  Is it not amazing?"

The master raised his eyebrows slightly. "It is indeed amazing," he
said.

"Corporate Headquarters has commanded," continued the magician, "that
everyone use this workstation as a platform for new programs.  Do you
agree to this?"

"Certainly," replied the master, "I will have it transported to the
data center immediately!"  And the magician returned to his tower, well
pleased.

Several days later, a novice wandered into the office of the master
programmer and said, "I cannot find the listing for my new program.  Do
you know where it might be?"

"Yes," replied the master, "the listings are stacked on the platform in
the data center."

				  7.4

The master programmer moves from program to program without fear.  No
change in management can harm him.  He will not be fired, even if the
project is canceled. Why is this?  He is filled with the Tao.

			Hardware and Software
			Book Eight

		   Thus spake the master programmer:
				   
	     "Without the wind, the grass does not move.
	       Without software, hardware is useless."

				  8.1

A novice asked the master: "I perceive that one computer company is
much larger than all others.  It towers above its competition like a
giant among dwarfs.  Any one of its divisions could comprise an entire
business.  Why is this so?"

The master replied, "Why do you ask such foolish questions?  That
company is large because it is so large.  If it only made hardware,
nobody would buy it.  If it only maintained systems, people would treat
it like a servant.  But because it combines all of these things, people
think it one of the gods!  By not seeking to strive, it conquers
without effort."

				  8.2

A master programmer passed a novice programmer one day.  The master
noted the novice's preoccupation with a hand-held computer game.
"Excuse me", he said, "may I examine it?"

The novice bolted to attention and handed the device to the master. "I
see that the device claims to have three levels of play: Easy, Medium,
and Hard", said the master.  "Yet every such device has another level
of play, where the device seeks not to conquer the human, nor to be
conquered by the human."

"Pray, great master," implored the novice, "how does one find this
mysterious setting?"

The master dropped the device to the ground and crushed it under foot.
And suddenly the novice was enlightened.

				  8.3

There was once a programmer who worked upon microprocessors.  "Look at
how well off I am here," he said to a mainframe programmer who came to
visit, "I have my own operating system and file storage device. I do
not have to share my resources with anyone.  The software is
self-consistent and easy-to-use.  Why do you not quit your present job
and join me here?"

The mainframe programmer then began to describe his system to his
friend, saying: "The mainframe sits like an ancient sage meditating in
the midst of the data center.  Its disk drives lie end-to-end like a
great ocean of machinery.  The software is a multi-faceted as a diamond
and as convoluted as a primeval jungle.  The programs, each unique,
move through the system like a swift-flowing river.  That is why I am
happy where I am."

The microcomputer programmer, upon hearing this, fell silent.  But the
two programmers remained friends until the end of their days.

				  8.4

Hardware met Software on the road to Changtse.  Software said: "You are
the Yin and I am the Yang.  If we travel together we will become famous
and earn vast sums of money."  And so the pair set forth together,
thinking to conquer the world.

Presently, they met Firmware, who was dressed in tattered rags, and
hobbled along propped on a thorny stick.  Firmware said to them: "The
Tao lies beyond Yin and Yang.  It is silent and still as a pool of
water. It does not seek fame, therefore nobody knows its presence.  It
does not seeks fortune, for it is complete within itself.  It exists
beyond space and time."

Software and Hardware, ashamed, returned to their homes.


				Epilogue
				Book Nine

		   Thus spake the master programmer:
				   
		       "Time for you to leave."
/* missed jam cost */
unsigned long mjCost = 1;

/* just to be sure the profiler is working */
static long long nRefs = 0;
static long long nOSRefs = 0;
static long long nReads = 0;
static long long nDirectLoads = 0;
static long long nDirectStores = 0;
static long long nRRLoads = 0;
static long long nRRStores = 0;
static long long nFailedLdJams = 0;
static long long nFailedStJams = 0;

static long long nFailedInEX = 0;

static long long nDirMode = 0;
static long long nJamMode = 0;
static long long nPCalcMode = 0;
static long long nDualMode = 0;

/*
static long long nStores = 0;
static long long nLoads = 0;
static long long nFailedStJams = 0;
static long long nFailedLdJams = 0;
*/

/*
 * processor parameters/state
 */

/* max number of instructions to issue each cycle */
ulong numIssue = 4;
static ulong niMask = 3;			/* numIssue - 1 */

int useICache = FALSE;
struct Cache *iCache = NULL;			/* instruction cache */
struct CacheParam iCacheParams = {
  /* default instruction cache parameters */
  "text",	/* name */
  1024,		/* nSets */
  16,		/* bSize */
  1,		/* nAssoc */
  TRUE	/* wrBack */
};

struct Cache *dCache = NULL;			/* data cache */
struct CacheParam dCacheParams = {
  /* default data cache parameters */
  "data",	/* name */
  1024,		/* nSets */
  16,		/* bSize */
  1,		/* nAssoc */
  TRUE		/* wrBack */
};

/* default to two cycle miss-prediction latencies */
static int nCycleMP = 0;

/*
 * probes
 */
static struct Probe *btbHitRate;		/* BTB hit rate */
static struct Probe *btbPredRate;		/* BTB prediction accuracy */


/*
 * pipe stats
 */
struct {
  long long computing;			/* pipe issued an instruction */
  long long mpStall;			/* pipe stalled waiting for
					   misprediction re-fill */
  long long dcStall;			/* pipe stalled on data cache miss */
  long long trapStall;			/* pipe drained for a trap */
  long long noFUStall;			/* pipe stalled waiting for an FU */
  long long FUStall;			/* pipe stalled waiting on a FU */
  long long ldStall;			/* pipe stalled waiting on a ld port */
  long long cldStall;			/* pipe stalled waiting on a ld port,
					   the dependency is collapable */
} pipeStats;

void
ResetPipeStats(void)
{
  pipeStats.computing = 0;
  pipeStats.mpStall = 0;
  pipeStats.dcStall = 0;
  pipeStats.trapStall = 0;
  pipeStats.noFUStall = 0;
  pipeStats.FUStall = 0;
  pipeStats.ldStall = 0;
  pipeStats.cldStall = 0;
}

void
DumpPipeStats(FILE *stream)
{
  long long sum =
    pipeStats.computing + pipeStats.mpStall + pipeStats.dcStall
      + pipeStats.trapStall + pipeStats.noFUStall
	+ pipeStats.FUStall + pipeStats.ldStall + pipeStats.cldStall;

  fprintf(stream, ">>>> Pipe Stats <<<<\n");
  fprintf(stream, "\tcomputing    = %.0f\n", (double)pipeStats.computing);
  fprintf(stream, "\tmpStall      = %.0f\n", (double)pipeStats.mpStall);
  fprintf(stream, "\tdcStall      = %.0f\n", (double)pipeStats.dcStall);
  fprintf(stream, "\ttrapStall    = %.0f\n", (double)pipeStats.trapStall);
  fprintf(stream, "\tnoFUStall    = %.0f\n", (double)pipeStats.noFUStall);
  fprintf(stream, "\tFUStall      = %.0f\n", (double)pipeStats.FUStall);
  fprintf(stream, "\tldStall      = %.0f\n", (double)pipeStats.ldStall);
  fprintf(stream, "\tcldStall     = %.0f\n", (double)pipeStats.cldStall);
  fprintf(stream, "\ttotal cycles = %.0f (of %.0f)\n",
	  (double)sum, numIssue*(double)cycle);
  if (sum != numIssue*cycle)
    warn("sum != %d*cycle at end of execution, sum=%.0f, %d*cycle=%.0f",
	 numIssue, (double)sum, numIssue, numIssue*(double)cycle);
}


/* output to FU:
     maps a busy output to the FU that is creating its value, -1 indicates
     the output is not awaying a result */
int outToFU[RS_BIT_SIZE];

/* resource descriptor */
struct ResDesc {
  char *name;				/* name of functional unit */
  struct ResTmpl {
    enum FUClass fuClass;		/* matching fu class */
    ulong opLatency;			/* cycles until result is ready */
    ulong issueLatency;			/* cycles between issues */
  } x[NUM_FU_CLASSES];
  long busy;				/* cycles until this unit can issue,
					   -1 renders the unit unusable */
};

/* maximum number of instructions that can be inflight in the functional
   units, this is the number of entries allocated for the EVQUEUE free list */
#define MAX_STATE	64		/* FIXME: we should compute this */

/* resource configuration, in the event of a tie between two resources
   the resources are allocated in the order that they occur in this list,
   order these from most used to least used resources */
#ifndef BIG_CONFIG
static struct ResDesc resource[] = {
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0

Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p1of5]
Message-ID: <free1-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free1-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
Date: Mon, 1 Aug 1994 11:00:16 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1343
Xref: bloom-beacon.mit.edu comp.compilers:3316 comp.lang.misc:5185 comp.archives.admin:675 news.answers:23367 comp.answers:6565

Archive-name: free-compilers/part1
Last-modified: 1994/6/30
Version: 6.5

-------------------------------------------------------------------------------
Catalog of Free Compilers and Interpreters.
-------------------------------------------------------------------------------
Copyright (c) 1993, David Muir Sharnoff, All Rights Reserved
Copyright (c) 1994, Steven Allen Robenalt, All Rights Reserved

This list catalogues freely available software for language tools, which
includes the following: compilers, compiler generators, interpreters, 
translators, important libraries, assemblers, etc.  -- things whose user 
interface is a language.  Natural language processing tools may also 
be included.

This list is primarily aimed at developers rather than researchers, and
consists mainly of citations for production quality systems.  There is some
overlap of coverage between this document and other lists and catalogs.  See
the references section for a list...

All the listed items should be free and come with source code, exceptions have
generally been deleted from the list in the past.  If you find any such items
in the list let me know and I'll remove them.

The latest version of the catalog can be ftp'ed: get
pub/compilers-list/free-compilers from idiom.berkeley.ca.us.

This catalog is available through World Wide Web.  A searchable
hypertext version can be accessed through http://cui_www.unige.ch/freecomp.
(As of the middle of January, the WWW version was still based on rev. 5.2)

Not all entries have complete citations.  Some fields are filled with question
marks (?).  Fields with both the ? and an entry are implicit requests for
confirmation.  Also, specific questions will often be asked [in brackets --ed].

I put in the reference entry last year to help decentralise the accquisition
of new entries.  So if you have information not included in here or updates to
information listed here, a template has been provided below (in fact, the
first entry in the tools section) for you to use.  You can send whatever
new items or updates you have to <free-compilers@idiom.berkeley.ca.us>.
Note that the "how to get" field in each entry has been returned to "location"
as before -- for increased future compatibility with various formats.

-Mark Hopkins, June 29, 1994

-------------------------------------------------------------------------------
overview (table of contents)
-------------------------------------------------------------------------------

Section							Parts
introduction 						  1
overview (table of contents) 				  1
changes and history					  1
prototype entry						  1
tools							 1-5
	scripting languages				  1
	functional languages				  1
	C variants					  2
	compiled, imperitive languages			  2
	object oriented languages			  2
	lisp family					  3
	document formatting languages			  3
	logic programming languages			  3
	concurrent, parellel, and simulation languages	  4
	Forth family languages				  4
	compiler generators and related tools		  4
	mathematical tools and languages		  4
	electrical engineering languages		  4
	Wirth family languages				  5
	assemblers					  5
	macro preprocessors				  5
	special purpose languages			  5
	natural languages				  5
	curiosities					  5
	unable to classify due to lack of knowledge	  5
references						  5
archives						  5
cross-reference						  5

-------------------------------------------------------------------------------
changes and history
-------------------------------------------------------------------------------

This document grew out of David Muir Sharnoff filing away postings that he 
saw (mostly Ed Vielmetti's postings to comp.archives) during 1991 and the 
first half of 1992.  At the Summer 1992 USENIX Technical Conference, the 
other attendees of the archivists BOF convinced David to compile his data 
into a posting.  David posted for about one year, then turned the list over 
to Mark Hopkins.  Mark Hopkins <markh@csd4.csd.uwm.edu> took care of it for 
the summer of 1993 and then gave it back to David Sharnoff when he dropped 
off the net.  Steve Robenalt <robenalt@orange.digex.net> has took over 
the list maintenance from Dave in 1994, and it was returned to Mark Hopkins
<mark@omnifest.uwm.edu> in May, but Dave's organization, Idiom Consulting,
remains as the focal point for information to be submitted.

A new minor alterations have been made in this version in relation to
last month.  Tabs have been inserted into the list to reduce its size, I'm
assuming the common tab stop at every 8th place, so you may need to set your
editor or viewer appropriately.  The following items have been swapped:

           Language category             Before     After
           -----------------------------------------------
           Wirth family languages        Part 3     Part 5
           document formatting languages Part 5     Part 3

in order to more even out the sizes of the various parts to the list.  Also,
the table of contents above has been made a little bit more detailed.

For this version the changes to the list are:

	language		package
	--------		-------
new listings:
	BNF (yacc)		bison-A2.2
	LPC			LPC4 (v. 4.05.11)
	Prolog + constraints	clp(FD) 2.1
	Prolog			wamcc 2.1
	EBNF			ETO (test release)
	CAML, Bigloo		Camloo 0.2
	? Lisp, X		winterp 2.01
new versions:
 	TCL			   Extended Tcl (tclx) 7.3a
 	Scheme			   VSCM V0r3
 	C, nroff, texinfo, latex   c2man 2.0 patchlevel 31
 	REXX			   REXX/imc 1.6
 	COCOL (EBNF variant)	   COCO/R 1.36
 	Common Lisp		   CLiCC 0.6.4
 	C			   GNU C Library (glibc) 1.08.1
 	Korn Shell		   Bash (Bourne Again SHell) 1.14
 	csh (C-Shell)		   tcsh 6.05
 	Lisp (elisp - Emacs Lisp)  Lucid Emacs (lemacs) 19.10

-------------------------------------------------------------------------------
prototype entry
-------------------------------------------------------------------------------
Every entry should at least have the fields marked with two asterisks (**).

language:	**Reference Entry 
		Language: what the software compiles/interprets...
package:	**The name of the package
version:	**Its current version
parts:		**compiler, assembler, interpreter, translator, grammar(yacc,
		lex), library, documentation, examples, assembler, simulator,
		tutorial, test suite, byte-code compiler, run-time,
		translator(from->to)...  Compilers that use C as an 
		intermediate lanaguage should be noted as "compiler(->C)".
		Compilers that compile into a coded representation that is
		interpreted by a runtime module should be noted as "bytecode
		compiler".  Do not say "source code" -- if source is not
		included, do not send an entry at all!
author: 	**the creator of the package.  Email addresses are in the 
		form "Real Name <email@address>".  Surface mail addresses
		are not used unless there is no email address.
location:	**where to get the source, how to get it -- usually an FTP site
		or two.  May have subheaders for specific areas or different
		ports of the software (don't overdo this!):  Only official
		sites should be listed.  The format for ftp directives is "ftp
		dir/file from host", although valid URL's are acceptable too.
		No IP address is generally given.
		Also, either of the forms "host:directory or file" or
		"host in directory file" may be used with the understanding
		that it refers to an anonymous FTP site.
    N.America:	Sites for North Americans.
    Europe:	Sites Europeans should use
    Japan:	Sites for people in Japan
    OS/2:	Sites with OS/2 ports.
description:	**what the package is, possibly including some history
		A short review encouraged, but no propaganda please.
conformance:	how well does it conform to the existing Standard, if one
		exists
reference:	research references and other external documentation.
features:	salient features not listed in the description.
bugs:		known bugs (also: where to go to find/report bugs)
restriction:	restrictions using the software will place on the user.
requires:	what is needed to install it.  A C compiler is assumed.
ports:		where it has been installed
portability:	how system-independent is it, system dependencies.
status: 	development status (active, history, supported, etc)
discussion:	where discussion about the package takes place
help:		where help may be gotten from
support:	where support may be gotten from
contributions:	possible requests for money contributions (but no shareware)
announcements:	where new releases are announced
contact:	who to reach concerning the package (if not author)
updated:	**last known update to the package, not time of the update 
		to the entry in the catalog!

In addition to the above, in entries for categories, and languages, 
cross-references can be made.  
cref:		cross-reference to a category
lref:		cross-reference to a language
iref:		(language it's filed under in parenthesis) cross-reference 
		to an implementation

-------------------------------------------------------------------------------
tools
-------------------------------------------------------------------------------

scripting languages
-------------------------------------------------------------------------------
category:	scripting languages
description:	These are languages that are primarily interpreted, and on 
		unix sytems, can ususally be invoked directly from a text 
		using #!.  

language:	ABC
package:	ABC
version:	1.04.01
parts:		interpreter/compiler
author: 	Leo Geurts, Lambert Meertens, 
		Steven Pemberton <Steven.Pemberton@cwi.nl>
location:	ftp programming/languages/abc/* from ftp.eu.net or ftp.nluug.nl
description:	ABC is an imperative language embedded in its own environment.
		It is interactive, structured, high-level, very easy to learn,
		and easy to use.  It is suitable for general everyday
		programming, such as you would use BASIC, Pascal, or AWK for.
		It is not a systems-programming language. It is an excellent
		teaching language, and because it is interactive, excellent for
		prototyping.  ABC programs are typically very compact, around a
		quarter to a fifth the size of the equivalent Pascal or C
		program.  However, this is not at the cost of readability, on
		the contrary in fact.
reference:	"The ABC Programmer's Handbook" by Leo Geurts,
		Lambert Meertens and Steven Pemberton, published by 
		Prentice-Hall (ISBN 0-13-000027-2)
		"An Alternative Simple Language and Environment for PCs" 
		by Steven Pemberton, IEEE Software, Vol. 4, No. 1, 
		January 1987, pp.  56-64.
ports:		unix, MSDOS, atari, mac
discussion:	abc-list-request@cwi.nl
contact:	abc@cwi.nl
updated:	1991/05/02

language:	awk (new)
package:	mawk
version:	1.1.3
parts:		interpreter
author: 	Mike Brennan <brennan@bcsaic.boeing.com>
location:	ftp public/mawk* from oxy.edu
description:	?
conformance:	superset
		+ RS can be a regular expression
features:	+ faster than most new awks
ports:		sun3,sun4:sunos4.0.3 vax:bsd4.3,ultrix4.1 stardent3000:sysVR3 
		decstation:ultrix4.1 msdos:turboC++
status: 	actively developed
contact:	Mike Brennan <brennan@bcsaic.boeing.com>
updated:	1993/03/14

language:	awk (new)
package:	GNU awk (gawk)
version:	2.15.5
parts:		interpreter, documentation
author: 	David Trueman <david@cs.dal.ca> and 
		Arnold Robbins <arnold@cc.gatech.edu>
location:	ftp gawk-2.15.tar.Z from a GNU archive site
description:	?
conformance:	superset including some Plan 9 features
ports:		unix, msdos:msc5.1
status: 	activly developed
updated:	1994/05/19

language:	BASIC
package:	bwBASIC (Bywater BASIC interpreter)
version:	2.10
parts:		interpreter, shell, ?
author: 	Ted A. Campbell <tcamp@delphi.com>
location:	comp.sources.misc volume 40
description:	The Bywater BASIC Interpreter (bwBASIC) implements a large
		superset of the ANSI Standard for Minimal BASIC (X3.60-1978)
		implemented in ANSI C, and offers a simple interactive environ-
		ment including some shell program facilities as an extension of
		BASIC. The interpreter has been compiled successfully on a
		range of ANSI C compilers on varying platforms with no
		alterations to source code necessary.
ports:		DOS, Unix, Acorn's RISC OS
updated:	1993/10/29

language:	BASIC
package:	? basic ?
version:	?
parts:		paser(yacc), interpreter
author: 	?
location:	comp.sources.unix archives volume 2
description:	?
updated:	?

language:	BASIC
package:	? bournebasic ?
version:	?
parts:		interpreter
author: 	?
location:	comp.sources.misc archives volume 1
description:	?
updated:	?

language:	BASIC
package:	ubasic
version:	8
parts:		?
author: 	Yuji Kida
location:	? ask archie ?
description:	?
reference:	reviewed in Notices of the A.M.S #36 (May/June 1989),
		and "A math-oriented high-precision BASIC", #38 (3/91)
contact:	?
updated:	1992/07/06

language:	BASIC
package:	?
version:	?
parts:		interpreter
author: 	?
location:	ftp pub/unix-c/languages/basic/basic.tar-z from oak.oakland.edu
description:	public domain version of DEC's MU-Basic with Microsoft
		Basic mixed together
contact:	?
updated:	?

language:	Bourne Shell
package:	ash
version:	?
parts:		interpreter, manual page
author: 	Kenneth Almquist
location:	ftp from any 386BSD, NetBSD, or FreeBSD archive
    Linux:	ftp pub/linux/ports/ash-linux-0.1.tar.gz from ftp.win.tue.nl
description:	A Bourne Shell clone.  It works pretty well.  For running
		scripts, it is sometimes better and sometimes worse than Bash.
ports:		386BSD, NetBSD, FreeBSD, Linux
updated:	?

language:	csh (C-Shell)
package:	tcsh
version:	6.05
parts:		interpreter, manual page, html manual
author: 	Christos Zoulas <christos@ee.cornell.edu>
location:	/pub/tcsh/tcsh-6.05.tar.gz
		   from tesla.ee.cornell.edu (128.84.253.11)
description:	a modified C-Shell with history editing
ports:		unix, VMS_POSIX, nearing completion: OS/2 EMX.
updated:	1994/06/27

language:	ERGO-Shell (a window-based Unix shell)
package:	ERGO-Shell
version:	2.1
parts:		interpreter
author: 	Regine Freitag <freitag@gmd.de>
location:	ftp gmd/ergo/? from ftp.gmd.de 
description:	An ergonomic window-based Unix shell for software engineers.
		[Can one program in ERGO-Shell? --ed]
bugs:		Relative path names are not expanded on the SUN 3 port,
		expansion ability on SUN 4 only on certain conditions.
requires:	Needs X-windows (X11R4) or OSF/Motif (revision 1.1)
ports:		Sun 4
contact:	Dr. Wolfgang Dzida, GMD <dzida@gmd.de> or the author
updated:	1993/06/04

language:	es (a functional shell)
package:	es
version:	0.84
parts:		interpreter
author: 	Byron Rakitzis <byron@netapp.com>, Paul Haahr <haahr@adobe.com>
location:	ftp pub/es/es-0.84.tar.Z from ftp.sys.utoronto.ca
description:	shell with higher order functions
		+ builtin features implemented as redefineable functions
updated:	1993/04/30

language:	Glish
package:	glish
version:	2.4.1
parts:		interpreter, C++ class library, user manual
author: 	Vern Paxson <vern@ee.lbl.gov>
location:	ftp glish/glish-2.4.1.tar.Z from ftp.ee.lbl.gov
description:	Glish is an interpretive language for building loosely-coupled
		distributed systems from modular, event-oriented programs.
		These programs are written in conventional languages such as C,
		C++, or Fortran.  Glish scripts can create local and remote
		processes and control their communication.  Glish also provides
		a full, array-oriented programming language (similar to S) for
		manipulating binary data sent between the processes.  In
		general Glish uses a centralized communication model where
		interprocess communication passes through the Glish
		interpreter, allowing dynamic modification and rerouting of
		data values, but Glish also supports point-to-point links
		between processes when necessary for high performance.
reference:	"Glish: A User-Level Software Bus for Loosely-Coupled
		Distributed Systems," Vern Paxson and Chris Saltmarsh,
		Proceedings of the 1993 Winter USENIX Conference, San Diego,
		CA, January, 1993.
requires:	C++
ports:		SunOS, Ultrix, HP/UX (rusty)
updated:	1993/11/01

language:	ici
package:	ici
version:	?
parts:		interpreter, documentation, examples
author: 	Tim Long
location:	ftp pub/ici.tar.Z from ftp.su.edu.au
		ftp pub/oz/ici.tar.Z from nexus.yorku.ca
description:	ICI has dynamic arrays, structures and typing with the flow
		control constructs, operators and syntax of C.	There are
		standard functions to provided the sort of support provided
		by the standard I/O and the C libraries, as well as additional
		types and functions to support common needs such as simple
		data bases and character based screen handling.
features:	+ direct access to many system calls
		+ structures, safe pointers, floating point
		+ simple, non-indexed built in database
		+ terminal-based windowing library
ports:		Sun4, 80x86 Xenix, NextStep, MSDOS, HP-UX
portability:	high
status: 	actively developed.
discussion:	send "help" to listserv@research.canon.oz.au
contact:	Andy Newman <andy@research.canon.oz.au>
updated:	1994/04/18

language:	Icon
package:	icon
version:	8.8 (8.7, 8.5, 8.0 depending on platform)
parts:		interpreter, compiler (some platforms), library (v8.8)
author: 	Ralph Griswold <ralph@CS.ARIZONA.EDU>
location:	ftp icon/* from cs.arizona.edu
		MS-DOS version: ftp norman/iconexe.zip from bellcore.com
description:	Icon is a high-level, general purpose programming language that
		contains many features for processing nonnumeric data,
		particularly for textual material consisting of string of
		characters.
		- no packages, one name-space
		- no exceptions
		+ object oriented features
		+ records, sets, lists, strings, tables
		+ unlimited line length
		- unix interface is primitive
		+ co-expressions
reference:	"The Icon Programmming Language", Ralph E. Griswold and 
		Madge T. Griswold, Prentice Hall, seond edition, 1990.
		"The Implementation of the Icon Programmming Language", 
		Ralph E. Griswold and Madge T. Griswold, Princeton 
		University Press 1986
ports:		Amiga, Atari, CMS, Macintosh, Macintosh/MPW, MSDOS, MVS, OS/2,
		Unix (most variants), VMS, Acorn
discussion:	comp.lang.icon
contact:	icon-project@cs.arizona.edu
		mengarini@delphi.com for MS-DOS version
updated:	1992/08/21

language:	Icon
iref:		(BNF) ibpag2

language:	IVY
package:	Ivy
version:	experimental
parts:		interpreter
author: 	Joseph H Allen <jhallen@world.std.com>
location:	alt.sources 1993/09/28 <CE1wo3.74A@world.std.com>
description:	A language with a pleasant syntax compared to perl, tcl or
		lisp.  It has nice features like low punctuation count, blocks
		indicated by indentation, and similarity to normal procedural
		languages.  This language started out as an idea for an
		extension language for the editor JOE.
updated:	1993/09/28

language:	Korn Shell
package:	SKsh
version:	2.1
parts:		interpreter, utilities
author: 	Steve Koren <koren@hpfcogv.fc.hp.com>
location:	ftp pub/amiga/incom*/utils/SKsh021.lzh from hubcap.clemson.edu
description:	SKsh is a Unix ksh-like shell which runs under AmigaDos.
		it provides a Unix like environment but supports many
		AmigaDos features such as resident commands, ARexx, etc.
		Scripts can be written to run under either ksh or SKsh,
		and many of the useful Unix commands such as xargs, grep,
		find, etc. are provided.
ports:		Amiga
updated:	1992/12/16

language:	Korn Shell 
package:	Bash (Bourne Again SHell)
version:	1.14
parts:		parser(yacc), interpreter, documentation
author: 	Brian Fox <bfox@vision.ucsb.edu>
location:	ftp bash-1.14.tar.gz from a GNU archive site
description:	Bash is a Posix compatable shell with full Bourne shell syntax,
		and some C-shell commands built in.  The Bourne Again Shell
		supports emacs-style command-line editing, job control,
		functions, and on-line help.  
bugs:		gnu.bash.bug, bug-bash@prep.ai.mit.edu
restriction:	GNU General Public License
updated:	1994/06/02

language:	Korn Shell
package:	pdksh
version:	4.9
parts:		interpreter
author: 	Simon J. Gerraty <sjg@zen.void.oz.au>
location:	comp.sources.misc volume 4
description:	It is not intended to be the ultimate shell but rather a usable
		ksh work alike.
conformance:	Almost identical to ksh88, but missing arrays
ports:		Sun, 386bsd, ?
contact:	Simon J Gerraty <sjg@melb.bull.oz.au> (zen.void.oz.au is down)
updated:	1993/10/11

language:	LPC
package:	LPC4
version:	4.05.11
parts:		interpreter, bytecode compiler, documentation, sample scripts,
		sample mudlib
author:		Fredrik Hubinette <hubbe@lysator.liu.se>
location:	ftp://ftp.lysator.liu.se/pub/lpmud/drivers/profezzorn/
description:	A development of Lars Pensj|'s language for MUD, with
		script-running capability. LPC has a syntax similar to C,
		but works internally like Perl or some one-cell Lisp.
features:	mappings, dynamic arrays, binary strings (ie. they
		can contain zeros) and socket communication functions
restriction:	May currently not be used for monetary gain.
		(Imposed by Lars Pensj|)
requires:	yacc/byacc/bison
ports:		dynix, hp-ux, Sunos4, Solaris, Linux
portability:	Should work fine on most Unix.
discussion:	lpc4-request@lysator.liu.se
updated:	1994/06/04

language:	Perl5 (Practical Extraction and Report Language)
package:	perl
version:	5.0 alpha 3
parts:		interpreter, debugger, libraries, tests, documentation
author: 	Larry Wall <lwall@netlabs.com>
location:	ftp pub/perl5.0/* from ftp.netlabs.com 
description:	perl5 is a major rewrite and enhancement to perl4.  It adds
		real data structures (by way of "references"), un-adorned
		subroutine calls, and method inheritance.  It is not 
		stable (yet).
ports:		SunOS
updated:	1993/11

language:	Perl (Practical Extraction and Report Language)
package:	perl
version:	4.0 patchlevel 36
parts:		interpreter, debugger, libraries, tests, documentation
author: 	Larry Wall <lwall@netlabs.com>
location:	ftp pub/perl.4.0/* from jpl-devvax.jpl.nasa.gov 
    OS/2:	ftp pub/os2/all/unix/prog*/perl4019.zip from hobbes.nmsu.edu
    Macintosh:	ftp software/mac/src/mpw_c/Mac_Perl_405_* from nic.switch.ch
    Amiga:	ftp perl4.035.V010.* from wuarchive.wustl.edu
    VMS:	ftp software/vms/perl/* from ftp.pitt.edu
    Atari:	ftp amiga/Languages/perl* from atari.archive.umich.edu
    MSDOS:	ftp pub/msdos/perl/* from ftp.ee.umanitoba.ca
		ftp pub/msdos/perl/bperl* from oak.oakland.edu
    Windows NT: ftp pub/pc/win3/nt/ntperl*.zip from cica.cica.indiana.edu
    MVS:	ftp dist/perl-4036.tar.Z from oozelum.csi.cam.ac.uk
    Netware:	contact Jack Thomasson <Jack_Thomasson@Novell.COM>
description:	perl is an interpreted language optimized for scanning 
		arbitrary text files, extracting information from those text
		files, and printing reports based on that information.	It's
		also a good language for many system management tasks.	
reference:	"Programming Perl" by Larry Wall and Randal L. Schwartz,
		O'Reilly & Associates, Inc.  Sebastopol, CA.
		ISBN 0-93715-64-1
		"Learning Perl" by Randal L. Schwartz, 
		O'Reilly & Associates, Inc.  Sebastopol, CA.
		ISBN [??? --ed]
		The perl FAQ, ftp from rtfm.mit.edu
features:	+ very-high semantic density becuase of powerful operators
		like regular expression substitution
		+ exceptions, provide/require
		+ associative array can be bound to dbm files
		+ no arbitrary limits
		+ direct access to almost all system calls
		+ can access binary data 
		+ many powerful idioms for common tasks
		+ 8-bit clean, including nulls
		- three variable types: scalar, array, and hash table
		- syntax requires variable and function prefix characters
bugs:		comp.lang.perl; Larry Wall <lwall@netlabs.com>
ports:		almost all unix, MSDOS, Mac, Amiga, Atari, OS/2, VMS, NT, MVS
portability:	very high for unix, not so high for others
discussion:	comp.lang.perl
    Macintosh:	mpw-perl-request@iis.ee.ethz.ch
updated:	1993/02/07

language:	perl, awk, sed, find
package:	a2p, s2p, find2perl
version:	?
parts:		translators(perl)
author: 	Larry Wall
location:	comes with perl
description:	translators to turn awk, sed, and find programs into perl 
		programs.
updated:	?

language:	Perl
package:	perl profiler.
version:	? 1
parts:		profiler
author: 	Anthony Iano-Fletcher <arf@maths.nott.ac.uk>
location:	Source posted on comp.lang.perl in mid-June 1993
description:	Profiles Perl scripts (mkpprof).
		Collates data from Perl scripts (pprof)
updated:	1993/06/17

language:	Perl
package:	Dylperl
version:	?
parts:		?
author: 	Roberto Salama <rs@fi.gs.com>
location:	posted to comp.lang.perl, 1993/08/11, <CBM3Bo.Lpw@fi.gs.com>
description:	A dynamic linking package for perl.  Dynamically-loaded 
		functions are accessed as if they were user-defined funtions.
		This code is based on Oliver Sharp's May 1993 article in 
		Dr. Dobbs Journal (Dynamic Linking under Berkeley UNIX).
ports:		?
updated:	1993/08/11

language:	Perl
package:	curseperl
version:	?
parts:		?
author: 	Larry Wall <lwall@netlabs.com>
location:	comes with perl
description:	A curses library for perl
updated:	?

language:	Python
package:	Python
version:	1.0.2
parts:		interpeter, libraries, documentation, emacs macros
author: 	Guido van Rossum <guido@cwi.nl>
location:	ftp pub/python* from ftp.cwi.nl
    N.America:	ftp pub/plan/python/cwi from gatekeeper.dec.com
    Europe:	ftp pub/unix/languages/python from ftp.fu-berlin.de
description:	Python is a simple, yet powerful programming language
		that bridges the gap between C and shell programming,
		and is thus ideally suited for rapid prototyping.  Its
		syntax is put together from constructs borrowed from a
		variety of other languages; most prominent are
		influences from ABC, C, Modula-3 and Icon.  Python is
		object oriented and is suitable for fairly large programs.
		+ packages
		+ exceptions
		+ good C interface
		+ dynamic loading of C modules
		- arbitrary restrictions
reference:	Python documentation URL <http://www.cwi.nl/~guido/Python.html>
ports:		unix and Macintosh
discussion:	python-list-request@cwi.nl
updated:	1994/05/08

language:	Python
package:	vpApp
version:	0.2
parts:		Class Library, User Reference
author: 	Per Spilling <per@cwi.nl>
		Real Name <email@address>
location:	ftp.cwi.nl in /pub/python/vpApp.tar.gz.
description:	vpApp = visual-programming application.  It supports the
		building of applications in Python.
requires:	Python interpreter with built-in X support.
updated:	1994/05/06

language:	Q (also small subsets of Common Lisp and Scheme)
package:	Q
version:	? 1
parts:		interpreter, compiler framework, libraries, documentation
author: 	Per Bothner <bothner@cygnus.com>
location:	ftp pub/Q.* from ftp.cygnus.com
description:	Q is a very high-level programming language, and a test-bed
		for programming language ideas.  Where APL uses arrays
		to explicit looping, Q uses generalized sequences
		(finite or infinite, stored or calculated on demand).
		It has lexical scoping, and some support for logical and
		constraint programming.  The syntax was designed for
		convenient interactive use.  A macro facility together
		with primitives to run programs is used to make an
		interactive command language with full shell features.
		The Q system is written in C++, and its run-time code
		may be useful to people implementing other languages.
ports:		Linux and SUN 4
portability:	Should work on 32-bit Unix-like systems
updated:	1993/06/07

language:	REXX
package:	The Regina Rexx Interpreter
version:	0.05i
parts:		interpreter, documentation, test programs
author: 	Anders Christensen <anders@pvv.unit.no>
location:	ftp pub/rexx/regina-0.05g.tar.Z from flipper.pvv.unit.no
    N.America:	ftp pub/freerexx/regina/regina-0.05d.tar.Z
		from rexx.uwaterloo.ca
description:	A Rexx interpreter.  The VMS version has an almost complete
		set of DCL lexical functions in the interpreter.  Ports to
		MS-DOS and OS/2 exist by lack special support for these
		platforms.
conformance:	Almost completely to Rexx Language Level 4.00 with some 
		Rexx SAA API extensions.
restriction:	GNU General Public License
ports:		Unix, VMS, MS-DOS (partial), OS/2 (partial)
discussion:	comp.lang.rexx
updated:	1993/10/15

language:	REXX
package:	?
version:	102
parts:		interpreter
author: 	? al ? 
location:	ftp alrexx/rx102.tar.Z from rexx.uwaterloo.ca
    USA:	ftp ? from tony.cat.syr.edu
description:	?
requires:	C++
ports:		unix
discussion:	comp.lang.rexx
contact:	?
updated:	1992/05/13

language:	REXX
package:	REXX/imc
version:	1.6
parts:		Interpreter, documentation.
author: 	Ian Collier <imc@comlab.oxford.ac.uk>
location:	ftp pub/freerexx/imc/rexx-imc-1.6.tar.Z from rexx.uwaterloo.ca
description:	REXX for Unix.	A general-purpose programming language
		designed by Mike Cowlishaw of IBM UK for readability and
		ease of use.  Also useful as a control language for Unix
		or for applications which make use of REXX's programming
		interface (REXX/imc may be compiled as a dynamic C library
		for applications to include on some systems).  REXX is an
		official scripting language of VM/CMS, OS/2 and AmigaDOS.
conformance:	REXX language level 4.00 (more or less), with some small
		extensions.  The C programming interface is a subset of
		the SAA interface exhibited by OS/2 REXX.
reference:	"The REXX Language" 2nd edition, by M.F. Cowlishaw;
		Prentice-Hall 1990.
ports:		SunOS, AIX 3.2
portability:	Requires Unix-domain sockets (restriction may be relaxed in
		the future).  Dynamic link function dlopen() is useful but
		not essential.
status: 	Under slow development.  Contact author for help/support.
discussion:	comp.lang.rexx (general forum for all REXX-related products).
announcements:	comp.lang.rexx
updated:	1994/05/18

language:	sed
package:	GNU sed 
version:	2.04
parts:		interpreter, ?
author: 	Tom Lord <lord+@andrew.cmu.edu>
location:	ftp sed-* from a GNU archive site
description:	A SED interpreter.  Sed is a stream editing filter language.
features:	Modulo n line addressing.
bugs:		bug-gnu-utils@prep.ai.mit.edu
updated:	1994/04/30

language:	rc (Plan 9 shell)
package:	rc
version:	1.4
parts:		interpretor
author: 	Byron Rakitzis <byron@netapp.com>
location:	ftp pub/rc/* from ftp.white.toronto.edu
description:	a free implementation of the Plan 9 shell.
discussion:	rc-request@hawkwind.utcs.toronto.edu
updated:	1992/05/26

language:	S-Lang
package:	slang
version:	0.94
parts:		interpreter, documentation, examples
author: 	John E. Davis <davis@amy.tch.harvard.edu>
location:	ftp pub/slang/* from amy.tch.harvard.edu
description:	A small but highly functional embedded interpreter.  S-Lang was
		a stack-based postfix language resembling Forth and BC/DC with
		limited support for infix notation.   Now it has a C-like infix
		syntax.  Arrays, Stings, Integers, Floating Point, and
		Autoloading are all suported.  The editor JED embeds S-lang.
restriction:	GNU Library General Public License
ports:		MSDOS, Unix, VMS
portability:	Must be compiled with large memory model on MSDOS.
updated:	1993/06/12

language:	Snobol4
package:	SIL (Macro Implementation of SNOBOL4)
version:	3.11
parts:		?
author: 	?
location:	ftp snobol4/* from cs.arizona.edu
description:	?
contact:	snobol4@arizona.edu
updated:	1986/07/29

language:	Snobol4
package:	vanilla
version:	?
parts:		?
author: 	Catspaw, Inc.
location:	ftp snobol4/vanilla.arc from cs.arizona.edu
description:	?
ports:		MSDOS
contact:	?
updated:	1992/02/05

language:	ssh (Steve's Shell)
package:	ssh
version:	1.7
parts:		interpreter
author: 	Steve Baker <ice@judy.indstate.edu> with help from Thomas Moore
location:	comp.sources.unix volume 26
description:	A unix shell with a lot of csh/ksh-like features.
ports:		sequent, sun, next, ultrix, bsdi
updated:	1993/04/15

language:	subscript
package:	sub (seismic unix basic)
version:	0.9
parts:		Embedded interpreter, demo application, User's Guide,
		example inputs for demo.
author: 	Martin L. Smith (martin@ner.com)
location:	hilbert.mines.colorado.edu (138.67.12.63) in
		pub/cwpcodes/*sub*.tar
description:	subscript is a bytecode-compiled scripting language that
		provides a convenient way of manipulating binary stream
		data.  It is currently distributed embedded in a demo
		application (sub), which illustrates the processing of
		seismic data, but the interpreter/compiler core is
		portable to other applications.
features:	the interpreted language provides atomic manipulation
		of vectors of floating-point values.
requires:	yacc.
ports:		Unixware 1.x, SunOS 4.x, NextStep, Linux 0.99.
status: 	Undergoing active development, with future inclusion into
		the Colorado School of Mines' Seismic Unix package.
updated:	?

language:	TCL (Tool Command Language)
package:	Tcl
version:	7.3
parts:		interpreter, libraries, tests, documentation
author: 	John Ousterhout <ouster@cs.berkeley.edu>
location:	ftp.cs.berkeley.edu in ucb/tcl/tcl*
    MSDOS:	harbor.ecn.purdue.edu in /pub/tcl/distrib/mstcl73e.zip
    Macintosh:	bric-a-brac.apple.com in pub/ticl 
		harbor.ecn.purdue.edu in pub/tcl/distrib/MacTcl7.3.sea.*
    Examples:	ftp tcl/* from barkley.berkeley.edu
    Kanji:	ftp pub/lang/tcl/jp/tk3.2jp-patch.Z from srawgw.sra.co.jp
description:	A small text-oriented embedded language similar to LISP with
		add-on extensions that allow it to also function more as a
		shell.	TCL also allows algebraic expressions to be written
		for simplicity and convenience.  Its greatest strength lies
		in its uniform representation of everything as a string.
		This is also its weakness.
		+ may be used as an embedded interpreter
		+ exceptions, packages (called libraries)
		- only a single name-space
		+ provide/require
		- no dynamic loading ability
		+ 8-bit clean
		- only three variable types: strings, lists, associative arrays
bugs:		?
requires:	DOS port requires Desqview/X.
ports:		MSDOS, others in progress (see comp.lang.tcl FAQ)
discussion:	comp.lang.tcl
updated:	1993/11/15

language:	TCL, Tk
package:	Tk
version:	3.5
parts:		GUI library
author: 	John Ousterhout <ouster@sprite.Berkeley.EDU>
location:	ftp ucb/tcl/tk* from ftp.cs.berkeley.edu
description:	Tk is a X11 gui library that is designed to interoperate
		with TCL. It provides a very easy way to create sophisticated
		applications.  The appearence of Tk is very similar to Motif.
updated:	1993/11/15

language:	TCL
package:	BOS - The Basic Object System
version:	1.31
parts:		library
author: 	Sean Levy <Sean.Levy@cs.cmu.edu>
location:	ftp tcl/? from barkley.berkeley.edu
description:	BOS is a C-callable library that implements the notion of
		object and which uses Tcl as its interpreter for interpreted
		methods (you can have "compiled" methods in C, and mix compiled
		and interpreted methods in the same object, plus lots more
		stuff).  I regularly (a) subclass and (b) mixin existing
		objects using BOS to extend, among other things, the set of tk
		widgets (I have all tk widgets wrapped with BOS "classes"). BOS
		is a class-free object system, also called a prototype-based
		object system; it is modeled loosely on the Self system from
		Stanford.
updated:	1992/08/21

language:	TCL
package:	Tcl-DP
version:	3.0
parts:		library
author: 	Larry Rowe ?
location:	ftp pub/multimedia/Tcl-DP from toe.cs.berkeley.edu
description:	Tcl-DP extends the "send" by removing the restriction
		that you can only send to other clients of the same 
		X11 server.  [could someone give a better description? --ed]
updated:	?

language:	Tcl
package:	Tickle
version:	5.0v1
parts:		Text Editor, File Translator, TCL Interpreter
author: 	time@ice.com
location:	/pub/vendor/ice/tickle/Tickle5.0v1.hqx from ftp.msen.com
description:	A Macintosh TCL interprter and library.  It includes a 
		text editor (>32k); file translation utilities; support
		for tclX extensions; some unix-equivelent utilites; access
		to Macintosh functions (Resource Manager, Communications
		Toolbox, OSA Components, Editions, and Apple Events); OSA
		Script Support; and Drag and Drop.
bugs:		time@ice.com?
requires:	?
ports:		Mac
portability:	Mac-specific package
updated:	1994/01/12
lref:		TCL

language:	TCL
package:	Wafe
version:	0.95
parts:		interface
author: 	Gustaf Neumann <neumann@watson.ibm.com>
location:	ftp pub/src/X11/wafe/wafe-0.95.tar.gz from ftp.wu-wien.ac.at
description:	Wafe (Widget[Athena]front end) is a package that implements
		a symbolic interface to the Athena widgets (X11R5) and
		OSF/Motif.  A typical Wafe application consists of two
		parts: a front-end (Wafe) and an application program which
		runs typically as a separate process.  The distribution
		contains sample application programs in Perl, GAWK, Prolog,
		TCL, C and Ada talking to the same Wafe binary.
portability:	very high, just needs X11R4 or X11R5.
discussion:	send "subscribe Wafe <Your Name>" to listserv@wu-wien.ac.at
updated:	1993/07/01

language:	TCL
package:	Extended Tcl (tclx)
version:	7.3a
parts:		library
author:		Mark Diekhans <markd@Grizzly.com>,
		Karl Lehenbauer <karl@NeoSoft.com>
location:	ftp pub/tcl/distrib/tclX7.3a.tar.gz from ftp.neosoft.com
		ftp pub/tcl/extensions/tclX7.3a.tar.gz from
		   harbor.ecn.purdue.edu
description:	Extended Tcl adds statements to the TCL language to provide
		high-level access unix system primitives.
contact:	tcl-project@NeoSoft.com
updated:	1994/05/31

language:	TCL
package:	tcl-debug
version:	?
parts:		debugger
author: 	Don Libes <libes@cme.nist.gov>
location:	ftp pub/expect/tcl-debug.tar.Z from ftp.cme.nist.gov
description:	A debugger for Tcl that can be easily embedded in other
		applications.  It is included with many other Tcl libraries.
updated:	?

language:	TCL
package:	Cygnus Tcl Tools
version:	Release-930124
parts:		?
author: 	david d 'zoo' zuhn <zoo@cygnus.com>
location:	ftp pub/tcltools-* from cygnus.com
description:	A rebundling of Tcl and Tk into the Cyngus GNU build 
		framework with 'configure'.
updated:	1993/01/24

language:	Z-shell
package:	zsh
version:	2.3.1 (2.4 in beta)
parts:		interpreter
author: 	Paul Falstad <pf@ttisms.com>
location:	ftp pub/bas/zsh/zsh-*.tar.z from carlo.phys.uva.nl
description:	zsh is most similar to ksh, while many of the additions are to
		please csh users.
features:	+ multi-line commands editable as a single buffer,
		+ variable editing (vared),
		+ command buffer stack,
		+ recursive globbing,
		+ manipulation of arrays,
		+ spelling correction.
ports:		Berkeley-based Unix, SVR4-based Unix 
discussion:	zsh-request@cs.uow.edu.au
contact:	zsh-list@cs.uow.edu.au
updated:	1993/03/23

functional languages
-------------------------------------------------------------------------------
category:	functional languages
description:	[someone have a good one-liner?  --ed]
lref:		es
lref:		LIFE
lref:		ALLOY

language:	Caml
package:	CAML
version:	3.1
parts:		compiler, interactive development environment
author: 	Ascander Suarez, Pierre Weis, Michel Mauny, others (INRIA)
location:	ftp lang/caml/* from ftp.inria.fr
description:	Caml is a programming language from the ML/Standard ML family,
		with functions as first-class values, static type inference
		with polymorphic types, user-defined variant and product
		types, and pattern-matching. The CAML V3.1 implementation
		adds lazy and mutable data structures, a "grammar" mechanism
		for interfacing with the Yacc parser generator,
		pretty-printing tools, high-performance arbitrary-precision
		arithmetic, and a complete library.
bugs:		caml@margaux.inria.fr
ports:		Sun-3 Sun-4 Sony-68k Sony-R3000 Decstation Mac-A/UX Apollo
portability:	low (built on a proprietary runtime system)
status: 	maintained but no longer developed
discussion:	caml-list@margaux.inria.fr, comp.lang.ml
contact:	Pierre Weis <Pierre.Weis@inria.fr>
updated:	1991/10/20

language:	Caml 
package:	Caml Light
version:	0.6
parts:		bytecode compiler, emacs mode, libraries, scanner generator, 
		parser generator, runtime, interactive development environment
author: 	Xavier Leroy, Damien Doligez (INRIA)
location:	ftp lang/caml-light/* from ftp.inria.fr
description:	Caml is a programming language from the ML/Standard ML family,
		with functions as first-class values, static type inference
		with polymorphic types, user-defined variant and product
		types, and pattern-matching. The Caml Light implementation
		adds a Modula-2-like module system, separate compilation,
		lazy streams for parsing and printing, graphics primitives,
		and an interface with C.
features:	very small
bugs:		caml-light@margaux.inria.fr
ports:		most unix, Macintosh, MSDOS (16 and 32 bit modes), Atari ST
portability:	very high
status: 	actively developed
discussion:	caml-list@margaux.inria.fr, comp.lang.ml
contact:	Xavier Leroy <Xavier.Leroy@inria.fr>
updated:	1993/10/06

language:	CAML, Bigloo
package:	Camloo
version:	0.2
parts:		?
author: 	? Manuel.Serrano@inria.fr, Pierre.Weis@inria.fr
location:	ftp from ftp.inria.fr [192.93.2.54], in Camloo0.2
    N.America:	Sites for North Americans.
description:	An implementation of CAML in Bigloo.  It can be considered as
		an alternative to the regular camlc compiler.  In particular,
		it has successfully compiled many complex Caml Light programs,
		including camlc and the Coq system (the ``calculus of
		constructions'', a proof assistant).
conformance:	Full compliance with Caml Light 0.6 and Caml Light Libraries
		(including camlyacc and camllex).
requires:	Bigloo1.6c (available from same address).
contact:	Manuel.Serrano@inria.fr, Pierre.Weis@inria.fr.
updated:	1994/06/13

language:	Concurrent Clean
package:	The Concurrent Clean System
version:	0.8.1
parts:		development environment, documentation, compiler(byte-code), 
		compiler(native), interpreter(byte-code), examples
author: 	Research Institute for Declarative Systems, 
		University of Nijmegen
location:	ftp pub/Clean/* from ftp.cs.kun.nl 
description:	The Concurrent Clean system is a programming environment for
		the functional language Concurrent Clean, developed at the
		University of Nijmegen, The Netherlands. The system is one of
		the fastest implementations of functional languages available
		at the moment. Its I/O libraries make it possible to do modern,
		yet purely functional I/O (including windows, menus, dialogs
		etc.) in Concurrent Clean. With the Concurrent Clean system it
		is possible to develop real-life applications in a purely
		functional language.
		* lazy and purely functional
		* strongly typed - based on Milner/Mycroft scheme
		* module structure
		* modern I/O
		* programmer-infulenced evaluation order by annotations
ports:		Sun-3, Sun-4, Macintosh
contact:	clean@cs.kun.nl
updated:	1992/11/07

language:	FP
package:	? funcproglang ?
version:	?
parts:		translator(C)
author: 	?
location:	comp.sources.unix archive volume 13
description:	? Backus Functional Programming ?
updated:	?

language:	Gofer (Haskell derivative)
package:	Gofer
version:	2.28b
parts:		interpreter, compiler(->C), documentation, examples
author: 	Mark Jones <jones-mark@cs.yale.edu>
location:	ftp pub/haskell/gofer/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/gofer/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/gofer/* from ftp.cs.chalmers.se
description:	Gofer is based quite closely on the Haskell programming
		language, version 1.2.	It supports lazy evaluation, higher
		order functions, pattern matching, polymorphism, overloading
		etc and runs on a wide range of machines.
conformance:	Gofer does not implement all of Haskell, although it is 
		very close.
ports:		many, including Sun, PC, Mac, Atari, Amiga
status: 	maintained but not developed (for a while anyway)
updated:	1993/08/02

language:	Gofer
iref:		(BNF) Ratatosk

language:	Haskell
package:	Chalmers Haskell (aka Haskell B.)
version:	0.999.5
parts:		compiler, interpreter, library, documentation, examples
author: 	Lennart Augustsson <augustss@cs.chalmers.se>
location:	ftp pub/haskell/chalmers/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/chalmers/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/chalmers/* from ftp.cs.chalmers.se
description:	Full-featured implementation of Haskell 1.2, 
		with quite a few "Haskell B" extensions
requires:	LML
ports:		many, including Sun, DEC, Sequent, PC, Symmetry
		(unsupported versions for NS32000, RT/PC, CRAY, SUN3, VAX,
		ARM, and RS6000.)
discussion:	haskell-request@cs.yale.edu
    Europe:	haskell-request@dcs.glasgow.ac.uk
contact:	hbc@cs.chalmers.se
updated:	1993/08/02

language:	Haskell
package:	Glasgow Haskell Compiler (GHC)
version:	0.19
parts:		translator (C, SPARC), profiler
author: 	AQUA project, headed by Simon Peyton Jones
		<simonpj@dcs.glasgow.ac.uk>
location:	ftp pub/haskell/glasgow/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/glasgow/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/glasgow/* from ftp.cs.chalmers.se
description:	A near complete subset of Haskell 1.2, with numerous
		extensions.
conformance:	Almost all of Haskell 1.2 is implemented.
reference:	Papers at ftp.dcs.glasgow.ac.uk (only) in pub/glasgow-fp,
		"Imperative functional programming",
		Peyton Jones & Wadler, POPL '93
		"Unboxed data types as first-class citizens",
		Peyton Jones & Launchbury, FPCA '91
		"Profiling lazy functional languages",
		Sansom & Peyton Jones, Glasgow workshop '92
		"Implementing lazy functional languages on stock hardware",
		Peyton Jones, Journal of Functional Programming, Apr 1992
features:	An extensible I/O system is provided, based on a "monad"
		In-line C code
		Fully fledged unboxed data types,
		Incrementally-updatable arrays
		Mutable reference types.
		Generational garbage collector
bugs:		<glasgow-haskell-bugs@dcs.glasgow.ac.uk>
requires:	GNU C 2.1+, perl
ports:		solid: Sun4, Sun3; sort of: HP-PA, Alpha, DECstation
portability:	should be high
contact:	<glasgow-haskell-request@dcs.glasgow.ac.uk>
updated:	1993/12/17

language:	Haskell
package:	Yale Haskell
version:	2.0.5
parts:		compiler, documentation, reference manual (dvi format)
author: 	Yale Haskell project <haskell-request@cs.yale.edu>
location:	ftp pub/haskell/yale/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/yale/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/yale/* from ftp.cs.chalmers.se
description:	?
features:	X-window interface, available at the Haskell level too.
requires:	CMU Common Lisp, Lucid, Common Lisp, Allegro Common Lisp, or
		Harlequin LispWorks
ports:		SunOS 4.1.2, Sparc 10 (sun4m) 4.1.3
discussion:	haskell-request@cs.yale.edu
    Europe:	haskell-request@dcs.glasgow.ac.uk
contact:	haskell-request@cs.yale.edu
updated:	1993/07/14

language:	Hope
package:	?
version:	?
parts:		?
author: 	?
location:	ftp ? from brolga.cc.uq.oz.au
description:	Functional language with polymorphic types and lazy lists.
		First language to use call-by-pattern.
ports:		Unix, Mac, PC
updated:	1992/11/27

language:	IFP (Illinois Functional Programming)
package:	ifp
version:	0.5
parts:		interpreter
author: 	Arch D. Robison <robison@shell.com>
location:	comp.sources.unix archive volume 10
description:	A variant of Backus' "Functional Programming" language
		with a syntax reminiscent of Modula-2.	The interpreter
		is written in portable C.
reference:	[1] Arch D. Robison, "Illinois Functional Programming: A
		Tutorial," BYTE, (February 1987), pp. 115--125.
		[2] Arch D. Robison, "The Illinois Functional
		Programming Interpreter," Proceedings of 1987 SIGPLAN
		Conference on Interpreters and Interpretive Techniques,
		(June 1987), pp. 64-73
ports:		Unix, MS-DOS, CTSS (Cray)
updated:	?

language:	ML
package:	LML
version:	?
parts:		compiler(?), interactive environment
author: 	?
location:	ftp pup/haskell/chalmers/* from animal.cs.chalmers.se
description:	lazy, completely functional variant of ML.
ports:		?
contact:	?
updated:	1992/07/06

language:	Standard ML
package:	SML/NJ (Standard ML of New Jersey)
version:	0.93
parts:		compiler, libraries, extensions, interfaces, documentation,
		build facility
author: 	D. B. MacQueen <dbm@research.att.com>, Lal George 
		<george@research.att.com>, AJ. H. Reppy <jhr@research.att.com>,
		A. W. Appel <appel@princeton.edu>
location:	ftp dist/ml/* from research.att.com
description:	Standard ML is a modern, polymorphically typed, (impure)
		functional language with a module system that supports flexible
		yet secure large-scale programming.  Standard ML of New Jersey
		is an optimizing native-code compiler for Standard ML that is
		written in Standard ML.  It runs on a wide range of
		architectures.	The distribution also contains:
		+ an extensive library - The Standard ML of New Jersey Library,
		including detailed documentation.
		+ CML - Concurrent ML
		+ eXene - an elegant interface to X11 (based on CML)
		+ SourceGroup - a separate compilation and "make" facility
		CML, eXene and SourceGroup not in the Macintosh port, but the
		Mac port has a built-in editor.
ports:		M68K, SPARC, MIPS, HPPA, RS/6000, I386/486, Macintosh
updated:	1993/02/18

language:	Concurrent ML
package:	Concurrent ML
version:	0.9.8
parts:		extension
author: 	?
location:	ftp pub/CML* from ftp.cs.cornell.edu or get SML/NJ
description:	Concurrent ML is a concurrent extension of SML/NJ, supporting
		dynamic thread creation, synchronous message passing on
		synchronous channels, and first-class synchronous operations.
		First-class synchronous operations allow users to tailor their
		synchronization abstractions for their application.  CML also
		supports both stream I/O and low-level I/O in an integrated
		fashion.
bugs:		sml-bugs@research.att.com
requires:	SML/NJ 0.75 (or later)
updated:	1993/02/18

language:	SASL
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Standard ML
package:	sml2c
version:	?
parts:		compiler(->C), documentation, tests
author: 	School of Computer Science, Carnegie Mellon University 
location:	ftp /usr/nemo/sml2c/sml2c.tar.Z from dravido.soar.cs.cmu.edu
    Linux:	ftp pub/linux/smlnj-0.82-linux.tar.Z from ftp.dcs.glasgow.ac.uk
description:	sml2c is a Standard ML to C compiler.  sml2c is a batch
		compiler and compiles only module-level declarations,
		i.e. signatures, structures and functors.  It provides
		the same pervasive environment for the compilation of
		these programs as SML/NJ.  As a result, module-level
		programs that run on SML/NJ can be compiled by sml2c
		without any changes.  Based on SML/NJ version 0.67 and shares
		front end and most of its runtime system, but does not support
		SML/NJ style debugging and profiling.
conformance:	superset
		+ first-class continuations,
		+ asynchronous signal handling
		+ separate compilation 
		+ freeze and restart programs
ports:		IBM-RT Decstation3100 Omron-Luna-88k Sun-3 Sun-4 386(Mach)
portability:	easy, easier than SML/NJ
contact:	david.tarditi@cs.cmu.edu anurag.acharya@cs.cmu.edu 
		peter.lee@cs.cmu.edu
updated:	1991/06/27

language:	Standard ML
package:	The ML Kit
version:	1
parts:		interprter, documentation
author: 	Nick Rothwell, David N. Turner, Mads Tofte <tofte@diku.dk>,
		and Lars Birkedal at Edinburgh and Copenhagen Universities.
location:	ftp diku/users/birkedal/* from ftp.diku.dk
    UK: 	ftp export/ml/mlkit/* from lfcs.ed.ac.uk
description:	The ML Kit is a straight translation of the Definition of
		Standard ML into a collection of Standard ML modules.  For
		example, every inference rule in the Definition is translated
		into a small piece of Standard ML code which implements it. The
		translation has been done with as little originality as
		possible - even variable conventions from the Definition are
		carried straight over to the Kit.  The Kit is intended as a
		tool box for those people in the programming language community
		who may want a self-contained parser or type checker for full
		Standard ML but do not want to understand the clever bits of a
		high-performance compiler. We have tried to write simple code
		and modular interfaces.
updated:	1993/03/12

language:	SISAL 1.2
package:	The Optimizing SISAL Compiler
version:	12.0
parts:		compiler?, manuals, documentation, examples, debugger,...
author: 	David C. Cann <cann@sisal.llnl.gov>
location:	ftp pub/sisal from sisal.llnl.gov
description:	Sisal is a functional language designed to be competitive with
		Fortran, and other imperative languages for scientific jobs.  
		In particualar, OSC uses advanced optimizing techniques to 
		achieve fast speeds for computation intensive programs.  
		It also features routines for making efficient use
		of parallel processors, such as that on the Cray.
ports:		?
updated:	?

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p2of5]
Message-ID: <free2-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free2-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free1-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:24 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1309
Xref: bloom-beacon.mit.edu comp.compilers:3317 comp.lang.misc:5186 comp.archives.admin:676 news.answers:23368 comp.answers:6566

Archive-name: free-compilers/part2
Last-modified: 1994/6/30
Version: 6.5

C variants
-------------------------------------------------------------------------------
category:	C variants
description:	These are languages that are closely based on C.  
lref:		C-Refine, C++-Refine, *-Refine			
lref:		(C,Duel) Duel (a <practical> C debugging language)	

language:	C, C++, Objective-C, RTL
package:	GNU CC (gcc)
version:	2.5.8
parts:		compiler, runtime, examples, documentation
		Library listed separately
author: 	Richard Stallman <gnu@prep.ai.mit.edu> and others
location:	ftp gcc-2.X.X.tar.gz from a GNU archive site
    MSDOS:	ftp pub/msdos/djgpp/* from oak.oakland.edu
    6811:	ftp pub/coactive/gcc-6811-beta.tar.gz from netcom.com
			(these are diffs from 2.5.8 distribution)
description:	A very high quality, very portable compiler for C, C++,
		Objective-C.  The compiler is designed to support multiple
		front-ends and multiple back-ends by translating first
		into RTL (Register Transfer Language) and from there into
		assembly for the target architecture.	Front ends for
		Ada, Pascal, and Fortran are all under development.
conformance:	C: superset of K&R C and ANSI C.
		C++: not exactly cfront 3.0? [could someone tell me which
		version of cfront it is equivalent to, if any?	--ed]
		Objective-C: ?
bugs:		gnu.gcc.bug
restriction:	GNU General Public License
ports:		3b1, a29k, aix385, alpha, altos3068, amix, arm, convex,
		crds, elxsi, fx2800, fx80, genix, hp320, clipper,
		i386-{dos,isc,sco,sysv.3,sysv.4,mach,bsd,linux,windows,OS/2},
		iris,i860, i960, irix4, m68k, m88ksvsv.3, mips-news,
		mot3300, next, ns32k, nws3250-v.4, hp-pa, pc532,
		plexus, pyramid, romp, rs6000, sparc-sunos, 
		sparc-solaris2, sparc-sysv.4, spur, sun386, tahoe, tow,
		umpis, vax-vms, vax-bsd, we32k, hitachi-{SH,8300}, 6811
portability:	very high
status: 	actively developed
discussion:	gnu.gcc.help
announcements:	gnu.gcc.announce
updated:	1993/11/27

language:	C, C++, Objective-C, RTL
package:	GNU CC (gcc) - unsupported Macintosh port
version:	1.37
parts:		compiler, runtime, examples, documentation
		Library listed separately
author: 	?
location:	ftp mpw-gcc-1.37.1r14 from ?
description:	This is an unsupported port of the GNU C compiler to the
		Macintosh environment. Note that the GNU project is actively
		supporting the League for Programming Freedom (LPF) boycott
		of Apple due to the "Look and Feel" lawsuit.
bugs:		?
restriction:	GNU General Public License
ports:		Macintosh
portability:	very high
status: 	?
updated:	1993/11/27

language:	C, FORTRAN, SUIF
package:	Stanford SUIF Compiler
version:	1.0.1
parts:		compiler(->C, ->MIPS), run-time, documentation, examples
author: 	"Stanford Compiler Group" <suif@hawg.stanford.edu>
location:	ftp pub/suif/suif-1.0.1.tar.Z from suif.stanford.edu
                http://suif.Stanford.EDU.
		(Patch to version 1.0 also available)
description:	SUIF is a framework for research in compiler algorithms.
		It contains a kernel, which supports the Stanford
		University Intermediate Format (file I/O, manipulation,
		etc.), and a toolkit consisting of passes and libraries
		for dependence analysis, loop transformations,
		scalar optimizations, code generation, etc.  Can generate
		parallel code from major benchmarks.
conformance:	C front end is ANSI-C compatible, FORTRAN front end mostly f77
reference:	Wide range of published papers available from ftp site
restriction:	Free for non-commercial use; redistribution prohibited
requires:	GNU g++ 2.5.8, GNU make
ports:		DECstation, SPARC/SunOS/Solaris, SGI, Linux
portability:	Very system independent - requires UNIX
status: 	First public release; not supported, but we'll try to help
discussion:	Mailing list information included in distribution
		Archives available from http://suif.stanford.edu
updated:	1994/06/15

language:	C
package:	GNU C Library (glibc)
version:	1.08.1
parts:		library
author: 	?
location:	ftp glibc-1.08.1.tar.gz from a GNU archive site
		Source for "crypt" must be FTP'ed from non-USA site if you are
		outside the USA (site: glibc-1.06-crypt.tar.z from
		ftp.uni-c.dk [129.142.6.74]).
description:	The run-time library for the GNU C compiler, gcc.  The source
		for libc.a.  This package is separately maintained.
conformance:	ANSI and POSIX.1 superset.  Large subset of POSIX.2
bugs:		Reports sent to mailing list bug-glibc@prep.ai.mit.edu.
updated:	1994/06/06

language:	C
package:	fdlibm
version:	?
parts:		library
author: 	Dr. K-C Ng
location:	ftp netlib/fdlibm.tar from netlib.att.com
description:	Dr. K-C Ng has developed a new version of libm that is the
		basis for the bundled /usr/lib/libm.so in Solaris 2.3 for SPARC
		and for future Solaris 2 releases for x86 and PowerPC.	 It
		provides the standard functions necessary to pass the usual
		test suites.  This new libm can be configured to handle
		exceptions in accordance with various language standards or in
		the spirit of IEEE 754. The C source code should be portable to
		any IEEE 754 system with minimal difficulty.
conformance:	IEEE 754
bugs:		Send comments and bug reports to:
		fdlibm-comments@sunpro.eng.sun.com.
updated:	1993/12/18

language:	C
package:	c68/c386
version:	4.2a
parts:		compiler
author: 	Matthew Brandt, Christoph van Wuellen, Keith and Dave Walker
location:	ftp pub/Minix/common-pkgs/c386-4.2.tar.Z from bugs.nosc.mil
description:	K&R C plus prototypes and other ANSI features.
		targetted to several 68k and i386 assemblers, incl. gas.
		floating point support by inline code or emulation.
		lots of available warnings.  better code generation than ACK.
ports:		386 and 68k Minix.  generic unix actually.
status: 	actively worked on by the Walkers.
discussion:	comp.os.min
updated:	?

language:	C
package:	GNU superoptimizer
version:	2.2
parts:		exhaustive instruction sequence optimizer
author: 	Torbjorn Granlund <tege@gnu.ai.mit.edu> with Tom Wood
location:	ftp superopt-2.2.tar.Z from a GNU archive site
description:	GSO is a function sequence generator that uses an exhaustive
		generate-and-test approach to find the shortest instruction
		sequence for a given function.	You have to tell the
		superoptimizer which function and which CPU you want to get
		code for.
		This is useful for compiler writers.
bugs:		Torbjorn Granlund <tege@gnu.ai.mit.edu>
restriction:	GNU General Public License
ports:		Alpha, Sparc, i386, 88k, RS/6000, 68k, 29k, Pyramid(SP,AP,XP)
updated:	1993/02/16

language:	C
package:	xdbx
version:	2.1
parts:		X11 front end for dbx
author: 	?
location:	retrieve xxgdb from comp.sources.x volumes 11, 12, 13, 14, & 16
description:	?
contact:	Po Cheung <cheung@sw.mcc.com>
updated:	1992/02/22

language:	C
package:	ups
version:	2.1
parts:		interpreter, symbolic debugger, tests, documentation
author: 	Mark Russell <mtr@ukc.ac.uk>
location:	? ftp from contrib/ups*.tar.Z from export.lcs.mit.edu ?
    unofficial: unofficial enhancements by Rod Armstrong <rod@sj.ate.slb.com>,
		available by ftp misc/unix/ups/contrib/rob from sj.ate.slb.com
description:	Ups is a source level C debugger that runs under X11 or 
		SunView.  Ups includes a C interpreter which allows you to add 
		fragments of code simply by editing them into the source window
bugs:		Mark Russell <mtr@ukc.ac.uk>
ports:		Sun, Decstation, VAX(ultrix), HLH Clipper
discussion:	ups-users-request@ukc.ac.uk
updated:	1991/05/20

language:	C
package:	C-Interp 
version:	?
parts:		interpreter
author: 	?
location:	ftp Mac/Misc/C_Interp.sit from oac2.hsc.uth.tmc.edu
description:	An interpreter for a small subset of C, originally part of a
		communications package.
contact:	? Chuck Shotton <cshotton@oac.hsc.uth.tmc.edu>
updated:	1993/05/14

language:	C
package:	ae (application executive)
version:	1?
parts:		interpreter
author: 	Brian Bliss <bliss@sp64.csrd.uiuc.edu> [Is this right? --ed]
location:	ftp pub/at.tar.Z from sp2.csrd.uiuc.edu
description:	ae (the "application executive") is a C interpreter library
		which is compiled with an application; hence, the interpreter
		exists in the same process and address space.  it includes a
		dbx symbol table scanner to access compiled vars & routines, or
		you can enter them manually by providing a type/name
		declaration and the address.  when the interpreter is invoked,
		source code fragments are read from the input stream (or a
		string), parsed, and evaluated immediately.  The user can call
		compiled functions in addition to a few built-in intrinsics,
		declare new data types and data objects, etc.  Different input
		streams can be evaluated in parallel on alliant machines.
ports:		SunOS (cc or gcc), Alliant FX, Cray YMP (soon)
updated:	1992/04/21

language:	C (ANSI), lcc
package:	lcc
version:	1.8
parts:		compiler, test suite, documentation
author: 	Dave Hanson <drh@cs.princeton.edu>
location:	ftp pub/lcc/lccfe-*.tar.Z from princeton.edu
description:	+ hand coded C parser (faster than yacc)
		+ retargetable
		+ code "as good as GCC"
ports:		vax (mips, sparc, 68k backends are commercial)
status: 	small-scale production use using commerical backends; the
		commercial backends are cheap (free?) to universities.
discussion:	lcc-requests@princeton.edu
updated:	1992/02/20

language:	C, lcc 
package:	Chop
version:	0.6
parts:		code generator
author: 	Alan L. Wendt <wendt@CS.ColoState.EDU>
location:	ftp pub/chop/0.6.tar.Z from beethoven.cs.colostate.edu
description:	The current revision, 0.6, is interfaced with Fraser and
		Hanson's lcc front end.  The result is a highly fast C compiler
		with good code selection and no global optimization.
		Project Status: Chop compiles and runs a number of small test
		programs on the Vax.  I'm currently updating the NS32k and 68K
		retargets for lcc compatibility.  After I get them working,
		I'll work on getting the system to compile itself, get struct
		assignments working, improve the code quality and compile
		speed, and run the SPEC benchmarks.  That will be rev 1.0.
reference:	"Fast Code Generation Using Automatically-Generated Decision 
		Trees", ACM SIGPLAN '90 PLDI
updated:	1993/04/28

language:	C
package:	GCT
version:	1.4
parts:		test-coverage-preprocessor
author: 	Brian Marick <marick@cs.uiuc.edu>
location:	ftp pub/testing/gct.file/ftp.* from cs.uiuc.edu
description:	GCT is test-coverage tool based on GNU C.  Coverage tools 
		measure how thoroughly a test suite exercises a program.
restriction:	CopyLeft
ports:		sun3, sun4, rs/6000, 68k, 88k, hp-pa, ibm 3090,
		ultrix, convex, sco
discussion:	Gct-Request@cs.uiuc.edu
support:	commercial support available from author, (217) 351-7228
updated:	1993/02/12

language:	C
package:	MasPar mpl, ampl
version:	3.1
parts:		compiler
author: 	?
location:	ftp put/mpl-* from maspar.maspar.com
description:	mpl & ampl - the intrinsic parallel languages for MasPar's
		machines are C (ampl is actually a gcc port these days). You
		can get the source from marpar.com.
contact:	?
updated:	?

language:	C
package:	gc
version:	3.4
parts:		library
author: 	Hans-J. Boehm <boehm@parc.xerox.com>, Alan J. Demers
location:	ftp pub/russell/gc3.4.tar.Z from parcftp.xerox.com
description:	This is a garbage colecting storage allocator that is intended
		to be used as a plug-in replacement for C's malloc.  Since the
		collector does not require pointers to be tagged, it does not
		attempt to ensure that all inaccessible storage is reclaimed.
		However, in our experience, it is typically more successful at
		reclaiming unused memory than most C programs using explicit
		deallocation.  Unlike manually introduced leaks, the amount of
		unreclaimed memory typically stays bounded.
ports:		Sun-3, Sun-4 , Vax/BSD, Ultrix, i386/Unix, SGI, Alpha/OSF/1,
		Sequent (single threaded), Encore (single threaded),
		RS/600, HP-UX, Sony News, A/UX, Amiag, NeXT.  
updated:	1993/11/05

language:	C
package:	dsp56k-gcc
version:	?
parts:		compiler
author: 	?
location:	ftp pub/ham/dsp/dsp56k-tools/dsp56k-gcc.tar.Z from nic.funet.fi
    Australia:	ftp pub/micros/56k/g56k.tar.Z from evans.ee.adfa.oz.au
description:	A port of gcc 1.37.1 to the Motorola DSP56000 done by 
		Motorola
contact:	?
updated:	?

language:	C
package:	dsp56165-gcc
version:	?
parts:		compiler
author: 	Andrew Sterian <asterian@eecs.umich.edu>
location:	ftp usenet/alt.sources/? from wuarchive.wustl.edu	
description:	A port of gcc 1.40 to the Motorola DSP56156 and DSP56000.
updated:	?

language:	C
package:	Harvest C
version:	1.3
parts:		compiler, assembler, linker.
author: 	?
location:	ftp mac/development/languages/harves* from archive.umich.edu
description:	The parts of the system are all integrated in a unique
		application, which manages a "project" composed by several C
		source files and resource files (which contain data).
ports:		Macintosh
contact:	Eric W. Sink
updated:	1992/05/26

language:	C, C++
package:	Cyclo - cyclomatic complexity tool
version:	the one and only version
parts:		code analysis tool
author: 	Roger D Binns 
location:	alt.sources archive, 1993/06/28, <C9C2rH.EE@brunel.ac.uk>
description:	It measures cyclomatic complexity, shows function calls and 
		can draw flowgraphs of ANSI C and C++ code.
requires:	lex, C++
updated:	1993/06/28

language:	C
package:	cxref
version:	?
parts:		code analysis tool
author: 	Arnold Robbins <arnold@gatech.?>
location:	use archie
description:	A cross-reference genrator
updated:	?

language:	C
package:	xref
version:	?
parts:		code analysis tool
author: 	Jim Leinweber
location:	use archie
description:	A cross-reference genrator
updated:	1985?

language:	C, C++
package:	Xcoral
version:	1.72
parts:		editor
author: 	?
location:	ftp X/contrib/clients/xcoral* from ftp.inria.fr
description:	Xcoral is a multiwindows mouse-based text editor, for X Window
		System, with a built-in browser to navigate through C functions
		and C++ classes hierarchies...	Xcoral provides variables width
		fonts, menus, scrollbars, buttons, search, regions,
		kill-buffers and 3D look.  Commands are accessible from menus
		or standard key bindings. Xcoral is a direct Xlib client and
		run on color/bw X Display.
contact:	?
updated:	1993/03/14

language:	C++
package:	Lily (LIsp LibrarY)
version:	0.1
parts:		library
author: 	Roger Sheldon <sheldon@kong.gsfc.nasa.gov>
location:	ftp uploads/lily-0.1.tar.gz from sunsite.unc.edu
description:	Lilly is a C++ class library which gives C++ programmers the
		capability to write LISP-style code.  Lily's garbage collection
		mechanism is not sufficient for commercial use.  The
		documentation is incomplete.
restriction:	GNU Library General Public License
requires:	C++ (g++ or Turbo C++, but not cfront)
updated:	1993/11/08

language:	C++
package:	C++SIM
version:	1.0
parts:		library
author: 	Mark Little <M.C.Little@newcastle.ac.uk>
location:	ftp ? from arjuna.ncl.ac.uk
description:	C++SIM is a class library that provides the same sort of
		features found in the simulation class libraries of SIMULA.
updated:	1993/06/14

language:	C++
package:	? signatures for GCC 2.5.2. ?
version:	?
parts:		patches to GNU CC, documentation
author: 	Gerald Baumgartner <gb@cs.purdue.edu>
location:	ftp pub/gb/* from ftp.cs.purdue.edu
description:	Signatures are very similar to abstract base classes except
		that they have their own heirarchy and can be applied to
		compiled classes.  They provide a means of separating
		subtyping and inheritance.
requires:	GNU CC 2.5.2
updated:	1993/11/03

language:	C++
package:	aard ???
version:	?
parts:		memory use tracer
author: 	?
location:	ftp pub/aard.tar.Z from wilma.cs.brown.edu
description:	We have a prototype implementation of a tool to do memory
		checking.  It works by keeping track of the typestate of each
		byte of memory in the heap and the stack.  The typestate can be
		one of Undefined, Uninitialized, Free or Set.  The program can
		detect invalid transitions (i.e. attempting to set or use
		undefined or free storage or attempting to access uninitialized
		storage).  In addition, the program keeps track of heap
		management through malloc and free and at the end of the run
		will report all memory blocks that were not freed and that are
		not accessible (i.e.  memory leaks).
		The tools works using a spliced-in shared library.
requires:	Sparc, C++ 3.0.1, SunOS 4.X
contact:	Steve Reiss <spr@cs.brown.edu>
updated:	?

language:	C++
package:	ET++
version:	3.0-alpha
parts:		class libraries, documentation
author: 	?
location:	ftp C++/ET++/* from iamsun.unibe.ch
description:	?
contact:	Erich Gamma <gamma@ifi.unizh.ch>
updated:	1992/10/26

language:	C++
package:	C++ grammar
version:	?
parts:		parser (yacc)
author: 	?
location:	comp.sources.misc volume ?
description:	[is this a copy of the Roskind grammar or something else? --ed]
updated:	1991/10/23

language:	C++
package:	cppp
version:	1.14
parts:		parser (yacc)
author: 	Tony Davis <ted@cs.brown.edu>
location:	wilma.cs.brown.edu:/pub/cppp.tar.Z
description:	A compiler front-end for C++, with complete semantic
		processing.  Outputs abstract syntax graph.
restriction:	Permission needed for incorporation into commercial software.
requires:	Native C++ compiler, lex, yacc, make, sed (or hand editing)
status: 	Upgrading the back end.
updated:	1993/05/26

language:	C++
package:	C++ Object Oriented Library
version:	COOL ?, GECOOL 2.1, JCOOL 0.1
parts:		libraries, tests, documentation
author: 	?
location:	GECOOL, JCOOL: ftp pub/COOL/* from cs.utexas.edu
		COOL: ftp pub/COOL.tar.Z from csc.ti.com
description:	A C++ class library developed at Texas Instruments.  Cool
		contains a set of containers like Vectors, List, Hash_Table,
		etc.  It uses a shallow hierarchy with no common base class.
		The funtionality is close to Common Lisp data structures (like
		libg++).  The template syntax is very close to Cfront3.x and
		g++2.x.  Can build shared libraries on Suns.  JCOOL's main
		difference from COOL and GECOOL is that it uses real C++
		templates instead of a similar syntax that is preprocessed by
		a special 'cpp' distributed with COOL and GECOOL.
ports:		?
contact:	Van-Duc Nguyen <nguyen@crd.ge.com>
updated:	1992/08/05

language:	C++
package:	GNU C++ Library (libg++)
version:	2.5.1
parts:		library
author: 	Per Bothner <bothner@cygnus.com> ?
location:	libg++-2.5.1.tar.gz from a GNU archive site
description:	The run-time library for the GNU C++ compiler.
		This package is separately maintained.
conformance:	? ANSI and POSIX.1 superset
bugs:		bug-lib-g++@prep.ai.mit.edu
updated:	1993/06/30

language:	C++
package:	??? A C++ Parser toolkit
version:	?
parts:		library
author: 	Mayan Moudgill <moudgill@cs.cornell.EDU>
location:	ftp pub/Parse.shar from ftp.cs.cornell.edu
description:	A collection of C++ classes that make building a 
		recursive descent parser/scanner very easy.
ports:		Sun 4 with cfront 3.0, 
portability:	uses mmap(); probably low.
updated:	1993/04/11

language:	C++, Extended C++
package:	EC++
version:	?
parts:		translator(C++), documentation
author: 	Glauco Masotti <masotti@lipari.usc.edu>
location:	? ftp languages/c++/EC++.tar.Z from ftp.uu.net ?
description:	EC++ is a preprocessor that translates Extended C++
		into C++.  The extensions include:
		+ preconditions, postconditions, and class invariants
		+ parameterized classes
		+ exception handling 
		+ garbage collection
status: 	?
updated:	1989/10/10

language:	C++
package:	LEDA
version:	3.0
parts:		libraries
author: 	?
location:	ftp pub/LEDA/* from ftp.mpi-sb.mpg.de
description:	library of efficient data types and algorithms.
		New with 3.0: both template and non-template versions.
contact:	Stefan N"aher <stefan@mpi-sb.mpg.de>
updated:	1992/11/30

language:	E (a persistent C++ variant)
package:	GNU E
version:	2.3.3
parts:		compiler
author: 	?
location:	ftp exodus/E/gnu_E* from ftp.cs.wisc.edu
description:	GNU E is a persistent, object oriented programming language
		developed as part of the Exodus project.  GNU E extends C++
		with the notion of persistent data, program level data objects
		that can be transparently used across multiple executions of a
		program, or multiple programs, without explicit input and
		output operations.
		GNU E's form of persistence is based on extensions to the C++
		type system to distinguish potentially persistent data objects
		from objects that are always memory resident.  An object is
		made persistent either by its declaration (via a new
		"persistent" storage class qualifier) or by its method of
		allocation (via persistent dynamic allocation using a special
		overloading of the new operator).  The underlying object
		storage system is the Exodus storage manager, which provides
		concurrency control and recovery in addition to storage for
		persistent data.
restriction:	Copyleft; not all runtime sources are available (yet)
requires:	release 2.1.1 of the Exodus storage manager
contact:	exodus@cs.wisc.edu
updated:	1993/01/20

language:	C (ANSI)
package:	? 1984 ANSI C to K&R C preprocessor ?
version:	?
parts:		translator(K&R C)
author: 	?
location:	from comp.sources.unix archive volume 1
description:	?
status: 	?
updated:	?

language:	C (ANSI)
package:	unproto ?
version:	? 4 ? 1.6 ?
parts:		translator(K&R C)
author: 	Wietse Venema <wietse@wzv.win.tue.nl>
location:	ftp pub/unix/unproto4.shar.Z from ftp.win.tue.nl
description:	?
contact:	?
updated:	?

language:	C (ANSI)
package:	cproto
version:	?
parts:		translator(K&R C)
author: 	Chin Huang <chin.huang@canrem.com>
location:	from comp.sources.misc archive volume 29
description:	cproto generates function prototypes from function definitions.
		It can also translate function definition heads between K&R
		style and ANSI C style.
ports:		Unix, MS-DOS
updated:	1992/07/18

language:	C (ANSI)
package:	cextract
version:	1.7
parts:		translator(K&R C), header file generator
author: 	Adam Bryant <adb@cs.bu.edu>
location:	ftp from any comp.sources.reviewed archive
description:	A C prototype extractor, it is ideal for generating
		header files for large multi-file C programs, and will
		provide an automated method for generating all of the
		prototypes for all of the functions in such a program.
		It may also function as a rudimentary documentation
		extractor, generating a sorted list of all functions
		and their locations
ports:		Unix, VMS
updated:	1992/11/03

language:	ANSI C
package:	cgram
version:	?
parts:		grammar
author: 	Mohd Hanafiah Abdullah <napi@cs.indiana.edu>
location:	ftp pub/comp.compilers/cgram-ll1.Z from primost.cs.wisc.edu
description:	An ANSI C grammar in LL(k) (1 <= k <= 2).  It's written in 
		Scheme, so you need to have a Scheme interpreter to process 
		the grammar using a program (f-f-d.s) that extracts the 
		FIRST/FOLLOW/DIRECTOR sets.
requires:	Scheme
ports:		?
updated:	?

language:	C, ANSI C, C++
package:	The Roskind grammars
version:	cpp5 (cf2.0)
parts:		parser(yacc), documenation
author: 	Jim Roskind <jar@hq.ileaf.com>
location:	ftp gnu/c++grammar2.0.tar.Z from ics.uci.edu
		ftp pub/C++/c++grammar2.0.tar.Z from mach1.npac.syr.edu
description:	The C grammar is CLEAN, it does not use %prec, %assoc, and
		has only one shift-reduce conflict.  The C++ grammar has
		a few conflicts.
		Also included is an extension to byacc that produces
		graphical parse trees automatically.
conformance:	the C grammar si true ANSI; the C++ grammar supports 
		cfront 2.0 constructs.
requires:	byacc 1.8 (for graphical parse trees)
status: 	actively developed
updated:	1991/07/01

language:	C, C++
package:	xxgdb
version:	1.06
parts:		X11 front end for gdb
author: 	?
location:	retrieve xxgdb from comp.sources.x volumes 11, 12, 13, 14, & 16
description:	?
contact:	Pierre Willard <pierre@la.tce.com>
updated:	1992/02/22

language:	C, C++
package:	gdb
version:	4.11
parts:		symbolic debugger, documentation
author: 	many, but most recently Fred Fish <fnf@cygnus.com>,
		Stu Grossman <grossman@cygnus.com>, and 
		John Gilmore <gnu@cygnus.com>, all of Cygnus Support
location:	ftp gdb-*.tar.[zZ] from a GNU archive site
description:	gdb is a full-featured symbolic debugger.  It fills the
		same niche as dbx.  Programs must be compiled with debugging
		symbols.
bugs:		<bug-gdb@prep.ai.mit.edu>
restriction:	CopyLeft
ports:		most unix variants, vms, vxworks, amiga, msdos
updated:	1993/10/29

language:	C, C++, Objective-C
package:	emx programming environment for OS/2
version:	0.8g
parts:		gcc, g++, gdb, libg++, .obj linkage, DLL, headers
author: 	Eberhard Mattes <mattes@azu.informatik.uni-stuttgart.de>
location:	ftp os2/2_x/unix/gnu/emx0.8g from ftp-os2.cdrom.com
    Europe:	ftp soft/os2/emx-0.8g from ftp.uni-stuttgart.de
description:	?
discussion:	subscribe to emx-list using listserv@ludd.luth.se
updated:	1992/09/21

language:	C
package:	Pthreads
version:	1.17
parts:		library
author: 	PART (POSIX / Ada-Runtime Project)
location:	ftp pub/PART/pthreads* from ftp.cs.fsu.edu
description:	As part of the PART project we have been designing and
		implementing a library package of preemptive threads which is
		compliant with POSIX 1003.4a Draft 6. A description of the
		interface for our Pthreads library is now available on ftp.
restriction:	GNU General Public License
ports:		Sun-4/SunOS 4.1.x
discussion:	send "Subject: subscribe-pthreads" to mueller@uzu.cs.fsu.edu
contact:	pthreads-bugs@ada.cs.fsu.edu
updated:	1993/07/22

language:	C, nroff, texinfo, latex
package:	c2man
version:	2.0 patchlevel 31
parts:		documentation generator (C -> nroff -man, -> texinfo, -> latex)
author: 	Graham Stoney <greyham@research.canon.oz.au>
location:	ftp from any comp.sources.misc archive, in volume42
		(the version in the comp.sources.reviewed archive is obsolete)
		ftp /pub/Unix/Util/c2man-2.0.*.tar.gz from ftp.et.tudelft.nl
    Australia:	ftp /usenet/comp.sources.misc/volume42/c2man-2.0/*
		from archie.au
    N.America:	ftp /usenet/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.wustl.edu
    Europe:	ftp /News/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.irisa.fr
    Japan:	ftp /pub/NetNews/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.iij.ad.jp
    Patches:	ftp pub/netnews/sources.bugs/volume93/sep/c2man* from lth.se
description:	c2man is an automatic documentation tool that extracts comments
		from C source code to generate functional interface
		documentation in the same format as sections 2 & 3 of the Unix
		Programmer's Manual. It requires minimal effort from the
		programmer by looking for comments in the usual places near the
		objects they document, rather than imposing a rigid
		function-comment syntax or requiring that the programmer learn
		and use a typesetting language. Acceptable documentation can
		often be generated from existing code with no modifications.
conformance:	supports both K&R and ISO/ANSI C coding styles
features:	+ generates output in nroff -man, TeXinfo or LaTeX format
		+ handles comments as part of the language grammar
		+ automagically documents enum parameter & return values
		+ handles C (/* */) and C++ (//) style comments
		- doesn't handle C++ grammar (yet)
requires:	yacc/byacc/bison, lex/flex, and nroff/groff/texinfo/LaTeX.
ports:		Unix, OS/2, MSDOS, VMS.
portability:	very high for unix, via Configure
status: 	actively developed; contributions by users are encouraged.
discussion:	via a mailing list: send "subscribe c2man <Your Name>" (in the
		message body) to listserv@research.canon.oz.au
help:		from the author and other users on the mailing list:
		c2man@research.canon.oz.au
announcements:	patches appear first in comp.sources.bugs, and then in
		comp.sources.misc.
updated:	1994/06/22

language:	Small-C
package:	smallc
version:	?
parts:		compiler
author: 	?
location:	?, comp.sources.unix volume 5
description:	Small-C is a subset of the C programming language for which a
		number of public-domain compilers have been written.  The
		original compiler was written by Ron Cain and appeared in the
		May 1980 issue of Dr.Dobb's Journal.  More recently, James
		E.Hendrix has improved and extended the original Small-C
		compiler and published "The Small-C Handbook", ISBN
		0-8359-7012-4 (1984).  Both compilers produce 8080 assembly
		language, which is the most popular implementation of Small-C
		to-date.  My 6502 Small-C compiler for the BBC Micro is based
		on "RatC", a version of the original Ron Cain compiler
		described by R.E.Berry and B.A.Meekings in "A Book on C", ISBN
		0-333-36821-5 (1984).  The 6502 compiler is written in Small-C
		and was bootstrapped using Zorland C on an Amstrad PC1512 under
		MSDOS 3.2, then transferred onto a BBC Micro using Kermit.  The
		compiler can be used to cross-compile 6502 code from an MSDOS
		host, or as a 'resident' Small-C compiler on a BBC Micro.
conformance:	subset of C
ports:		68k, 6809, VAX, 8080, BBC Micro, Z80
updated:	1989/01/05

language:	Maisie
package:	Maisie
version:	2.1
parts:		?, user manual, examples
author: 	Wen-Toh Liao <wentoh@may.CS.UCLA.EDU>
location:	ftp pub/maisie.2.1.1.3.tar.Z from cs.ucla.edu 
description:	C-based parallel programming language that uses asynchronous
		typed-message passing and supports light-weight processes.
		The language is C with enhancements to allow processes to be
		defined, created, and destroyed, to send and receive messages,
		and manipulate the system clock.
ports:		PVM/3.1, Cosmic Environment, and SUN Sockets.
updated:	1993/06/14

language:	MeldC (MELD, C)
package:	MeldC
version:	2.0
parts:		microkernel, compiler, debugger, manual, examples
author: 	MELD Project, Programming Systems Laboratory at 
		Columbia University
location:	obtain license from <MeldC@cs.columbia.edu>
description:	MeldC 2.0: A Reflective Object-Oriented Coordination
		Programming Language MELDC is a C-based, concurrent,
		object-oriented language built on a reflective architecture.
		The core of the architecture is a micro-kernel (the MELDC
		kernel), which encapsulates a minimum set of entities that
		cannot be modeled as objects. All components outside of the
		kernel are implemented as objects in MELDC itself and are
		modularized in the MELDC libraries. MELDC is reflective in
		three dimensions: structural, computational and architectural.
		The structural reflection indicates that classes and
		meta-classes are objects, which are written in MELDC. The
		computational reflection means that object behaviors can be
		computed and extended at runtime. The architectural reflection
		indicates that new features/properties (e.g., persistency and
		remoteness) can be constructed in MELDC.
restriction:	must sign license, cannot use for commercial purposes
ports:		Sun4/SunOS4.1 Mips/Ultrix4.2
contact:	<MeldC@cs.columbia.edu>
updated:	1992/12/15

language:	uC++
package:	uC++ 
version:	3.7
parts:		compiler, reference
author: 	? Peter A. Ruhr <pabuhr@plg.uwaterloo.ca>
location:	ftp pub/uSystem/u++-3.7.tar.Z from plg.uwaterloo.ca
description:	An extended C++ with light-weight concurrency for Unix-like
		systems.  uC++ is pronounced "micro-C++".
reference:	Software--Practice and Experience, 22(2):137-172, February 1992.
requires:	dmake 3.0+ (ftp pub/dmake/dmake38.tar.Z from plg.uwaterloo.ca)
		GNU C++ 2.3.3
ports:		Sequent, Sun-4, Sun-3, Ultrix, SGI, RS/6000, HP-PA
portability:	Needs "setitimer" and "sigcontext" from Unix-like systems.
updated:	1993/06/10

language:	Objective-C
package:	libcoll -- Collection Class Library for GNU Objective-C
version:	940510
parts:		class library
author: 	Andrew McCallum <mccallum@cs.rochester.edu>
location:	ftp.cs.rochester.edu in pub/objc/libcoll-940510.tar.gz
description:	It's a library of Objective-C objects with similar
		functionality to Smalltalk's Collection objects.  It includes:
		Set, Bag, Array, LinkedList, LinkList, CircularArray, Queue,
		Stack, Heap, SortedArray, MappedCollector, GapArray and
		DelegateList.
updated:	1994/05/10

language:	Glenda
package:	Glenda parallel programming environment
version:	0.91
parts:		preprocessor,tuple server, and tuple functions
author: 	Ray Seyfarth <seyfarth@whale.st.usm.edu>
location:	ftp pub/glenda.tar.Z from seabass.st.usm.edu
description:	Glenda is a programming environment for parallel programming
		implementing a variation of the Linda programming model
		defined by Carriero and Gelernter. It consists of a C
		preprocessor to allow reasonable syntax for the added
		operations, a tuple server process and a set of functions to
		connect an application to the tuple server.
ports:		RS6000, SUN4, LINUX
updated:	1993/06/01

compiled, imperative languages
-------------------------------------------------------------------------------
category:	compiled, imperitive languages
description:	This is the set of traditional infix languages other than C 
		and Pascal which each have their own section.  
cref:		C variants
cref:		Wirth family languages
lref:		Simula
lref:		Fortran

language:	Ada
package:	Ada/Ed
version:	1.11.0a+
parts:		translator(?), interpreter, ?
author: 	?
location:	ftp pub/Ada/Ada-Ed from cnam.cnam.fr
description:	Ada/Ed is a translator-interpreter for Ada. It is
		intended as a teaching tool, and does not have the
		capacity, performance,	or robustness of commercial
		Ada compilers. Ada/Ed was developed at New York
		University, as part of a long-range project in
		language definition and software prototyping.
conformance:	Ada 83.  Last validated with version 1.7 of the ACVC tests.
		being an interpreter, it does not implement most 
		representation clauses, and thus does not support systems 
		programming close to the machine level.
ports:		Unix, MSDOS, Amiga, Atari
contact:	Michael Feldman <mfeldman@seas.gwu.edu>
updated:	1992/05/08

language:	Ada
package:	GW-Ada
version:	?
parts:		translator, interpreter, editor, runtime environment
author: 	?
location:	ftp languages/ada/compiler/adaed/gwu/9309/dos
		or languages/ada/compilers/adaed/gwu/mac from 
		wuarchive.wustl.edu
description:	Ada/Ed is a translator-interpreter for Ada. It is
		intended as a teaching tool, and does not have the
		capacity, performance,	or robustness of commercial
		Ada compilers. Ada/Ed was developed at New York
		University, as part of a long-range project in
		language definition and software prototyping.
conformance:	"Ada/Ed handles nearly all of Ada 83"
restriction:	For educational purposes only.
ports:		MSDOS and Mac
contact:	Michael Feldman <mfeldman@seas.gwu.edu>
updated:	1993/09/01

language:	Ada
package:	Ada grammar
version:	?
parts:		scanner(lex), parser(yacc)
author: 	?
location:	ftp from primost.cs.wisc.edu or mail to
		compilers-server@iecc.cambridge.ma.us
description:	?
contact:	masticol@dumas.rutgers.edu
updated:	1991/10/12

language:	Ada
package:	Compiler for Toy/Ada in SML/NJ
version:	?
parts:		translator(?)
author: 	Amit Bhatiani <bhatiaa@polly.cs.rose-hulman.edu>
location:	ftp pub/compiler*.tar.Z from master.cs.rose-hulman.edu
description:	?
conformance:	subset
updated:	1992/04/08

language:	Ada
package:	NASA PrettyPrinter
version:	?
parts:		Ada LR parser, ?
author: 	? Michael Feldman <mfeldman@seas.gwu.edu> in comp.compilers
		provided the initial reference to this package, he also has a
		yacc grammar for ada.
location:	ftp from Ada Software Repository on wsmr-simtel20.army.mil
description:	pretty-print program that contains an ada parser
requires:	Ada
updated:	1991/02/01

language:	Ada
package:	yacc grammar for Ada
version:	?
parts:		parser(yacc)
author: 	Herman Fischer
location:	ftp  PD2:<ADA.EXTERNAL-TOOLS>GRAM2.SRC 
		from wsmr-simtel20.army.mil
description:	?
contact:	?
updated:	1991/02/01

language:	Ada
package:	Paradise
version:	2.0
parts:		library
author: 	?
location:	ftp pub/Ada/Paradise from cnam.cnam.fr
description:	Paradise is a subsystem (a set of packages) developped
		to implement inter-processes, inter-tasks and
		inter-machines communication for Ada programs in
		the Unix world. This subsystem gives the user full
		access to files, pipes, sockets (both Unix and
		Internet), and pseudo-devices.
ports:		Sun, Dec, Sony Mips, Verdex compiler, DEC compiler, 
		Alsys/Systeam compiler
contact:	paradise-info@cnam.cnam.fr
updated:	1992/09/30

language:	Ada
package:	Adamakegen
version:	2.6.3
parts:		makefile generator
author: 	Owen O'Malley <omalley@porte-de-st-ouen.ics.uci.edu>
location:	ftp ftp/pub/arcadia/adamakegen* from spare.ics.uci.edu
description:	A program that generates makefiles for Ada programs 
requires:	Icon
ports:		Verdix, SunAda 
updated:	1993/03/02

language:	Ada 9X
package:	GNAT
version:	1.79
parts:		parser, library management system, documentation?
author: 	The GNAT Development Team <gnat-request@cs.nyu.edu>
location:	cs.nyu.edu in pub/gnat/*
		sunsite.unc.edu in /pub/Linux/development/ada/gnat-*.lp2.tar.gz
		nic.funet.fi in /pub/OS/Linux/util/languages/gnat-*.lp2.tar.gz
		tsx-11.mit.edu in /pub/linux/packages/Ada/gnat-*.lp2.tar.gz
description:	A bootstrapped implementation of a Ada83 subset.
conformance:	Currently only a subset of of Ada 83 is working.  Compliance 
		to Ada 9X being worked on.
requires:	gcc 2.5.x or higher
status: 	Actively developed.  
updated:	1994/05/15

language:	Algol, Foogol
package:	cfoogol
version:	?
parts:		compiler
author: 	? John Cowan <cowan@snark.thyrsus.com>
location:	comp.sources.misc from May 1994
description:	?
conformance:	subset of Algol
ports:		VAX
updated:	1994/05/08

language:	Algol
lref:		Simula

language:	BCPL
package:	?
version:	?
parts:		?
author: 	?
location:	ftp systems/amiga/programming/languages/BCPL/BCPL4Amiga.lzh
		from wuarchive.wustl.edu.
description:	The original INTCODE interpreter for BCPL.
ports:		Amiga, Unix, MSDOS
contact:	?
updated:	?

language:	BCPL
package:	?
version:	?
parts:		?
author: 	?
location:	ftp ftp.syd.dit.csiro.au in pub/ken/bcpl.tar.gz.
description:	A BCPL* (Basic Combined Programming Language) compiler
		bootstrap kit with an INTCODE interpreter in C.
contact:	Ken Yap <ken@syd.dit.CSIRO.AU>
updated:	?

language:	E
package:	Amiga E
version:	2.1b
parts:		compiler, assembler, linker, utilities
author: 	Wouter van Oortmerssen <Wouter@mars.let.uva.nl>
location:	ftp amiga/dev/lang/AmigaE21b.lha from amiga.physik.unizh.ch
description:	An Amiga specific E compiler.  E is a powerful and flexible
		procedural programming language and Amiga E a very fast
		compiler for it, with features such as compilation speed of
		20000 lines/minute on a 7 Mhz amiga, inline assembler and
		linker integrated into compiler, large set of integrated
		functions, module concept with 2.04 includes as modules,
		flexible type-system, quoted expressions, immediate and typed
		lists, low level polymorphism, exception handling and much,
		much more.  Written in Assembly and E.
ports:		Amiga
portability:	not portable at all
status: 	actively developed
discussion:	comp.sys.amiga.programmer (sometimes)
updated:	1993/03/01

language:	Eiffel
package:	?
version:	?
parts:		source checker
author: 	Olaf Langmack <langmack@inf.fu-berlin.de> and Burghardt Groeber
location:	ftp pub/heron/ep.tar.Z from ftp.fu-berlin.de
description:	A compiler front-end for Eiffel-3 is available. It has been
		generated automatically with the Karlsruhe toolbox for
		compiler construction according to the most recent public
		language definition. The parser derives an easy-to-use
		abstract syntax tree, supports elementary error recovery
		and provides a precise source code indication of errors. It
		performs a strict syntax check and analyses 4000 lines of
		source code per second on a Sun-SPARC workstation.
updated:	1992/12/14

language:	Sather
package:	Sather programming language and environment
version:	0.2i
parts:		compiler(->C), debugger, libraries, documentation, emacs macros
		See description for further details.
author: 	International Computer Science Institute in Berkeley, CA
location:	ftp pub/sather/sa-0.2i.tar.Z from ftp.icsi.berkeley.edu
    Europe:	ftp pub/Sather/* from ftp.gmd.de
    Australia:	ftp pub/sather/* from lynx.csis.dit.csiro.au
    Japan:	ftp pub/lang/sather/* from sra.co.jp
description:	Sather is a new object-oriented computer language developed at
		the International Computer Science Institute. It is derived
		from Eiffel and attempts to retain much of that language's
		theoretical cleanliness and simplicity while achieving the
		efficiency of C++.  It has clean and simple syntax,
		parameterized classes, object-oriented dispatch, multiple
		inheritance, strong typing, and garbage collection. The
		compiler generates efficient and portable C code which is
		easily integrated with existing code.  
		A variety of development tools including a debugger and browser
		based on gdb and a GNU Emacs development environment
		have also been developed. There is also a class library
		with several hundred classes that implement a variety
		of basic data structures and numerical, geometric,
		connectionist, statistical, and graphical abstractions.
		We would like to encourage contributions to the library
		and hope to build a large collection of efficient,
		well-written, well-tested classes in a variety of areas
		of computer science.
conformance:	reference implemantation
bugs:		sather-admin@icsi.berkeley.edu
ports:		Sun-4 HP9000/300 Decstation5000 MIPS SonyNews3000 Sequent/Dynix
		SCO SysVR3.2 NeXT (from others: RS6000 SGI)
portability:	high
status: 	actively developed.
discussion:	sather-request@icsi.berkeley.edu
updated:	1992/07/02

language:	XPL (PL/I dialect)
package:	XPL optimizing Compiler
version:	1
parts:		compiler, documentation
author: 	Robin Vowels <robin_vowels@rmit.edu.au>
location:	mail to author
description:	The compiler is a standard implementation of XPL and is based
		on McKeeman, Horning, and Wortman's improved XCOM (which
		employs hashed symbol table generation).  It includes the extra
		built-in function COREHALFWORD.
		The following areas have been optimized: procedures calls when
		the argument and corresponding parameter are of the same type,
		and when the argument is a constant; constant subscripts; use
		of CORELHALFWORD and COREWORD; string constants of length one;
		iterative DO statements by transferring code to the end of the
		loop.
		String constants of length one do not require a descriptor,
		hence more descriptors are available for string variables.
		Comparison operations are treated as commutative, and an
		improved Commute algorithm is used.  Halfword instructions are
		generated for BIT(16) variables.
		These areas have been improved or re-written: calls on OUTPUT,
		catenation, integer-to-string conversion, multiply, divide, and
		MOD.  An emitter for SS-type instructions has been added.
		The compiler achieves an 11% reduction in object code 
		compiling itself, an 11% increase in compilation rate, a 55%
		increase in compilation speed when the $E toggle is set.
		Special treatment for catenating a string to an integer
		substantially decreases consumption of the free string area,
		and decreases string moves.  The latter improvement is most 
		noticeable on small core machines.
		Core requirements: less than the improved XCOM on which it is
		based (approx. 98000 bytes).  Symbol table size is 468.
ports:		IBM System 370
portability:	The compiler is written in XPL.  The code generators are
		machine-specific.
updated:	1993/08/07

language:	PL/M grammar and parser
package:	plm-parse
version:	1.1
parts:		bison (GNU yacc) grammar description, flex (GNU lex)
		lexer description, and a scoped symbol table manager
author: 	Kirk Hays <hays@ichips.intel.com>
		Gary Funck <gary@intrepid.com>
location:	ftp pub/file/plm.shar.gz from iecc.com to obtain
		a shar archive in compressed GNU zip format.  To access
		the mail server, mail "send plm.shar"
		to compilers-server@iecc.com.
description:	this is a skeleton parser for PL/M.  The grammar description
		and lexer description files were written for bison and flex.
		The grammar description closely follows the EBNF documented
		in the _PL/M Programmer's Guide_, Intel doc. 452161-003,
		Appendix C.  A symbol table manager is supplied,
		though there is no semantic checking.
conformance:	the grammar describes PL/M 386 and where possible, will
		accept various other dialects
reference:	_PL/M Programmer's Guide_, Intel doc. 452161-003
features:	has support for PL/M's "literally" macro definitions
bugs:		doesn't support $-directives (includes)
restriction:	freely available, use at you own risk
requires:	flex, bison, an ANSI compliant C compiler (gcc), and the
		avl-subs balanced binary tree library routines
		(comp.sources.unix Volume 27, Issue 34 ,'avl-subs')
ports:		SGI IRTIX 5.2, and a 486DX2 PC clone running Linux
help:		contact the authors
updated:	04/04/1994

object oriented languages
-------------------------------------------------------------------------------
category:	object oriented languages
description:	In general, object oriented languages were categorized 
		elsewhere.  Only those that were not anything but object-
		oriented are here.
lref:		ABCL ???
lref:		ABCL/R2
lref:		ALLOY
lref:		C++
lref:		CLU
lref:		Common Lisp
lref:		Dylan
lref:		GNU E
lref:		MeldC
lref:		Objective-C
lref:		Oberon-2
lref:		Perl5
lref:		Python
lref:		Sather
lref:		Simula
iref:		(TCL) BOS
iref:		(Scheme) STk
iref:		(Scheme) SOS

language:	O'small
package:	O'small
version:	Initial release
parts:		compiler?, parser/scanner specification
author: 	? Andreas Hense <hense@sol.cs.uni-sb.de>
location:	FTP /pub/osmall/machine/* from cs.uni-sb.de (134.96.7.254)
description:	A concise, formally defined object-oriented language suited
		for teaching object oriented programming.
reference:	(Numerous references listed in software documentation)
		Christoph Boeschen.  Christmas - An abstract machine for
		O'small.  Master's thesis, Universit"at des Saarlandes, 
		Fachbereich 14, June 1993.
requires:	sml-yacc, sml-lex, sml-noshare (details in HowToGetML).
ports:		Sun 4, SPARC (binaries provided).
portability:	Probably portable to other Unix's.
updated:	1993/06/25

language:	O'small
package:	?
version:	?
parts:		interpreter
author: 	?
location:	?
description:	?
requires:	Miranda
ports:		?
portability:	?
updated:	?

language:	Self
package:	Self
version:	2.0
parts:		?, compiler?, debugger, browser
author: 	The Self Group at Sun Microsystems & Stanford University
location:	ftp ? from self.stanford.edu
description:	The Self Group at Sun Microsystems Laboratories, Inc., and
		Stanford University is pleased to announce Release 2.0 of the
		experimental object-oriented exploratory programming language
		Self.  Release 2.0 introduces full source-level debugging of
		optimized code, adaptive optimization to shorten compile
		pauses, lightweight threads within Self, support for
		dynamically linking foreign functions, changing programs within
		Self, and the ability to run the experimental Self graphical
		browser under OpenWindows.
		Designed for expressive power and malleability, Self combines a
		pure, prototype-based object model with uniform access to state
		and behavior. Unlike other languages, Self allows objects to
		inherit state and to change their patterns of inheritance
		dynamically. Self's customizing compiler can generate very
		efficient code compared to other dynamically-typed
		object-oriented languages.
ports:		Sun-3 (no optimizer), Sun-4
portability:	? [Can it be ported to non-Sun or non-Unix systems?]
discussion:	self-request@self.stanford.edu
contact:	?
updated:	1992/08/13

language:	Smalltalk
package:	Little Smalltalk
version:	3
parts:		?
author: 	Tim Budd <budd@cs.orst.edu> ?
location:	ftp pub/budd/? from cs.orst.edu
description:	?
ports:		unix, pc, atari, vms
status: 	?
updated:	?

language:	Smalltalk
package:	GNU Smalltalk
version:	1.1.1
parts:		?
author: 	Steven Byrne <sbb@eng.sun.com>
location:	ftp smalltalk-1.1.1.tar.Z from a GNU archive site
description:	?
bugs:		gnu.smalltalk.bug
discussion:	?
contact:	?
updated:	1991/09/15

language:	Smalltalk
package:	msgGUI
version:	1.0
parts:		library
author: 	Mark Bush <bush@ecs.ox.ac.uk>
location:	ftp pub/Packages/mst/mstGUI-1.0.tar.Z from ftp.comlab.ox.ac.uk
description:	GUI for GNU Smalltalk.	This this package contains the basics 
		for creating window applications in the manner available in 
		other graphical based Smalltalk implementations.
updated:	1992/12/14

language:	Smalltalk
package:	Mei
version:	0.50
parts:		interpreters(Lisp,Prolog), examples, libraries, tools, editor,
		browser
author: 	Atsushi Aoki <aoki@sra.co.jp> and others
location:	ftp pub/goodies/misc/Mei.tar.Z from mushroom.cs.man.ac.uk
    N.America:	ftp pub/MANCHESTER/misc/Mei from st.cs.uiuc.edu
    Japan:	ftp pub/lang/smalltalk/mei/Mei0.50.tar.Z from srawgw.sra.co.jp
description:	Mei is a set of class libraries for Objectworks Smalltalk
		Release 4.1.  it includes:   1.  Grapher Library (useful for
		drawing diagrams);  2. Meta Grapher Library (grapher to develop
		grapher);  3. Drawing tools and painting tools (structured
		diagram editors and drawing editors);  4. GUI editor (graphical
		user interface builder);  5. Lisp interpreter;	6. Prolog
		interpreter;  7. Pluggable gauges;  8. Extended browser;
		(package, history, recover, etc.)
restriction:	GNU General Public License
requires:	Objectworks Smalltalk Release 4.1
contact:	Watanabe Katsuhiro <katsu@sran14.sra.co.jp>
updated:	1993/01/20

language:	Smalltalk
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!yeshua.marcam.com!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p3of5]
Message-ID: <free3-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free3-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free2-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:32 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1661
Xref: bloom-beacon.mit.edu comp.compilers:3318 comp.lang.misc:5187 comp.archives.admin:677 news.answers:23369 comp.answers:6567

Archive-name: free-compilers/part3
Last-modified: 1994/6/30
Version: 6.5

lisp family
-------------------------------------------------------------------------------
category:	lisp family
description:	[The programming languages for those who like parenthesis --ed]

language:	Dylan
package:	Thomas
version:	1.1
parts:		translator(Scheme)
author: 	Matt Birkholz <Birkholz@crl.dec.com>, Jim Miller 
		<JMiller@crl.dec.com>, Ron Weiss <RWeiss@crl.dec.com>
location:	ftp pub/DEC/Thomas from gatekeeper.pa.dec.com
		ftp pub/dylan/Thomas from cambridge.apple.com
description:	Thomas, a compiler written at Digital Equipment
		Corporation's Cambridge Research Laboratory compiles
		a language compatible with the language described
		in the book "Dylan(TM) an object-oriented dynamic
		language" by Apple Computer Eastern Research and
		Technology, April 1992.  It does not perform well.
		Thomas is NOT Dylan(TM).
requires:	Scheme
ports:		MIT's CScheme, DEC's Scheme->C, Marc Feeley's Gambit, Mac, PC, 
		Vax, MIPS, Alpha, 680x0
updated:	1994/04/18

language:	Dylan 
package:	Marlais
version:	0.3
parts:		interpreter
author: 	Brent Benson <brent@ssd.csd.harris.com>
location:	ftp pub/marlais-0.2a.tar.gz from travis.csd.harris.com
		ftp pub/dylan/Marlais/marlais-0.3.tar.gz
			from cambridge.apple.com
description:	Marlais is a simple-minded interpreter for a programming
		language strongly resembling Dylan [1].  It is not intended as
		a final release, but rather to fill a perceived void where
		Dylan implementations are concerned.  This is a "hackers
		release" and is intended as a vehicle for education,
		experimentation and also to encourage people to port it to
		different architectures, add features, and fix bugs.  Marlais
		is alpha software and should not be used by people desiring
		reliability!!!
ports:		Sun-3, Sun-4, VAX/BSD, OS/2, Linux, Sequent Symmetry,
		Encore, HP-UX, Ultrix, SGI, Sony News, A/UX
updated:	1994/04/18

language:	EuLisp
package:	Feel (Free and Eventually Eulisp)
version:	0.75
parts:		interpreter, documentation
author: 	Pete Broadbery <pab@maths.bath.ac.uk>
location:	ftp pub/eulisp from ftp.bath.ac.uk
description:	+ integrated object system
		+ a module system
		+ parallelism
		+ interfaces to PVM library, tcp/ip sockets, futures, 
		Linda, and CSP.
ports:		most unix
portability:	high, but can use shared memory and threads if available
updated:	1992/09/14

language:	Common Lisp
package:	CMU Common Lisp
version:	17c
parts:		incremental compiler, profiler, runtime, documentation, 
		editor, debugger
author: 	?
location:	ftp pub/* from from lisp-sun1.slisp.cs.cmu.edu.
description:	CMU Common Lisp is public domain "industrial strength" Common
		Lisp programming environment.  Many of the X3j13 changes have
		been incorporated into CMU CL.	Wherever possible, this has
		been done so as to transparently allow use of either CLtL1 or
		proposed ANSI CL.  Probably the new features most interesting
		to users are SETF functions, LOOP and the WITH-
		COMPILATION-UNIT macro.
		+ The new CMU CL compiler (Python) is more sophisticated
		  thatn other Common Lisp compilers.  It produces better code
		  and is easier to use.
		+ The programming environment based on the Hemlock editor
		  is better integrated than gnu-emacs based environments.
conformance:	mostly X3J13 compatible.
ports:		Sparc/Mach Sparc/SunOS Mips/Mach IBMRT/Mach
contact:	slisp@cs.cmu.edu
updated:	1993/11/18

language:	Common Lisp
package:	PCL (Portable Common Loops)
version:	8/28/92 PCL
parts:		library
author: 	? Richard Harris <rharris@ptolemy2.rdrc.rpi.edu> ?
location:	ftp pcl/* from parcftp.xerox.com
description:	A portable CLOS implementation.  CLOS is the object oriented 
		programming standard for Common Lisp.  Based on Symbolics 
		FLAVORS and Xerox LOOPS, among others.	Loops stands for
		Lisp Object Oriented Programming System.
ports:		Lucid CL 4.0.1, CMUCL 16e, ?
status: 	?
updated:	1992/09/02

language:	Common Lisp
package:	WCL
version:	2.14
parts:		?, shared library runtime, source debugger
author: 	Wade Hennessey <wade@leland.Stanford.EDU>
location:	ftp pub/wcl/* from sunrise.stanford.edu,
		    miscellany/wcl from gummo.stanford.edu
description:	A common lisp implementation as a shared library.  WCL
		Is not a 100% complete Common Lisp, but it does have
		the full development environment including dynamic file
		loading and debugging.	A modified version of GDB provides
		mixed-language debugging.  A paper describing WCL was
		published in the proceedings of the 1992 Lisp and Functional
		Programming Conference. 
requires:	GNU C 2.1 (not 2.2.2)
ports:		Sparc/SunOS
discussion:	<wcl-request@sunrise.stanford.edu>
contact:	<wcl@sunrise.stanford.edu>
updated:	1992/10/28

language:	Common Lisp
package:	KCL (Kyoto Common Lisp)
version:	?
parts:		compiler(->C), interpreter
author: 	T. Yuasa <yuasa@tutics.tut.ac.jp>, M. Hagiya 
		<hagiya@is.s.u-tokyo.ac.jp> 
location:	? ftp pub/kcl*.tar.Z from rascal.ics.utexas.edu ?
description:	KCL, Kyoto Common Lisp, is an implementation of Lisp,
		It is written in the language C to run under Un*x-like 
		operating systems.  KCL is very C-oriented; for example, 
		the compilation of Lisp functions in KCL involves a 
		subsidiary C compilation.
conformance:	conforms to the book ``Common Lisp: The Language,''
		G. Steele, et al., Digital Press, 1984.  
bugs:		kcl@cli.com
restriction:	must sign license agreement
discussion:	kcl-request@cli.com
updated:	1987/06

language:	Common Lisp
package:	AKCL (Austin Kyoto Common Lisp)
version:	1-615
parts:		improvements
author: 	Bill Schelter <wfs@cli.com>, <wfs@rascal.ics.utexas.edu>
location:	ftp pub/akcl-*.tar.Z from rascal.ics.utexas.edu
description:	AKCL is a collection of ports, bug fixes, and
		performance improvements to KCL.
ports:		Decstation3100, HP9000/300, i386/sysV, IBM-PS2/aix, IBM-RT/aix
		SGI Sun-3/Sunos[34].* Sun-4 Sequent-Symmetry IBM370/aix,
		VAX/bsd VAX/ultrix NeXT
updated:	1992/04/29

language:	Common Lisp
package:	CLX 
version:	5.01
parts:		library
author: 	?
location:	ftp contrib/CLX.R5.01.tar.Z from export.lcs.mit.edu
description:	Common Lisp binding for X
bugs:		bug-clx@expo.lcs.mit.edu
ports:		?, CMU Common Lisp
contact:	?
updated:	1992/08/26

language:	Common Lisp
package:	CLISP
version:	1993/10/06
parts:		interpreter, bytecode compiler, runtime library, editor
author: 	Bruno Haible <haible@ma2s2.mathematik.uni-karlsruhe.de>,
		Michael Stoll <michael@rhein.iam.uni-bonn.de>
location:	ftp /pub/lisp/clisp from ma2s2.mathematik.uni-karlsruhe.de
description:	CLISP is a Common Lisp (CLtL1) implementation by Bruno Haible
		of Karlsruhe University and Michael Stoll of Munich University,
		both in Germany.  It needs only 1.5 MB of RAM.	German and
		English versions are available, French coming soon.  Packages
		running in CLISP include PCL and, on Unix machines, CLX.  A
		native subset of CLOS is included.
conformance:	CLtL1 + parts of CLtL2
restriction:	GNU General Public License
ports:		Atari, Amiga, MS-DOS, OS/2, Linux, Sun4, Sun386i, HP90000/800
		and others
discussion:	send "subscribe clisp-list" to 
		listserv@ma2s2.mathematik.uni-karlsruhe.de
contact:	Bruno Haible <haible@ma2s2.mathematik.uni-karlsruhe.de>
updated:	1993/10/06

language:	Common Lisp
package:	Cartier's Contribs
version:	1.2
parts:		libraries, documentation
author: 	Guillaume Cartier <cartier@math.uqam.ca>
location:	ftp pub/mcl2/contrib/Cartiers* from cambridge.apple.com
description:	libraries for MCL
requires:	Macintosh Common Lisp
discussion:	comp.lang.lisp.mcl
updated:	1994/04/18

language:	Common Lisp
package:	QT-OBJECTS
version:	?
parts:		library
author: 	Michael Travers <mt@media.mit.edu> and others
location:	?
description:	interface between MCL and QuickTime
requires:	Macintosh Common Lisp
discussion:	comp.lang.lisp.mcl
updated:	1994/04/18

language:	Common Lisp
package:	Memoization ?
version:	?
parts:		library
author: 	Marty Hall <hall@aplcenmp.apl.jhu.edu>
location:	ftp pub/Memoization from archive.cs.umbc.edu
description:	Automatic memoization is a technique by which an existing 
		function can be transformed into one that "remembers" 
		previous arguments and their associated results
updated:	1992/11/30

language:	Common Lisp
package:	GINA (Generic Interactive Application) 
version:	2.2
parts:		language binding, class library, interface builder
author: 	?
location:	ftp /gmd/gina from ftp.gmd.de 
    N.America:	ftp contrib/? from export.lcs.mit.edu
description:	GINA is an application framework based on Common Lisp and 
		OSF/Motif to simplify the construction of graphical 
		interactive applications. It consists of:
		+ CLM, a language binding for OSF/Motif in Common Lisp.
		+ the GINA application framework, a class library in CLOS
		+ the GINA interface builder, an interactive tool implemented 
		with GINA to design Motif windows.
requires:	OSF/Motif 1.1 or better.  Common Lisp with CLX, CLOS, PCL and
		processes.
ports:		Franz Allegro, Lucid, CMU CL and Symbolics Genera
discussion:	gina-users-request@gmd.de
updated:	?

language:	Common Lisp
package:	CLiCC
version:	0.6.4
parts:		compiler(->C), runtime library
author: 	Heinz Knutzen <hk@informatik.uni-kiel.de>,
		Ulrich Hoffman <uho@informatik.uni-kiel.de>,
		Wolfgang Goerigk <wg@informatik.uni-kiel.de>
location:	ftp pub/kiel/apply/clicc*
		   from ftp.informatik.uni-kiel.de (134.245.15.114)
description:	A Common Lisp to C compiler, meant to be used as a supplement
		to existing CLISP systems for generating portable applications.
		Target C code must be linked with CLiCC runtime library to
		produce executable.
conformance:	Subset of Common Lisp + CLOS (named: CL_0, or CommonLisp_0)
		CL_0 based on CLtL1.
restriction:	Freely distributable and modifiable
ports:		Runs in Lucid Lisp, AKCL, CLISP, ...
status: 	Working towards CLtL2 and ANSI-CL conformance.
updated:	1994/06/25

language:	Common Lisp
package:	Hyperlisp
version:	2.1f
parts:		?
author: 	Joe Chung, MIT Media Laboratory
location:	ftp pub/mcl2/contrib/hyperlisp21f.sit.hqx 
			from cambridge.apple.com
description:	Hyperlisp is a real-time MIDI programming environment
		embedded in Macintosh Common Lisp. The environment 
		was developed specifically for the Hyperinstruments project 
		at the MIT Media Laboratory, and is optimized for interactive 
		systems which require fast response times. Hyperlisp 
		provides two main services for the music programmer: 
		routines for MIDI processing and primitives for scheduling 
		the application of functions. Programs written in Macintosh 
		Common Lisp can use these services for a wide variety of 
		real-time MIDI applications.
updated:	1994/04/18

language:	Franz Lisp
package:	Liszt?
version:	?
parts:		compiler(->C)
author: 	port to C by J W Dalton <jeff@festival.ed.ac.uk>
location:	ask author
description:	A version of Liszt that emits C
updated:	?

language:	Lisp
package:	RefLisp
version:	2.67
parts:		interpreter, documentation, examples, profiler
author: 	Bill Birch <bbirch@hemel.bull.co.uk>
location:	ftp implementations/reflisp/* from the directory 
		/afs/cs.cmu.edu/user/mkant/Public/Lisp on ftp.cs.cmu.edu
description:	The interpreter is a shallow-binding (i.e., everything has
		dynamic scope), reference counting design making it suitable
		for experimenting with real-time and graphic user interface
		programming. Common Lisp compatibility macros are provided, and
		most of the examples in "Lisp" by Winston & Horn have been run
		on RefLisp.  RefLisp makes no distinction between symbol-values
		and function-values, so a symbol can be either but not both.
		There are Lisp modules for lexical scope and for running
		indefinite extent Scheme programs.
ports:		MSDOS (CGA/EGA/VGA), Unix (AIX)
status: 	"Last Update for a While," author is emigrating to Australia
updated:	1993/02/09

language:	Lisp
package:	xlisp
version:	2.1
parts:		interpreter
author: 	David Micheal Betz <dbetz@apple.com>
location:	ftp pub/xlisp* from wasp.eng.ufl.edu
    US Mail:	contact Tom Almy <toma@sail.labs.tek.com>
    Windows:	ftp util/wxlslib.zip from ftp.cica.indiana.edu
    Version2.0: ftp pub/xlisp/* from cs.orst.edu
    Macintosh:	ftp pub/bskendig/? from netcom.com (source comming)
description:	XLISP is an experimental programming language
		combining some of the features of Common Lisp with an
		object-oriented extension capability.  It was
		implemented to allow experimentation with
		object-oriented programming on small computers.
conformance:	subset of Common Lisp with additions of Class and Object
restriction:	? no commercial use ?
ports:		unix, amiga, atari, mac, MSDOS
portability:	very high: just needs a C compiler
discussion:	comp.lang.lisp.x
updated:	1992/05/26 (unix), 1987/12/16 (other platforms)

language:	Lisp
package:	"LISP, Objects, and Symbolic Programming"
version:	? 
parts:		book with compiler included
author: 	Robert R. Kessler and Amy R. Petajan,
		published by Scott, Foresman and Company, Glenview, IL
location:	bookstore...
description:	? (A short synopsis might help if anyone has one)
updated:	1988

language:	Lisp
package:	franz lisp
version:	?
parts:		?
author: 	?
location:	[does anyone know where you get franz lisp??? --ed]
description:	?
discussion:	franz-friends-request@berkeley.edu
updated:	?

language:	Lisp (WOOL - Window Object Oriented Language)
package:	GWM (Generic Window Manager)
version:	?
parts:		interpreter, examples
author: 	?
location:	ftp contrib/gwm/* from export.lcs.mit.edu
    France:	ftp pub/gwm/* from avahi.inria.fr
description:	Gwm is an extensible window manager for X11.  It is
		based on a WOOL kernel, and interpreted dialect of lisp 
		with specific winow management primitives.
discussion:	gwm-talk@???
contact:	?
updated:	?

language:	Lisp (elisp - Emacs Lisp)
package:	ILISP
version:	5.0
parts:		Emacs interface
author: 	?? Ivan Vazquez <ivan@haldane.bu.edu>
location:	ftp to haldane.bu.edu (128.197.54.25) in pub/ilisp/ilisp.tar.Z
description:	ILISP provides a somewhat lisp-machine like interface to lisp
		listeners from Emacs.
bugs:		ilisp-bug@darwin.bu.edu (or ilisp-bugs@darwin.bu.edu).
discussion:	ilisp@darwin.bu.edu
support:	Mailing list requests/deletions to ilisp-request@darwin.bu.edu
updated:	1993/06/28

language:	Lisp (elisp - Emacs Lisp)
package:	GNU Emacs
version:	19.25
parts:		editor, interpreter, documentation, source debugger
author: 	Richard Stallman <rms@gnu.ai.mit.edu> and others
location:	pub/gnu/emacs-19.25.tar.gz from any GNU site.
description:	An editor that is almost an operating system.  Quite
		programmable.  And it even fits in your tackle box.
bugs:		gnu.emacs.bug, e-mail to bug-gnu-emacs@prep.ai.mit.edu
ports:		Unix, VMS, ?
discussion:	alt.religion.emacs, gnu.emacs.sources
help:		gnu.emacs.help
announcements:	gnu.emacs.announce
updated:	1994/06/01

language:	Lisp (elisp - Emacs Lisp)
package:	Lucid Emacs (lemacs)
version:	19.10
parts:		? interpreter
author:		kyle@crystal.wonderworks.com
location:	/pub/lemacs/* from LUCID.COM (192.43.175.3).
description:	A version of Emacs based on Emacs 19.
		Mirrored at other sites including:
		   /pub/epoch-files/lemacs/ from cs.uiuc.edu
		   /pub/lemacs-19.10/ from self.stanford.edu
bugs:		alt.lucid-emacs.bug, bug-lucid-emacs@lucid.com
discussion:	alt.lucid-emacs.help, help-lucid-emacs@lucid.com
updated:	1994/06/01

language:	? Lisp, X
package:	winterp
version:	2.01
parts:		interpreter, documentation, examples
author:		Niels P. Mayer <mayer@eit.com> or <mayer@netcom.com>
location:	ftp.x.org in contrib/devel_tools/winterp-2.01.tar.gz
description:	An object-oriented rapid prototyping, development and delivery
		environment for building extensible applications with the
		OSF/Motif UI Toolkit and Xtango-based graphics/animation.
ports:		UNIX
discussion:	comp.lang.lisp.x.
announcements:	winterp@netcom.com
updated:	1994/06/09

language:	Lisp
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Oaklisp
package:	oaklisp
version:	1.2
parts:		interface, bytecode compiler, runtime system, documentation
author: 	Barak Pearlmutter, Kevin Lang
location:	ftp /afs/cs.cmu.edu/user/bap/oak/ftpable/* from f.gp.cs.cmu.edu
description:	Oaklisp is a Scheme where everything is an object.  It 
		provides multiple inheritence, a strong error system,
		setters and locators for operations, and a facility for
		dynamic binding.
status: 	actively developed?
contact:	Pearlmutter-Barak@CS.Yale.Edu ?
updated:	1992/05 ?

language:	Scheme
package:	Schematik
version:	1.1.5.2
parts:		programming environment
author: 	Chris Kane, Max Hailperin <max@nic.gac.edu>
location:	ftp /pub/next/scheme/* from ftp.gac.edu
    Europe:	ftp /pub/next/ProgLang from ftp.informatik.uni-muenchen.de
description:	Schematik is a NeXT front-end to MIT Scheme for
		the NeXT.  It provides syntax-knowledgeable text
		editing, graphics windows, and user-interface to
		an underlying MIT Scheme process. It comes packaged
		with MIT Scheme 7.1.3 ready to install on the NeXT.
ports:		NeXT, MIT Scheme 7.1.3
portability:	requires NeXTSTEP
contact:	schematik@gac.edu
updated:	1993/03/11

language:	Scheme
package:	T
version:	3.1
parts:		compiler (native machine code)
author: 	Norman Adams, David Kranz, Richard Kelsey, James Philbin,
		and Jonathan Rees.
location:	ftp pub/systems/t3.1 from ftp.ai.mit.edu
description:	a Scheme-like language developed at Yale.  T is
		written in itself and compiles to efficient native
		code.  Includes a Scheme environment.
		(A multiprocessing version of T is available from
		masala.lcs.mit.edu:/pub/mult)
bugs:		kranz@lcs.mit.edu
ports:		Decstation, Sparc, Iris. Old m68k version.
contact:	David Andrew Kranz <kranz@lcs.mit.edu>
updated:	1991/11/26

language:	Scheme
package:	scm
version:	4e1
parts:		interpreter, conformance test, documentation
author: 	Aubrey Jaffer <jaffer@zurich.ai.mit.edu>
location:	altdorf.ai.mit.edu in archive/scm/scm*
		prep.ai.mit.edu in pub/gnu/jacal/scm*.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/scm*.tar.gz
    Canada:	ftp pub/oz/scheme/new/* from nexus.yorku.ca
    Europe:	ftp pub/bosullvn/jacal/* from ftp.maths.tcd.ie
description:	Fast portable R4RS Scheme interpreter.
conformance:	Revised^4 Report on the Algorithmic Language Scheme,
		IEEE P1178 specification.
restriction:	GNU General Public License
requires:	SLIB (pointers to it in documentation)
ports:		Amiga, Atari-ST, MacOS, MS-DOS, OS/2, NOS/VE, Unicos, VMS,
		Unix. ASCII and EBCDIC both supported.
status: 	actively developed
contributions:	send $$$ to Aubrey Jaffer, 84 Pleasant St., Wakefield, MA 01880
updated:	1994/04/29

language:	Scheme
package:	Scheme Library (slib)
version:	2a1
parts:		library, documentation
author: 	?? Aubrey Jaffer <jaffer@ai.mit.edu>
location:	altdorf.ai.mit.edu in ftp archive/scm/slib*.tar.Z
		prep.ai.mit.edu in pub/gnu/jacal/slib*.tar.gz
		ftp.maths.tcd.ie in pub/bosullvn/jacal/slib*.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/slib*.tar.gz
description:	SLIB is a portable scheme library meant to provide 
		compatibiliy and utility functions for all standard scheme 
		implementations.
ports:		Scm4b, Chez, ELK 1.5, GAMBIT, MITScheme, Scheme->C, 
		Scheme48, T3.1.
status: 	actively developed
contact:	Aubrey Jaffer <jaffer@zurich.ai.mit.edu>
updated:	1993/10/09

language:	Scheme
package:	Hobbit
version:	release 2
parts:		compiler(->C), documentation
author: 	Tanel Tammet <tammet@cs.chalmers.se>
location:	altdorf.ai.mit.edu in archive/scm/hobbit2.tar.gz
		ftp.maths.tcd.ie in pub/bosullvn/jacal/hobbit2.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/hobbit2.tar.gz
description:	The main aim of hobbit is to produce maximally fast C programs
		which would retain most of the original Scheme program
		structure, making the output C program readable and modifiable.
		Hobbit is written in Scheme and is able to self-compile.
		Hobbit release 1 works together with the scm release scm4b3. 
		Future releases of scm and hobbit will be coordinated.
requires:	scm 4b3
updated:	1993/04/25

language:	Scheme
package:	siod (Scheme In One Day, or Scheme In One Defun)
version:	3.0
parts:		interpreter,library,documentation,sql interface
author: 	George Carrette <gjc@world.std.com>
location:	ftp.std.com in pub/gjc
		ftp.cs.indiana.edu in scheme
description:	Small scheme implementation in C arranged as a set of
		subroutines that can be called from any main program
		for the purpose of introducing an interpreted extension
		language.  Compiles to 20K bytes of executable (VAX/VMS).
		Lisp calls C and C calls Lisp transparently.
features:	symbols,strings,arrays,hash tables, file i/o binary/text/seek,
		data save/restore in binary and text, interface to commercial
		databases such Oracle, Digital RDB.  Small executable (42k
		on VAX).
restriction:	none besides non-removal of copyright notice.
ports:		VAX/VMS, VAX Unix, Sun3, Sun4, Amiga, Macintosh, MIPS, Cray,
		ALPHA/VMS, Windows NT/WIN32, OS/2.
portability:	Liked by ANSI C compilers and C++ compilers. e.g. gcc -Wall
status: 	supported as benchmark/testbed at mitech.com
help:		the author will help anyone building something.
contributions:	antique/classic computer hardware, perhaps.
announcements:	comp.lang.scheme
updated:	1994/04/29

language:	Scheme
package:	MIT Scheme (aka C-Scheme)
version:	7.2
parts:		interpreter, large runtime library, emacs macros, 
		native-code compiler, emacs-like editor, source-level debugger
author: 	MIT Scheme Team (primarily Chris Hanson, Jim Miller, and
		Bill Rozas, but also many others)
location:	ftp archive/scheme-7.2 from altdorf.ai.mit.edu 
		DOS floppies ($95) and Unix tar tapes ($200) from 
		Scheme Team / c/o Prof. Hal Abelson / MIT AI Laboratory /
		545 Technology Sq. / Cambridge, MA 02139
description:	Scheme implementation with rich set of utilities.
conformance:	full compatibility with Revised^4 Report on Scheme, 
		one known incompatibility with IEEE Scheme standard
bugs:		bug-cscheme@zurich.ai.mit.edu
ports:		68k (hp9000, sun3, NeXT), MIPS (Decstation, Sony, SGI), 
		HP-PA (600, 700, 800), Vax (Ultrix, BSD), Alpha (OSF), 
		i386 (DOS/Windows, various Unix)
status: 	activly developed
discussion:	info-cscheme@zurich.ai.mit.edu 
		(cross-posted to comp.lang.scheme.c)
updated:	1992/08/24

language:	Scheme
package:	Scheme->C
version:	15mar93
parts:		compiler(->C)
author: 	Digital Western Research Laboratory; Joel Bartlett
location:	ftp pub/DEC/Scheme-to-C/* from gatekeeper.dec.com
description:	Translates Revised**4 Scheme to C that is then compiled
		by the native C compiler for the target machine.  This
		design results in a portable system that allows either
		stand-alone Scheme programs or programs written in both
		compiled and interpreted Scheme and other languages.
conformance:	superset of Revised**4
		+ "expansion passing style" macros
		+ foreign function call capability
		+ interfaces to Xlib (Ezd & Scix)
		+ records
reference:	send Subject "help" to WRL-Techreports@decwrl.dec.com
		for technical report.  Other documentation in
		Scheme-to-C directory on gatekeeper.
ports:		VAX/ULTRIX, DECstation ULTRIX, Alpha AXP OSF/1,
		Microsoft Windows 3.1, Apple Macintosh 7.1,
		HP 9000/300, HP 9000/700, Sony News, SGI Iris and
		Harris Nighthawk and other Unix-like m88k systems.
		The 01nov91 version is also available on Amiga, SunOS,
		NeXT, and Apollo systems.
status: 	actively developed, contributed ports welcomed
updated:	1993/03/15

language:	Scheme, Tk
package:	STk
version:	1.00
parts:		interpreter
author: 	Gallesio Erick <eg@unice.fr>
location:	ftp pub/STk-1.00.tar.gz from kaolin.unice.fr
description:	A Scheme interpreter blended with Ousterhout's Tk package.  
		STk expresses all of Tk as scheme objects.  STk includes
		a CLOS/Dylan-like OO extenstion, but the extension is slow.
conformance:	almost R4RS
ports:		SunOS 4.1.x, Ultrix/MIPS
updated:	1993/09/06

language:	Scheme
package:	PC-Scheme
version:	3.03
parts:		compiler, debugger, profiler, editor, libraries
author: 	Texas Instruments
location:	ftp archive/pc-scheme/* from altdorf.ai.mit.edu
description:	Written by Texas Instruments. Runs on MS-DOS 286/386 IBM PCs
		and compatibles.  Includes an optimizing compiler, an
		emacs-like editor, inspector, debugger, performance testing,
		foreign function interface, window system and an
		object-oriented subsystem.  Also supports the dialect used in
		Abelson and Sussman's SICP.  
conformance:	Revised^3 Report, also supports dialect used in SICP.
restriction:	official version is $95, contact rww@ibuki.com
ports:		MSDOS
updated:	1992/02/23

language:	Scheme
package:	PCS/Geneva
version:	4.02PL1
parts:		compiler, debugger, profiler, editor, libraries
author: 	"a team at the u. of Geneva"
location:	send email to schemege@uni2a.unige.ch
description:	PCS/Geneva is a cleaned-up version of Texas Instrument's PC
		Scheme developed at the University of Geneva. The main
		extensions to PC Scheme are 486 support, BGI graphics, LIM-EMS
		pagination support, line editing, and assembly-level
		interfacing.
contact:	schemege@uni2a.unige.ch
updated:	1994/01/11

language:	Scheme
package:	Gambit Scheme System
version:	2.0
parts:		interpreter, compiler, linker, libraries
author: 	Marc Feeley <feeley@iro.umontreal.ca>
location:	ftp pub/parallele/gambit/* from ftp.iro.umontreal.ca
description:	Gambit is an optimizing Scheme compiler/system.  The
		Macintosh port can run with Toolbox and has a built-in
		editor.
conformance:	IEEE Scheme standard and `future' construct.
ports:		68k: unix, sun3, hp300, bbn gp100, NeXT, Macintosh
updated:	?

language:	Scheme
package:	Elk (Extension Language Kit)
version:	2.2
parts:		interpreter, libraries
author: 	Oliver Laumann <net@cs.tu-berlin.de>, Carsten Bormann
		<cabo@cs.tu-berlin.de> 
location:	ftp pub/unix/languages/scheme/elk-2.2.tar.gz from 
		ftp.fu-berlin.de
    N.America:	ftp contrib/elk-2.2.tar.gz from ftp.x.org
description:	Elk is a Scheme interpreter designed to be used as a 
		general extension language.
		+ interfaces to Xlib, Xt, and various widget sets.
		+ dynamic loading of extensions
		+ almost all artificial limitations removed
		+ generational/incremental garbage collector
		+ Unix system call extensions
		+ Records (structures)
		+ bitstrings
conformance:	Mostly R3RS compatable.
ports:		unix, ultrix, vax, sun3, sun4, 68k, i386, mips, ibm rt, 
		rs6000, hp700, sgi, sony, DOS (gcc+DJGPP or go32)
updated:	1994/2/15

language:	Scheme
package:	libscheme
version:	0.3
parts:		embedded interpreter
author: 	Brent Benson <Brent.Benson@mail.csd.harris.com>
location:	ftp.cs.indiana.edu in imp/libscheme-0.3.tar.gz
description:	An embedded interpreter for Scheme written in C, can be used
		as a command interpreter or extension language, and is easily
		extended in C with new primitive types, primitve functions and
		syntax.
conformance:	Revised^4 Report on the Algorithmic Language Scheme.
updated:	1994/05/16

language:	Scheme
package:	ezd - easy drawing for programs on X displays
version:	15mar93
parts:		interpreter/server
author: 	?
location:	ftp pub/DEC/ezd/* from gatekeeper.dec.com
description:	Ezd is a graphics server that sits between an application
		program and the X server and allows both existing and new
		programs easy access to structured graphics.  Ezd users have
		been able to have their programs produce interactive drawings
		within hours of reading the man page.  Structured graphics:
		application defined graphical objects are ordered into drawings
		by the application.  Loose coupling to the application
		program:  unlike most X tools, ezd does not require any event
		handling by the application.  The ezd server mantains window
		contents.  When an event occurs on such an object, an
		application supplied Scheme expression is evaluated.
contact:	Joel Bartlett <bartlett@decwrl.dec.com> ?
updated:	1993/03/10

language:	Scheme
package:	XScheme
version:	0.28
parts:		?
author: 	David Betz <dbetz@apple.com>
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
discussion:	comp.lang.lisp.x
contact:	?
updated:	1992/02/02

language:	Scheme
package:	Fools' Lisp
version:	1.3.2
parts:		?
author: 	Jonathan Lee <jonathan@scam.berkeley.edu>
location:	ftp src/local/fools.tar.Z from scam.berkeley.edu
description:	a small Scheme interpreter that is R4RS conformant.
ports:		Sun-3, Sun-4, Decstation, Vax (ultrix), Sequent, Apollo
updated:	1991/10/31

language:	Scheme
package:	Scheme88
version:	?
parts:		?
author: 	?
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
contact:	?
updated:	?

language:	Scheme
package:	UMB Scheme
version:	?
parts:		?, editor, debugger
author: 	William Campbell <bill@cs.umb.edu>
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
conformance:	R4RS Scheme
ports:		?
updated:	?

language:	Scheme
package:	PseudoScheme
version:	2.8
parts:		translator(Common Lisp)
author: 	Jonathan Rees <jar@cs.cornell.edu>
location:	?
description:	?
conformance:	R3RS except call/cc.
requires:	Common Lisp
ports:		Lucid, Symbolics CL, VAX Lisp, Explorer CL
announcements:	info-clscheme-request@mc.lcs.mit.edu
updated:	?

language:	Scheme
package:	SOS (Scheme Object System)
version:	?
parts:		?
author: 	Chris Hanson ?
location:	ftp archive/cph/sos.tar.gz from altdorf.ai.mit.edu
description:	?
updated:	?

language:	Scheme
package:	Similix
version:	5.0
parts:		partial evaulator, debugger
author: 	Anders Bondorf <anders@diku.dk>
location:	ftp pub/diku/dists/Similix.tar.Z from ftp.diku.dk
description:	Similix is an autoprojector (self-applicable partial 
		evaluator) for a higher order subset of the strict functional 
		language Scheme.  Similix handles programs with user defined 
		primitive abstract data type operators which may process 
		global variables (such as input/output operators).
conformance:	extension of large subset of R4RS Scheme.
requires:	Scheme
ports:		Scm, Chez Scheme
portability:	high
contact:	Anders Bondorf <anders@diku.dk>
updated:	1993/05/18

language:	Scheme
package:	syntax-case
version:	2.1
parts:		macro system, documentation
author: 	R. Kent Dybvig <dyb@cs.indiana.edu>
location:	cs.indiana.edu in ftp pub/scheme/syntax-case.tar.Z
    Macintosh:	maya.dei.unipd.it in /pub/mac/gambit/
description:	We have designed and implemented a macro system that is
		vastly superior to the low-level system described in
		the Revised^4 Report; in fact, it essentially
		eliminates the low level altogether.  We also believe
		it to be superior to the other proposed low-level
		systems as well, but each of you can judge that for
		yourself.  We have accomplished this by "lowering the
		level" of the high-level system slightly, making
		pattern variables ordinary identifiers with essentially
		the same status as lexical variable names and macro
		keywords, and by making "syntax" recognize and handle
		references to pattern variables.
reference:	+ Robert Hieb, R. Kent Dybvig, and Carl Bruggeman "Syntactic
		Abstraction in Scheme", IUCS TR #355, 6/92 (revised 7/3/92)
		+ R. Kent Dybvig, "Writing Hygienic Macros in Scheme with
		Syntax-Case", IUCS TR #356, 6/92 (revised 7/3/92).
ports:		Chez Scheme, Mac port runs under MacGambit 2.0
updated:	1992/07/06

language:	Scheme
package:	x-scm
version:	?
parts:		?
author: 	Larry Campbell <campbell@redsox.bsw.com>
location:	alt.sources archive
description:	x-scm is a bolt-on accessory for the "scm" Scheme interpreter 
		that provides a handy environment for building Motif and 
		OpenLook applications.	(There is some support as well for raw 
		Xlib applications, but not enough yet to be useful.)
requires:	scm, X
ports:		?
updated:	1992/08/10

language:	Scheme, Prolog
package:	"Paradigms of AI Programming"
version:	?
parts:		book with interpreters and compilers in Common Lisp
author: 	Peter Norvig
location:	bookstore, and ftp pub/norvig/* from unix.sri.com
description:	?
updated:	?

language:	Scheme
package:	Psd (Portable Scheme Debugger)
version:	1.1
parts:		debugger
author: 	Kellom{ki Pertti <pk@cs.tut.fi>
location:	ftp pub/src/languages/schemes/psd.tar.Z from cs.tut.fi
description:	source code debugging from emacs
restriction:	GNU GPL
requires:	R4RS compliant Scheme, GNU Emacs.
ports:		scm, Elk, Scheme->C
updated:	1992/10/08

language:	Scheme
package:	Tiny Clos
version:	first release
parts:		?
author: 	?
location:	ftp pub/mops/* from parcftp.xerox.com
description:	A core part of CLOS (Common Lisp Object System) ported to
		Scheme and rebuilt using a MOP (Metaobject Protocol).
		This should be interesting to those who want to use MOPs
		without using a full Common Lisp or Dylan.
ports:		MIT Scheme 11.74
discussion:	mailing list: mops, administered by gregor@parc.xerox.com
contact:	Gregor Kiczales <gregor@parc.xerox.com>
updated:	1992/12/14

language:	Scheme
package:	VSCM 
version:	V0r3
parts:		runtime, bytecode compiler, bytecode interpreter
author: 	Matthias Blume <blume@cs.princeton.edu>
location:	ftp /pub/scheme-repository/imp/vscm*.tar.gz
		ftp.cs.indiana.edu
    Germany:	ftp pub/scheme/yorku/imp/vscm*
		from faui80.informatik.uni-erlangen.de
    UK:		ftp pub/uunet/languages/lisp/scheme/repository/imp/vscm*
		from unix.hensa.ac.uk
description:	VSCM is a highly portable implementation of Scheme, written in
		ANSI C and Scheme.  Portability is achieved by exlusive use of
		legal ANSI C features -- as opposed to a plethora of #ifdef's
		to adjust to various system peculiarities.  (Of course, in real
		life ANSI C doesn't guarantee portability per se, because there
		are too many systems with broken compilers or broken
		libraries.)
conformance:	R4RS, IEEE P1178
features:	exception and interrupt handling, executable portable memory 
		images, coroutines, continuations with multiple arguments
ports:		Unix, Macintosh
portability:	very high
status: 	actively developed
discussion:	comp.lang.scheme
updated:	1993/11/09

language:	Scheme
package:	PSI
version:	pre-release
parts:		interpreter, virtual machine
author: 	Ozan Yigit <oz@ursa.sis.yorku.ca>, David Keldsen, Pontus Hedman
location:	from author
description:	I am looking for a few interested language hackers to play with
		and comment on a scheme interpreter. I would prefer those who
		have been hacking portable [non-scheme] interpreters for many
		years.	The interpreter is PSI, a portable scheme interpreter
		that includes a simple dag compiler and a virtual machine.  It
		can be used as an integrated extension interpreter in other
		systems, allows for easy addition of new primitives, and it
		embodies some other interesting ideas. There are some
		unique[2] code debug/trace facilities, as well, acceptable
		performance resulting from a fairly straight-forward
		implementation.  Continuations are fully and portably
		supported, and perform well.  PSI is based on the simple
		compilers/vm in Kent Dbyvig's thesis.
conformance:	R^4RS compatible with a number of useful extensions.
updated:	1993/02/19

language:	Scheme
package:	Bigloo
version:	1.4
parts:		interpreter, compiler(->ANSI C), runtime
author: 	Manuel Serrano <Manuel.Serrano@inria.fr>
location:	ftp INRIA/Projects/icsla/Implementations/bigl* from ftp.inria.fr
description:	The main goal of Bigloo is to deliver small and fast stand 
		alone applications.
conformance:	IEEE Scheme standard with some extensions for regex handling
features:	Optimization supported.
ports:		sun, sony news, sgi, linux, hp-ux
portability:	very high for unix systems
updated:	1993/09/08

language:	Scheme
package:	Scheme84
version:	?
parts:		?
author: 	?
location:	Send a tape w/return postage to: Scheme84 Distribution /
		Nancy Garrett / c/o Dan Friedman / Department of Computer
		Science / Indiana University / Bloomington, Indiana.  Call
		1-812-335-9770.
description:	?
requires:	VAX, Franz Lisp, VMS or BSD
contact:	nlg@indiana.edu
updated:	?

language:	Scheme
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

document formatting languages
-------------------------------------------------------------------------------
category:	document formatting languages
description:	These are formatting languages.  Very application-specific.
		[Could someone make me an entry for TeX?  --ed]
iref:		(C) c2man

language:	CLiP
package:	CLiP
version:	2.1
parts:		documentation generator
author: 	Eric W. van Ammers <AMMERS@RCL.WAU.NL>
location:	ftp clip/* from sun01.info.wau.nl
description:	CLiP does not use explicite commands to perform the extraction
		process.  It recognizes pseudostatemens written as comment of
		the programming language in question. CLiP distinguishes
		pseudostatments from ordinary comments because the former
		comply with a a particular style. This specific style can be
		adjusted to suit virtually any programming language.  The CLiP
		approach to LP makes the system extremely versatile. It is
		independent of programming language and text processing
		environment.  We designed CLiP to be compatible with hypertext
		systems as well but we have not yet experimented with this form
		of documentation.
		CLiP works with almost any target and almost any source
		language
ports:		MS-DOS, VAX/VMS, Unix
updated:	1993/11/18

language:	HP-GL, Postscript
package:	hp2ps
version:	1.9c
parts:		interpreter
author: 	Alun Jones <alun@huey.wst.com>
location:	ftp pub/hp2ps/hp2ps19c.zip from ftp.wst.com
description:	hp2ps is an HP-GL interpreter that is written in Postscript.
		It runs on the printer itself.	
restriction:	If there is monetary benifit from using hp2ps, it is requested
		that money be set to Alun Jones.  Further, hp2ps may not be
		distributed as part of a commercial offering without prior
		agreement.
updated:	?

language:	Lout
package:	Lout
version:	2.05
parts:		translator(Lout->Postscript), documentation
author: 	Jeffrey H. Kingston <jeff@cs.su.oz.au>
location:	ftp jeff/lout.2.03.tar.Z from ftp.cs.su.oz.au
description:	Lout is a batch text formatting system.
		Lout offers an unprecedented range of advanced features,
		including equation formatting, tables, diagrams, rotation and
		scaling, sorted indexes, bibliographic databases, running
		headers and odd-even pages, automatic cross referencing, and
		much more, all ready to go.  Furthermore, Lout is easily
		extended with definitions which are very much easier to write
		than troff of TeX macros because Lout is a high-level language,
		the outcome of an eight-year research project that went back to
		the beginning.
ports:		unix
updated:	1993/07/30

language:	Postscript
package:	Ghostscript
version:	2.6.1
parts:		interpreter, ?
author: 	L. Peter Deutsch <ghost@aladdin.com>
location:	ftp pub/GNU/ghostscript* from a GNU archive site
		ftp from ftp.cs.wisc.edu:/pub/X/ghostscript*2.6.1*
description:	A postscript interpreter with previewers for serval
		systems and many fonts.
updated:	1993/05/29

language:	Postscript, Common Lisp
package:	PLisp
version:	?
parts:		translator(Postscript), programming environment(Postscript)
author: 	John Peterson <peterson-john@cs.yale.edu>
location:	?
description:	?
updated:	?

language:	SGML (Standardized Generalized Markup Language)
package:	sgmls
version:	1.1
parts:		parser
author: 	James Clark <jjc@jclark.com> and Charles Goldfarb
location:	ftp pub/text-processing/sgml/sgmls-1.0.tar.Z from ftp.uu.net
    UK: 	ftp sgmls/sgmls-1.1.tar.Z from ftp.jclark.com
description:	SGML is a markup language standardized in ISO 8879.  Sgmls is
		an SGML parser derived from the ARCSGML parser materials which
		were written by Charles Goldfarb.  It outputs a simple, easily
		parsed, line oriented, ASCII representation of an SGML
		document's Element Structure Information Set (see pp 588-593 of
		``The SGML Handbook'').  It is intended to be used as the front
		end for structure-controlled SGML applications.  SGML is an
		important move in the direction of separating information from
		its presentation, i.e. making different presentations possible
		for the same information.
bugs:		James Clark <jjc@jclark.com>
ports:		unix, msdos
updated:	1993/02/22

language:	troff, nroff, eqn, tbl, pic, refer, Postscript, dvi
package:	groff
version:	1.07
parts:		document formatter, documentation
author: 	James Clark <jjc@jclark.com>
location:	ftp groff-1.07.tar.z from a GNU archive site
description:	[An absolutely fabulous troff! --ed]
restriction:	GNU General Public License
requires:	C++
updated:	1993/03/03

language:	Web
package:	CWeb
version:	3.1
parts:		translator(ANSI C and C++)
author: 	Levy/Knuth?
location:	?
description:	[Referred to in the CWeb 3.x announcement (below). I'll follow
		 up on it in the next release of the list. -- Ed]
requires:	ANSI C and/or C++ Compiler?
contact:	?
updated:	?

language:	Web
package:	CWeb
version:	3.x
parts:		translator(ANSI C)
author: 	Marc van Leeuwen
location:	ftp pub/cweb/? from ftp.cwi.nl
description:	An ANSI C implementation of the Web literate-programming
		concept (Both source and output are ANSI C). This version was
		developed in parallel with v3.1 referred to above.
requires:	ANSI C Compiler
contact:	M.van.Leeuwen@cwi.nl
updated:	1993/12/16

language:	Web
package:	web2c
version:	5-851d
parts:		translator(C)
author: 	?
location:	ftp TeX/web2c.tar.Z from ics.uci.edu
    Europe:	ftp pub/tex/src/web2c/web2c.tar.Z from ftp.th-darmstadt.de
description:	
contact:	Karl Berry <karl@claude.cs.umb.edu>
updated:	1993/02/22

language:	Web
package:	Web
version:	?
parts:		translator(Pascal)
author: 	Donald Knuth
location:	ftp ? from labrea.stanford.edu
description:	Donald Knuth's programming language where you
		write the source and documentation together.
requires:	Pascal
contact:	?
updated:	?

language:	Web
package:	FunnelWeb
version:	?
parts:		macro preprocessor, documentation, tests, ?
author: 	Ross Williams <ross@spam.adelaide.edu.au>
location:	comp.sources.unix volume 26
description:	FunnelWeb is a production-quality literate-programming tool
		that emphasises simplicity and reliability. It provides a macro
		facility, and assists in the production of typeset
		documentation.	Input-programming-language independent
restriction:	CopyLeft
ports:		Sun, Vax, Mac, PC
updated:	1993/04/11

logic programming languages
-------------------------------------------------------------------------------
category:	logic programming languages
description:	languages designed to manipulate logic predicates.  Often
		used to build expert systems

language:	BABYLON
package:	BABYLON
version:	2.3
parts:		ai workbench (expert system development environment)
author: 	members of GMD, FIT-KI
location:	ftp gmd/ai-research/Software/Babylon/* from ftp.gmd.de
		   or in WWW from http://www.gmd.de/
description:	BABYLON is a development environment for expert systems. It
		includes frames, rules, constraints, a prolog-like logic
		formalism, and a description language for diagnostic
		applications (texi).
reference:	Christaller, T., Di Primio, F., Voss, A. (Hrsg.).
		Die KI-Werkbank Babylon.
		Eine offene und portable Entwicklungsumgebung fuer
		Expertensysteme. Addison-Wesley, 1989, ISBN 3-89319-155-0

		Christaller, T., Di Primio, F., Voss, A. (eds).
		The AI-Workbench BABYLON.
		An open and portable development environment for expert systems.
		Academic Press, London, 1992, ISBN 0-12-174235-0;

		Guesgen, H.-W.,
		CONSAT: A system for constraint satisfaction.
		Research Notes in Artificial Intelligence, Morgan Kaufman,
		San Mateo, 1989.
requires:	Common Lisp, works under:
		   Macintosh Common Lisp, Franz Allegro, CLisp, CMU, AKCL etc.
contact:	juergen.walther@gmd.de
updated:	1994/06/22

language:	Goedel
package:	Goedel
version:	1.4
parts:		book, compiler, user manual, system modules, example programs
author: 	Jiwei Wang <jiwei@lapu.bristol.ac.uk>
location:	ftp.cs.kuleuven.ac.be (134.58.41.2)
		   /pub/logic-prgm/goedel/README
		ftp.cs.bris.ac.uk (137.222.102.102)
		   /goedel/README
		both contain further pointers.
description:	An implementation of a significant subset of Goedel. Goedel is 
		a declarative, general-purpose strongly-typed logic programming
		language.  The type system is based on many-sorted logic with
		parametric polymorphism.  Modularity is supported, as well as
		infinite precision arithmetic, limited constraint satisfaction,
		and finite sets.
reference:	The Goedel Programming Language, P.M. Hill & J.W. Lloyd, 
		MIT Press, 1994, ISBN 0-262-08229-2.
requires:	SICStus Prolog version 2.1 #6 (or later).  Run time system for
		SPARCstation provided, though.
status: 	underging continuing development
contact:	goedel@compsci.bristol.ac.uk
updated:	1994/05/16

language:	Janus
package:	qdjanus
version:	1.3
parts:		translator(prolog)
author: 	Saumya Debray <debray@cs.arizona.edu>
location:	ftp janus/qdjanus/* from cs.arizona.edu
description:	janus is a janus-to-prolog compiler meant to be used 
		with Sicstus Prolog
conformance:	mostly compliant with "Programming in Janus" by 
		Saraswat, Kahn, and Levy.
updated:	1992/05/18

language:	Janus
package:	jc
version:	1.50 alpha
parts:		compiler(->C)
author: 	David Gudeman <gudeman@cs.arizona.edu>
location:	ftp janus/jc/* from cs.arizona.edu
description:	jc is a janus-to-C compiler (considerably faster than qdjanus).
		jc is a _sequential_ implementation of a _concurrent_ language.
bugs:		jc-bugs@cs.arizona.edu
ports:		sun-4, sun-3, Sequent Symmetry
status: 	jc is an experimental system, undergoing rapid development.  
		It is in alpha release currently.
discussion:	janusinterest-request@parc.xerox.com
updated:	1992/06/09

language:	LIFE (Logic, Inheritance, Functions, and Equations)
package:	Wild_LIFE
version:	first-release
parts:		interpreter, manual, tests, libraries, examples
author: 	Paradise Project, DEC Paris Research Laboratory.
location:	ftp pub/plan/Life.tar.Z from gatekeeper.dec.com.
description:	LIFE is an experimental programming language with a
		powerful facility for structured type inheritance.  It
		reconciles styles from functional programming, logic
		programming, and object-oriented programming.  LIFE
		implements a constraint logic programming language with
		equality (unification) and entailment (matching)
		constraints over order-sorted feature terms.  The
		Wild_LIFE interpreter has a comfortable user interface
		with incremental query extension ability.  It contains
		an extensive set of built-in operations as well as an X
		Windows interface.
conformance:	semantic superset of LOGIN and LeFun.  Syntax is similar
		to prolog.
bugs:		life-bugs@prl.dec.com
ports:		MIPS-Ultrix
portability:	good in theory
discussion:	life-request@prl.dec.com
contact:	Peter Van Roy <vanroy@prl.dec.com>
updated:	1992/12/14

language:	Lolli (logic programming)
package:	Lolli
version:	?
parts:		?
author: 	? Josh Hodas <hodas@saul.cis.upenn.edu> ?
location:	ftp pub/Lolli/Lolli-07.tar.Z. from ftp.cis.upenn.edu
description:	Lolli is an interpreter for logic programming based 
		on linear logic principles.
		Lolli can be viewed as a refinement of the the
		Hereditary Harrop formulas of Lambda-Prolog.  All the
		operators (though not the higher order unification) of
		Lambda-Prolog are supported, but with the addition of
		linear variations. Thus a Lolli program distinguishes
		between clauses which can be used as many, or as few,
		times as desired, and those that must be used exactly once.
requires:	ML
updated:	1992/11/08

language:	Parlog
package:	SPM System (Sequential Parlog Machine)
version:	?
parts:		?, documenation
author: 	?
location:	? ftp lang/Parlog.tar.Z from nuri.inria.fr
description:	a logic programming language ?
reference:	Steve Gregory, "Parallel Logic Programming in PARLOG", 
		Addison-Wesely, UK, 1987
restriction:	? no source code ?
ports:		Sun-3 ?
updated:	??

language:	Prolog
package:	SB-Prolog
version:	3.1 ?
parts:		?
author: 	interpreter
location:	ftp pub/sbprolog from sbcs.sunysb.edu
description:	?
restriction:	GNU General Public License
contact:	? warren@sbcs.sunysb.edu ?
updated:	?

language:	Prolog
package:	XSB
version:	1.2
parts:		interpreter, preprocessor(HiLog), documentation
author: 	XSB research group / SUNY at Stony Brook
location:	ftp pub/XSB/XSB.tar.Z from sbcs.sunysb.edu (130.245.1.15)
description:	XSB extends the standard functionality of Prolog (being a
		descendant of PSB- and SB-Prolog) to include implementations of
		OLDT (tabling) and HiLog terms.  OLDT resolution is extremely
		useful for recursive query computation, allowing programs to
		terminate correctly in many cases where Prolog does not.  HiLog
		supports a type of higher-order programming in which predicate
		symbols can be variable or structured.	This allows unification
		to be performed on the predicate symbols themselves in addition
		to the arguments of the predicates.  Of course, Tabling and
		HiLog can be used together.
ports:		Sun, Solaris, NeXT, Linux, 386 BSD, IRIX, HP-UX
portability:	Generally to 32-bit machines.
contact:	xsb-contact@cs.sunysb.edu
updated:	1993/07/28

language:	Prolog
package:	Modular SB-Prolog
version:	?
parts:		interpreter
author: 	?
location:	ftp pub/dts/mod-prolog.tar.Z from ftp.dcs.ed.ac.uk
description:	SB-Prolog version 3.1 plus modules
restriction:	GNU General Public License
ports:		Sparc
contact:	Brian Paxton <mprolog@dcs.ed.ac.uk>
updated:	?

language:	ALF [prolog variant]
package:	alf (Algebraic Logic Functional programming language) 
version:	?
parts:		runtime, compiler(Warren Abstract Machine)
author: 	Rudolf Opalla <opalla@julien.informatik.uni-dortmund.de>
location:	ftp pub/programming/languages/LogicFunctional from
		ftp.germany.eu.net
description:	ALF is a language which combines functional and
		logic programming techniques.  The foundation of
		ALF is Horn clause logic with equality which consists
		of predicates and Horn clauses for logic programming,
		and functions and equations for functional programming.
		Since ALF is an integration of both programming
		paradigms, any functional expression can be used
		in a goal literal and arbitrary predicates can
		occur in conditions of equations.
updated:	1992/10/08

language:	CLP (Constraint Logic Programming language) [Prolog variant]
package:	CLP(R)
version:	1.2
parts:		runtime, compiler(byte-code), contstraint solver
author: 	IBM
location:	mail to Joxan Jaffar <joxan@watson.ibm.com>
description:	CLP(R) is a constraint logic programming language
		with real-arithmetic constraints.  The implementation
		contains a built-in constraint solver which deals
		with linear arithmetic and contains a mechanism
		for delaying nonlinear constraints until they become
		linear.  Since CLP(R) subsumes PROLOG, the system
		is also usable as a general-purpose logic programming
		language.  There are also powerful facilities for
		meta programming with constraints.  Significant
		CLP(R) applications have been published in diverse
		areas such as molecular biology, finance, physical
		modelling, etc.  We are distributing CLP(R) in order 
		to help widen the use of constraint programming, and 
		to solicit feedback on the system
restriction:	free for academic and research purposes only
ports:		unix, msdos, OS/2
contact:	Roland Yap <roland@bruce.cs.monash.edu.au>, Joxan Jaffar
updated:	1992/10/14

language:	Prolog + constraints over Finite Domains and Booleans
package:	clp(FD)
version:	2.1
parts:		compiler clp(FD)->C, FD solver, runtime, debugger.
author: 	Daniel Diaz - INRIA Rocquencourt - FRANCE
location:	ftp ftp.inria.fr in the directory
		/INRIA/Projects/ChLoE/LOGIC_PROGRAMMING/clp_fd
description:	clp(FD) is a constraint logic programming language
		over Finite Domains. clp(FD) is based on the wamcc
		Prolog compiler. clp(FD) provides several constraints
		"a la CHIP" on Finite Domains and Booleans and some
		facilities to build new constraints. clp(FD) is 4
		times faster than CHIP v3.2 on average.
restriction:	free (see COPYRIGHT notice)
requires:	GNU C (gcc) version 2.4.5 or higher
ports:		Sparc workstations
portability:	Generally to 32-bit machines with gcc.
contact:	Daniel Diaz (Daniel.Diaz@inria.fr)
updated:	1994/06/08

language:	Prolog
package:	wamcc
version:	2.1
parts:		compiler Prolog->C, runtime, Prolog debugger, WAM debugger.
author: 	Daniel Diaz - INRIA Rocquencourt - FRANCE
location:	ftp ftp.inria.fr in the directory
		/INRIA/Projects/ChLoE/LOGIC_PROGRAMMING/wamcc
description:	wamcc is a Prolog Compiler which translates Prolog to
		C via the WAM. wamcc use the (quasi) standard edinbourgh.
		wamcc offers the most usual built-in predicates
		(but not all), a top-level, a Prolog debugger and a
		WAM debugger. wamcc is designed to be easily extended
		(e.g. see clp(FD)).
		From an efficiency point of view, wamcc is between
		SICStus "emulated" and SICStus "native code" on Sparc
		machines (1.5 times faster than SICStus emulated, 1.5
		times slower than SICStus "native code").
restriction:	free (see COPYRIGHT notice)
requires:	GNU C (gcc) version 2.4.5 or higher
ports:		Sparc workstations
portability:	Generally to 32-bit machines with gcc.
contact:	Daniel Diaz (Daniel.Diaz@inria.fr)
updated:	1994/06/08

language:	Prolog (variant)
package:	Aditi
version:	Beta Release
parts:		interpreter, database
author: 	Machine Intelligence Project, Univ. of Melbourne, Australia
location:	send email to aditi@cs.mu.oz.au
description:	The Aditi Deductive Database System is a multi-user
		deductive database system.  It supports base relations
		defined by facts (relations in the sense of relational
		databases) and derived relations defined by rules that
		specify how to compute new information from old
		information.  Both base relations and the rules
		defining derived relations are stored on disk and are
		accessed as required during query evaluation.  The
		rules defining derived relations are expressed in a
		Prolog-like language, which is also used for expressing
		queries.  Aditi supports the full structured data
		capability of Prolog.  Base relations can store
		arbitrarily nested terms, for example arbitrary length
		lists, and rules can directly manipulate such terms.
		Base relations can be indexed with B-trees or
		multi-level signature files.  Users can access the
		system through a Motif-based query and database
		administration tool, or through a command line
		interface.  There is also in interface that allows
		NU-Prolog programs to access Aditi in a transparent
		manner.  Proper transaction processing is not supported
		in this release.
ports:		Sparc/SunOS4.1.2 Mips/Irix4.0
contact:	<aditi@cs.mu.oz.au>
updated:	1992/12/17

language:	Lambda-Prolog
package:	Prolog/Mali (PM)
version:	? 6/23/92 ?
parts:		compiler(->C), linker, libraries, runtime, documentation
author: 	Pascal Brisset <brisset@irisa.fr>
location:	ftp pm/* from ftp.irisa.fr
description:	Lambda-Prolog, a logic programming language defined by
		Miller, is an extension of Prolog where terms are
		simply typed $\lambda$terms and clauses are higher
		order hereditary Harrop formulas. The main novelties
		are universal quantification on goals and implication.
reference:	+ Miller D.A. and Nadathur G. "Higher-order logic 
		programming", 3rd International Conference on Logic 
		Programming, pp 448-462, London 1986.
		+ Nadathur G. "A Higher-Order Logic as a Basis for Logic
		Programming", Thesis, University of Pennsylvania, 1987.  
requires:	MALI-V06 abstract memory. MALI is available by anonymous ftp 
		from ftp.irisa.fr
ports:		unix
discussion:	prolog-mali-request@irisa.fr
contact:	pm@irisa.fr
updated:	1992/07/06

language:	Prolog (variant)
package:	CORAL
version:	?
parts:		interpreter, interface(C++), documentation
author: 	?
location:	ftp ? from ftp.cs.wisc.edu
description:	The CORAL deductive database/logic programming system was
		developed at the University of Wisconsin-Madison.  The CORAL
		declarative language is based on Horn-clause rules with
		extensions like SQL's group-by and aggregation operators, and
		uses a Prolog-like syntax.  * Many evaluation techniques are
		supported, including bottom-up fixpoint evaluation and top-down
		backtracking.  * A module mechanism is available.  Modules are
		separately compiled; different evaluation methods can be used
		in different modules within a single program.  * Disk-resident
		data is supported via an interface to the Exodus storage
		manager.  * There is an on-line help facility
requires:	AT&T C++ 2.0 (G++ soon)
ports:		Decstation, Sun4
updated:	1993/01/29

language:	Prolog
package:	BinProlog
version:	1.71
parts:		interpreter?, documentation
author: 	?
location:	ftp BinProlog/* from clement.info.umoncton.ca
description:	BinProlog 1.71 is at this time probably the
		fastest freely available C-emulated Prolog.
ports:		IBM-PC/386, Sun-4, Sun-3, NeXT
contact:	Paul Tarau <tarau@info.umoncton.ca>
updated:	1993/04/03

language:	Prolog
package:	SWI-Prolog
version:	1.7.2
parts:		?
author: 	Jan Wielemaker <jan@swi.psy.uva.nl>
location:	ftp pub/SWI-Prolog from swi.psy.uva.nl 
    OS/2:	ftp pub/toolw/SWI/* from mpii02999.ag2.mpi-sb.mpg.de
description:	?
conformance:	superset
features:	"very nice Ed. style prolog, best free one I've seen"
restriction:	GNU General Public License
ports:		Sun-4, Sun-3 (complete); Linux, DEC MIPS (done but 
		incomplete, support needed); RS6000, PS2/AIX, Atari ST,
		Gould PN, NeXT, VAX, HP-UX (known problems, support needed);
		MSDOS (status unknown), OS/2
status: 	activly developed
discussion:	prolog-request@swi.psy.uva.nl
contact:	(OS/2) Andreas Toenne <atoenne@mpi-sb.mpg.de>
updated:	1993/07/23

language:	Prolog
package:	Frolic
version:	?
parts:		?
author: 	?
location:	ftp pub/frolic.tar.Z from cs.utah.edu
description:	?
requires:	Common Lisp
contact:	?
updated:	1991/11/23

language:	Prolog
package:	? Prolog package from the University of Calgary ?
version:	?
parts:		?
author: 	?
location:	ftp pub/prolog1.1/prolog11.tar.Z from cpsc.ucalgary.ca
description:	+ delayed goals
		+ interval arithmetic
requires:	Scheme
portability:	relies on continuations
contact:	?
updated:	?

language:	Prolog
package:	? slog ?
version:	?
parts:		translator(Prolog->Scheme)
author: 	dorai@cs.rice.edu
location:	ftp public/slog.sh from titan.rice.edu
description:	macros expand syntax for clauses, elations etc, into Scheme
ports:		Chez Scheme
portability:	reliese on continuations
updated:	?

language:	Prolog
package:	LM-PROLOG
version:	?
parts:		?
author: 	Ken Kahn and Mats Carlsson
location:	ftp archives/lm-prolog.tar.Z from sics.se
description:	?
requires:	ZetaLisp
contact:	?
updated:	?

language:	Prolog
package:	Open Prolog
version:	?
parts:		?
author: 	?
location:	ftp languages/open-prolog/* from grattan.cs.tcd.ie
description:	?
ports:		Macintosh
contact:	Michael Brady <brady@cs.tcd.ie>
updated:	?

language:	Prolog
package:	UPMAIL Tricia Prolog
version:	?
parts:		?
author: 	?
location:	ftp pub/Tricia/README from ftp.csd.uu.se
description:	?
contact:	<tricia-request@csd.uu.se>
updated:	?

language:	Prolog
package:	?; ? (two systems)
version:	?; ?
parts:		?; ?
author: 	?
location:	ftp ai.prolog/Contents from aisun1.ai.uga.edu
description:	?; ?
ports:		MSDOS, Macintosh; MSDOS
contact:	Michael Covington <mcovingt@uga.cc.uga.edu>
updated:	?; ?

language:	Prolog
package:	XWIP (X Window Interface for Prolog)
version:	0.6
parts:		library
author: 	?
location:	ftp contrib/xwip-0.6.tar.Z from export.lcs.mit.edu
description:	It is a package for Prologs following the Quintus foreign
		function interface (such as SICStus). It provides a (low-level)
		Xlib style interface to X. The current version was developed
		and tested on SICStus 0.7 and MIT X11 R5 under SunOS 4.1.1.
portability:	It is adaptable to many other Unix configurations.
contact:	xwip@cs.ucla.edu
updated:	1993/02/25

language:	Prolog
package:	PI
version:	?
parts:		library
author: 	?
location:	ftp pub/prolog/ytoolkit.tar.Z from ftp.ncc.up.pt
description:	PI is a interface between Prolog applications and XWindows that
		aims to be independent from the Prolog engine, provided that it
		has a Quintus foreign function interface (such as SICStus,
		YAP).  It is mostly written in Prolog and is divided in two
		libraries: Edipo - the lower level interface to the Xlib
		functions; and Ytoolkit - the higher level user interface
		toolkit
contact:	Ze' Paulo Leal <zp@ncc.up.pt>
updated:	1993/03/02

language:	Prolog
package:	ISO draft standard
version:	? (What year??)
parts:		language definition
author: 	?
location:	ftp ? from ftp.th-darmstadt.de
description:	?
updated:	1992/07/06

language:	Prolog
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	OPS5
package:	PD OPS5
version:	?
parts:		interpreter
author: 	Written by Charles L. Forgy and ported to Common Lisp by 
		George Wood and Jim Kowalski. 
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp/ops5* from 
		ftp.cs.cmu.edu
description:	Public domain implementation of an OPS5 interpreter. OPS5 is
		a programming language for rule-based production systems.
		A rule consists of pre-condition(s) and the resulting
		action. The system as a whole acts first checking the
		status of system in its working memory and matches the
		rules to see if there are rules that are satisfied,
		and then the action in one selected satisfied rule is
		executed.
		There is a commercial version available called OPS83.
		Please contact the author for information.
requires:	Common Lisp
contact:	? Mark Kantrowitz <mkant+@cs.cmu.edu> ?
updated:	1992/10/17

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!gatech!news-feed-1.peachnet.edu!news.duke.edu!MathWorks.Com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p4of5]
Message-ID: <free4-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free4-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free3-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:40 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1501
Xref: bloom-beacon.mit.edu comp.compilers:3320 comp.lang.misc:5188 comp.archives.admin:678 news.answers:23370 comp.answers:6568

Archive-name: free-compilers/part4
Last-modified: 1994/6/30
Version: 6.5

concurrent, parallel, and simulation languages
-------------------------------------------------------------------------------
category:	concurrent, parellel, and simulation languages
description:	This is a fairly broad category of languages.  Most of the
		implementations in this set are not good enough to be used in
		production systems.  Some are.	In addition to those listed
		below, see:
lref:		Concurrent Clean
lref:		Concurrent ML
lref:		EuLisp
lref:		Parallaxis
lref:		Maisie
lref:		micro-C++
lref:		MeldC
lref:		pm2

language:	ABCL/1 (An object-Based Concurrent Language)
package:	ABCL/1 
version:	?
parts:		?
author: 	Akinori Yonezawa, ABCL Group now at Department of Information 
		Science, the University of Tokyo
location:	ftp pub/abcl1/* from camille.is.s.u-tokyo.ac.jp
description:	Asynchronous message passing to objects.  
reference:	"ABCL: An Object-Oriented Concurrent System", Edited by 
		Akinori Yonezawa, The MIT Press, 1990, (ISBN 0-262-24029-7)
restriction:	no commercial use, must return license agreement
requires:	Common Lisp
contact:	abcl@is.s.u-tokyo.ac.jp
updated:	1990/05/23

language:	ABCL ???
package:	ABCL/R2
version:	?
parts:		?
author: 	masuhara@is.s.u-tokyo.ac.jp, matsu@is.s.u-tokyo.ac.jp,
		takuo@is.s.u-tokyo.ac.jp, yonezawa@is.s.u-tokyo.ac.jp
location:	ftp pub/abclr2/* from camille.is.s.u-tokyo.ac.jp
description:	ABCL/R2 is an object-oriented concurrent reflective language
		based on Hybrid Group Architecture.  As a reflective language,
		an ABCL/R2 program can dynamically control its own behavior,
		such as scheduling policy, from within user-program.  An an
		object-oriented concurrent language, this system has almost all
		functions of ABCL/1.
requires:	Common Lisp
updated:	1993/01/28

language:	ALLOY
package:	ALLOY
version:	2.0?
parts:		interpreter, documentation, examples
author: 	Thanasis Mitsolides <mitsolid@cs.nyu.edu>
location:	ftp pub/local/alloy/* from cs.nyu.edu
description:	ALLOY is a higher level parallel programming language
		appropriate for programming massively parallel computing
		systems.  It is based on a combination of ideas from
		functional, object oriented and logic programming languages.
		The result is a language that can directly support
		functional, object oriented and logic programming styles
		in a unified and controlled framework.	Evaluating modes
		support serial or parallel execution, eager or lazy
		evaluation, non-determinism or multiple solutions etc.
		ALLOY is simple as it only requires 29 primitives in all
		(half of which for Object Oriented Programming support).
ports:		sparc, ?
updated:	1991/06/11

language:	Cellang (Cellular Automata)
package:	Cellular
version:	2.0
parts:		byte-code compiler, runtime, viewer
author: 	J Dana Eckart <dana@rucs.faculty.cs.runet.edu>
location:	comp.sources.unix, volume 26
description:	A system for cellular automata programming.
updated:	1993/04/03

language:	Hermes
package:	IBM Watson prototype Hermes system
version:	0.8alpha patchlevel 01
parts:		bytecode compiler, compiler(bytecode->C), runtime
author: 	Andy Lowry <lowry@watson.ibm.com>
location:	ftp pub/hermes/README from software.watson.ibm.com
description:	Hermes is a very-high-level integrated language and
		system for implementation of large systems and
		distributed applications, as well as for
		general-purpose programming.  It is an imperative,
		strongly typed, process-oriented language.  Hermes
		hides distribution and heterogeneity from the
		programmer.  The programmer sees a single abstract
		machine containing processes that communicate using
		calls or sends.  The compiler, not the programmer,
		deals with the complexity of data structure layout,
		local and remote communication, and interaction with
		the operating system.  As a result, Hermes programs are
		portable and easy to write.  Because the programming
		paradigm is simple and high level, there are many
		opportunities for optimization which are not present in
		languages which give the programmer more direct control
		over the machine.
reference:	Strom, Bacon, Goldberg, Lowry, Yellin, Yemini. Hermes: A
		Language for Distributed Computing. Prentice-Hall, Englewood
		Cliffs, NJ.  1991.  ISBN: O-13-389537-8.
ports:		RS6000 Sun-4 NeXT IBM-RT/bsd4.3 (Sun-3 and Convex soon)
discussion:	comp.lang.hermes
updated:	1992/03/22

language:	PCN
package:	PCN
version:	2.0
parts:		compiler?, runtime, linker, libraries, tools, debugger, 
		profiler, tracer
author: 	Ian Foster <foster@mcs.anl.gov>, Steve Tuecke
		<tuecke@mcs.anl.gov>, and others
location:	ftp pub/pcn/pcn_v2.0.tar.Z from info.mcs.anl.gov
description:	PCN is a parallel programming system designed to improve
		the productivity of scientists and engineers using parallel
		computers.  It provides a simple language for specifying
		concurrent algorithms, interfaces to Fortran and C, a
		portable toolkit that allows applications to be developed
		on a workstation or small parallel computer and run
		unchanged on supercomputers, and integrated debugging and
		performance analysis tools.  PCN was developed at Argonne
		National Laboratory and the California Institute of
		Technology.  It has been used to develop a wide variety of
		applications, in areas such as climate modeling, fluid
		dynamics, computational biology, chemistry, and circuit
		simulation.
ports:		(workstation nets): Sun4, NeXT, RS/6000, SGI
		(multicomputers): iPSC/860, Touchstone DELTA
		(shared memory multiprocessors): Symmetry/Dynix
contact:	<pcn@mcs.anl.gov>
updated:	1993/02/12

language:	LOOPN
package:	LOOPN
version:	?
parts:		compiler?, simulator
author: 	?
location:	ftp departments/computer_sci*/loopn.tar.Z from ftp.utas.edu.au
description:	I wish to announce the availability of a compiler, simulator
		and associated source control for an object-oriented petri net
		language called LOOPN.	In LOOPN, a petri net is an extension
		of coloured timed petri nets.  The extension means firstly that
		token types are classes.  In other words, they consist of both
		data fields and functions, they can be declared by inheriting
		from other token types, and they can be used polymorphically.
		The object-oriented extensions also mean that module or subnet
		types are classes.  LOOPN has been developed over a period of
		about 5 years at the University of Tasmania, where it has been
		used in teaching computer simulation and the modelling of
		network protocols.  A petri net is a directed, bipartite graph;
		nodes are either places (represented by circles) or transitions
		(represented by rectangles).  A net is marked by placing tokens
		on places.  When all the places pointing to a transition (the
		input places) have a token, the net may be fired by removing a
		token from each input place and adding a token to each place
		pointed to by the transition (the output places).  Petri nets
		are used to model concurrent systems, particularly in the
		network protocol area.
contact:	Charles Lakos <charles@probitas.cs.utas.edu.au>
updated:	1992/12/20

language:	Simula
package:	Lund Simula
version:	4.07
parts:		?
author: 	?
location:	ftp misc/mac/programming/+_Simula/* from rascal.ics.utexas.edu
description:	?
contact:	Lund Software House AB / Box 7056 / S-22007 Lund, Sweden
updated:	1992/05/22

language:	SR (Synchronizing Resources)
package:	sr
version:	2.0 
parts:		?, documentation, tests
author: 	?
location:	ftp sr/sr.tar.Z from cs.arizona.edu
description:	SR is a language for writing concurrent programs.
		The main language constructs are resources and
		operations.  Resources encapsulate processes and
		variables they share; operations provide the primary
		mechanism for process interaction.  SR provides a novel
		integration of the mechanisms for invoking and
		servicing operations.  Consequently, all of local and
		remote procedure call, rendezvous, message passing,
		dynamic process creation, multicast, and semaphores are
		supported.
reference:	"The SR Programming Language: Concurrency in Practice", 
		by Gregory R. Andrews and Ronald A. Olsson, Benjamin/Cummings 
		Publishing Company, 1993, ISBN 0-8053-0088-0
ports:		Sun-4, Sun-3, Decstation, SGI Iris, HP PA, HP 9000/300,
		NeXT, Sequent Symmetry, DG AViiON, RS/6000, Multimax,
		Apollo, and others.
discussion:	info-sr-request@cs.arizona.edu
contact:	sr-project@cs.arizona.edu
updated:	1992/09/01

language:	UNITY
package:	MasPar Unity
version:	1.0
parts:		translator(UNITY->MPL), documentation
author: 	Martin Huber, University of Karlsruhe, Germany
location:	ftp pub/maspar/maspar_unity* from SanFrancisco.ira.uka.de
description:	?
contact:	Lutz Prechelt <prechelt@ira.uka.de>
updated:	?

language:	UNITY
package:	HOL-UNITY
version:	2.1
parts:		verification tool
author: 	?
location:	?
description:	?
contact:	Flemming Andersen <fa@tfl.dk> ?
updated:	?

Forth family languages
-------------------------------------------------------------------------------
category:	Forth family languages
description:	These are the stack-based postfix languages.  
lref:		Postscript
iref:		(mc6809) 6809, E-Forth

language:	Forth
package:	TILE Forth
version:	2.1
parts:		interpreter
author: 	Mikael Patel <mip@sectra.se>
location:	ftp tile-forth-2.1.tar.Z from a GNU archive site
description:	Forth interpreter in C; many Forth libraries
conformance:	Forth83
restriction:	shareware/GPL
ports:		unix
updated:	1991/11/13

language:	Forth
package:	cforth
version:	?
parts:		interpreter
author: 	?
location:	comp.sources.unix archive volume 1
description:	?
updated:	?

language:	Forth
package:	pfe (Portable Forth Environment)
version:	0.9.4
parts:		?
author: 	Dirk Zoller <duz@roxi.rz.fht-mannheim.de>
location:	ftp pub/unix/languages/pfe* from duz@roxi.rz.fht-mannheim.de
description:	A Forth development system that tries to be correct,
		complete, portable, usable and simple.	It doesn't try too
		hard to be fast.
conformance:	all dpANS word sets
ports:		Linux, RS/6000, HP-UX
portability:	high
updated:	1994/05/02

language:	Forth
package:	F68K
version:	?
parts:		?
author: 	?
location:	ftp atari/Languages/f68k.* from archive.umich.edu
description:	a portable Forth system for Motorola 68k computers
ports:		Atari ST/TT, Amiga, Sinclair QL and OS9
portability:	very high for 68000 based systems
contact:	Joerg Plewe <joerg.plewe@mpi-dortmund.mpg.de>
updated:	1992/12/14

language:	Forth
package:	51forth
version:	?
parts:		?
author: 	Scott Gehmlich
location:	ftp giovanni/51forth.zip from [130.123.96.9]
description:	source and documentation for a 8051 subroutine-
		threaded forth
contact:	?
updated:	1993/04/03

language:	Mops
package:	Mops
version:	2.3.1
parts:		compiler, documentation, editor
author: 	Michael Hore <mikeh@kralizec.zeta.org.au>
location:	ftp pub/Yerk/? from oddjob.uchicago.edu
description:	Like Yerk, Mops is descended from the ex-commercial
		object-oriented language Neon. Mops features an
		optimizing native-code compiler; it is much faster
		than Yerk, but less compatible with Neon. Mops
		includes extensions such as multiple inheritance.
ports:		Macintosh
updated:	?

language:	Kevo (Forth-like)
package:	kevo
version:	0.9b6
parts:		interpreter, demo programs, user's guide, papers
author: 	Antero Taivalsaari <tsaari@cs.uta.fi>
location:	ftp /pub/kevo/* from cs.uta.fi
description:	Kevo is a prototype-based object-oriented language for
		Macintosh Kevo features a unique prototype-based object model
		(which is based neither on classes nor Self-style delegation),
		multitasking (both preemptive and cooperative), dynamic memory
		management, and an icon-based object browser and editor modeled
		loosely after Mac Finder. Kevo has been built around a portable
		threaded code interpreter, and is syntactically a close
		derivative of Forth.
ports:		Macintosh
contact:	kevo-interest@ursamajor.uvic.ca
updated:	1993/05/18

language:	Yerk
package:	Yerk
version:	3.62
parts:		?
author: 	?
location:	ftp pub/Yerk/? from oddjob.uchicago.edu
description:	Yerk is an object oriented language based on a
		Forth Kernel with some major modifications.  It
		was originally known as Neon, developed and sold
		as a product by Kriya Systems from 1985 to 1989.
		Several of us at The University of Chicago have
		maintained Yerk since its demise as a product.
		Because of the possible trademark conflict that
		Kriya mentions, we picked the name Yerk, which is
		at least not an acronym for anything, but rather
		stands for Yerkes Observatory, part of the Department
		of Astronomy and Astrophysics at U of C.
updated:	?

compiler generators and related tools
-------------------------------------------------------------------------------
category:	compiler generators and related tools
description:	Yacc, and the rest of its family

language:	ABC
package:	Grammar analysis tools
version:	1
parts:		analysis tools, samples, documentation
author: 	Steven Pemberton <Steven.Pemberton@cwi.nl>
location:	ftp programming/languages/abc/examples/grammar/*
		from ftp.eu.net or ftp.nluug.net
description:	Grammar analysis program written in ABC (q.v.) for
		answering such questions as "what are the start
		symbols of all rules", "what symbols can follow this
		symbol", "which rules are left recursive", and so on.
		Includes a grammar of ISO Pascal.
reference:	Ftp archive includes an article explaining the package.
ports:		unix, MSDOS, atari, mac 
contact:	Steven.Pemberton@cwi.nl
updated:	1993/07/05

language:	? attribute grammar ?
package:	Alpha
version:	pre-release
parts:		semantic-analysis generator?, documentation(german)
author: 	Andreas Koschinsky <koschins@cs.tu-berlin.de>
location:	from author
description:	I have written a compiler generator. The generator is called
		Alpha and uses attribute grammars as specification calculus.
		Alpha is the result of a thesis at Technische Universitaet
		Berlin. I am looking for someone who would like to test and use
		Alpha.	Alpha generates compilers from a compiler
		specification. This specification describes a compiler in
		terminology of attribute grammars. Parser and Scanner are
		generated by means of Bison and Flex.  Alpha generates an
		ASE-evaluator (Jazayeri and Walter).  The documentation is in
		german since it is a thesis at a german university.
updated:	1993/02/16

language:	attribute-grammar extension of Yacc and Lex
package:	Ox
version:	G1.01
parts:		Yacc/Lex/C preprocessor, tutorial, reference manual,
		man page, examples, Ox-ready parsers (C, C++, Pascal, Ada,
		Fortran)
author: 	Kurt Bischoff <bischoff@cs.iastate.edu>
location:	ftp pub/ox/* from ftp.cs.iastate.edu
description:	Ox generalizes the function of Yacc in the way that attribute
		grammars generalize context-free grammars.  Ordinary Yacc and
		Lex specifications may be augmented with definitions of
		synthesized and inherited attributes written in C syntax.  Ox
		checks these specifications for consistency and completeness,
		and generates from them a program that builds and decorates
		attributed parse trees.  Ox accepts a most general class of
		attribute grammars.  The user may specify postdecoration
		traversals for easy ordering of side effects such as code
		generation.  Ox handles the tedious and error-prone details of
		writing code for parse-tree management, so its use eases
		problems of security and maintainability associated with that
		aspect of translator development.  Ox is a preprocessor,
		and extends the syntax and semantics of Yacc, Lex, and C.
reference:	Most compiler textbooks have descriptions of attribute
		grammars.
features:	LALR(1), semantic-analyzer generation.
bugs:		none known.  Report bugs to ox-project@cs.iastate.edu.
restriction:	Use of Ox is free.  Ox-generated code is the property of
		the Ox user.
ports:		Unix
contact:	ox-request@cs.iastate.edu
updated:	1993/11/14

language:	BNF (Extended)
package:	Gray
version:	3
parts:		parser generator(Forth)
author: 	Martin Anton Ertl <anton@mips.complang.tuwien.ac.at>
location:	author; version 2 is on various ftp sites
description:	Gray is a parser generator written in Forth.  It takes 
		grammars in an extended BNF and produces executable Forth 
		code for recursive descent parsers.  There is no special 
		support for error handling.
requires:	Forth
ports:		TILE Release 2 by Mikael Patel
updated:	1992/05/22

language:	BNF ??
package:	ZUSE
version:	?
parts:		parser generator(?)
author: 	Arthur Pyster
location:	? Univ Calif at Santa Barbara ?
description:	ll(1) paser generator
requires:	Pascal
updated:	1986/09/23

language:	BNF ??
package:	FMQ
version:	?
parts:		paser generator w/error corrector generator
author: 	Jon Mauney
location:	ftp from csczar.ncsu.edu
description:	?
status: 	?
contact:	?
updated:	1990/03/31

language:	BNF ??
package:	ATS (Attribute Translation System)
version:	?
parts:		?
author: 	? University of Saskatchewan ?
location:	?
description:	generates table-driven LL(1) parsers with full insert-only
		error recovery.  It also handles full left-attribute semantic
		handling, which is a dream compared to using YACC's parser
		actions.
status: 	?
contact:	? (suggested: Dave Bocking <bocking@cs.usask.ca>)
updated:	1988/11/29

language:	BNF (Extended)
package:	PCCTS (Purdue Compiler-Construction Tool Set)
version:	1.20
parts:		scanner generator, parser generator (pred-LL(k)), 
		documentation, tutorial
author: 	Terence J. Parr <parrt@acm.org>, Will E. Cohen
		<cohenw@ecn.purdue.edu>, Henry G. Dietz <hankd@ecn.purdue.edu>,
		Russel W. Quong <quong@ecn.purdue.edu>
location:	ftp pub/pccts/1.20/pccts.tar.Z from marvin.ecn.purdue.edu
    UK: 	ftp computing/programming/languages/tools/pccts/* 
		from src.doc.ic.ac.uk
    Macintosh:	ftp pub/mac/* from maya.dei.unipd.it 
description:	PCCTS is similar to a highly integrated version of YACC
		and LEX; where ANTLR (ANother Tool for Language
		Recognition) corresponds to YACC and DLG (DFA-based
		Lexical analyzer Generator) functions like LEX.
		However, PCCTS has many additional features which make
		it easier to use for a wide range of translation
		problems.  PCCTS grammars contain specifications for
		lexical and syntactic analysis with selective backtracking
		("infinite lookahead"), semantic predicates, intermediate-form
		construction and error reporting. Rules may employ Extended
		BNF (EBNF) grammar constructs and may define parameters,
		return values and local variables.  Languages described in
		PCCTS are recognized via LL(k) parsers constructed in pure,
		human-readable, C code.  Selective backtracking is available
		to handle non-LL(k) constructs.  PCCTS parsers may be compiled 
		with C++. Version 1.20 now generates C++ code as well as K&R
		and ANSI C variants.
ports:		Unix, DOS, OS/2, Macintosh
portability:	very high
discussion:	send mail with a body of "subscribe pccts-users your_name" 
		to pccts-users-request@ahpcrc.umn.edu
contact:	Terence J. Parr <parrt@acm.org>
		Roberto Avanzi (mocenigo@maya.dei.unipd.it) (for the Mac port)
updated:	1994/04/29

language:	BNF (very extended), yacc
package:	PRE-CC Xtended
version:	2.30
parts:		library, parser generator (LL(oo)), translator(yacc->)
author: 	Peter Breuer
location:	FTP: ftp.comlab.ox.ac.uk:/pub/Programs/preccx.tar.Z (Unix)
		     ftp.comlab.ox.ac.uk:/pub/Programs/preccx.msdos (MS-DOS)
                     ftp.comlab.ox.ac.uk:
			/pub/Documents/techpapers/Jonathan.Bowen/preccx-uug.ps.Z
		(more recent versions available by subscription)
		URL: http://www.comlab.ox.ac.uk/archive/redo/precc.html
description:	PRECCX is an infinite-lookahead compiler compiler for context
		dependent grammars.  The generated code is ANSI C.
		Specification scripts are in very EBNF with inherited and
		synthetic attributes allowed. Scripts can be compiled in
		separate modules, and linked together later.  Meta-production
		rules allowed.	The technology is essentially LL(oo) with
		optimizations. A converter for yacc scripts is available.
reference:	"The PRECC Compiler-Compiler" by P.T. Breuer and J.P. Bowen.
		In E. Davies and A. Findlay (eds.),
		Proc. UKUUG/SUKUG Joint New Year 1993 Conference,
		St. Cross Centre, Oxford, UK, 6-8 January 1993,
		ISBN 1 873611 06 4 (UKUUG), 0 9520700 0 6 (SUKUG)
		UKUUG/SUKUG Secretariat, Owles Hall, Buntingford,
		Herts SG9 9PL, UK, pp 167-182, 1993.

		"A PREttier Compiler-Compiler: Generating Higher Order
		Parsers in C"  P.T. Breuer and J.P. Bowen.
		Oxford University Computing Laboratory Technical Report
		PRG-TR-20-92, 25pp, November 1992. Accepted by
		Software - Practice and Experience, 1994.
		FTP: ftp.comlab.ox.ac.uk
		       /pub/Documents/techreports/TR-20-92.ps.Z
ports:		unix, MS-DOS
contact:	Peter Breuer <ptb@comlab.ox.ac.uk>,
		Jonathan Bowen <bowen@comlab.ox.ac.uk>
updated:	1994/06/02

language:	BNF ??
package:	LLGen
version:	?
parts:		parser generator
author: 	? Fischer and LeBlanc ?
location:	? ftp from csczar.ncsu.edu ?
description:	LL(1) parser generator
conformance:	subset of FMQ
reference:	"Crafting A Compiler", by Fischer and LeBlanc
status: 	?
contact:	?
updated:	1990/03/31

language:	BNF
package:	wacco
version:	1.1, July 91
parts:		parser generator
author: 	Parag Patel (parag@netcom.com, parag@sde.hp.com)
location:	comp.sources.misc volume ?
description:	Wacco is a recursive descent LL(1) parser generator that
		generates C++ code.  Its syntax is similar to YACC
		with a lot of sugaring.  It can also do attribute-driven
		parsing.  The source is bootstrapped wacco code.
ports:		HP-UX s300 and s800, Sparc, and 4.3BSD (on HP)
portability:	Host machine must be 32 bits.
contact:	?
updated:	?

language:	BNF (Extended), BNF (yacc), Modula-2
package:	GMD Toolbox for Compiler Construction (aka Cocktail)
version:	9209
parts:		parser generator (LALR -> C, Modula-2), documentation,
		parser generator (LL(1) -> C, Modula-2), tests,
		scanner generator (-> C, Modula-2), tests
		translator (Extended BNF -> BNF), translator (Modula-2 -> C),
		translator (BNF (yacc) -> Extended BNF), examples
		abstract syntax tree generator, attribute-evaluator generator,
		code generator
author: 	?
location:	? ftp pub/cocktail/dos from ftp.karlsruhe.gmd.de
		   (many name servers having trouble resolving this address)
    OS/2:	ftp.eb.ele.tue.nl/pub/src/cocktail/dos-os2.zoo 
description:	A huge set of compiler building tools. 
requires:	(ms-dos only) DJ Delorie's DOS extender (go32)
	(OS/2 only) emx programming environment for OS/2
ports:		msdos, unix, os/2
discussion:	subscribe to Cocktail using listserv@eb.ele.tue.nl
contact:	Josef Grosch <grosch@karlsruhe.gmd.de>
    OS/2:	Willem Jan Withagen <wjw@eb.ele.tue.nl>
updated:	1992/10/01

language:	BNF ????
package:	T-gen
version:	2.1
parts:		parser generator, documentation, ?
author: 	Justin Graver <graver@comm.mot.com>
location:	ftp pub/st80_r41/T-gen2.1/* from st.cs.uiuc.edu
description:	T-gen is a general-purpose object-oriented tool for the 
		automatic generation of string-to-object translators. 
		It is written in Smalltalk and lives in the Smalltalk 
		programming environment.  T-gen supports the generation 
		of both top-down (LL) and bottom-up (LR) parsers, which 
		will automatically generate derivation trees, abstract 
		syntax trees, or arbitrary Smalltalk objects.  The simple 
		specification syntax and graphical user interface are 
		intended to enhance the learning, comprehension, and 
		usefulness of T-gen.
requires:	Smalltalk-80
ports:		ParcPlace Objectworks/Smalltalk 4.0 & 4.1
updated:	1992/10/18

language:	BNF 
package:	Eli Compiler Construction System
version:	3.5
parts:		?, documentation
author: 	?
location:	ftp pub/cs/distribs/eli/* from ftp.cs.colorado.edu
    Europe:	ftp unix/eli from ftp.uni-paderborn.de
description:	Eli integrates off-the-shelf tools and libraries with
		specialized language processors to generate complete compilers
		quickly and reliably.  It simplifies the development of new
		special-purpose languages, implementation of existing languages
		on new hardware and extension of the constructs and features of
		existing languages.
ports:		Sun-4 (SunOS 4 & 5), Ultrix/MIPS, RS/6000, HP-UX, SGI, Linux
discussion:	<eli-request@cs.colorado.edu>
contact:	<compiler@cs.colorado.edu>, <compiler@uni-paderborn.de>
updated:	1993/11/01

language:	BNF
package:	tom (demo for Tomita Parsing algorithm)
version:	1
parts:		parser generator, parser interpreter, examples, documentation
author: 	Mark Hopkins <mark@omnifest.uwm.edu>
location:	iecc.com in pub/files/tomita.tar.gz
		alt.sources archive from October 4, 1993.
description:	An implementation of the Tomita parsing algorithm using
		LR(0) tables and dynamic programming.
reference:	Kluwer '91, _Generalized LR Parsing_, Tomita ed., 0-7923-9201-9
		"The Tomita Parsing Algorithm ...", comp.compilers May 20, 1994
features:	Cyclic context free grammars are processed.
portability:	System independent
updated:	1993/10/03

language:	BNF (yacc)
package:	NewYacc
version:	1.0
parts:		parser generator, documenation
author: 	Jack Callahan <callahan@mimsy.cs.umd.edu> 
location:	ftp src/newyacc.1.0.*.Z from flubber.cs.umd.edu
description:	[someone want to fill it in? --ed]
reference:	see Dec 89 CACM for a brief overview of NewYacc.
updated:	1992/02/10

language:	BNF (yacc)
package:	bison
version:	1.22
parts:		parser generator, documentation
author: 	? Robert Corbett and Richard Stallman <rms@gnu.mit.edu>
location:	ftp bison-1.16.tar.Z from a GNU archive site
description:	?
bugs:		bug-gnu-utils@prep.ai.mit.edu
restriction:	!! will apply the GNU General Public License to *your* code !!
ports:		unix, atari, ?
updated:	1993/09/14

language:	BNF (yacc), Lex
package:	Bison++ and Flex++
version:	1.21-8 (bison), 2.3.8-7 (flex), 5 (flex++bison++misc)
parts:		translator, documentation, postscript, examples, DOS binary
author: 	Alain Coetmeur <coetmeur@icdc.fr>
location:	cse.unl.edu in ~ftp/pub/nandy/c++/tools/LATEST/*
    Europe:	mirrored on ftp.th-darmstadt.de
description:	A retargeting of bison-1 and flex 2.3 to C++, able to
		generate classes.  As with Bison and Flex, these two tools
		are independent but designed for mutual compatibility.
		The version numbering has been changed for consistency with
		Flex and Bison, so versions of flex3.0.x and bison2.x of this
		package are are actually earlier versions, not later.
		Examples are provided to help in getting started.
conformance:	Mostly compatible with flex2.3 and bison 1 in C, apart
		from the ability to generate classes.
features:	Almost all symbol names can be redefined, parsers can be
		shared in C and C++ in the same headers... very extensible...
		flex++ support IOSTREAM and STDIO in C++.
bugs:		Contact coetmeur@icdc.fr (current author and maintainer).
restriction:	GNU License for bison++. Same as flex for flex++.
ports:		SUNOS4, DOS, and same ports as Flex/Bison, Windows NT (tested)
portability:	Larger memory model required on DOS (DOS binary supplied).
status: 	active, supported, might not support flex 2.4
discussion:	coetmeur@icdc.fr, news: comp.compiler, or comp.lang.c++
help:		coetmeur@icdc.fr, news: comp.compiler, or comp.lang.c++
		for substantial problems.
support:	see help, no commercial support. (volunteer ?)
announcements:	mail list locally maintained by coetmeur@icdc.fr,
		news: comp.compiler comp.lang.c++
updated:	1994/02/07
lref:		C
lref:		C++
lref:		Lex
lref:		Yacc

language:	BNF (yacc)
package:	bison-A2.2
version:	2.2 (corresponds to gnu bison 1.22)
parts:		parser generator, C-parser, C++parser, documentation
author:		Fred Hansen <wjh+@cmu.edu>
location:	ftp://ftp.andrew.cmu.edu/pub/AUIS/bison/bison-A2.2.tar.gz
		also in contrib/andrew on the XV11R6 distribution in directories
		   overhead/bison, overhead/mkparser (but not the C++ version
		   of the parser)
description:	This is the standard gnu bison with a number of improvments:
		license-free parsers for C and C++, only one external symbol
		for each grammar, permits multiple grammars per application,
		better error reports on the grammar.
conformance:	grammars are the same as bison and yacc; but run-time errors
		are handled differently, so semantic rules must be changed
features:	tokens in the grammar can be expressed as ">=" instead of GE
bugs:		send bugs to info-andrew-bugs@andrew.cmu.edu
restriction:	none (unless you use the native gnu-bison parser)
ports:		has been tested on most Unix platforms
portability:	generation of names for temp files is system dependent.
discussion:	info-andrew@andrew.cmu.edu   (mirrored to comp.soft-sys.andrew)
support:	supported by the Andrew Consortium
contributions:	your organization is invited to join the Andrew Consortium
		info-andrew-request@andrew.cmu.edu
updated:        1994/05/09

language:	BNF (yacc)
package:	? jaccl ?
version:	?
parts:		parser generator
author: 	Dave Jones <djones@megatest.uucp>
location:	?
description:	a LR(1) parser generator
updated:	1989/09/08

language:	BNF (yacc)
package:	byacc (Berkeley Yacc)
version:	1.9
parts:		parser generator
author: 	Robert Corbett <Robert.Corbett@eng.sun.com>
location:	ftp pub/byacc.tar.1.9.Z from vangogh.CS.Berkeley.EDU
description:	probably the best yacc variant around.	Previously known as
		Zoo, and before that, as Zeus.
updated:	1993/02/22

language:	BNF (yacc), Lex
package:	Lex/Yacc for Turbo Pascal uploaded
version:	?
parts:		parser generator, scanner generator, documentation?
author: 	?
location:	iecc.com (140.186.81.1) at pub/file/lyprg.zip.
description:	Lex and Yacc retargeted to Pascal.
contact:	? dpoole@hydrogen.oscs.montana.edu (David Poole)
updated:	1993/07/02

language:	BNF (yacc), Ada
package:	aflex-ayacc
version:	1.2a
parts:		parser generator (Ada), scanner generator (Ada)
author: 	IRUS (Irvine Research Unit in Software)
location:	ftp pub/irus/aflex-ayacc_1.2a.tar.Z from liege.ics.uci.edu
description:	Lex and Yacc equivalents that produce Ada output
announcements:	irus-software-request@ics.uci.edu
contact:	irus-software-request@ics.uci.edu
updated:	1993/01/06

language:	BNF (yacc), Perl
package:	perl-byacc
version:	1.8.2
parts:		parser-generator(perl)
author: 	Rick Ohnemus <rick@IMD.Sterling.COM>
location:	ftp local/perl-byacc.tar.Z from ftp.sterling.com
description:	A modified version of byacc that generates perl code.  Has '-p'
		switch so multiple parsers can be used in one program (C or
		perl).
portability:	Should work on most (?) Unix systems.  Also works with 
		SAS/C 6.x on AMIGAs.
updated:	1993/01/24

language:	BNF (yacc), Standard ML
package:	New SML-Yacc and SML-Lex
version:	??
parts:		??
author: 	Andrew Appel <appel@tyrolia.princeton.edu>
location:	princeton.edu in pub/ml, files mlyacc94.tar.Z, lexgen94.tar.Z.
description:	??
updated:	1994/05/23

language:	BNF (variant), Icon
package:	Ibpag2 (Icon-Based Parser Generation System 2)
version:	1.0 (beta)
parts:		parser generator (Icon, SLR(1))
author: 	Richard L. Goerwitz <goer@midway.uchicago.edu>
location:	comp.sources.misc archive
description:	Ibpag2 is a parser generator for Icon.	It does most
		of what you would expect.  Latest version can handle both
		SLR(1) and even GLR (Tomita) grammars.
ports:		unix
portability:	? (Unix dependencies?)
updated:	1993/07/13

language:	BNF ?, Gofer
package:	Ratatosk ?
version:	?
parts:		parser generatr (Gofer)
author: 	Torben AEgidius Mogensen <torbenm@diku.dk>
location:	ftp pub/diku/dists/Ratatosk.tar.Z from ftp.diku.dk
description:	Ratatosk is a SLR parser generator in Gofer (a Haskell variant)
		that generates purely functional parsers (also in Gofer). Even
		though the sematic value of a production is a function of the
		attributes of its right-hand side (and thus apparently purely
		synthesized), inherited attributes are easily simulated by
		using higher order functions.
ports:		?
updated:	?

language:	BNF
package:	lalr.ss - An LALR(1) parser generator
version:	0.9 
parts:		parser generator (->Scheme)
author: 	Mark Johnson <mj@cs.brown.edu>
location:	ftp new/lalr.shar from the Scheme Repository
description:	A LALR(1) parser generator in and for Scheme.
requires:	Scheme
updated:	1993/05/24

language:	BURS ?
package:	Iburg
version:	?
parts:		parser generator?
author: 	Christopher W. Fraser <cwf@research.att.com>, David R. Hanson
		<drh@princeton.edu>, Todd A. Proebsting <todd@cs.arizona.edu>
location:	ftp pub/iburg.tar.Z from ftp.cs.princeton.edu
description:	Iburg is a program that generates a fast tree parser.  It is
		compatible with Burg. Both programs accept a cost-augmented
		tree grammar and emit a C program that discovers an optimal
		parse of trees in the language described by the grammar. They
		have been used to construct fast optimal instruction selectors
		for use in code generation.  Burg uses BURS; Iburg's matchers
		do dynamic programming at compile time.
updated:	1993/02/10

language:	Candle, IDL (Interface Description Language)
package:	Scorpion System
version:	6.0
parts:		software development environment for developing
		software development environments, documentation
author: 	University of Arizona
location:	ftp scorpion/* from cs.arizona.edu
description:	20 tools that can be used to construct specialized
		programming environments.
		The Scorpion Project was started by Prof. Richard
		Snodgrass as an outgrowth of the SoftLab Project (which pro-
		duced the IDL Toolkit) that he started when he was at the
		University of North Carolina.  The Scorpion Project is
		directed by him at the University of Arizona and by Karen
		Shannon at the University of North Carolina at Chapel Hill.
reference:	"The Interface Description Language: Definition and Use," 
		by Richard Snodgrass, Computer Science Press, 1989,
		ISBN 0-7167-8198-0
ports:		Sun-3, Sun-4, Vax, Decstation, Iris, Sequent, HP9000
discussion:	info-scorpion-request@cs.arizona.edu
contact:	scorpion-project@cs.arizona.edu
updated:	1993/11/04

language:	COCOL (EBNF variant)
package:	COCO/R
version:	1.36
parts:		parser generator(LL(1))
author: 	Hanspeter Moessenboeck <moessenboeck@inf.ethz.ch>
		Port to Modula-2 done by Marc Brandis, Christof Brass 
		and Pat Terry <cspt@alpha.ru.ac.za>
location:	neptune.inf.ethz.ch:/pub/Coco
		ftp.psg.com:/pub/modula-2/coco
		cs.ru.ac.za:/pub/coco
		pluto.fit.qut.edu.au:/pub/coco
description:	Coco/R generates recursive descent parsers and their associated
		scanners from attributed grammars.  Coco/R can bootstrap itself
		to generate its own driver, parser, scanner, and semantic
		evaluator from the attributed grammar CR.ATG.  This grammar
		thus serves as an an example of how to write compiler
		descriptions for Coco.	There are also other simpler examples
		showing its use.
reference:	_A compiler generator for microcomputers_, by Rechenberg 
		and Mossenbock (Prentice Hall, 1989, 0-13-155136-1)
bugs:		MS-DOS related versions: Pat Terry <cspt@alpha.ru.ac.za>
		Other: Hanspeter Moessenboeck <moessenboeck@inf.ethz.ch>
requires:	Oberon or Modula-2
ports:		MS-DOS: TopSpeed Modula-2; FST 2.0; FST 3.1; StonyBrook
		QuickMod 2.2; Logitech 3.03.  Macintosh: Apple MacMeth
status: 	Oberon version is freely available?, Modula-2 version is
		free to academic sites; commercial use requires a license
updated:	1994/06/23

language:	EAG (Extended Affix Grammar)
package:	EAG
version:	first public release
parts:		recognizer generator, transduccer generator, 
		translator generator, editor generator, documentation
author: 	Marc Seutter <marcs@cs.kun.nl>
location:	ftp pub/eag/* from hades.cs.kun.nl
description:	The Extended Affix Grammar formalism, or EAG for short, is a
		formalism for describing both the context free and the context
		sensitive syntax of languages.	EAG is a member of the family
		of two-level grammars. They are very closely related to
		two-level van Wijngaarden grammars.  The EAG compiler will
		generate either a recognizer or a transducer or a translator
		or a syntax directed editor for a language described in the EAG
		formalism.
updated:	1993/09/14

language:	EBNF
package:	ETO
version:	test version
parts:		parser, postscript document, examples
author: 	Lin Li <china@bernina.ethz.ch>
location:	FTP: fi.ethz.ch under /pub/ETO/eto-09.*
description:	ETO is an object oriented universal syntax checker.  It takes
		an EBNF specification for a language and then uses it on an
		input file to check its syntax.
updated:	1994/06/03

language:	lex
package:	flex
version:	2.3.8
parts:		scanner generator
author: 	Vern Paxson <vern@ee.lbl.gov>
location:	ftp flex-2.3.8.tar.Z from a GNU archive site or ftp.ee.lbl.gov
description:	?
updated:	?

language:	Regular Expressions
package:	re2c
version:	alpha
parts:		translator (re->c)
author: 	?? peter@csg.uwaterloo.ca
location:	csg.uwaterloo.ca in /pub/peter/re2c.0.5.tar.gz
description:	A regular expression to C converter.
updated:	?? 1994/04/29

language:	Milarepa 
package:	Milarepa Perl/BNF Parser 
version:	Prototype 1.0
parts:		parser-generator, examples, tutorial
author: 	Jeffrey Kegler <jeffrey@netcom.com>
location:	via anonymous ftp at
		alexia.lis.uiuc.edu:/pub/perl/marpa-1.0.tar.Z
description:	Milarepa takes a source grammar in the Milarepa language (a
		straightforward mix of BNF and Perl) and generates a Perl file,
		which, when enclosed in a simple wrapper, parses some third
		language described by the source grammar.
		This is intended to be a real hacker's parser.	It is not
		restricted to LR(k), and the parse logic follows directly from
		the BNF.  It handles ambiguous grammars, ambiguous tokens
		(tokens which were not positively identified by the lexer) and
		allows the programmer to change the start symbol.  The grammar
		may not be left recursive.  The input must be divided into
		sentences of a finite maximum length.  There is no fixed
		distinction between terminals and non-terminals, that is, a
		symbol can both match the input AND be on the left hand side of
		a production.  Multiple Marpa grammars are allowed in a single
		perl program.
		It's only a prototype primarily due to poor speed.  This is
		intended to be remedied after Perl 5.0 is out.
requires:	perl
updated:	1994/04/27

language:	Pascal, Lisp, APL, Scheme, SASL, CLU, Smalltalk, Prolog
package:	Tim Budd's C++ implementation of Kamin's interpreters
version:	?
parts:		interpretors, documentation
author: 	Tim Budd <budd@cs.orst.edu>
location:	? ftp pub/budd/kamin/*.shar from cs.orst.edu ?
description:	a set of interpretors written as subclasses based on
		"Programming Languages, An Interpreter-Based Approach",
		by Samuel Kamin.
requires:	C++
status: 	? 
contact:	Tim Budd <budd@fog.cs.orst.edu>
updated:	1991/09/12

language:	Relation Grammar
package:	rl
version:	?
parts:		?
author: 	Kent Wittenburg <kentw@bellcore.com>
location:	fto rl/* from flash.bellcore.com
description:	The RL files contain code for defining Relational Grammars and
		using them in a bottom-up parser to recognize and/or parse
		expressions in Relational Languages.  The approach is a
		simplification of that described in Wittenburg, Weitzman, and
		Talley (1991), Unification-Based Grammars and Tabular Parsing
		for Graphical Languages, Journal of Visual Languages and
		Computing 2:347-370.
		This code is designed to support the definition and parsing of
		Relational Languages, which are characterized as sets of
		objects standing in user-defined relations.  Correctness and
		completeness is independent of the order in which the input is
		given to the parser.  Data to be parsed can be in many forms as
		long as an interface is supported for queries and predicates
		for the relations used in grammar productions.	To date, this
		software has been used to parse recursive pen-based input such
		as math expressions and flowcharts; to check for data
		integrity and design conformance in databases; to
		automatically generate constraints in drag-and-drop style
		graphical interfaces; and to generate graphical displays by
		parsing relational data and generating output code.
requires:	Common Lisp
ports:		Allegro Common Lisp 4.1, Macintosh Common Lisp 2.0
updated:	1992/10/31

language:	S/SL (Syntax Semantic Language)
package:	ssl
version:	?
parts:		parser bytecode compiler, runtime
author: 	Rick Holt, Jim Cordy <cordy@qucis.queensu.ca> (language), 
		Rayan Zachariassen <rayan@cs.toronto.edu> (C implementation)
location:	ftp pub/ssl.tar.Z from neat.cs.toronto.edu
description:	A better characterization is that S/SL is a language 
		explicitly designed for making efficient recusive-descent 
		parsers.  Unlike most other languages, practicially the 
		LEAST expensive thing you can do in S/SL is recur.  A
		small language that defines input/output/error token
		names (& values), semantic operations (which are really
		escapes to a programming language but allow good
		abstration in the pseudo-code), and a pseudo-code
		program that defines a grammar by the token stream the
		program accepts.  Alternation, control flow, and
		1-symbol lookahead constructs are part of the
		language.  What I call an S/SL "implementation", is a
		program that compiles this S/SL pseudo-code into a
		table (think byte-codes) that is interpreted by the
		S/SL table-walker (interpreter).  I think the pseudo-code 
		language is LR(1), and that the semantic mechanisms turn it
		into LR(N) relatively easily.
		+ more powerful and cleaner than yac
		- slower than yacc
reference:	+ Cordy, J.R. and Holt, R.C. [1980] Specification of S/SL:
		Syntax/Semantic Language, Computer Systems Research
		Institute, University of Toronto.  
		+ "An Introduction to S/SL: Syntax/Semantic Language" by 
		R.C. Holt, J.R.  Cordy, and D.B. Wortman, in ACM Transactions
		on Programming Languages and Systems (TOPLAS), Vol 4, No.
		2, April 1982, Pages 149-178.
updated:	1989/09/25

language:	TXL
package:	TXL: Tree Transformation Language
version:	7.4
parts:		translator, documentation, tutorial, examples
author: 	Jim Cordy <cordy@qucis.queensu.ca>
location:	ftp pub/txl/* from ftp.qucis.queensu.ca 
description:	TXL is a language for performing source to source
		transformations and is well suited for rapidly prototyping
		new languages and language processors.	It has also been used to
		prototype specification languages, command languages, and more
		traditional program transformation tasks such as constant
		folding, type inference, source optimization and reverse
		engineering.  TXL takes as input an arbitrary context-free
		grammar in extended BNF-like notation, and a set of
		show-by-example transformation rules to be applied to inputs
		parsed using the grammar.  TXL is a functional/rule-based
		hybrid programming language, using the paradigm of structural
		transformation.
reference:	Several listed in software documentation
updated:	1993/08/04

language:	BNF (extended)
package:	SORCERER: A Simple Tree Parser Generator
version:	1.00B
parts:		translator, documentation, tutorial, examples
author: 	Terence Parr <parrt@s1.arc.umn.edu>
location:	ftp pub/pccts/sorcerer/* from marvin.ecn.purdue.edu 
description:	SORCERER is more suitable for the class of translation problems
		lying between those solved by code-generator generators and by
		full source-to-source translator generators.  SORCERER
		generates simple, flexible, top-down, tree parsers that, in
		contrast to code-generators, may execute actions at any point
		during a tree walk.  SORCERER accepts extended BNF notation,
		allows predicates to direct the tree walk with semantic and
		syntactic context information, and does not rely on any
		particular intermediate form, parser generator, or other
		pre-existing application.
reference:	Several listed in software documentation
discussion:	send mail with a body of "subscribe pccts-users your_name" to
		pccts-users@ahpcrc.umn.edu. "your_name" can be email, or full.
help:		from mailing list
support:	actively supported, from mailing list
updated:	1994/02/15

mathematical tools and languages
-------------------------------------------------------------------------------
category:	mathematical tools and languages
description:	These are either special-purpose languages and tools, or
		general purpose languages and tools that have traditionally
		been used for mathematical and scientific computing task.
lref:		Fortran 
lref:		PCN
lref:		CLP
lref:		Sisal

language:	APL
package:	I-APL
version:	?
parts:		?
author: 	?
location:	ftp languages/apl/* from watserv1.waterloo.edu
description:	?
updated:	1992/07/06

language:	APL
package:	APLWEB
version:	?
parts:		translator(web->apl), translator(web->TeX)
author: 	Dr. Christoph von Basum <CvB@erasmus.hrz.uni-bielefeld.de>
location:	ftp languages/apl/aplweb/* from watserv1.uwaterloo.ca
description:	[Should this be listed with the Web entries? -- Ed.]
updated:	1992/12/07

language:	APL
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	J
package:	J-mode
version:	?
parts:		emacs macros
author: 	?
location:	ftp pub/j/gmacs/j-interaction-mode.el from think.com
description:	add on to J
updated:	1991/03/04

language:	RLaB language (math manipulation - MATLAB-like)
package:	RLaB
version:	0.99i
parts:		interpreter, libraries, documentation
author: 	v. 0.95:  Ian Searle <ians@eskimo.com>
		v. 0.99i: Matt Wette <mwette@mr-ed.jpl.nasa.gov>
location:	v. 0.95:  ftp pub/RLaB/* from evans.ee.adfa.oz.au
		v. 0.99i: csi.jpl.nasa.gov in /pub/matlab/RLaB
		[Could someone explain/rectify this? -- Mark]
description:	RLaB is a "MATLAB-like" matrix-oriented programming
		language/toolbox.  RLaB focuses on creating a good experimental
		environment (or laboratory) in which to do matrix math
		Currently RLaB has numeric scalars and matrices (real and
		complex), and string scalars, and matrices. RLaB also contains
		a list variable type, which is a heterogeneous associative
		array.
bugs:		v. 0.95: Ian Searle <ians@eskimo.com>
restriction:	GNU General Public License
requires:	GNUPLOT, lib[IF]77.a (from f2c)
ports:		many unix, OS/2, Amiga
updated:	1994/05/14

language:	octave language (math manipulation - MATLAB-like)
package:	octave
version:	1.0
parts:		interpreter, libraries, documentation
author: 	John W. Eaton
location:	ftp /pub/octave/* from ftp.che.utexas.edu
		also, any GNU archive site (see archive listing below)
description:	Octave is a high-level language, primarily intended for
		numerical computations.  It provides a convenient command line
		interface for solving linear and nonlinear problems
		numerically.
		Octave can do arithmetic for real and complex scalars and
		matrices, solve sets of nonlinear algebraic equations,
		integrate functions over finite and infinite intervals, and
		integrate systems of ordinary differential and
		differential-algebraic equations.
bugs:		bug-octave@che.utexas.edu
restriction:	GNU General Public License
requires:	gnuplot, C++ compiler and FORTRAN compiler or f2c translator.
ports:		several
updated:	1994/2/23

language:	FUDGIT language (math manipulation)
package:	FUDGIT
version:	2.27
parts:		interpreter
author: 	Thomas Koenig <ig25@rz.uni-karlsruhe.de> ??
location:	ftp /pub/linux/sources/usr.bin/fudgit-* from tsx-11.mit.edu ??
description:	FUDGIT is a double-precision multi-purpose fitting program.  It
		can manipulate complete columns of numbers in the form of
		vector arithmetic. FUDGIT is also an expression language
		interpreter understanding most of C grammar except pointers.
		Morever, FUDGIT is a front end for any plotting program
		supporting commands from stdin. It is a nice mathematical
		complement to GNUPLOT, for example.
requires:	GNUPLOT
ports:		AIX, HPUX, Linux, IRIX, NeXT, SunOS, Ultrix
updated:	1993/02/22

language:	Unix BC (arbitrary-precision arithmetic language)
package:	C-BC
version:	1.1
parts:		bytecode compiler, interpreter, documentation, examples
author: 	Mark Hopkins <mark@omnifest.uwm.edu>
location:	alt.sources (10/04/93), or contact author by E-mail.
description:	A strongly typed version of BC with expanded C-like syntax,
		more base types, with ability to form array and pointer types
		of any dimension and to allocate/free arrays at run-time.
conformance:	Most POSIX-BC features supported, except functions must be
		declared consistently and declared before first use.  String
		handling slightly different.
reference:	C-BC implementation notes contained with software documentation
requires:	ANSI-C compiler
ports:		DOS, Unix
portability:	No system dependent features present.
updated:	1993/08/23

language:	Unix BC (arbitrary-precision arithmetic language)
package:	GNU BC
version:	1.02
parts:		parser (yacc), interpreter, BC math library
author: 	Philip A. Nelson <phil@cs.wwu.edu>
location:	ftp bc-1.02.tar.Z from a GNU archive site
description:	BC is an arbitrary precision numeric processing language with a
		C-like syntax that traditionally provided a front-end to DC.
		This version, however, is self-contained and internally
		executes its own compiled code (unrelated to DC code).
conformance:	Superset of POSIX BC (P10003.2/D11), with a POSIX-only mode.
restriction:	Source code falls under the GNU CopyLeft.
requires:	vsprintf and vfprintf routines
ports:		Unix (BSD, System V, MINIX, POSIX)
updated:	?

language:	Calc?  (symbolic math calculator)
package:	Calc
version:	2.02
parts:		interpreter, emacs mode, documentation
author: 	Dave Gillespie <daveg@cs.caltech.edu>
location:	ftp calc-2.02.tar.z from a GNU archive site
description:	Calc is an extensible, advanced desk calculator and
		mathematical tool written in Emacs Lisp that runs as part of
		GNU Emacs.  It is accompanied by the "Calc Manual", which
		serves as both a tutorial and a reference.  If you wish, you
		can use Calc as only a simple four-function calculator, but it
		also provides additional features including choice of algebraic
		or RPN (stack-based) entry, logarithms, trigonometric and
		financial functions, arbitrary precision, complex numbers,
		vectors, matrices, dates, times, infinities, sets, algebraic
		simplification, differentiation, and integration.
bugs:		?
updated:	?

language:	C-like caluculator
package:	Arbitrary precision calculator
version:	1.26.4
parts:		interpreter
author: 	David I. Bell <dbell@canb.auug.org.au>
location:	ftp pub/calc from ftp.uu.net
description:	Arbitrary precision C-like calculator [similar to BC? --ed]
ports:		Linux
updated:	1993/06/15

language:	Unix DC (arbitrary-precision arithmetic language)
package:	GNU DC
version:	0.2
parts:		interpreter
author: 	?
location:	ftp dc-0.2.tar.Z from a GNU archive site
description:	DC is the language for an arbitrary precision postfix
		calculator.  This version is a subset of DC that handles all
		the Unix DC operations, except the (undocumented) array
		operations.
status: 	Attempting integration with GNU BC.
updated:	1993/05/21

language:	Fortran
package:	f2c
version:	1993.04.28
parts:		translator (to C), postscript documentation, man pages, 
		support libraries.
author: 	S. I. Feldman, D. M. Gay, M. W. Maimone and N. L. Schryer
location:	ftp from netlib@research.att.com:netlib/f2c/src/*
description:	translator (Fortran 77 to ANSI C or C++)
bugs:		D. M. Gay <dmg@research.att.com>
updated:	1993 April 27

language:	Fortran
package:	Floppy
version:	?
parts:		?
author: 	?
location:	ffccc in comp.sources.misc archive volume 12
description:	?
contact:	?
updated:	1992/08/04

language:	Fortran
package:	Flow
version:	?
parts:		?
author: 	Julian James Bunn <julian@vxcrna.cxern.ch>
location:	comp.sources.misc archive volume 31
description:	The Flow program is a companion to Floppy, it allows the user 
		to produce various reports on the structure of Fortran 
		77 code, such as flow diagrams and common block tables.
requires:	Floppy
ports:		VMS, Unix, CMS
updated:	?

language:	Fortran
package:	Adaptor (Automatic DAta Parallelism TranslatOR)
version:	1.0
parts:		preprocessor, library, documentation
author: 	?
location:	ftp gmd/adaptor/adp_1.0.tar.Z from ftp.gmd.de
description:	Adaptor is a tool that transforms data parallel
		programs written in Fortran with array extensions,
		parallel loops, and  layout directives	to parallel
		programs with explicit message passing.
		ADAPTOR is not a compiler but a source to source
		transformation that generates Fortran 77 host and
		node programs with message passing.  The new
		generated source codes have to be compiled by the
		compiler of the parallel machine. 
ports:		CM-5, iPCS/860, Meiko CS1/CS2, KSR 1, SGI, Alliant,
		network of Suns, or RS/6000s
contact:	Thomas Brandes <brandes@gmd.de>
updated:	1993/06

language:	Fortran, C
package:	cfortran.h
version:	2.6
parts:		macros, documentation, examples
author: 	Burkhard Burow
location:	ftp cfortran/* from zebra.desy.de
description:	cfortran.h is an easy-to-use powerful bridge between
		C and FORTRAN. It provides a completely transparent, machine
		independent interface between C and FORTRAN routines and
		global data.
		cfortran.h provides macros which allow the C preprocessor to
		translate a simple description of a C (Fortran) routine or
		global data into a Fortran (C) interface.
reference:	reviewed in RS/Magazine November 1992 and
		a user's experiences with cfortran.h are to be described
		in the 1/93 issue of Computers in Physics.
ports:		VAX VMS or Ultrix, DECstation, Silicon Graphics, IBM RS/6000,
		Sun, CRAY, Apollo, HP9000, LynxOS, f2c, NAG f90.
portability:	high
contact:	burow@vxdesy.cern.ch
updated:	1992/04/12

language:	Fortran
package:	fsplit
version:	?
parts:		?
author: 	?
location:	?
description:	a tool to split up monolithic fortran programs
updated:	?

language:	Fortran
package:	?
version:	?
parts:		?
author: 	Steve Mccrea <mccrea@gdwest.gd.com>
location:	?
description:	a tool to split up monolithic fortran programs
requires:	new awk
updated:	?

language:	Fortran
package:	Fortran77 -> Fortran90 converter
version:	? 1
parts:		translator(Fortran 77 -> Fortran 90), documentation?
author: 	metcalf@cernvm.cern.ch <Michael Metcalf>
location:	ftp pub/MandR/convert.f90 from jkr.cc.rl.ac.uk
description:	A Fortran77 to Fortran90 translator.  There's a number of
		significant differences between the two Fortrans that makes
		a package like this useful.
updated:	1993/07/17

language:	J
package:	J from ISI
version:	6
parts:		interpreter, tutorial
author: 	Kenneth E. Iverson and Roger Hui <hui@yrloc.ipsa.reuter.com>
location:	ftp languages/apl/j/* from watserv1.waterloo.edu
description:	J was designed and developed by Ken Iverson and Roger Hui.  It
		is similar to the language APL, departing from APL in using
		using the ASCII alphabet exclusively, but employing a spelling
		scheme that retains the advantages of the special alphabet
		required by APL. It has added features and control structures
		that extend its power beyond standard APL.  Although it can be
		used as a conventional procedural programming language, it can
		also be used as a pure functional programming language.
ports:		Dec, NeXT, SGI, Sun-3, Sun-4, VAX, RS/6000, MIPS, Mac, Acorn
		IBM-PC, Atari, 3b1, Amiga
updated:	1992/10/31

language:	Ratfor
package:	? ratfor ?
version:	?
parts:		translator(Ratfor->Fortran IV)
author: 	Brian Kernighan and P.J. Plauger (wrote the book anyway)
location:	comp.sources.unix archives volume 13
description:	Ratfor is a front end language for Fortran.  It was designed
		to give structured control structures to Fortran.  It is
		mainly of historical significance.
updated:	?

language:	Y (cross between C and Ratfor)
package:	y+po
version:	?
parts:		compiler
author: 	Jack W. Davidson and Christopher W. Fraser
location:	ftp pub/y+po.tar.Z from ftp.cs.princeton.edu
description:	Davidson/Fraser peephole optimizer PO [1-3] [where the GCC RTL
		idea and other optimization ideas came from] along with the Y
		compiler [cross between C+ratfor] is ftpable from
		ftp.cs.princeton.edu: /pub/y+po.tar.Z.	It is a copy of the
		original distribution from the University of Arizona during the
		early 80's, totally unsupported, almost forgotten [do not bug
		the authors] old code, possibly of interest to
		compiler/language hackers.
reference:	Jack W. Davidson and Christopher W. Fraser, "The Design and
		Application of a Retargetable Peephole Optimizer", TOPLAS, Apr.
		1980.
		Jack W. Davidson, "Simplifying Code Through Peephole
		Optimization" Technical Report TR81-19, The University of
		Arizona, Tucson, AZ, 1981.
		Jack W. Davidson and Christopher W. Fraser, "Register
		Allocation and Exhaustive Peephole Optimization"
		Software-Practice and Experience, Sep. 1984.
status: 	history
updated:	?

electrical engineering languages
-------------------------------------------------------------------------------
category:	electrical engineering languages
description:	These are languages used for simulating, designing, and
		specifying circuits.

language:	CASE-DSP (Computer Aided Software Eng. for Digital Signal Proc)
package:	Ptolemy
version:	0.4.1
parts:		grahpical algorithm layout, code generator, simulator
author: 	?
location:	ftp pub/ptolemy/* from ptolemy.bekeley.edu
description:	Ptolemy provides a highly flexible foundation for the
		specification, simulation, and rapid prototyping of systems.
		It is an object oriented framework within which diverse models
		of computation can co-exist and interact.  For example, using
		Ptolemy a data-flow system can be easily connected to a
		hardware simulator which in turn may be connected to a
		discrete-event system, etc.  Because of this, Ptolemy can be
		used to model entire systems.
		In addition, Ptolemy now has code generation capabilities.
		from a flow graph description, Ptolemy can generate both C code
		and DSP assembly code for rapid prototyping.  Note that code
		generation is not yet complete, and is included in the current
		release for demonstration purposes only.
requires:	C++, C
ports:		Sun-4, MIPS/Ultrix; DSP56001, DSP96002.
status: 	active research project
discussion:	ptolemy-hackers-request@ohm.berkeley.edu
contact:	ptolemy@ohm.berkeley.edu
updated:	1993/04/22

language:	EDIF (Electronic Design Interchange Format)
package:	Berkeley EDIF200 
version:	7.6
parts:		translator-building toolkit
author: 	Wendell C. Baker and Prof A. Richard Newton of the Electronics 
		Research Laboratory, Department of Electrical Engineering and 
		Computer Sciences at the University of California, Berkeley, CA
location:	ftp from pub/edif in ic.berkeley.edu
description:	?
restriction:	no-profit w/o permission
ports:		?
updated:	1990/07

language:	Verilog, XNF
package:	XNF to Verilog Translator
version:	?
parts:		translator(XNF->Verilog)
author: 	M J Colley <martin@essex.ac.uk>
location:	ftp pub/dank/xnf2ver.tar.Z from punisher.caltech.edu
description:	This program was written by a postgraduate student as part
		of his M.Sc course, it was designed to form part a larger
		system operating with the Cadence Edge 2.1 framework. This
		should be born in mind when considering the construction
		and/or operation of the program.
updated:	?

language:	VHDL
package:	ALLIANCE
version:	1.1
parts:		compiler, simulator, tools and environment, documentation
author: 	?
location:	ftp pub/cao-vlsi/alliance from ftp-masi.ibp.fr
description:	ALLIANCE 1.1 is a complete set of CAD tools for teaching
		Digital CMOS VLSI Design in Universities. It includes VHDL
		compiler and simulator, logic synthesis tools, automatic place
		and route, etc...  ALLIANCE is the result of a ten years effort
		at University Pierre et Marie Curie (PARIS VI, France).
ports:		Sun4, also not well supported: Mips/Ultrix, 386/SystemV
discussion:	alliance-request@masi.ibp.fr
contact:	cao-vlsi@masi.ibp.fr
updated:	1993/02/16
-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!gatech!news-feed-1.peachnet.edu!news.duke.edu!MathWorks.Com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p5of5]
Message-ID: <free5-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free5-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free4-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:48 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1354
Xref: bloom-beacon.mit.edu comp.compilers:3321 comp.lang.misc:5189 comp.archives.admin:679 news.answers:23371 comp.answers:6569

Archive-name: free-compilers/part5
Last-modified: 1994/6/30
Version: 6.5

Wirth family languages
------------------------------------------------------------------------------
category:	Wirth family languages
description:	These are the languages that were either designed by Niklaus
		Wirth are are descended from them.  
lref:		IFP

language:	CLU
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Modula-2, Pascal
package:	m2
version:	? 7/2/92 ?
parts:		? compiler ?
author: 	Michael L. Powell.  See description below.
location:	ftp pub/DEC/Modula-2/m2.tar.Z from gatekeeper.dec.com
description:	A modula-2 compiler for VAX and MIPS.  A Pascal
		compiler for VAX is also included.  The Pascal compiler
		accepts a language that is almost identical to Berkeley
		Pascal.  It was originally designed and built by Michael L.
		Powell, in 1984.  Joel McCormack made it faster, fixed lots of
		bugs, and swiped/wrote a User's Manual.  Len Lattanzi ported it
		to the MIPS.
conformance:	extensions:	
		+ foreign function and data interface
		+ dynamic array variables
		+ subarray parameters
		+ multi-dimensional open array parameters
		+ inline proceedures
		+ longfloat type
		+ type-checked interface to C library I/O routines
restriction:	must pass changes back to Digital
ports:		vax (ultrix, bsd), mips (ultrix)
contact:	modula-2@decwrl.pa.dec.com
updated:	1992/07/06

language:	Modula-2
package:	Ulm's Modula-2 System
version:	2.2.1
parts:		compiler, library, tools
author: 	Andreas Borchert <borchert@mathematik.uni-ulm.de>
		compiler derived from the ETHZ compiler for the Lilith system
location:	ftp pub/soft/modula/ulm/sun3/modula-2.2.1.tar.Z from
		titania.mathematik.uni-ulm.de.	Please get the READ_ME too.
description:	?
conformance:	PIM3
restriction:	commercial use requires licence;
		compiler sources available by separate licence agreement
		(licence fee is not required if it is possible to
		transfer the sources across the network)
requires:	gas-1.36 (to be found in the same directory)
ports:		Sun3, Nixdorf Targon/31, Concurrent 3200 Series
contact:	Andreas Borchert <borchert@mathematik.uni-ulm.de>
updated:	1992/03/02 

language:	Modula-2
package:	mtc
version:	?
parts:		translator(C)
author: 	?
location:	ftp pub/unix/programming/compilerbau/mtc.tar.Z 
		from ftp.uni-stuttgart.de 
description:	A Modula-2 to C translator
ports:		?
updated:	1994/04/29

language:	Modula-2
package:	mocka
version:	9404
parts:		compiler, library, examples, docs
author: 	? Holger Hopp <hopp@ira.uka.de>
location:	ftp /pub/mocka/linux/mocka9404* from i44.s10.ira.uka.de 
		or ftp /pub/Linux/devel/modula-2/mocka9404* 
			from sunsite.unc.edu
description:	A free version of a Modula-2 compiler for the Intel X86
		under Linux or 386BSD (and derivatives?). Source code
		in Modula-2 is available.
ports:		Linux and 386BSD (also commercial versions)
updated:	1994/04/29

language:	Modula-2* (parallel extension)
package:	IPD Modula-2* Programming Environment
version:	9401
parts:		translator (->C), debugger (SUN4 only), X Windows
		user panel, automatic cross-architecture make,
		sequential and parallel libraries, examples, documentation
author: 	IPD Modula-2* team <msc@ira.uka.de> consisting of the
		following kernel contributors:
		   Thomas Gauweiler, Stefan U. Haenssgen, Ernst A. Heinz,
		   Paul Lukowicz, Hendrik Mager, Michael Philippsen.
location:	ftp.ira.uka.de (129.13.10.90) in pub/programming/modula2star/
description:	Modula-2* is an extension of Modula-2 for highly parallel,
		portable programs.  IPD Modula-2* is provided freely for
		research, educational and classroom use.  A complete sequential
		Modula-2 environment in provided complemented with a set of
		parallel libraries, which even include routines for
		implementing low-level parallel operations.  The employment of
		of C translator allows increased accessibility to actual
		parallel machines (many have nothing lower-level than C), at
		the expense of Modula-2 features of arrays bounds checking
		and symbolic debugging at the Modula-2* level.
		[An interpreter could be written with functionality subsuming
		 that of a symbolic debugger. -- Mark]
conformance:	PIM but not ISO compliant
reference:	*  J.R. Smith. "The design and analysis of parallel
		   algorithms. Chapter 3: Modula-2*." Oxford University
		   Press, December 1992.
		*  M. Philippsen, E.A. Heinz, and P. Lukowicz. "Compiling
		   machine-independent parallel programs." ACM SIGPLAN
		   Notices, v. 28, no. 8, pp. 99-108, August 1993.
		*  M. Philippsen, T.M. Warschko, W.F. Tichy, C.G. Herter,
		   E.A. Heinz, and P. Lukowicz.  "Project Triton: Towards
		   improved programmability of parallel computers." In
		   D.J. Lija and P.L. Bird (eds), The Interaction of
		   Compilation Technology and Computer Architecture, Kluwer
		   Academic Publishers, 1994.
		Others available from i41s10.ira.uka.de (129.13.13.110)
		in pub/m2s/*.ps
ports:		386 and above with BSDI/386 or Linux (sequential),
		KSR-1/KSR-2 with KSR-OS (sequential and parallel),
		DECStation (R3000/R4000) with Ultrix (sequential),
		   MP-1/MP-2 (DECStation frontend) with MP-Ultrix (parallel)
		SUN (Sun-3, Sun-4 SPARCStation) with SunOS (sequential),
portability:	sources are for GMD Mocka Modula-2 compiler
status: 	supported
updated:	???

language:	Modula-2, Modula-3
package:	M2toM3
version:	1.01
parts:		translator(Modula-2 -> Modula-3), libraries
author: 	Peter Klein <pk@i3.informatik.rwth-aachen.de>
location:	ftp pub/Modula3 from martha.informatik.rwth-aachen.de
description:	M2toM3 is a simple Modula-2 to Modula-3 translator which
		covers most of the syntactic differences between those
		languages.  No context sensitive analysis is done, so WITH
		statements, local modules, enumeration type literals and
		variant RECORDS have to be dealt with by hand.
		Part of the SUN Modula 2 library is emulated by the Modula 3
		library
requires:	a Modula-3 system
updated:	1992/12

language:	pm2
package:	PRAM emulator and parallel modula-2 compiler ??
version:	?
parts:		compiler, emulator
author: 	?
location:	ftp pub/pram/* from cs.joensuu.fi
description:	A software emulator for parallel random access machine (PRAM)
		and a parallel modula-2 compiler for the emulator.  A PRAM
		consists of P processors, an unbounded shared memory, and a
		common clock. Each processor is a random access machine (RAM)
		consisting of R registers, a program counter, and a read-only
		signature register. Each RAM has an identical program, but the
		RAMs can branch to different parts of the program. The RAMs
		execute the program synchronously one instruction in one clock
		cycle.
		pm2 programming language is Modula-2/Pascal mixture having
		extensions for parallel execution in a PRAM. Parallelism is
		expressed by pardo-loop- structure. Additional features include
		privat/shared variables, two synchronization strategies, load
		balancing and parallel dynamic memory allocation.
contact:	Simo Juvaste <sjuva@cs.joensuu.fi>
updated:	1993/02/17

language:	Modula-3
package:	SRC Modula-3
version:	2.11
parts:		compiler(->C), runtime, library, documentation
author: 	?
location:	ftp pub/DEC/Modula-3/m3-*.tar.Z from gatekeeper.dec.com
    MSDOS:	ftp pub/DEC/Modula-3/contrib/m3pc* from gatekeeper.dec.com
description:	The goal of Modula-3 is to be as simple and safe as it
		can be while meeting the needs of modern systems
		programmers.  Instead of exploring new features, we
		studied the features of the Modula family of languages
		that have proven themselves in practice and tried to
		simplify them into a harmonious language.  We found
		that most of the successful features were aimed at one
		of two main goals: greater robustness, and a simpler,
		more systematic type system.  Modula-3 retains one of
		Modula-2's most successful features, the provision for
		explicit interfaces between modules.  It adds objects
		and classes, exception handling, garbage collection,
		lightweight processes (or threads), and the isolation
		of unsafe features.
conformance:	implements the language defined in SPwM3.
ports:		i386/AIX 68020/DomainOS Acorn/RISCiX MIPS/Ultrix 68020/HP-UX
		RS6000/AIX IBMRT/4.3 68000/NextStep i860/SVR4 SPARC/SunOS
		68020/SunOS sun386/SunOS Multimax/4.3 VAX/Ultrix
discussion:	comp.lang.modula3
contact:	Bill Kalsow <kalsow@src.dec.com>
updated:	1992/02/09

language:	Oberon2
package:	Oberon-2 LEX/YACC definition 
version:	1.4
parts:		parser(yacc), scanner(lex)
author: 	Stephen J Bevan <bevan@cs.man.ac.uk>
location:	ftp pub/oberon/tools/o2lexyac.tar.Z from ftp.psg.com
		or mail bevan@cs.man.ac.uk with Subject "b-server-request~
		and body "send oberon/oberon_2_p_v1.4.shar"
description:	A LEX and YACC grammar for Oberon 2 based on the one given
		in the listed reference.
reference:	The Programming Language Oberon-2
		H. M\"{o}ssenb\"{o}ck, N. Wirth
		Institut f\"{u}r Computersysteme, ETH Z\"{u}rich
		January 1992
		ftp Oberon/Docu/Oberon2.Report.ps.Z from neptune.inf.ethz.ch
restriction:	Portions of the source under copyright by U. Manchester.
status: 	un-officially supported
updated:	1992/07/06

language:	Oberon
package:	Ceres workstation Oberon System
version:	?
parts:		compiler
author: 	?
location:	ftp Oberon/? from neptune.ethz.ch
description:	file format is Oberon, binary header
status: 	The sources to the various _full_ implementations are indeed
		not available but the source to most of the complete Ceres
		workstation Oberon System, including NS32032 code generator but
		less low level system specific is available. This includes the
		complete Oberon compiler written in Oberon.
updated:	?

language:	Parallaxis
package:	parallaxis
version:	2.0
parts:		?, simulator, x-based profiler
author: 	?
location:	ftp pub/parallaxis from ftp.informatik.uni-stuttgart.de
description:	Parallaxis is a procedural programming language based
		on Modula-2, but extended for data parallel (SIMD) programming.
		The main approach for machine independent parallel programming 
		is to include a description of the virtual parallel machine 
		with each parallel algorithm.
ports:		MP-1, CM-2, Sun-3, Sun-4, DECstation, HP 700, RS/6000
contact:	? Thomas Braunl <braunl@informatik.uni-stuttgart.de> ?
updated:	1992/10/23

language:	Pascal
package:	p2c
version:	1.20
parts:		translator(Pascal->C)
author: 	Dave Gillespie <daveg@synaptics.com>
location:	ftp ? from csvax.cs.caltech.edu
description:	?
conformance:	supports ANSI/ISO standard Pascal as well as substantial 
		subsets of HP, Turbo, VAX, and many other Pascal dialects.
ports:		?
updated:	1990/04/13

language:	Pascal
package:	Pascal P4 compiler and interpreter
version:	? 1
parts:		compiler, assembler/interpreter, documentation
author: 	Urs Ammann, Kesav Nori, Christian Jacobi
location:	ftp pascal/* from ftp.cwi.nl
description:	A compiler for Pascal written in Pascal, producing an
		intermediate code, with an assembler and interpreter
		for the code.
reference:	Pascal Implementation, by Steven Pemberton and Martin
		Daniels, published by Ellis Horwood, Chichester, UK
		(an imprint of Prentice Hall), ISBN: 0-13-653-0311.
		Also available in Japanese.
contact:	Steven.Pemberton@cwi.nl
updated:	1993/07/05

language:	Pascal
package:	? iso_pascal ?
version:	?
parts:		scanner(lex), parser(yacc)
author: 	?
location:	comp.sources.unix archive volume 13
description:	?
updated:	?

language:	Pascal
package:	pasos2
version:	Alpha
parts:		Compiler, run-time library
author: 	Willem Jan Withagen <wjw@eb.ele.tue.nl>
location:	ftp pub/src/pascal/pasos2* from ftp.eb.ele.tue.nl
description:	a PASCAL/i386 compiler which generates 
		code for OS/2 and DOS. It uses EMX as DOS extender and
		GNU/GAS,  MASM or TASM as assembler.
updated:	1993/12/17

language:	Pascal
package:	ptc
version:	?
parts:		translator(Pascal->C)
author: 	?
location:	ftp languages/ptc from uxc.sco.uiuc.edu ?  (use archie?)
description:	?
contact:	?
updated:	?

language:	Turbo Pascal, Turbo C
package:	tptc
version:	?
parts:		translator(Turbo Pascal->Turbo C)
author: 	?
location:	ftp mirrors/msdos/turbopas/tptc17*.zip from wuarchive.wustl.edu
description:	(It does come with full source and a student recently used it
		as a start for a language that included stacks and queues as a
		built-in data type.
contact:	?
updated:	?

language:	Pascal
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

assemblers
-------------------------------------------------------------------------------
category:	assemblers

language:	various assembly
package:	GNU assembler (GAS)
version:	2.3
parts:		assembler, documentation
author: 	?
location:	ftp gas-*.tar.z from a GNU archive site
description:	Many CPU types are now handled, and COFF and IEEE-695 formats
		are supported as well as standard a.out.
bugs:		bug-gnu-utils@prep.ai.mit.edu
ports:		Sun-3, Sun-4, i386/{386BSD, BSD/386, Linux, PS/2-AIX},
		VAX/{Ultrix,BSD,VMS}
updated:	1993/11/11

language:	various assembly
package:	fas: Frankenstein Cross Assemblers
version:	?
parts:		base assembler, parser modules (yacc), documentation?
author: 	Mark Zenier
location:	ftp.njit.edu:/pub/msdos/frankasm/frankasm.zoo
		[Inform me of the other sites -Mark]
description:	A reconfigurable assembler package, especially suited for
		8-bit processors, consisting of a base assembler module and
		a yacc parser, for each microprocessor, to handle mnemonics and
		addressing.  Second party parser modules available from many
		sites.
requires:	YACC
updated:	?

language:	6502, Z80, 8085, 68xx
package:	?
version:	?
parts:		?
author: 	msmakela@cc.helsinki.fi and Alan R. Baldwin
location:	ftp ? from ccosun.caltech.edu
description:	I have enhanced a set of 68xx and Z80 and 8085 cross assemblers
		to support 6502. These assemblers run on MS-DOS computers or on
		any systems that support standard Kerninghan & Richie C, for
		example, Amiga, Atari ST and any "big" machines
updated:	1993/03/10

language:	6502
package:	?
version:	?
parts:		assembler, manual
author: 	Doug Jones <jones@cs.uiowa.edu> ?
location:	send mail to author
description:	Supports macro and conditional features, even, as well as 
		being usable for linkage editing of object files.
requires:	Pascal
updated:	?

language:	mc6809
package:	usim
version:	? 0.90
parts:		simulator, documentation
author: 	Ray P. Bellis <rpb@psy.ox.ac.uk>
location:	ftp /pub/mc6809/usim-* from ftp.cns.ox.ac.uk
		Alt.sources archive at FTP site:
		   wuarchive.wustl.edu in usenet/alt.sources/articles
		   files 10405.Z 10406.Z and 10407.Z
description:	a mc6809 simulator
updated:	? 1993/02/14

language:	mc6809
package:	6809, E-Forth
version:	?
parts:		assembler, simulator
author: 	Lennart Benschop <lennart@blade.stack.urc.tue.nl>
location:	alt.sources, 1993/11/03 <2b8i2r$j0e@tuegate.tue.nl>
description:	An assembler and simulator for the Motorola M6809 processor.
		Also included is a Forth interpreter, E-Forth written
		in 6809.
ports:		assembler: Unix, DOS; simulator: Unix
updated:	1993/11/03

language:	68HC11
package:	68HC11 simulator
version:	? 1
parts:		simulator
author: 	Ted Dunning <ted@nmsu.edu>
location:	ftp pub/non-lexical/6811/sim6811.shar from crl.nmsu.edu
description:	An opcode simulator for the 68HC11 processor.  Interrupts,
		hardware I/O, and half carries are still outside the loop.
		[Adding interrupts may require simulating at the clock phase
		level -Mark]
ports:		unix?, ms-dos
updated:	1993/07/28

language:	8051
package:	CAS 8051 Assembler
version:	1.2
parts:		assembler/linker, disassembler, documentation, examples
author: 	Mark Hopkins <mark@freenet.uwm.edu>
location:	ftp pub/8051/assem from lyman.pppl.gov
    Europe:	ftp pub/microprocs/MCS-51/csd4-archive/assem from nic.funet.fi
description:	experimental one-pass assembler for the 8051 with C-like
		syntax.  Most features of a modern assembler included except
		macros (soon to be added).  Other software tools and
		applications contained in /pub/compilers/8051/*.
requires:	ANSI-C compiler
ports:		MSDOS, Ultrix, Sun4 (contact author)
updated:	1993/07/22

language:	8051
package:	as31 - An 8031/8051 assembler.
version:	? 1
parts:		assembler, parser(yacc), documentation
author: 	Ken Stauffer <stauffer@cpsc.ucalgary.ca>
		(Theo Deraadt wrote the S-record output routines)
location:	comp.sources.misc volume 10
description:	Assembler with ability to produce a variety of object output
		formats, including S-records.
ports:		SUN 3 / SUN 4 (SunOS 4.0), Tandy 6000 (Xenix)
portability:	File I/O may require porting on non-Unixs.
updated:	1990/01/26

language:	Motorola DSP56000
package:	?
version:	1.1
parts:		assembler
author: 	Quinn Jensen <jensenq@qcj.icon.com>
location:	alt.sources archive or ftp ? from wuarchive.wustl.edu
description:	?
updated:	?

language:	Motorola DSP56001
package:	a56
version:	1.1
parts:		assembler
author: 	Quinn C. Jensen <jensenq@qcj.icon.com>
location:	alt.sources archive
description:	?
updated:	1992/08/10

language:	80486
package:	WDASM17B.ZIP - Windows 80486 Disassembler for Windows 3.1
version:	1.7b
parts:		disassembler
author: 	Eric Grass <S876795@UMSLVMA.UMSL.EDU>
location:	SIMTEL20, pd1:<msdos.windows3>
description:	An interactive 80486 disassembler for Windows 3.1.  Multiple
		options for formatting disassembly exist.
ports:		Windows3.1
portability:	Windows-specific
updated:	1993/06/29

language:	Assembly (SPARC)
package:	elfdis
version:	2.3
parts:		disassembler
author: 	Bruce Ediger <bediger@teal.csn.org>
location:	comp.sources.misc archives volume 42, issue 83
description:	An object code disassembler for SPARC which, unlike the native
		SPARC disassembler, uses the relocation and dynamic linking
		information in the Elf file.
updated:	1994/05/08

macro preprocessors
-------------------------------------------------------------------------------
category:	macro preprocessors
description:	These are tools that expand macros for another language.
iref:		(C) GNU CC
iref:		(C) lcc    [I assume lcc has a preprocessor? --ed]

language:	C preprocessor
package:	Decus cpp
version:	?
parts:		pre-processor
author: 	Martin Minow 
location:	included in the X11R5 distribution as contrib/util/cpp
description:	An almost-ANSI C preprocessor.	It is shipped with X11R5
		because some systems don't have a working cpp.
ports:		VMS (Vax C, Decus C), RSX-11M, RSTS/E, P/OS, and RT11,
		A/UX, Apollo Domain/IX 9.6, etc.
portability:	very high
updated:	?

language:	C-Refine, C++-Refine, *-Refine
package:	crefine
version:	3.0
parts:		pre-processor, documentation
author: 	Lutz Prechelt <prechelt@ira.uka.de>
location:	aquire from any comp.sources.reviewed archive
description:	C-Refine is a preprocessor for C and languages that
		vaguely resemble C's syntax.  It allows symbolic naming
		of code fragments so as to redistribute complexity and
		provide running commentary.
ports:		unix, msdos, atari, amiga.
portability:	high
updated:	1992/07/16

language:	m4
package:	pd/bsd m4
version:	?
parts:		interpreter, man page
author: 	Ozan Yigit <oz@sis.yorku.ca>, 
		Richard A. O'Keefe <ok@goanna.cs.rmit.OZ.AU>
location:	ftp from any 386BSD, NetBSD, or FreeBSD archive
description:	A macro preprocessor, more flexible than cpp
conformance:	?
updated:	1993/11/03

language:	m4
package:	GNU m4
version:	1.1
parts:		interperter, ?
author: 	Francois Pinard <pinard@iro.umontreal.ca>
location:	ftp m4-1.0.tar.Z from a GNU archive site
    Macintosh:	ftp pub/software/mac/src/mpw-c/* from nic.switch.ch.
description:	A macro preprocessor, more flexible than cpp.
		It copies its input to the output, expanding macros.  Macros
		are either built-in or user-defined.  `m4' has built-in
		functions for including files, running Unix commands, doing
		integer arithmetic, manipulating text in various ways,
		recursing, etc.  `m4' can be used either as a front-end to a
		compiler or as a macro processor in its own right.
conformance:	?
restriction:	GNU General Public License
updated:	1993/11/08

special purpose languages
-------------------------------------------------------------------------------
category:	special purpose languages
description:	Languages with very specific purposes that are the only free
		language in that niche (otherwise they would have a category)

language:	ADL (Adventure Definition Language)
package:	ADL
version:	?
parts:		interpreter
author: 	Ross Cunniff <cunniff@fc.hp.com>, Tim Brengle
location:	comp.sources.games archive volume 2
description:	An adventure language, semi-object-oriented with LISP-like
		syntax.  A superset of DDL.
updated:	?

language:	ASA
package:	Adaptive Simulated Annealing (ASA)
version:	1.53
parts:		?
author: 	Lester Ingber <ingber@cco.caltech.edu>
location:	ftp pub/ingber/? from ftp.caltech.edu  
description:	? Language interface to neural net simulator?
discussion:	asa-request@alumni.caltech.edu
updated:	1993/11/14

language:	ASN.1 (Abstract Syntax Notation One) (ITU TS X.208/ISO 8824)
package:	snacc (Sample Neufeld ASN.1 to C/C++ Compiler)
version:	1.1
parts:		compiler, runtime BER libraries, utility progs
author: 	Mike Sample <msample@cs.ubc.ca>
location:	ftp /pub/local/src/snacc/snacc1.1.tar.Z from cs.ubc.ca
description:	ASN.1 is a language used to describe data structures
		in a machine and implementation lang independent way.  Basic
		Encoding Rules (BER) provide a universal (contiguous) 
		representation of data values. ASN.1 & BER were designed to
		exchange data (with complex structure) over networks.
		OSI Application protocols such as X.400 MHS (email) and 
		X.500 directory and others protocols such as SNMP use ASN.1
		to describe the PDUs they exchange.
		Snacc compiles 1990 ASN.1 (including some macros) data 
		structures into C, C++ or type tables. The generated 
		C/C++ includes a .h file with the equivalent data struct
		and a .c/.C file for the BER encode and decode, print and
		free routines.
reference:	Michael Sample and Gerald Neufeld, "Implementing Efficient
		Encoders and Decoders for Network Data Representations",
		IEEE INFOCOM '93 Proceedings, Vol 3, pp 1143-1153, Mar 1993
		Michael Sample, "How Fast Can ASN.1 Encoding Rules Go?",
		M.Sc. Thesis, University of British Columbia, Apr 1993
restriction:	Compiler under GNU Public License. No restriction on libs
		and C/C++/tables generated by snacc.
		If you use it in a commercial product please let us know.
requires:	yacc (or bison), lex (or flex) and cc (ANSI or non-ANSI)
contact:	Barry Brachman <brachman@cs.ubc.ca> or <snacc-bugs@cs.ubc.ca>
updated:	1993/07/12

language:	Duel (a <practical> C debugging language)
package:	DUEL
version:	1.10
parts:		interpreter, stand-alone module, documentation, test suites
author: 	Michael Golan <mg@cs.princeton.edu>
location:	ftp duel/* from ftp.cs.princeton.edu
description:	DUEL acts as front end to gdb.	It implements a language
		designed for debbuging C programs.  It maily features 
		efficient ways to select and display data items.  It is
		normally linked into the gdb executable, but could stand
		alone.	It interprets a subset of C in addition to its 
		own language.
requires:	gdb
status: 	author is pushing the system hard.
updated:	1993/03/20

language:	IDL (Project DOE's Interface Definition Language)
package:	SunSoft OMG IDL CFE
version:	1.2
parts:		compiler front end, documentation
author: 	SunSoft Inc.
location:	ftp pub/OMG_IDL_CFE_1.2/* from omg.org
description:	OMG's (Object Management Group) CORBA 1.1 (Common
		Object Request Broker Architecture) specification
		provides the standard interface definition between
		OMG-compliant objects.	IDL (Interface Definition
		Language) is the base mechanism for object
		interaction.  The SunSoft OMG IDL CFE (Compiler Front
		End) provides a complete framework for building CORBA
		1.1-compliant preprocessors for OMG IDL.  To use
		SunSoft OMG IDL CFE, you must write a back-end; full
		instructions are included.  A complete compiler of IDL would
		translate IDL into client side and server side routines for
		remote communication in the same manner as the currrent Sun
		RPCL compiler. The additional degree of freedom that the IDL
		compiler front end provides is that it allows integration of 
		new back ends which can translate IDL to various programming
		languages.  Several companies including Sunsoft are building
		back ends to the CFE which translate IDL into target languages,
		e.g. Pascal or C++, in the context of planned CORBA-compliant
		products.
requires:	C++ 2.1 conformant C++ compiler
contact:	idl-cfe@sun.com
updated:	1993/05/04

language:	NeuDL
package:	NeuDL - Neural-Network Description Language
version:	0.2
parts:		NeuDL interpreter, translator (NewDL->C++), user manual,
		NeuDL paper, examples
author: 	Joey Rogers <jrogers@buster.eng.ua.edu>
location:	cs.ua.edu in /pub/neudl/NeuDLver02.tar.gz
description:	A prototype of a neural network description language with a
		C++ - like syntax currently limited to backpropagation neural
		nets.  There is enough flexibility in the language, though, to
		allow users to create dynamic neural net configurations.  The
		source is written in C++.
updated:	1994/05/23

language:	NewsClip ?
package:	NewsClip
version:	1.01
parts:		translator(NewsClip->C), examples, documentation
author: 	Looking Glass Software Limited but distributed by 
		ClariNet Communications Corp.
location:	?
description:	NewsClip is a very high level language designed for
		writing netnews filters.  It translates into C.
		It includes support for various newsreaders.
restriction:	Cannot sell the output of the filters.	Donation is hinted at.
status: 	supported for ClariNet customers only
contact:	newsclip@clarinet.com
updated:	1992/10/25

language:	PROGRESS
package:	PROGRESS
version:	RWTH 5.10
parts:		environment, interpreter, database, ?
author: 	Dr. Andy Schuerr <andy@i3.informatik.rwth-aachen.de>,
		Albert Zuendorf <albert@i3.informatik.rwth-aachen.de>
location:	send mail to authors
    sun4-bin:	ftp pub/unix/PROGRES/? from ftp.informatik.rwth-aachen.de
description:	PROGRES is an integrated environment for a very high level
		programming language which has a formally defined semantics
		based on "PROgrammed Graph Rewriting Systems". This language
		supports the following programming paradigms/purposes:	1)
		Structurally object-oriented specification of attributed graph
		structures with multiple inheritance hierarchies and types of
		types (for parametric polymorphy).  2) Declarative/relational
		specification of derived attributes, node sets, binary
		relationships (directed edges), and Boolean constraints.  3)
		Rule-oriented/visual specification of parameterized graph
		rewrite rules with complex application conditions.  4)
		Nondeterministic & imperative programming of composite graph
		transformations (with built-in backtracking and cancelling
		arbitrary sequences of failing graph modifications).
		Therefore, PROGRES may be used as 1) a very high level
		programming language for implementing abstract data types with
		a graph-like internal structure, 2) a visual database
		programming language for the graph-oriented database system
		GRAS (which is available as free software under the GNU license
		conditions), 3) a rule-oriented language for rapid prototyping
		nondeterministically specified data/rule base transformations.
		Furthermore, PROGRES is an almost statically typed language
		which additionally offers "down casting" operators for runtime
		checked type casting/conversion (in order to avoid severe
		restrictions concerning the language's expressiveness).  
		PROGRESS is meant to be used with GRAS, which is also available
updated:	1993/11/02

language:	Tiny
package:	Omega test, Extended Tiny
version:	3.2.2
parts:		translator(fortran->tiny), tiny interpreter?, analysis tools
author: 	William Pugh <pugh@cs.umd.edu> and others
location:	ftp pub/omega from ftp.cs.umd.edu
description:	The Omega test is implemented in an extended version of
		Michael Wolfe's tiny tool, a research/educational tool
		for examining array data dependence algorithms and
		program transformations for scientific computations.
		The extended version of tiny can be used as a
		educational or research tool.  The Omega test: A system
		for performing symbolic manipulations of conjunctions
		of linear constraints over integer variables.  The
		Omega test dependence analyzer: A system built on top
		of the Omega test to analyze array data dependences.
contact:	omega@cs.umd.edu
updated:	1992/11/13

language:	Extended Tiny
package:	Extended Tiny
version:	3.0 (Dec 12th, 1992)
parts:		programming environment, dependence tester, tests
		translator(Fortran->tiny), documentation, tech. reports
author: 	original author: Michael Wolfe <cse.ogi.edu>,
		extended by William Pugh et al. <pugh@cs.umd.edu>
location:	ftp pub/omega from cs.umd.edu
description:	A research/educational tool for experimenting with
		array data dependence tests and reordering transformations.
		It works with a language tiny, which does not have procedures,
		goto's, pointers, or other features that complicate dependence
		testing. The original version of tiny was written by Michael
		Wolfe, and has been extended substantially by a research group
		at the University of Maryland. Michael Wolfe has made further
		extensions to his version of tiny.
ports:		Any unix system (xterm helpful but not required)
contact:	Omega test research group <omega@cs.umd.edu>
updated:	1993/01/23

language:	SQL
package:	_lex & yacc_ by Levine, Mason & Brown published by O'Reilly
version:	?
parts:		book, grammar
author: 	Levine, Mason & Brown
location:	buy the book, or ftp published/oreilly/nutshell/lexyacc/? 
		from ftp.uu.net.
description:	In _lex & yacc_, by Levine, Mason & Brown an SQL parser
		is included as an example grammar
updated:	?

language:	SQL
package:	MultiCal System
version:	?
parts:		?
author: 	Richard Snodgrass?
location:	ftp tsql/multical from FTP.cs.arizona.edu.
description:	[Anyone care to write a description? - ed]
restriction:	public domain, freely available
contact:	rts@cs.arizona.edu
updated:	?

language:	ModSim - U. S. Army ModSim compiler
package:	USAModSim
version:	1.0
parts:		compiler(->C), compilation manager, browser, library, 
		database interface language, documentation
author: 	?
location:	ftp from max.cecer.army.mil in /ftp/isle
description:	ModSim is a general-purpose, block-structured, object-
		oriented programming language with built in support
		for Simulation. Its "parent languages" are Modula-2 and
		Simula. It supports multiple inheritance, templates,
		reference types, polymorphism, and process-oriented
		simulation with synchronous and asynchronous activities
		using explicit simulation time.
		The documentation is extensive (>300 pages) and very good.
ports:		SPARC/SunOS, Silicon Graphics.
		According to the Doc, there is a DOS-Version (not found
		on the server.
contact:	Charles Herring <herring@lincoln.cecer.army.mil>
updated:	1993/12/29

natural languages
-------------------------------------------------------------------------------
category:	natural languages
description:	These are tools that interact with human languages.

language:	natural languages 
package:	Pleuk grammar development system
version:	1.0
parts:		shell, examples, documentation
author: 	Jo Calder <jcalder@cs.sfu.ca>, Kevin Humphreys 
		<kwh@cogsci.ed.ac.uk>, Chris Brew <chrisbr@cogsci.ed.ac.uk>,
		Mike Reape <mreape@cs.tcd.ie>
location:	ftp from hostname ai.uga.edu: /ai.natural.language/
description:	A shell for grammar development, handles various grammatical
		formalisms.
requires:	SICStus Prolog version 2.1#6 or later, and other programs
		readily available from the public domain.
contact:	pleuk@cogsci.ed.ac.uk.	
updated:	1993/06/18

language:	natural languages
package:	proof
version:	?
parts:		parser, documentation
author: 	Craig R. Latta <latta@xcf.Berkeley.EDU>
location:	ftp src/local/proof/* from scam.berkeley.edu
description:	a left-associative natural language grammar scanner
bugs:		proof@xcf.berkeley.edu
ports:		Decstation3100 Sun-4
discussion:	proof-request@xcf.berkeley.edu ("Subject: add me")
updated:	1991/09/23

curiosities
-------------------------------------------------------------------------------
category:	curiosities
description:	These are the languages and tools that I could not fit into one
		of the other categories.   I am quite willing to reclassify
		these if provided with a rational way to do so.

language:	a1 (Address 1 code)
package:	a1 code interpreter
version:	? 1
parts:		interpreter, examples
author: 	Matthew Newhook <matthew@engr.mun.ca>
location:	garfield.cs.mun.ca:/pub/a1/a1.tar.Z
description:	An address 1 code interpreter used to test compiler output.
requires:	gcc 2.4.2 or higher
portability:	Ports to machine without memory segment protection unverified.
updated:	1993/06/02

language:	INTERCAL
package:	C-INTERCAL
version:	0.9
parts:		compiler, library, documentation
author: 	Eric S. Raymond <esr@snark.thyrsus.com>
location:	ftp pub/intercal/intercal0.9.* from sequoia.lle.rochester.edu
description:	INTERCAL is possibly the most elaborate and long-lived joke
		in the history of programming languages.  It was first designed
		by Don Woods and Jim Lyons in 1972 as a deliberate attempt
		to produce a language as unlike any existing one as possible.
		The manual, describing features of horrifying uniqueness,
		became an underground classic.	ESR wrote C-INTERCAL in 1990
		as a break from editing _The_New_Hacker's_Dictionary_, adding
		to it the first implementation of COME FROM under its own name.
		The compiler has since been maintained and extended by an
		international community of technomasochists.  The distribution
		includes extensive documentation and a program library.
		C-INTERCAL is actually an INTERCAL-to-C source translator which
		then calls the local C compiler to generate a binary.  The code
		is thus quite portable.
contact:	Steve Swales <steve@bat.lle.rochester.edu>
updated:	1993/05/20

language:	Logo
package:	logo
version:	4
parts:		interpreter
author: 	?
location:	comp.sources.unix archive volume 10
description:	?
updated:	?

language:	Logo
package:	Berkeley Logo
version:	3.0
parts:		interpreter
author: 	Brian Harvey <bh@anarres.CS.Berkeley.EDU>
location:	ftp pub/ucblogo/* from anarres.cs.berkeley.edu
description:	+ Logo programs are compatible among Unix, PC, and Mac.
		+ "richer" than MswLogo?
		- pretty slow.
		- doesn't do anything fancy about graphics.  (One turtle.)
ports:		unix, pc, mac
updated:	1993/08/06

language:	Logo
package:	MswLogo
version:	3.5
parts:		interpreter
author: 	George Mills <mills@athena.lkg.dec.com>
location:	ftp pub/comp.lang.logo/programs/mswlogo from cher.media.mit.edu
		Source may require emailing George Mills.
description:	A windows front-end for Berkeley Logo
bugs:		George Mills <mills@athena.lkg.dec.com>
ports:		MS Windows 3.x
status: 	activly developed
updated:	1993/10/15

language:	Loglan'82
package:	Loglan82
version:	?
parts:		Cross-Compiler (->C)
author: 	?
location:	ftp pub/Loglan82 from infpc1.univ-pau.fr
description:	The academic community has a need for one language which
		enables to teach all elements of object programming: classes &
		objects, coroutines, processes (in Loglan'82 processes are
		objects which are able to act in parallel), inheritance,
		exception handling, dynamic arrays etc.
		Loglan'82 offers the complete sets of programming tools used in
		object and modular and structural programming. It is suggested
		to use it duringthe first two years of teaching and afterwards
		too.
		Loglan'82 supports other styles of programming e.g. programming
		by rules, functional programming etc.
restriction:	GNU General Public License
requires:	?
announcements:	send "SUBSCRIBE loglan82 <your_first_name> <your_name>" 
		to loglan82-request@crisv1.univ-pau.fr
contact:	Andrzej.Salwicki@univ-pau.fr
updated:	1994/2/15

unable to classify due to lack of knowledge
-------------------------------------------------------------------------------
category:	unable to classify due to lack of knowledge
description:	[Please help. --ed]

contact:	Jack Hsu <tcl-archive@barkley.berkeley.edu>
language:	FMPL of Accardi
package:	FMPL interpreter
version:	1
parts:		interpreter, documentation
author: 	Jon Blow <blojo@xcf.berkeley.edu>
location:	ftp src/local/fmpl/* from xcf.berkeley.edu
description:	FMPL is an experimental prototype-based object-oriented 
		programming language developed at the Experimental Computing
		Facility of the University of California, Berkeley.
		+ lambda-calculus based constructs.
		+ event-driven (mainly I/O events)
updated:	1992/06/02

language:	Common Lisp
package:	Garnet
version:	2.2
parts:		user interface builder
author: 	The Garnet project
location:	ftp /usr/garnet/garnet from a.gp.cs.cmu.edu
description:	Garnet is a user interface development environment for Common
		Lisp and X11.  It helps you create graphical, interactive
		user interfaces for your software.  Garnet is a large scale
		system containing many features and parts including a custom
		object-oriented programming system which uses a
		prototype-instance model.  It includes postscript support,
		gester recognition, and Motif emulation.
contact:	Brad_Myers@bam.garnet.cs.cmu.edu
updated:	October 15, 1993

language:	Garnet
package:	Multi-Garnet
version:	2.1
parts:		?
author: 	Michael Sannella <sannella@cs.washington.edu>
location:	ftp /usr/garnet/alpha/src/contrib/multi-garnet 
		from a.gp.cs.cmu.edu
description:	better contstraint system for Garnet ??
updated:	1992/09/21

language:	Isabelle
package:	Issabelle-93
version:	?
parts:		?
author: 	Written by Lawrence C Paulson and Tobias Nipkow?
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp/ops5* from
		ftp.cs.cmu.edu
description:	Isabelle is a generic theorem prover.  New logics are
		introduced by specifying their syntax and rules of inference.
		Proof procedures can be expressed using tactics and tacticals.
		The latest version, Isabelle-93, is significantly faster than
		Isabelle-92 and has several other improvements.
requires:	?
contact:	Larry.Paulson@cl.cam.ac.uk
		Tobias.Nipkow@informatik.tu-muenchen.de?
updated:	1993/12/20

-------------------------------------------------------------------------------
references
-------------------------------------------------------------------------------

name:		The Apple II Programmer's Catalog of Languages and Toolkits
version:	2.8
author: 	Larry W. Virden <lvirden@cas.org>
location:	posted to comp.sys.apple2, comp.lang.misc; ftp from
		idiom.berkeley.ca.us
description:	A survey of language tools available for the Apple ][.
updated:	1993/11/28

name:		Catalog of embeddable Languages.
version:	2
author: 	Colas Nahaboo <colas@bagheera.inria.fr>
location:	posted to comp.lang.misc,comp.lang.tcl; 
		ftp pub/EmbeddedInterpretersCatalog.txt from avahi.inria.fr
description:	Descriptions of languages from the point of view of 
		embedding them.
updated:	1992/07/09

name:		Compilers bibliography
version:	1.5
author: 	Charlie A. Lins
location:	ftp pub/oberon/comp_bib_1.4.Z from ftp.apple.com
description:	It includes all the POPLs, PLDIs, Compiler Construction, 
		TOPLAS, and LOPAS.  Plus various articles and papers from 
		other sources on compilers and related topics.
updated:	1992/10/31

name:		haskell-status
version:	?
author: 	Simon Peyton Jones <simonpj@dcs.glasgow.ac.uk>
location:	posted occaisionally to ???  
description:	A report, detailing the current features and status of
		all the implementations of Haskell.
updated:	?

name:		Language List
version:	2.1
author: 	Bill Kinnersley <billk@hawk.cs.ukans.edu>
location:	posted regularly to comp.lang.misc; 
		ftp pub/comp.compilers/LanguageList* from primost.cs.wisc.edu;
		ftp pub/compilers-list/LanguageList* from idiom.berkeley.ca.us
description:	Descriptions of almost every computer language there is.
		Many references to available source code.
updated:	1993/09/11

name:		Numerical Analysis Using Non-Procedural Paradigms
version:	published thesis
author: 	Steve Sullivan <sullivan@teal.csn.org>
location:	send email to author; or an ascii version of the comparision
		can be found in the comp.compilers archives, posted 1993/11/16
description:	A thesis, that among other things, compares and benchmarks
		C++, Modula-3, Standard ML, Haskell, Sather, and Common Lisp
updated:	1993

name:		The Lisp FAQs
version:	1.30
author: 	Mark Kantrowitz <mkant+@cs.cmu.edu>
location:	posted regularly to comp.lang.lisp,news.answers,comp.answers
description:	Details of many lisps and systems written in lisps 
		including many languages not covered elsewhere.
updated:	1993/02/08

name:		Survey of Interpreted Languages
version:	?
author: 	Terrence Monroe Brannon <tb06@CS1.CC.Lehigh.ED>
location:	Posted to comp.lang.tcl,comp.lang.misc,comp.lang.perl,
		gnu.emacs.help,news.answers; or ftp 
		pub/gnu/emacs/elisp-ar*/pack*/Hy*Act*F*/survey-inter*-languages
		from archive.cis.ohio-state.edu.
description:	Detailed comparision of a few interpreters: Emacs Lisp, 
		Perl, Python, and Tcl.
updated:	?

-------------------------------------------------------------------------------
archives
-------------------------------------------------------------------------------

language:	Ada
package:	AdaX
location:	ftp pub/AdaX/* from falcon.stars.rosslyn.unisys.com
description:	an archive of X libraries for Ada.  Includes Motif
		[note, I chose this server out of many somewhat randomly.
		Use archie to find others --ed]
contact:	?

language:	APL, J
package:	APL, J, and other APL Software at Waterloo
location:	ftp languages/apl/index from watserv1.waterloo.edu
contact:	Leroy J. (Lee) Dickey <ljdickey@math.waterloo.edu>

language:	Assembler (Motorola)
location:	ftp bode.ee.ualberta.ca : /pub/dos/motorola
description:	An archive of development software and tools for the
		Motorola microcontroller series.  Includes assemblers,
		a C compiler (6809), and applications.	Comes mainly
		from the Austin Texas Motorola BBS.

language:	Assembler (Various)
package:	The Beowulf archive?
location:	hpcsos.col.hp.com : /misc/ns32k/beowulf
description:	An archive of assemblers for various 8-bit microcontrollers

language:	Assembler, Forth (8051)
package:	The Siemens 8051 archive
location:	ftp pub/8051/signetics-bbs from lyman.pppl.gov
description:	An archive for development software and tools for the 8051
		microcontroller.
contact:	jsm@phoenix.princeton.edu

language:	Assembler (8051)
package:	The CAS archive.
location:	lyman.pppl.gov : /pub/8051/siemens-bbs
		nic.funet.fi: /pub/microprocs/MCS-51/csd4-archive
description:	Another archive for development software and tools for the 8051
		microcontroller.  May be converted into a general
		microprocessor archive in the future.
language:	C, C++, Objective-C, yacc, lex, postscript, 
		sh, awk, smalltalk, sed
package:	the GNU archive sites
location:	NOTE:	Many gnu files are now compressed with gzip.  You can
		tell a gzip'ed file because it has a lower-case .z or
		.gz rather than the capital .Z that compress uses.
		Gzip is available from these same archives
		ftp pub/gnu/* from prep.ai.mit.edu
    USA:	ftp mirrors4/gnu/* from wuarchive.wustl.edu
		ftp pub/src/gnu/* from ftp.cs.widener.edu
		ftp gnu/* from uxc.cso.uiuc.edu
		ftp mirrors/gnu/* from col.hp.com
		ftp pub/GNU/* from gatekeeper.dec.com
		ftp packages/gnu/* from ftp.uu.net
    Japan:	ftp ? from ftp.cs.titech.ac.jp
		ftp ftpsync/prep/* from utsun.s.u-tokyo.ac.jp
    Australia:	ftp gnu/* from archie.au
    Europe:	ftp gnu/* from src.doc.ic.ac.uk
		ftp pub/GNU/*/* from ftp.informatik.tu-muenchen.de [re-org'ed]
		ftp pub/gnu/* from ftp.informatik.rwth-aachen.de
		ftp pub/gnu/* from nic.funet.fi
		ftp pub/gnu/* from ugle.unit.no
		ftp pub/gnu/* from isy.liu.se
		ftp pub/gnu/* from ftp.stacken.kth.se
		ftp pub/gnu/* from sunic.sunet.se [re-org'ed]
		ftp pub/gnu/* from ftp.win.tue.nl
		ftp pub/gnu/* from ftp.diku.dk
		ftp software/gnu/* from ftp.eunet.ch
		ftp gnu/* from archive.eu.net [re-org'ed]
description:	There are many sites which mirror the master gnu archives
		which live on prep.ai.mit.edu.	Please do not use 
		the master archive without good reason.
restriction:	Most GNU programs are CopyLeft'ed.  That means that they 
		are distributed under the terms of the GNU General
		Public License or GNU Library General Public License.
		The CopyLeft is only a concern if you want to use
		actual GNU code in your program.  Using Gcc or any of
		the other tools is completely safe from a copyright
		point-of-view with the sole exception of bison which
		includes GNU code in its output.  If you use a GNU
		library, you must supply an unlinked version of your
		program.

language:	Forth
location:	anonymous@asterix.inescn.pt[192.35.246.17]:pub/forth
description:	Forth implementations and programs
contact:	Paulo A. D. Ferreira <?>

language:	Haskell
location:	anonymous@ftp.cs.chalmers.se:pub/haskell/library 
		anonymous@nebula.cs.yale.edu:pub/haskell/library
		anonymous@ftp.dcs.glasgow.ac.uk:pub/haskell/library
description:	An archive of Haskell and Gofer programs

language:	lisp
package:	MIT AI Lab archives
location:	ftp pub/* from ftp.ai.mit.edu
description:	archive of lisp extensions, utilities, and libraries
contact:	?

language:	lisp
package:	Lisp Utilities collection
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp from ftp.cs.cmu.edu
description:	???
contact:	cl-utilities-request@cs.cmu.edu

language:	Scheme
package:	The Scheme Repository
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	an archive of scheme material including a bibliography, 
		the R4RS report, sample code, utilities, and implementations.
contact:	Ozan S. Yigit <scheme@nexus.yorku.ca>

language:	Smalltalk
package:	Manchester Smalltalk Goodies Library
location:	ftp uiuc/st*/* from st.cs.uiuc.edu
    UK: 	ftp uiuc/st*/* from mushroom.cs.man.ac.uk
description:	a large collection of libraries for smalltalk.
		Created by Alan Wills, administered by Mario Wolczko.
contact:	goodies-lib@cs.man.ac.uk

language:	Tcl
package:	Tcl/Tk Contrib Archive
location:	ftp tcl/* from barkley.berkeley.edu
description:	An archive of Tcl/tk things.
contact:	Jack Hsu <tcl-archive@barkley.berkeley.edu>

language:	TeX
package:	CTAN (Comprehensive TeX Archive Network
location:	ftp ~ftp/tex-archive/* from ftp.shsu.edu
    Europe:	ftp ? from ftp.uni-stuttgart.de 		
description:	A large archive site of most all things TeX-related, including
		literate programming tools such as WEB and derivatives.

-------------------------------------------------------------------------------
cross-reference
-------------------------------------------------------------------------------
These are additional categories.  When an implementation is in a category
rather than a language, the language is indicated in (parenthesis).

category:	command shells
description:	These are the languages that treat bare words as programs
		to execute.
lref:		csh
lref:		ERGO-Shell
lref:		es
lref:		Korn Shell
lref:		Q
lref:		rc
lref:		ssh
lref:		Z-shell

category:	compiler frontend/backend glue
description:	These are the languages used to glue semantic analysers to
		code generators.
lref:		C	-- C is often used as an intermediate step
lref:		RTL
lref:		lcc	-- [what is the lcc intermediate code called? --ed]
lref:		SUIF

category:	database
description:	These are the languages that are specifically designed
		for database access.
lref:		Aditi
lref:		CORAL
lref:		GNU E
lref:		PROGRESS

category:	distributed
description:	These are languages that include constructs that specifically 
		support distributed programming.
lref:		Hermes
lref:		Glish
iref:		(TCL) TCL-DP

category:	dynamic foriegn functions
description:	These tools can dynamically load C code at run-time.
lref:		CommonLisp
lref:		Python
iref:		(Perl) Dylperl
iref:		(Scheme) Elk

category:	editor construction
description:	These are languages that are embedded in editors
lref:		IVY
lref:		S-Lang
iref:		(Lisp) elisp

category:	educational
description:	These are languages that are either designed for teaching,
		or are often used that way.
lref:		ABC
lref:		C
lref:		Logo
lref:		O'small
lref:		Pascal
lref:		Scheme

category:	embeddable
description:	These tools can be used as scripting languages for programs
		written in C.  They are all interpreted.
lref:		IVY
lref:		Perl5
lref:		Python
lref:		S-Lang
lref:		TCL
iref:		(C) ae
iref:		(Scheme) Elk
iref:		(Scheme) siod

category:	glue
description:	These are languages that are designed to tie other programs
		and libraries together.  
cref:		dynamic foriegn functions
cref:		command shells
lref:		Glish
lref:		REXX

category:	graphic user interface support
description:	These are the languages that have support for writing 
		gui programs. 
cref:		C variants
lref:		CommonLisp
lref:		LIFE
lref:		Python
lref:		(Scheme) Ezd
iref:		(Caml Light) Caml Light
iref:		(Prolog) PI
iref:		(Prolog) XWIP
iref:		(Scheme) Elk
iref:		(Scheme) STk
iref:		(TCL) Tk
iref:		(TCL) Wafe

category:	interactive
description:	These are the languages that are meant to be used 
		interactively.	[I'm sure there are more.  Tell me! --ed]
lref:		Caml
lref:		CommonLisp
lref:		Q
iref:		(C) ae

category:	reflective
description:	from Rainer Joswig (rainer@ki6.informatik.uni-hamburg.de) :
		To make it short: Reflective Languages have access to their own
		implementation. One can ask about the state of the running
		system and/or change aspects of the language.
lref:		ABCL ???
lref:		ABCL/1
lref:		MeldC
lref:		3-Lisp
lref:		CLOS with MOP (Meta Object Protocol)

category:	terminal graphics support
description:	These are languages that can access curses, or have an
		equivalent.
cref:		C variants
lref:		ici
iref:		(Common Lisp) CLISP
iref:		(Perl) curseperl
iref:		Python
iref:		(Scheme) scm

category:	text manipulation
description:	These languages have very high-level features for 
		manipulating text.  
cref:		compiler generators and related tools
lref:		Icon
lref:		Lex
lref:		Perl
lref:		Snobol4

category:	unix tool building
description:	These are languages that are appropriate for building tools
		in a Unix environment.	To be included, direct access to 
		most system features is required.
lref:		C
lref:		ici
lref:		Perl
lref:		Python
lref:		TCL

category:	window manager construction
description:	These are languages that are built into window managers
iref:		(Lisp) WOOL
-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
};
#else /* BIG_CONFIG */
static struct ResDesc resource[] = {
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {

.\" Copyright (c) 1993, 1994 by Todd Austin
.\" See section COPYING for conditions for redistribution.
.TH Tetra 1 "Last Update: June 7, 1993" "Wisconsin Arch. Tools" "Wisconsin Arch. Tools"

.SH NAME
Tetra \- fine-grain parallelism analyzer

.SH SYNOPSIS
\fIprog\fR.tetra \fIparam-file\fR \fIexec-file\fR \fItrace-file\fR

.SH DESCRIPTION
\fITetra\fR is a tool for evaluating serial program performance under
the resource and control constraints of fine-grain parallel
processors.  \fITetra\fR's primary advantage to the architecture
designer is its ability to quickly generate performance metrics for
yet to be designed architectures.  All the user needs to specify is
the capabilities of the architecture (e.g., number of functional
units, issue model, etc.), rather than its implementation (see Section
\fBCONFIGURATION\fR for more details).

\fITetra\fR employs a four step process.  First, it extracts a
(somewhat) canonical form of the program from a serial instruction
trace generated by QPT.  It then applies control and resource
constraint scheduling to produce an execution graph.  The global
control and resource constraint scheduling is directed by a processor
model specification supplied to the program (again, see Section
\fBCONFIGURATION\fR for more details on configuring \fITetra\fR).
Finally, the resulting execution graph is analyzed to evaluate the
serial program's performance under the specified architectural model.
Some early experiences with a preliminary version of this tool are
documented in [1], the internals of this tool are documented in [2].

The control scheduler supports scheduling based on both the control
flow graph and the less restrictive control dependence graph.  Both
control scheduling models also support speculation using predefined or
user installed branch predictors.  The resource scheduler supports
five scheduling heuristics (of varying cost, performance, and
capability) which limit the amount of processor (functional unit) and
memory resources (physical renaming store) available when building the
execution graph.

Once scheduled, \fITetra\fR provides a number of ways to analyze the
program's performance.  These include parallelism profiles, storage
demand profiles, data sharing distributions, data lifetime analysis,
and control distance (branch, loop, and call stack) distributions.
All reporting mechanisms are detailed in the \fBCONFIGURATION\fR
section.

The software is very modular, allowing it to be easily used as a test
bed for new ideas.  See Section \fBMODULES\fR for a description of all
modules used in the \fITetra\fR source distribution.  \fITetra\fR is
currently only targeted for MIPS-based systems, but porting it to
other architectures supported by QPT requires very little coding (just
a few constants and an instruction dependency decoder).  The
complexity of porting \fITetra\fR to architectures not supported by
QPT depends on the level of functionality supported by the new host's
tracer.

.SH INSTALLATION
To install \fITetra\fR, first unpack the distribution.  The method of
doing this really depends on the distribution you get.  Next, configure
the "Makefile" for the proper compilation environment.  Currently,
\fITetra\fR can be compiled only on MIPS Ultrix machines (DECstations)
using either MIPS "cc" compiler or AT&T C++ compiler version 3.0.1 or
later versions.  If you compile with the AT&T compiler, you can
optionally get run time checking for array and pointer accesses using
the Safe-C macros (the file README.safec describes these macros).
Select the proper compiler by editing the variables at the top of the
"Makefile".

Next, \fITetra\fR needs to be targeted to an implemented architecture.
Currently only the MIPS architecture is supported.  Type "make mips"
to set up \fITetra\fR for MIPS.

Next, add the variable TETRA_DIR to your environment.  This is done
differently depending on your default login shell.  For example, with
"csh" or "tcsh" the variable is set with a line in the file
"~/.cshrc":
.EX
setenv TETRA_DIR /var/home/austin/research/tetra
.EE

Next, configure \fITetra\fR by editing (or creating) the "config.h".
There are many valid examples in the "config/" directory, also see
Section \fBCONFIGURATION\fR for complete details on \fITetra\fR
configuration.

Next, compile \fITetra\fR by executing the command "make".  This
produces the library "tetra.a" which must subsequently be linked to
the \fIQPT\fR regeneration program (see Section \fBLINKING\fR).

To summarize, installation involves the following steps:
.EX
- unpack the distribution
- edit the variables in "Makefile" to reflect your compile
  environment
- type "make mips" (to set up Tetra for the MIPS/Ultrix
  architecture)
- add the TETRA_DIR environment variable to your environment
- config Tetra by modifying, or creating "config.h"
- type "make" to make the "tetra.a" library
- read the rest of this man page
.EE

There are also a number of useful utilities (currently undocumented,
except for a short description in Section \fBMODULES\fR) in the
"utils/" directory.  Doing a "make" in that directory will build
all of the utilities.  Some of the scripts in the "utils/" directory
will not operate properly until this is done.  Also, depending on your
configuration, you might have to change some of the variables at the
top of the shell scripts.

.SH CONFIGURATION
\fITetra\fR is configured via compilation.  That is, to add certain
options you must recompile the distribution.  This ensures that
\fITetra\fR executes as quickly as possible, since no run time checks
are used to determine which options are running.  Two files affect the
configuration.  "config.h" is the compile time configuration, and
"\fIprog\fR.param" is a program specific run time configuration.  This
section details both files.

To turn on and off options in the "config.h" file, change #undef's to
#define's or change the #define's to #undef's.  Some options are
mutually exclusive, if you request an impossible configuration, you
will get a syntax error in the file "config-check.h".  The line with
the syntax error will indicate what is wrong with the configuration.
Be sure to re-compile and re-link after changing "config.h", this is
not necessary when changing "\fIprog\fR.param".  There are numerous
examples of valid "config.h" files in the directory "config/".

Some options will require run time parameters.  These are supplied
through the ".param" file.  This file contains lines in the form of:
.EX
# this is a comment
variable = value
.EE
Comments can be inserted by putting a '#' in the leftmost column of
the line.  Variables are set via assignment; they and their input
value formats are detailed below.

The following is an example input file named "cc1.param":
.EX
#
# GNU cc1 parameter file
#
maxInsts = 250000000
fuDistParam = 0:2048:1
dsDistParam = 0:2048:1
storageExParam = 0:2048:1
lifeExParam = 0:2048:1
brDistParam = 0:2048:1
loopDistParam = 0:2048:1
callDistParam = 0:2048:1
totalFUs = 10
fuRHistParam = 0:2048:1:0
pTraceParam = 0:2048:1
loopLenParam = 0:2048:1
loopDepthParam = 0:1024:1
loopInstParam = 0:1024:1
callDepthParam = 0:1024:1
callInstParam = 0:1024:1
frameSizeParam = 0:8192:4
stackDepthParam = 0:32768:4
mallocSizeParam = 0:4096:10
.EE

The following listed options are manipulated via the "config.h" file
(their required ".param" inputs are also detailed below).

There are two input options that do not have corresponding "config.h"
options.   These are:

.IP maxInsts
Set "maxInsts" in the parameter input file to the maximum number of
instructions analyzed.  After reaching this value, all statistics are
output and the tetra process terminates.  This can also be
accomplished via the USR1 signal (see Section \fBSIGNALS\fR).  The
default value of this option is "ULONG_MAX".

.IP syscallsStall
Set "syscallsStall" to a non-zero value to observe conservative system
call assumption during execution, otherwise, optimistics system call
assumptions are used.  See [1] or [2] for more details.  The default
value of this input is "1".

.PP
The following options control the metrics generated:

.IP FU_STATS
Define FU_STATS if you want to record the functional unit resource
demand profiles (parallelism profiles).  FU_STATS requires the input
"fuDistParam" to be set to the desired profile distribution size.  This is
in the form "base:slots:grain", where "base" is the first level to be
recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the file "fuTotal.Stats".
.IP FULL_FU_STATS
Define FULL_FU_STATS to include all the functional unit statistics.
Collecting per-functional unit type statistics is very memory
expensive; otherwise, only aggregate functional unit stats will be
shown, depending on the number of functional units, using FU_STATS can
save a lot of memory and some processing resources.  FULL_FU_STATS
requires the input "fuDistParam" to be set to the desired profile
distribution size.  This is in the form "base:slots:grain", where
"base" is the first level to be recorded, "slots" is the total number
of buckets in the profile distribution, and "grain" is the number of
levels contained in each bucket.  The results are written to the files
"fuInteger.Stats", "fuFPoint.Stats", "fuMemory.Stats",
"fuControl.Stats", and "fuTotal.Stats".
.IP PHYSICAL_EXACT_STATS
Define PHYSICAL_EXACT_STATS if you want to generate the physical
storage usage profiles (exact lifetime form), exact lifetime
statistics only show storage being needed from the time of allocation
to the time of last reference.  PHYSICAL_EXACT_STATS requires the
input "storageExParam" to be set to the desired profile
distribution size.  This is in the form "base:slots:grain", where
"base" is the first level to be recorded, "slots" is the total number
of buckets in the profile distribution, and "grain" is the number of
levels contained in each bucket.  The results are written to the files
"regExDemand.Stats", "memExDemand.Stats", and "totalExDemand.Stats".
.IP SHARING_STATS
Define SHARING_STATS if you want to measure the degree of sharing
statistics by register, memory, and aggregate.  The degree of sharing
of a value is the total number of times that it passed to other
computations.  SHARING_STATS requires the input "dsDistParam" to be
set to the desired frequency distribution size.  This is in the form
"base:slots:grain", where "base" is the first level to be recorded,
"slots" is the total number of buckets in the profile distribution,
and "grain" is the number of levels contained in each bucket.  The
results are written to the files "dsReg.Stats", "dsMem.Stats", and
"dsTotal.Stats".
.IP LIFE_EXACT_STATS
Define LIFE_EXACT_STATS if you want to generate the physical storage
lifetime distribution (exact lifetime form).  Exact lifetime
statistics only show storage being needed from the time of allocation
to the time of last reference.  LIFE_EXACT_STATS requires the input
"lifeExParam" to be set to the desired frequency distribution size.  This
is in the form "base:slots:grain", where "base" is the first level to
be recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the files "regExLife.Stats",
"memExLife.Stats", and "totalExLife.Stats".
.IP DEP_DIST_OMR
Define DEP_DIST_OMR to include only the most restrictive dependence
(that is, the dependence connected to the immediately preceding DDG
level; these are a superset of the edges that must be realized to
insure that the critical path of the DDGs execution is not
lengthened).  This option has no inputs, and creates specific output
file.
.IP BRANCH_DISTANCE
Define BRANCH_DISTANCE to generate the branch control distance
distribution for the data dependencies of each operation placed in the
DDG.  The branch distance of a DDG edge is defined as the number of
conditional branches that must be resolved (or speculated) in the
serial trace before the consuming operation can be issued.  The
BRANCH_DISTANCE results are not affected by any speculation model that
may be executing.  BRANCH_DISTANCE requires the input "brDistParam" to
be set to the desired frequency distribution size.  This
is in the form "base:slots:grain", where "base" is the first level to
be recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the files "regBrDist.Stats",
"memBrDist.Stats", and "totalBrDist.Stats" -- or "regBrDistOMR.Stats",
"memBrDistOMR.Stats", and "totalBrDistOMR.Stats" if DEP_DIST_OMR is
defined.
.IP LOOP_DISTANCE
Define LOOP_DISTANCE to generate the loop control distance
distribution in loop iterations of the data dependencies for each
operation placed in the DDG, distances are shown by register and
memory.  The loop distance of a data dependence is the number of loop
iterations that must be issued before the consuming operations is
issued.  The LOOP_DISTANCE results are not affected by any speculation
model that may be executing.  LOOP_DISTANCE requires the input
"loopDistParam" to be set to the desired frequency distribution size.
This is in the form "base:slots:grain", where "base" is the first
level to be recorded, "slots" is the total number of buckets in the
profile distribution, and "grain" is the number of levels contained in
each bucket.  The results are written to the files
"regLoopDist.Stats", "memLoopDist.Stats", and "totalLoopDist.Stats" --
or "regLoopDistOMR.Stats", "memLoopDistOMR.Stats", and
"totalLoopDistOMR.Stats" if DEP_DIST_OMR is defined.
.IP CALL_DISTANCE
Define CALL_DISTANCE to generate the call control distance
distribution in call stack depths for each data dependencies placed in
the DDG, dependence distances are shown by register and memory.  The
call distance is the distance, on the call stack, between the
producing operation and the consuming operation.  The CALL_DISTANCE
results are not affected by any speculation model that may be
executing.  CALL_DISTANCE requires the input "callDistParam" to be set
to the desired frequency distribution size. This is in the form
"base:slots:grain", where "base" is the first level to be recorded,
"slots" is the total number of buckets in the profile distribution,
and "grain" is the number of levels contained in each bucket.  The
results are written to the files "regCallDist.Stats",
"memCallDist.Stats", and "totalCallDist.Stats" -- or
"regCallDistOMR.Stats", "memCallDistOMR.Stats", and
"totalCallDistOMR.Stats" if DEP_DIST_OMR is defined.

.PP
The following options control the control scheduling and speculation
model used:

.IP CFG_SCHEDULE
Define CFG_SCHEDULE to enable control scheduling via the control flow
graph issue model, see "control.[hc]" or the tech-report [2] for
details on this model.  This option requires no input and creates no
specific output file.
.IP CDG_SCHEDULE
Define CFG_SCHEDULE to enable control scheduling via the control
dependence graph model, see "control.[hc]" or the tech-report [2] for
details on this model.  This option requires no input and creates no
specific output file. (See Section \fBCAVEATS\fR for more information
on preparing \fIQPT\fR for control dependence graph scheduling.
.IP CONST_HIT_RATE
Define CONST_HIT_RATE for a straight forward n% predictor.  This
predictor hits on prediction in the range of [-1,100], where a hit
rate of -1 indicates continuous failure and 100 continuous success,
and any other value, n, hits n% of the time.  CONST_HIT_RATE requires
the input "percentHit" to be set to the hit rate of the predictor.
.IP TWO_BIT_COUNTER
Define TWO_BIT_COUNTER for a two bit predictor per branch, by default
it uses an unlimited branch history cache, that is, it remembers the
history of any branch ever encountered.  See "control.[hc]" or the
tech-report [2] for details on this speculation model.
.IP LIMITED_BRANCH_HISTORY
Define LIMITED_BRANCH_HISTORY to limit the amount of saved history
when doing TWO_BIT_COUNTER speculation, the table is managed as a
direct mapped cache.  LIMITED_BRANCH_HISTORY requires the input
"brHistTSize" to be set of the set size of the direct mapped two bit
counter branch history cache.  "brHistTSize" must be a power of two.

.PP
The following options control resource constrained schedule
generation:

.IP LIMITED_FU_SCHEDULE
Define LIMITED_FU_SCHEDULE to limit the functional units available
during execution, all operations are allocated from the same pool.
This option requires that a scheduling model be defined (see below).
LIMITED_FU_SCHEDULE requires the input "totalFUs" to be set to the
total number of functional units available for scheduling.
.IP LIMITED_STORAGE_SCHEDULE
Define LIMITED_STORAGE_SCHEDULE to limit the amount of physical
storage resources available when constructing the DDG, all storage
required by the program is treated uniformly and allocated from the
same pool.  To separate the allocation pools into register and memory
resources would certainly give dubious results, as there is no
guarantee that the compiler would allocate the same values to
registers and memory, especially under wildly different processor
models.  There are other limitations inherent in storage constrained
scheduling, namely, the extent of the storage use is not know when it
is allocated, thus it cannot be de-allocated until the storage is
re-used, as this the first point at which we know the storage is no
longer needed.  LIMITED_STORAGE_SCHEDULE requires the input
"totalStorage" to be set to the total number of storage locations.
If this is too small, deadlock may occur during scheduling -- if this
is larger then the active name space of the program, deadlock can not
occur.

.PP
The following options control which scheduling technique is in force
when generating resource constrained schedules:

.IP HISTORY_SCHEDULE
Define HISTORY_SCHEDULE to schedule operations using the HISTORY
scheduling technique.  This is a memory and processor intensive,
near-optimal scheduling technique, it uses a resource history buffer
to limit the amount of any resource in a particular level of the DDG,
this can only be used with fixed length resource demands (i.e., it
only works with functional units, not storage constrained schedules),
see "rhist.[hc]" or the tech-report [2] for more details.
HISTORY_SCHEDULE requires the input "fuRHistParam" to be set to the
desired resource history buffer size.  This is in the form
"base:slots:grain:maxExpansions", where "base" is the first level to
be recorded (usually 0), "slots" is the total number of buckets in the
resource history buffer, "grain" is the number of levels contained in
the buffer, and "maxExpansions" is the maximum number of times the
buffer size will be doubled before \fITetra\fR doubles the grain
instead (this prevents the memory intensive HISTORY scheduler from
gobbling up all memory, at the cost of scheduling accuracy).
.IP LIST_SCHEDULE_BF
Define LIST_SCHEDULE_BF to schedule operations under resource
constraints using the more memory and processor fugal, sub-optimal
scheduling technique, see the file "listbfheap.[hc]" or the
tech-report [2] for details.  This option requires no input.
.IP LIST_SCHEDULE_FF
Define LIST_SCHEDULE_BF to schedule operations under resource
constraints using the more memory and processor fugal, sub-optimal
scheduling technique, see the file "listffheap.[hc]" or the
tech-report [2] for details.  This option requires no input.
.IP RND_RBN_SCHEDULE
Define RND_RBN_SCHEDULE to schedule operations under resource
constraints using the very processor fugal, sub-optimal round robin
scheduling technique, see "rrqueue.[hc]" or the tech-report [2] for
details.
.IP RANDOM_SCHEDULE
Define RANDOM_SCHEDULE to schedule operations under resource
constraints using the very processor fugal, sub-optimal random
selection scheduling technique, see "randheap.[hc]" or the tech-report
[2] for details.

.PP
The following options control intrinsic trace statistic gathering.

.IP OPCODE_STATS
Define OPCODE_STATS to gather instruction frequency distribution.  The
results are written to the file "opcode.Stats".
.IP ICLASS_STATS
Define ICLASS_STATS to gather instruction class (FUClasses in
paradefs.h) frequency statistics.  The results are written to the file
"iClass.Stats".
.IP CCLASS_STATS
Define CCLASS_STATS to gather instruction control class
(ControlClasses in paradefs.h) frequency statistics.  The results are
written to the file "cClass.Stats".
.IP DATA_STATS
Define DATA_STATS to gather an aggregate read/write,
text/data/heap/stack, and reg/mem reference frequency distribution.
The results are written to the file "data.Stats".
.IP LOOP_LENGTH_STATS
Define LOOP_LENGTH_STATS to gather loop iteration length statistics.
The resulting probability density function shows the fraction of loop
instances running for <n> iterations.  The results are written to the
file "loopLen.Stats".
.IP LOOP_DEPTH_STATS
Define LOOP_DEPTH_STATS to gather loop depth statistics.  The
resulting probability density function shows the number of loops
executed at each depth.  The results are written to the file
"loopDepth.Stats".
.IP LOOP_INST_STATS
Define LOOP_INST_STATS to show loop depth distribution probed at each
instruction executed (in other words, the amount of time spent at each
depth).  The results are written to the file "loopInst.Stats".
.IP CALL_DEPTH_STATS
Define CALL_DEPTH_STATS to gather call stack depth statistics.  The
resulting probability density function shows the number of calls
occurring at each depth.  The results are written to the file
"callDepth.Stats".
.IP CALL_INST_STATS
Define CALL_INST_STATS to show the number of procedure instances at
all possible call stack depths.  The results are written to the file
"callInst.Stats".
.IP FRAME_SIZE_STATS
Define FRAME_SIZE_STATS to show the distribution of frames by size.
The results are written to the file "frameSize.Stats".
.IP STACK_DEPTH_STATS
Define STACK_DEPTH_STATS to show the distribution of stack depth
measured after each instruction.  The results are written to the file
"stackDepth.Stats".
.IP MALLOC_SIZE_STATS
Define MALLOC_SIZE_STATS to gather the malloc size distribution.  The
results are written to the file "mallocSize.Stats".
.IP MALLOC_FREE_STATS
Define MALLOC_STATS to gather the number of malloc's and free's.  The
results are written to the file "mallocFree.Stats".

.PP
The following are miscellaneous options:

.IP NO_SEATBELTS
Define NO_SEATBELTS to remove all Safe-C spatial and temporal checks
this option is required if you are not compiling with ATT C++ V3.0+
(see README.safec for more details).
.IP NO_SPATIAL_CHECKS
Define NO_SPATIAL_CHECKS to turn off all Safe-C spatial error checking
(see README.safec for more details).
.IP NO_TEMPORAL_CHECKS
Define NO_TEMPORAL_CHECKS to turn off all Safe-C temporal error
checking (see README.safec for more details).
.IP NO_PREASSERT
Define NO_PREASSERT if you want all semi-critical pre-assertions
(preassert()) removed.
.IP NO_POSTASSERT
Define NO_POSTASSERT if you want all semi-critical post-assertions
(postassert()) removed, these are currently unused.
.IP NO_DEBUG
Define NO_DEBUG if you want all assertions (assert(), preassert(),
postassert()) removed.  NDEBUG is an alias for NO_DEBUG.  This option
is not recommended.
.IP INST_ANNOUNCE
Set INST_ANNOUNCE to the number of instructions between announcements.
Announcements indicate how many instructions have been analyzed as
well as a number of other statistics.
.IP VERBOSE_ANNOUNCEMENTS
Set VERBOSE_ANNOUNCEMENTS to see more statistics every INST_ANNOUNCE
instructions.
.IP CHECK_ADDRESSES
Set CHECK_ADDRESSES to turn on address validity checking.  In the
past, \fIQPT\fR has had some difficulty producing correct addresses
during regeneration due primarily to the complexity of the dynamic
slicing/address generation code it employs.  This test is on the
program's critical path, thus it is expensive.
.IP UNIT_LATENCY
Define UNIT_LATENCY to schedule all operations with unit latency
(1),otherwise the schedule will use the latencies in the opTable (see
machine.c).
.IP CHECK_SCHEDULER
Define CHECK_SCHEDULER if you would like a scheduler consistency
checker ran on the resource heap every INST_ANNOUNCE instructions.
.IP PRINT_PTRACE
Define PRINT_PTRACE to enable parallel trace printing.  Defining this
shows parallel instruction with jump/branch offsets, load/store
addresses are absolute, absolute instruction PC addresses, edge
connections, and speculation results if speculation is enabled.  This
is a very memory expensive option, so it is generally only useful on
small programs.  This option requires no input.  The parallel trace is
written to the file "pTrace.log".

.SH LINKING
\fItetra.a\fR is not directly executable.  It must be first linked to
a \fIQPT\fR generated regeneration file.  For example, if the file to
be analyzed is "foo", the following sequence is used to generate
"foo.tetra":
.EX
- edit "config.h" to the desired configuration
- do a "make" to create the appropriate "tetra.a"
- run QPT on "foo" using "qpt -t -o +19 foo", or
  "qpt -t -cd -o +19 foo" if control dependence
  scheduling is to be performed
- compile the QPT regeneration files ("foo_sma0*.c")
  using the command "utils/CClocal foo"
- link the regeneration files "foo_sma0*.c" to "tetra.a"
  using the command "utils/LDlocal foo"
- execute "foo.tetra", for example if the parameter
  file is named "foo.param", and the trace file named
  "foo.Trace", use the following command,
  "foo.tetra foo.param foo foo.Trace"
.EE
The trace file name "-" allows the tetra program to read
the trace from "stdin".

.SH SIGNALS
\fITetra\fR executables support asynchronous interfacing via the USR1
and USR2 signals.  Upon reception of signal USR1, the \fItetra\fR
executable will terminate early, rather than waiting for "maxInsts" or
end-of-trace to occur.  Upon reception of signal USR2, the the
\fItetra\fR executable will dump out intermediate statistics and
continue analysis.

USR1 and USR2 signals are sent to the process via the "kill" command.
From the command line execute:
.EX
kill -USR1 <tetra_pid>

or

kill -USR2 <tetra_pid>
.EE
Where "<tetra_pid>" is the process ID of the tetra process, obtained
via the command "ps".

.SH MODULES
.TP 20
README
Read this file first!
.TP 20
BLURB
What is \fITetra\fR?
.TP 20
README.safec
Rudimentary details on Safe-C.
.TP 20
MANIFEST
File descriptions.
.TP 20
COPYING
\fITetra\fR distribution/modification agreement.
.TP 20
THANKS
Acknowledgements.
.TP 20
TODO
Possible projects, optimizations, fixes.
.TP 20
ChangeLog
History of changes to \fITetra\fR.
.TP 20
Makefile
\fITetra\fR make file.
.TP 20
bitops.h
Bit manipulation routines
.TP 20
cdist.[hc]
Control distance computation routines.
.TP 20
config.h
\fITetra\fR configuration file.
.TP 20
config-check.h
\fITetra\fR configuration check expressions.
.TP 20
control.[hc]
Routines implementing control scheduling and branch speculation.
.TP 20
dist.[hc]
Generic frequency/probability distribution routines.
.TP 20
fixheap.[hc]
Fixed size heap manager.
.TP 20
globals.[hc]
Machine independent global variables.
.TP 20
listbfheap.[hc]
LIST-BF scheduler routines.
.TP 20
listffheap.[hc]
LIST-FF scheduler routines.
.TP 20
livewell.[hc]
Live well hash table routines.
.TP 20
machine-mips.[hc]
MIPS/Ultrix machine specific routines.
.TP 20
main.c
\fITetra\fR main line code.
.TP 20
newvers.sh
Auto-versioning shell script -- only needed for development.
.TP 20
paradefs.h
\fITetra\fR global type definitions.
.TP 20
paths.h
\fITetra\fR file names.
.TP 20
ptrace.[hc]
Parallel trace printing routines.
.TP 20
qpt-4.1.diffs
QPT version 4.1 control dependence computation diffs
.TP 20
qpt_events.h
\fIQPT\fR interface and signal definitions.
.TP 20
randheap.[hc]
RANDOM scheduler routines.
.TP 20
resource.[hc]
Scheduler independent resource constraint scheduling routines.
.TP 20
rhist.[hc]
HISTORY scheduling implementation.
.TP 20
rrqueue.[hc]
RND_RBN scheduler routines.
.TP 20
safec.[hc]
Generic Safe-C run time check package -- requires C++ compiler.
.TP 20
schedule.[hc]
\fITetra\fR scheduling core routines.
.TP 20
sys.h
Generic programming support defs and routines.
.TP 20
tetra.1
\fITetra\fR manual page.
.TP 20
tracer.[hc]
\fIQPT\fR interface code.
.TP 20
tstats.[hc]
Intrinsic trace analysis routines.
.TP 20
version
Current \fITetra\fR compile version.
.TP 20
version.c
Current \fITetra\fR compile version and date.
.TP 20
utils/CCcondor
Compile \fIQPT\fR files for condor execution.
.TP 20
utils/CClocal
Compile \fIQPT\fR files for local execution.
.TP 20
utils/DBXcondor
Debug a condor core dump.
.TP 20
utils/DBXlocal
Debug a local core dump.
.TP 20
utils/LDTrGen
Link a \fIQPT\fR trace generator.
.TP 20
utils/LDTrunc
Link a \fIQPT\fR trace truncator.
.TP 20
utils/LDValidate
Link a \fIQPT\fR trace validator.
.TP 20
utils/LDcondor
Link \fIQPT\fR files for condor -- (probably) C++ only.
.TP 20
utils/LDlocal
Link \fIQPT\fR files for local execution.
.TP 20
utils/_main.c
Condor C++ startup file.
.TP 20
utils/pcompact.c
\fITetra\fR profile compacter.
.TP 20
utils/prof2pdf.c
Profile to PDF utility.
.TP 20
utils/pdf2cdf.c
PDF to CDF utility.
.TP 20
utils/qpt_decode.c
Disassemble a \fITetra\fR trace stream -- MIPS only.
.TP 20
utils/qpt_events.h
\fIQPT\fR interface and signal definitions.
.TP 20
utils/qpt_trace.c
Trace redirection for \fIQPT\fR programs.
.TP 20
utils/qpt_trgen.c
Generate a \fIQPT\fR trace stream.
.TP 20
utils/qpt_trunc.c
Truncate a \fIQPT\fR execution at <n> instructions.
.TP 20
utils/qpt_validate.c
Check \fIQPT\fR generated address traces.
.TP 20
utils/Trace
Generate a \fIQPT\fR trace.

.SH "SEE ALSO"
qpt(1).  \fIQPT\fR is available from Jim Larus (larus@cs.wisc.edu).

[1] Todd M. Austin and Gurindar S. Sohi,
``Dynamic Dependency Analysis of Ordinary Programs'',
\fIConference Proceedings of the 19th Annual
International Symposium on Computer Architecture,\fP
pp. 342-351, May 1992.

[2] Todd M. Austin and Gurindar S. Sohi, ``Tetra: Evaluation of Serial
Program Performance on Fine-Grain Parallel Processors'', University of
Wisconsin Technical Report, 1993.

.SH CAVEATS
\fITetra\fR is not useful without \fIQPT\fR.  \fIQPT\fR is available
from Jim Larus (larus@cs.wisc.edu).

Control dependence scheduling requires "qpt-x.diffs" to be applied
to \fIQPT\fR (where "x" is the qpt version the patch expects).  This
is accomplished by unpacking the appropriate \fIQPT\fR distribution
into a directory named "qpt-x" (same as the diffs file), and then
executing the following command \fIabove\fR that directory:
.EX
patch < qpt-x.diffs
.EE
This should patch \fIQPT\fR to include a new option "-cd" which adds
control dependence information to the regeneration file.  When you
execute the patched version of \fIQPT\fR, the opening message will
include the string "+Tetra support".

.SH BUGS
Resource history buffer resets do not work unless "syscallsStall" is
enabled (non-zero).

\fITetra\fR is still not officially released, nor has it been fully
tested, please be wary.

.SH AUTHORS
Tetra was written by Todd Austin (austin@cs.wisc.edu), University of
Wisconsin-Madison.

The author of this work wishes to thank the following people for their
contributions to this work.

.IP
Guri Sohi, for his guidance and suggestions during the
implementation of our research.
.IP
Alain Kagi, for graciously offering to write the Fibonacci
heap implementation, simply because, as he puts it, "it
was an interesting thing to do", and for his invaluable input
to this research.
.IP
Jim Larus, the author of QPT, for first allowing us to use
his tracer, and also for the remarkably quick support he
offered us to the frequent questions and occasional bug.
.IP
Tom Ball, for his input to our research, and for his support
of QPT.
.IP
Dionisios Pnevmatikatos, Scott Breach, Alvy Lebeck, Babak Falsafi,
Steve Reinhardt, and Vikram Adve for their input to this work.

.SH COPYING
Copyright (c) 1993 by Todd Austin
.br
See the file COPYING for conditions for redistribution.
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
};
#endif /* BIG_CONFIG */

/* functional unit to resource descriptor mapping, this is constructed
   from the resource descriptors at initialization time, the first dimension
   of the array is indexed by the resource class of the instruction needing
   a resource, the second dimension is a '-1' terminated list of indexes
   into RESOURCES of resource that can handle this instruction, the resource
   descriptors in the list are ordered in the same order as they are
   soecified above */
long fuClassToRes[NUM_FU_CLASSES][N_ELT(resource)];
long fuClassToResOpLatency[NUM_FU_CLASSES][N_ELT(resource)];
long fuClassToResIssueLatency[NUM_FU_CLASSES][N_ELT(resource)];

void
DumpResourceTables(void)
{
  ulong i, j;

  fprintf(stderr, "fuClassToRes:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource) && fuClassToRes[i][j] != -1; j++) {
      fprintf(stderr, "%s ", resource[fuClassToRes[i][j]].name);
    }
    fprintf(stderr, "\n");
  }

  fprintf(stderr, "fuClassToResOpLatency:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource); j++) {
      if (fuClassToResOpLatency[i][j] != -1)
	fprintf(stderr, "%s:%d ",
		resource[j].name, (int)fuClassToResOpLatency[i][j]);
    }
    fprintf(stderr, "\n");
  }

  fprintf(stderr, "fuClassToResIssueLatency:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource); j++) {
      if (fuClassToResIssueLatency[i][j] != -1)
	fprintf(stderr, "%s:%d ",
		resource[j].name, (int)fuClassToResIssueLatency[i][j]);
    }
    fprintf(stderr, "\n");
  }
}

void
InitFUMap(void)
{
  ulong i, j, k, index;

  /* init OUTTOFU map */
  for (i=0; i<RS_BIT_SIZE; i++)
    outToFU[i] = -1;

  /* initialize FUCLASSTORES */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    for (j=0; j<N_ELT(resource); j++) {
      fuClassToRes[i][j] = -1;
      fuClassToResOpLatency[i][j] = -1;
      fuClassToResIssueLatency[i][j] = -1;
    }
  }

  /* build FUClass -> usable resource table */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    index = 0;
    for (j=0; j<N_ELT(resource); j++) {
      for (k=0; k<NUM_FU_CLASSES; k++) {
	if (resource[j].x[k].fuClass != NA &&
	    resource[j].x[k].fuClass == i) {
	  /* this resource can service this class */
	  fuClassToRes[i][index++] = j;
	}
      }
    }
    if (i != NA && !index)
      fatal("there is no resource defined to execute FUClass `%s'",
	    fuClassDesc[i]);
  }

  /* build FUClass -> resource operation latency table */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    for (j=0; j<N_ELT(resource); j++) {
      for (k=0; k<NUM_FU_CLASSES; k++) {
	if (resource[j].x[k].fuClass != NA &&
	    resource[j].x[k].fuClass == i) {
	  fuClassToResOpLatency[i][j] = resource[j].x[k].opLatency;
	  fuClassToResIssueLatency[i][j] = resource[j].x[k].issueLatency;
	}
      }
    }
  }
}


/** TLB/pre-translation resources **/

/* TLB parameters */
static ulong nTLB = 0;			/* total number of TLBs (0 - ignore) */
static ulong opLatTLB = 1;		/* operation latency */
static ulong issueLatTLB = 1;		/* issue latency (deg of pipelining) */

/* TLB/pre-translation state */
static long long *whenAvailable = NULL;	/* cycle when next issue possible */
static int valid[NUM_REGS];		/* pre-translation valid bits */

/* pre-translation stats */
long long invalidOverrun = 0;		/* invalidated with overrun */
long long invalidNoOverrun = 0;		/* not invalidated with overrun */
long long doubleValid = 0;		/* time saw two valid inputs */
long long directTLBAccess = 0;		/* TLB access elided */
long long elidedTLBAccess = 0;		/* TLB access elided */
long long TLBAccess = 0;		/* total TLB accesses */

void
InitTLB(void)
{
  int i;

  if (!nTLB) {
    info("TLB configuration: none");
    return;
  }

  for (i=0; i<NUM_REGS; i++)
    valid[i] = FALSE;
    
  if (!(whenAvailable = calloc(nTLB, sizeof(long long))))
    fatal("out of virtual memory");
  info("TLB configuration: nTLB=%lu, opLatTLB=%lu, issueLatTLB=%lu",
       nTLB, opLatTLB, issueLatTLB);
}

/* Compiler-Assisted Address Translation semantics:
     get a translation resource for the pointer in register REG or for a direct
     address if DIRECT is non-zero, needed at time WHEN, returns the latency of
     the operation */
static inline ulong
GetTLBLat(int direct, int reg, enum InstClass ic, long long when)
{
  int i, firstAvailable;
  long long earliestAvailable, whenDone, whenAvail;

  assert(when >= cycle);

  /* no latency impact if not doing xlations or instruction is not a ld/st */
  if (ic != MemRead && ic != MemWrite)
    return 0;

  TLBAccess++;

  if (!nTLB)
    return 0;

  /* direct translation resources are unlimited (one per pipe) */
  if (direct) {
    directTLBAccess++;
    return /* translation completed in the decode stage */0;
  }

  /* indirect access, base in register REG */

  /* is the pre-translation valid, can determine this by end of ID stage */
  if (elideTranslations && valid[reg]) {
    elidedTLBAccess++;
    return 0;
  }

  /* locate the first available TLB resource */
  for (i=0,firstAvailable=-1,earliestAvailable=0xffffffff; i < nTLB; i++) {
    if (whenAvailable[i] < earliestAvailable) {
      earliestAvailable = whenAvailable[i];
      firstAvailable = i;
    }
  }
  /* use TLB resource at index FIRSTAVAILABLE */
  if (firstAvailable < 0 || firstAvailable >= nTLB)
    panic("no TLBs");

  /* let's NOT do the time warp */
  whenAvail = max(when, whenAvailable[firstAvailable]);
  /* compute when the translated result may be used in a memory operation */
  whenDone = whenAvail + opLatTLB;
  /* compute when this resource can be used again */
  whenAvailable[firstAvailable] = whenAvail + issueLatTLB;

  assert(whenDone >= when);

  /* FIXME: should stop future accesses on this register */
  valid[reg] = TRUE;

  return whenDone-when;
}


/** branch target buffer **/

struct BTBEnt {
  ulong addr;			/* address of branch being tracked */
  uchar state;			/* 0, 1 -> not taken /// 2, 3, taken */
  ulong target;			/* last destination when taken */
};

static ulong btbSize = 1024;
#define BTBHASH(addr)					\
  ((((addr) >> 16) ^ (addr)) & (btbSize-1))

static struct BTBEnt *btbTable = NULL;

static void
DumpBTB(void)
{
  ulong i;

  fprintf(stderr, "@@@ BTB contents:\n");
  for (i=0; i<btbSize; i++)
    if (btbTable[i].addr)
      fprintf(stderr, "\t[%5d]  addr: 0x%08x  state: %3d %s  target: 0x%08x\n",
	      (int)i, (int)btbTable[i].addr, (int)btbTable[i].state,
	      (btbTable[i].state >= 2) ? "(taken)    " : "(not taken)",
	      (int)btbTable[i].target);
    else
      fprintf(stderr, "\t[%5d]  unused\n", (int)i);
  fprintf(stderr, "@@@ end of BTB contents\n");
}

static void
InitBTB(ulong size)
{
  if ((size & (size-1)) != 0)
    fatal("BTB size, `%d', must be a power of two", size);
  btbSize = size;
  if (!(btbTable = calloc(size, sizeof(struct BTBEnt))))
    fatal("cannot allocate BTB storage");
}

/* return TARGET if address is currently recorded as taken */
static ulong
BTBLookup(ulong addr)
{
  struct BTBEnt *p = &btbTable[BTBHASH(addr)];
  if (p->addr == addr)
    return (p->state >= 2) ? /* taken */ p->target : /* not taken */ addr + 8;

  /* no record of this address holding a control inst */
  return 0;
}

static void
BTBUpdate(ulong addr, int taken, ulong target)
{
  struct BTBEnt *p = &btbTable[BTBHASH(addr)];
  if (p->addr == addr) {
    /* update current information */
    if (taken) {
      if (p->state < 3)
	p->state++;
      p->target = target;
    }
    else { /* not taken */
      if (p->state > 0)
	p->state--;
      /* leave target alone */
    }      
  }
  else {
    /* enter a new branch in the table */
    p->addr = addr;
    p->state = (taken) ? 2 : 1;
    p->target = target;
  }
}  


/** 3-WRITEBACK **/
ulong N3;
struct SSInst *IR3;
ulong *PC3, *NPC3;
enum Opcode *OP3;
enum FUClass *FU3;
enum InstClass *IC3;
RegSet busy;

/** event queue definitions handler **/

struct WBEvent {
  struct WBEvent *next;		/* next write back event in the sorted list */
  long long	when;		/* time to schedule write back event */
  ulong		reg;		/* register to free */
};

struct WBEvent *evQueue;
struct WBEvent *freeList;

void DumpEventQueue(void)
{
  struct WBEvent *node;

  fprintf(stderr, "\tEvQueue: ");
  for (node=evQueue; node; node=node->next)
#if 0
    fprintf(stderr, "when: 0x%08x%08x reg:%d%c  ",
	    (int)LLHIGH(node->when), (int)LLLOW(node->when),
	    (int)node->reg, node->reg ? '+' : ' ');
#else
    fprintf(stderr, "when: %15.0f reg:%d%c  ",
	    (double)node->when,
	    (int)node->reg,
	    node->reg ? '+' : ' ');
#endif
  fprintf(stderr, "\n");
}

void
InitEventQueue(void)
{
  ulong i;
  struct WBEvent *node;

  for (i=0; i<MAX_STATE; i++) {
    if (!(node = calloc(1, sizeof(struct WBEvent))))
      error("could not allocate WB event record");
    node->next = freeList;
    freeList = node;
  }
}

void
ScheduleEvent(long long when, ulong reg)
{
  struct WBEvent *prev, *node, *new;

  assert(when >= cycle);

  if (when == cycle) {
    /* do this now */
    RSClearBit(busy, reg);
    outToFU[reg] = -1;
    return;
  }

  /* locate insertion point */
  for (prev=NULL, node=evQueue;
       node && node->when < when;
       prev=node, node=node->next);

  /* get a free event record, better be one */
  assert(freeList);
  new = freeList;
  freeList = freeList->next;

  if (prev) {
    /* insert middle or end */
    new->next = prev->next;
    prev->next = new;
  }
  else {
    /* insert beginning */
    new->next = evQueue;
    evQueue = new;
  }

  /* plug in event data */
  new->when = when;
  new->reg = reg;
}

void
SquashWriteBack(void)
{
  int i;

  N3 = 0;
  RSClear(busy);
  for (i=0; i<RS_BIT_SIZE; i++)
    outToFU[i] = -1;
}

void
InitWriteBack(void)
{
  if (!(IR3 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC3 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC3 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(OP3 = calloc(numIssue, sizeof(enum Opcode))))
    fatal("out of memory");
  if (!(FU3 = calloc(numIssue, sizeof(enum FUClass))))
    fatal("out of memory");
  if (!(IC3 = calloc(numIssue, sizeof(enum InstClass))))
    fatal("out of memory");
  SquashWriteBack();
}

void
WriteBack(void)
{
  ulong i;

  /* commit any writeback events */
  while (evQueue && evQueue->when <= cycle) {
    struct WBEvent *p;

    /* clear the register busy bits */
    RSClearBit(busy, evQueue->reg);
    outToFU[evQueue->reg] = -1;

    /* return the event record to the free list */
    p = evQueue;
    evQueue = evQueue->next;
    p->next = freeList;
    freeList = p;
  }

  /* free up resources */
  for (i=0; i<N_ELT(resource); i++) {
    if (resource[i].busy > 0)
      resource[i].busy--;
  }

  /* all instruction processed */
  N3 = 0;
}


/** 2-EXECUTE **/
ulong N2;
struct SSInst *IR2;
ulong *PC2, *NPC2;
enum Opcode *OP2;
enum FUClass *FU2;
enum InstClass *IC2;
int *res2;			/* index of the resource allocated for inst */
int *out1_2, *out2_2;		/* outputs for inst */

void
SquashExecute(void)
{
  N2 = 0;
}

void
InitExecute(void)
{
  if (!(IR2 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC2 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC2 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(OP2 = calloc(numIssue, sizeof(enum Opcode))))
    fatal("out of memory");
  if (!(FU2 = calloc(numIssue, sizeof(enum FUClass))))
    fatal("out of memory");
  if (!(IC2 = calloc(numIssue, sizeof(enum InstClass))))
    fatal("out of memory");
  if (!(res2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  if (!(out1_2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  if (!(out2_2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  SquashExecute();
}

#define SET_NPC(EXPR)		(nextPC = (EXPR))
#define CPC			(PC2[i])

#define GPR(N)			(R[N])
#define SET_GPR(N,EXPR)		(R[N] = (EXPR))


Article: 28329 of comp.text.tex
Path: news.doit.wisc.edu!saimiri.primate.wisc.edu!caen!math.ohio-state.edu!howland.reston.ans.net!vixen.cso.uiuc.edu!nntp-server.caltech.edu!hot.caltech.edu!bobby
From: bobby@hot.caltech.edu (Bobby Bodenheimer)
Newsgroups: comp.text.tex,fr.comp.text.tex,comp.answers,news.answers
Subject: TeX, LaTeX, etc.: Frequently Asked Questions with Answers [Monthly]
Supersedes: <tex-faq_784267264@hot.caltech.edu>
Followup-To: comp.text.tex
Date: 8 Nov 1994 04:03:17 GMT
Organization: California Institute of Technology, Pasadena, CA.
Lines: 1210
Approved: news-answers-request@MIT.Edu
Expires: 6 Jan 1995 04:03:12 GMT
Message-ID: <tex-faq_784267392@hot.caltech.edu>
Reply-To: bobby@hot.caltech.edu
NNTP-Posting-Host: hot.caltech.edu
Keywords: monthly faq
Originator: bobby@hot.caltech.edu
Xref: news.doit.wisc.edu comp.text.tex:28329 comp.answers:7441 news.answers:23103

Archive-name: tex-faq

Comp.text.tex is a forum for the discussion of TeX, LaTeX and other
related things. TeX is a software system written by Donald Knuth to
typeset text, especially text containing mathematics. LaTeX is a set
of macros written in TeX, designed to simplify the the typesetting of
a document by allowing the user to concentrate on the content and
structure of the document rather than the exact appearance of the
finished product. METAFONT, also discussed here, is a program which
allows the user to design their own fonts. The definitive reference
for TeX is _The TeXbook_, by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13447-0, paperback 0-201-13448-9). For LaTeX, see _LaTeX, a
Document Preparation System_ by Leslie Lamport (Addison Wesley, 1986,
ISBN 0-201-15790-X); the second edition of this book covers LaTeX2e.
Full documentation for LaTeX2e can be found in _The LaTeX Companion_
by Michael Goossens, Frank Mittelbach, and Alexander Samarin (Addison
Wesley, 1993, ISBN 0-201-54199-8). For METAFONT, see _The
METAFONTbook_ by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13445-4). The American Mathematical Society has two macro
packages which are also popular, called AMS-TeX and AMS-LaTeX.

This article contains answers to some frequently asked questions on
comp.text.tex. Please don't ask these questions again, as they've been
answered many times before.

Malencontreusement, je n'ai ni le temps ni la comp\'etence pour
traduire cet article en fran\c{c}ais. Je prie donc, le lecture
interess\'e par fr.comp.text.tex d'avoir l'indulgence d'accepter la
version anglaise.

This is version 1.48 for November, last changed 11/7/94.

This article includes answers to:

  1) How can I get a copy of this article?
  2) Where can I get a DVI to PostScript conversion program?
  3) How can I include a PostScript figure in LaTeX?
  4) Where can I find a DVI previewer for machine Y running Q?
  5) Where can I get the manual for PiCTeX?
  6) In LaTeX, I put some definitions in my document, but I get the error
     ``Use of \@ doesn't match its definition.'' What's wrong?
  7) What is OzTeX and where can I get it (TeX for the Mac)?
  8) What is Fig and where can I get it?
  9) How do I get WEB for C, FORTRAN, or some other language?
  10) How can I typeset music in TeX?
  11) What is TUG and TUGboat?
  12) How do I convert Adobe's afm files to tfm format?
  13) In LaTeX, how do I get a double-spaced document?
  14) In LaTeX, how do I include a file in the verbatim environment?
  15) In LaTeX, how do I do Y?
  16) Where can I find a TeX macro or LaTeX style file for doing Y?
  17) How do I generate an index in TeX/LaTeX?
  18) How do I get METAFONT to do what I want it to do?
  19) Where do I get TeX/LaTeX for machine Y running Q?
  20) Where can I get a thesis style for LaTeX?
  21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
      and so on?
  22) What repositories of TeX material are available, and how can I
      access them?
  23) How do I use PostScript fonts with LaTeX?
  24) How can I convert from format Y to TeX or LaTeX, and vice-versa?
  25) How do I get a file into the major style repositories?
  26) Where can I get font Y?
  27) Where can I get a dvi driver for the HP LaserJet?
  28) TeX and LaTeX are hyphenating words weirdly. What can I do?
  29) How can I convert a TeX or LaTeX file into a plain ASCII file,
      with all the formatting intact, a la nroff?
  30) How do I enlarge TeX? I keep getting ``memory capacity exceeded''
      errors.
  31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
      numbered. What do I do?
  32) Where do I find documentation about BibTeX?
  33) How do I use BibTeX with plain TeX?
  34) How do I draw Feynman diagrams in LaTeX?
  35) What is the New Font Selection Scheme (NFSS)?
  36) In LaTeX, my cross-references for floats (figures and tables) are
      incorrect. What's wrong?
  37) I want to change the margins in LaTeX. What can I do?
  38) How do I find the width of a letter, word, or phrase in TeX?
  39) In LaTeX, is there a comment or ``ignore'' environment with which
      I can exclude blocks of text from the .dvi file?
  40) Where can I find a spelling checker for my TeX file?
  41) What is LaTeX2e?
  42) In LaTeX, how can I define a new log-like function?
  43) In LaTeX, how do I put a \sqrt in my \caption statement?
  44) In LaTeX, how do I get thin and thick \hlines in a table?
  45) In LaTeX, how do I number the bibliography using Arabic numbers without
      square brackets or using superscripts?
  46) In LaTeX, why are my cites all numbered zero?
  47) In LaTeX, my figures get put on a page by themselves with too much
      whitespace, but when I tried \begin{figure}[t] they get printed at
      the end. Why?
  48) In LaTeX, how do I make a line break in a section title?
  49) In LaTeX, how do I number equations by section?

If you are looking, for instance, for the answer to question 17, and wish
to skip everything else, you can search ahead for the regular expression
``^17)''.

These are all legitimate questions, but they seem to appear too 
frequently for long-time readers of the list. 

Many of the answers below tell you that you can obtain something
through anonymous ftp. ``Ftp'' stands for file transfer protocol, and
is also the name of a program implementing the protocol. The program
allows users to transfer files to and from remote sites, if the sites
are connected via a network such as the Internet. ``Anonymous ftp'' 
indicates a user may connect to a remote site as the user 
``anonymous'' with a password consisting of their email address, and
thus be able to retrieve files from that site. Remember, anonymous
ftp is a privilege and the system administrators for these sites 
have made these files available out of their own generosity. Therefore
please restrict your ftp'ing to non-prime hours at the various sites.

I would like to acknowledge Don Hosek, Ken Yap, Tomas Rokicki, Micah
Beck, David Carlisle, and Donald Arseneau who provided many of the
answers.  Joe Weening, Hal Perkins, Walter Carlip, Max Hailpern, Tad
Guy, Raymond Chen, Henning Schulzrinne, Sebastian Rahtz, Mark James,
Peter Galko, Mike Ernst, Rainer Sch\"opf, Oren Patashnik, Philippe
Louarn, Rafal Zbikowski, Anita Marie Hoover, David Rhead, Darrell
McCauley, Cameron Smith, Emma Pease, Patrick McPhee, Karl Berry, Robin
Fairbairns, Joohee Jeong, Sam Steingold, J\"org Knappen, Barbara
Beeton, Norman Ramsay, and Richard Mathar provided additional material
and criticisms. The format of this document is based on the Frequently
Asked Questions written by Steve Hayman which formerly appeared in
comp.unix.wizards. Any mistakes are mine. Send corrections,
suggestions, and additions to bobby@hot.caltech.edu.

1) How can I get a copy of this article?

   You're reading it aren't you? SAVE it :-). This article is posted
   monthly to comp.text.tex and cross-posted to news.answers. It is
   therefore archived at any site that archives news.answers.
   News.answers is archived on rtfm.mit.edu, and this article is
   available there via anonymous ftp in the directory
   ./pub/usenet/news.answers/tex-faq. If you do not have anonymous
   ftp, send an e-mail message containing the lines ``SENDME FAQ.'' to
   fileserv@shsu.edu (fileserv@shsu.bitnet).  Another way to retrieve
   it via email is through the mailserver at rtfm: send a message
   containing the lines ``help'' and ``index'' to
   mail-server@rtfm.mit.edu for information on how to obtain it.
 
   Other news.answers/FAQ archives are: cnam.cnam.fr (163.173.128.6)
   in the anonymous ftp directory /pub/FAQ; ftp.uu.net (192.48.96.2)
   in the anonymous ftp directory /pub/usenet (also available via mail
   server requests to netlib@uunet.uu.net, or via uunet's 1-900
   anonymous UUCP phone number); and ftp.cs.ruu.nl (131.211.80.17) in
   the anonymous ftp directory NEWS.ANSWERS (also accessible via mail
   server requests to mail-server@cs.ruu.nl). Many of the archives
   mentioned in question 22 also maintain current versions of this
   document.

2) Where can I get a DVI to PostScript conversion program?

   Two good DVI to PostScript conversion programs that run under
   Unix are:
     dvips - by Tomas Rokicki. This driver is very nice and has the
       ability to deal with virtual fonts. Available via anonymous ftp
       from labrea.stanford.edu (36.8.0.112) in ./pub. Dvips is
       written in C and ports easily to other operating systems.  It
       is available for VMS via anonymous ftp from any CTAN site (see
       question 22) and also through the DECUS library (see question
       22). A precompiled version for MSDOS is available from
       monu1.cc.monash.edu.au (130.194.1.101) in ./pub/dvips54.zip,
       from shape.mps.ohio-state.edu (128.146.110.30) in
       ./pub/msdos/dvips/dvips54.zip, or from any CTAN site (see
       question 22) in ./systems/msdos/drivers/dvips.  If you wish to
       use postscript fonts, get dvipslib.zip as well.  Documentation
       is available in dvips.ps.Z. Karl Berry has a version of dvips
       called dvipsk which has a configure script and path searching
       code similar to that in his other programs (e.g., web2c).  It
       is available via anonymous ftp from ftp.cs.umb.edu
       (158.121.104.33) in ./pub/tex/.

     dvitops - by James Clark. Available via anonymous ftp from any CTAN site
       (see question 22, e.g., pip.shsu.edu (192.92.115.10)), in 
       ./tex-archive/dviware/dvitops. Dvitops is written in C and will 
       compile under Unix, MSDOS, VMS, and Primos.

3) How can I include a PostScript figure in LaTeX?

   In LaTeX2e, the best way is \usepackage[dvips]{graphics}.

   Perhaps the best way to do this is to use the psfig macros written
   by Trevor Darrell. They are available via anonymous ftp from
   any CTAN site (see question 22) in graphics/psfig. You will
   also need a dvi to PostScript conversion program that supports
   \specials. The ones mentioned in question 2 do, and come with a
   version of psfig ready to use with them. The psfig macros work best
   with Encapsulated PostScript Files (EPS). In particular, psfig will
   need the file to have a BoundingBox (see Appendix C of the
   _PostScript Language Reference Manual_). If you don't have an EPS
   file, life can be difficult.

   To allow resizing by dvips (see question 2) with PostScript files
   that are not EPS files, add the one line comment
   %%BoundingBox: llx lly urx ury" 
   prior to any non-comment line in the PostScript file. The four
   ``lower left'' and ``upper right'' arguments must be numbers to
   indicate the lower left and upper right corner in units of 1/72 of
   an inch. Otherwise, dvips assumes the PostScript file fills a whole
   page.

   One further note about including PostScript figures is that they
   are not part of the dvi file, but are included when you use a dvi
   to PostScript conversion program. As a result, most dvi previewers
   will simply show the blank space TeX has reserved for your figure,
   not the figure itself. LaTeX2e (see question 41) will have a standard
   interface for graphics inclusion, rotation, color, and other 
   driver-related features.

   Anil K. Goel has written a long document describing in detail how to
   include figures, pictures, and images in LaTeX documents. It is available
   via anonymous ftp from math.uwaterloo.ca (129.97.140.144) in
   ./pub/figsInLatex.ps.Z. A dvi file with the included PostScript files
   is also available.

4) Where can I find a DVI previewer for machine Y running Q?

   This briefly lists some previewers available via anonymous ftp. All
   are available from any CTAN site (see question 22) in addition to the
   sites listed below:
      dvipage - For SunView. This was published in volume 15 of 
        comp.sources.unix and is available at sites that archive
        this. One such source is archive.cis.ohio-state.edu 
        (128.146.8.52).
      xtex - For the X Window System. Available via anonymous ftp 
        from ftp.cs.colorado.edu (128.138.243.151) in 
        ./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z.
      dviapollo- for Apollo Domain. Available via anonymous ftp from
        labrea.stanford.edu (36.8.0.112) in ./pub/dviapollo.tar.Z.
      dvidis - For VAXstation VWS. Available via anonymous ftp from
        src.doc.ic.ac.uk (146.169.2.1) in /packages/tex/dviware/dvidis.
      xdvi - Also for the X Window System. Available via anonymous ftp
        from ftp.x.org (192.112.44.100) in ./contrib/xdvi.tar.Z. Karl
        Berry has a version of called xdvik with features analogous
        to his dvipsk (see question 2) available via anonymous ftp from
        ftp.cs.umb.edu (158.121.104.33) in ./pub/tex.
      dvitovdu - for Tektronix 4010 and other terminals under Unix.
        Available via anonymous ftp from wsmr-simtel20.army.mil
        (192.88.110.20) in the directory pd6:<unix-c.printers> as
        dvi2vdu.tar-z (ftp in ``tenex'' mode).
      dvi2tty - A dvi to ASCII conversion program, for normal terminals.
        Available from ftp.cs.ruu.nl (131.211.80.17) in 
        ./pub/TEX/DVI/dvi2tty.shar. A VMS version is available from
        fileserv@shsu.edu (see question 22).
      texsgi - For SGI under Irix. Available via anonymous ftp from 
        ftp.brl.mil (128.63.16.158) in ./info-iris/tex. Both a binary 
        and source are available, but be sure to get the fonts as well.
   
5) Where can I get the manual for PiCTeX?

   The PiCTeX manual is not free. It is available for $30 ($35 with the
   disk) from the TeX Users Group:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

   The proceeds from this sale go to Michael Wichura, the author of PiCTeX,
   and TUG.

6) In LaTeX, I put some definitions in my document, but I get the error
   ``Use of \@ doesn't match its definition.'' What's wrong?

   Definitions should be be in a style file, and if you move them there,
   you should have no problem.

   If you don't want to do that, you need to include \makeatletter
   before the definitions to allow the ``internal'' LaTeX commands to
   be accessed.  These commands are normally protected from change by
   having @ in them.  Since @ is not a letter, it is normally not
   allowed as part of a multi-letter command name. To access internal
   commands you need to tell LaTeX to pretend that @ is a letter.
   This happens automatically when LaTeX reads a style file, but in
   your main document you need to surround the offending commands with
   \makeatletter ... \makeatother.

7) What is OzTeX and where can I get it (TeX for the Mac)?

   OzTeX is a public domain version of TeX for the Macintosh. A DVI
   Previewer and PostScript driver are also included. It should run on
   any Macintosh Plus, SE, II, or newer model, but will not work on a
   128K or 512K Mac. It was written by Andrew Trevorrow, and is available 
   via anonymous ftp from from midway.uchicago.edu (128.135.12.73) in 
   ./pub/OzTeX, which contains other public domain TeX-related software 
   for the Mac as well, or on a floppy disk from TUG (see question 11). 
   Questions about OzTeX may be directed to oztex@midway.uchicago.edu.
   
8) What is Fig and where can I get it?

   Fig is a menu driven tool similar to MacDraw that allows you to
   draw objects on the screen of a Sun Workstation running SunView.
   TransFig is a set of tools which translate the code fig produces to
   other graphics languages including PostScript and the LaTeX picture
   environment. Both are available via anonymous ftp from
   ftp.cs.cornell.edu (128.84.218.75) in ./pub/fig. Both Fig and
   TransFig are also available from the Clarkson archive server at
   sun.soe.clarkson.edu (see question 22). Fig is supported by Micah
   Beck (beck@cs.cornell.edu) and Transfig is maintained by Brian
   Smith (bvsmith@lbl.gov). Another tool for fig conversion is fig2MF
   which generates METAFONT code from fig input. It is available from
   the CTAN archives discussed in question 22.

   XFig is essentially the same program except it runs under the X
   Window System. It is available via anonymous ftp from ftp.x.org
   (192.112.44.100) in ./contrib/applications/drawing_tools/xfig. It
   was written by Brian Smith.

9) How do I get WEB for C, FORTRAN, or some other language?

   TeX is written in the programming language WEB; WEB is a tool to
   implement the concept of ``literate programming.'' For more information
   on literate programming, see the newsgroup comp.programming.literate.

   There is a version of WEB for C called CWEB written by Silvio Levy. It
   is available via anonymous ftp from princeton.edu (128.112.128.1) in 
   the directory ./pub/cweb.

   There is a version of WEB called Spidery WEB which supports many 
   languages including ADA, awk, and C. It was written by Norman Ramsey 
   and, while not in the public domain, is usable free. It is available 
   via anonymous ftp from pip.shsu.edu (192.92.115.10) in 
   tex-archive/web/spiderweb.

   FWEB is a version of WEB for Fortran, Ratfor, and C written by John
   Krommes (krommes@lyman.pppl.gov). Version 1.13 is available via
   anonymous ftp from lyman.pppl.gov (192.55.106.129) in ./pub/fweb.

   SchemeWEB is a Unix filter that translates SchemeWEB into LaTeX source
   or Scheme source. It was written by John Ramsdell and is available from
   sun.soe.clarkson.edu (128.153.12.3) in ./pub/tex/tex-programs/schemeweb.

   APLWEB is a version of WEB for APL and is available from
   watserv1.waterloo.edu (129.97.129.140) in ./languages/apl.

   There are three flavors of WEB that are language-independent and
   have substantial user communities: funnelweb, noweb, and nuweb.
   NoWeb and NuWeb both emphasize simplicity; NoWeb is a bit simpler
   and more flexible, but NuWeb is more portable and easier to
   install.  FunnelWeb is more complex, but is routinely used on a
   wide variety of machines.  All three systems are available from any
   CTAN site (see question 22) in directory
   /tex-archive/web/{funnelweb,noweb,nuweb}.  An introduction to NoWeb
   appeared in the September 1994 IEEE Software, page 97.  Funnelweb
   also appeared in comp.sources.unix volume 26 issue 121, posted 11
   April 1993.

   Most of the above are also available from your nearest CTAN site
   (see question 22).

10) How can I typeset music in TeX?

    A package called MuTeX, written by Andrea Steinbach and Angelika
    Schofer, aids in doing this. It is available via anonymous ftp
    from ftp.cs.ruu.nl (131.211.80.17) in pub/TEX/MuTeX.tar.Z.  This
    package allows you to typeset single-staff music and lyrics.

    A more powerful package which allows the typesetting of orchestral
    and polyphonic music is MusicTeX, written by Daniel Taupin 
    (taupin@frups51.bitnet). It is available via anonymous ftp from
    rsovax.ups.circe.fr (130.84.128.100) [.musictex]. It should also
    be available from the archive sites detailed in question 22.

    There is a mailing list for discussion of typesetting music in TeX.
    To subscribe, send a request to mutex-request@stolaf.edu.

11) What is TUG and TUGboat?

    TUG is the TeX Users Group. TUGboat is their newsletter, containing
    useful articles about TeX and METAFONT. TUG also distributes
    TeX-related microcomputer software on disks. Inquiries should be 
    directed to:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

12) How do I convert Adobe's afm files to tfm format?

    An afm2tfm program is distributed with dvips, available via
    anonymous ftp from labrea.stanford.edu (36.8.0.112) in ./pub. Alan
    Jeffrey's fontinst package is an afm2tfm converter written in TeX 
    and will be used to support the PostScript tfm files for LaTeX2e
    (see question 41). It is available from any CTAN site (see question
    22).

    For the Macintosh, there is a program called EdMetrics which does
    the job (and more). It is available free from:
              Blue Sky Research
              534 Southwest Third Avenue
              Portland, Oregon 97204 (USA)
              800-622-8398 or 503-222-9571

13) In LaTeX, how do I get a double-spaced document?

    Are you producing a thesis, and trying to obey regulations that were
    drafted in the typewriter era?  LaTeX is a typesetting system, so the
    appropriate design conventions are for ``real books''.  Find whoever
    is responsible for the regulations, and try to get the wording changed
    to cater for typeset theses (e.g., to say ``if using a typesetting 
    system, aim to make your thesis look like a well-designed book'').

    If you fail to convince your officials, or want some inter-line 
    space for copy-editing:
     - In LaTeX2e, use \linespread. For double-spaced output, use
       \linespread{1.6}.
     - Try changing \baselinestretch: \renewcommand{\baselinestretch}{1.2}
       may be enough to give officials the impression you've kept
       to their regulations.  Don't try changing \baselineskip: its
       value is reset at any size-changing command.
     - Alternatively, get doublespace.sty from any CTAN site (see question 22,
       e.g., pip.shsu.edu (192.92.115.10)) in 
       ./tex-archive/macros/latex/contrib/misc. There's also a setspace.sty
       in the same directory which is more flexible, and consistent with the
       latest release of LaTeX.

    It's not worth going to a lot of trouble.  (If officials won't allow
    standard typographic conventions, you won't be able to produce an
    aesthetically pleasing document anyway!)

14) In LaTeX, how do I include a file in the verbatim environment?

    A good way to do this is to use Rainer Sch\"opf's verbatim.sty,
    which provides the command \verbatiminput that takes a file
    as an argument. This package is available from any CTAN site (see 
    question 22) in ./tex-archive/macros/latex/distribs. Several
    files are needed.

    Another way to do this is to use the alltt environment defined in
    the style file alltt.sty available from the CTAN archives in 
    ./tex-archive/macros/latex/contrib/misc/alltt.sty.

15) In LaTeX, how do I do Y?

    If you can't figure out how to do something in LaTeX after you
    have read the manual very carefully, asked your local LaTeX
    guru, and thought about it, there is a LaTeX help service 
    available. Please note that the way to accomplish something 
    in LaTeX is often by using an appropriate style file, so please
    check this also (see question 16). If none of this works, send mail 
    in English describing your problem to latex-help@cs.stanford.edu. 
    If you haven't gotten a reply to your problem within about a week, 
    send mail to latex-help-coordinator@cs.stanford.edu.

16) Where can I find a TeX macro or LaTeX style file for doing Y?

    Before you ask for a TeX macro or LaTeX style file to do something, 
    please search the TeX macro index written by David M. Jones
    (dmjones@theory.lcs.mit.edu) and available via anonymous ftp
    from theory.lcs.mit.edu (18.52.0.92) in ./pub/tex/TeX-index. Those 
    without access to anonymous ftp can send a message containing the
    line ``send tex TeX-index'' to archive-server@theory.lcs.mit.edu.
    The index is an excellent reference document with plenty of 
    cross-references. Also, many of the archive sites mentioned in
    question 22 maintain extensive latex style collections, which you
    can look through if you need something not in the index.

    Another possibility is to use the searching features of the CTAN
    archives (see question 22). Once you have an anonymous ftp connection
    established to a CTAN site, you can type the command `quote site index
    <term>' and it will provide a list of files with the string <term> in
    their names.
    
17) How do I generate an index in TeX/LaTeX?

    Making an index is not trivial. There are several indexing programs
    which aid in doing this. The following are available from any CTAN
    site (see question 22):
      makeindex - for LaTeX under Unix (but runs under other OS's
         without changes). A version for the Macintosh is available from
         Johnny Tolliver at tolliver%atf.mfenet@nmfecc.llnl.gov. The 
         Makeindex documentation is a good source of information on how 
         to create your own index. Makeindex can be used with some TeX macro
         packages other than LaTeX, such as Eplain.
      idxtex - for LaTeX under VMS.
      texix - for TeX on CMS and Macintosh machines.
      texindex - for LaTeX under Unix. Available from
         comp.sources.misc archives in Volume 23.

18) How do I get METAFONT to do what I want it to do?

    METAFONT allows you to create your own fonts, and ordinary TeX users
    will never need to use it. METAFONT, unlike TeX, requires some 
    customization. Each output device for which you will be generating 
    fonts needs a mode associated with it. Modes are defined using the 
    mode_def convention described on page 94 of _The METAFONTbook_. So 
    first create a file, which we will call local.mf, containing all the 
    mode_defs you will be using. The file modes.mf by Karl Berry,
    available via anonymous ftp from ftp.cs.umb.edu (158.121.104.33) in
    ./pub/tex is a good starting point for this. Listings of settings for 
    various output devices are also published periodically in TUGboat 
    (see question 11). Now create a plain base file using inimf, plain.mf, 
    and local.mf:
       % inimf
       This is METAFONT....
       **plain                 # you type plain
       (output)
       *input local            # you type this
       (output)
       *dump                   # you type this
       Beginning to dump on file plain....
       (output)
       %
    This should create a base file named plain.base (or something close)
    and should be moved to the directory containing the base files on
    your system.
 
    Now you need to make sure METAFONT loads this base when it starts
    up. If METAFONT loads the plain base by default on your system, then
    you're ready to go. Under Unix, we might, for instance define a 
    command mf which executes ``virmf &plain,'' loading the plain base
    file.
 
    The usual way to create a font with plain METAFONT is to then start 
    it with the line
       \mode=<mode name>; mag=<magnification>; input <font file name>
    in response to the * prompt or on the METAFONT command line. If 
    <mode name> is unknown or omitted, then the mode defaults to proof 
    mode. If this has happened METAFONT will produce an output file
    called <font file name>.2602gf. The <magnification> is a floating 
    point number or magstep (magsteps are defined in _The METAFONTbook_ 
    and _The TeXbook_). If mag=<magnification> is omitted, then the 
    default is 1. For example, to generate cmr10 at 12pt for an epson 
    printer you would type
       mf \mode=epson; mag=1.2; input cmr10
    Note that under Unix the '\' and ';' characters must usually be 
    escaped, so this would typically look something like
       mf \\mode=epson\; mag=1.2\; input cmr10
 
    If you don't have inimf or need a special mode that isn't in the
    base, you can put its commands in a file (e.g., ln03.mf) and invoke
    it on the fly with the \smode command. For example, to create 
    ln03.300gf for an LN03 printer, using the file
	% This is ln03.mf as of 2/27/90
	% mode_def courtesy of John Sauter
	proofing:=0;
	fontmaking:=1;
	tracingtitles:=0;
	pixels_per_inch:=300;
	blacker:=0.65;
	fillin:=-0.1;
	o_correction:=.5;
    (note the absence of the mode_def and enddef commands), you would type
       mf \smode="ln03"; input cmr10
    
19) Where do I get TeX/LaTeX for machine Y running Q?

    Unix - The Unix TeX distribution is available via anonymous ftp from any 
       CTAN archive (see question 22). The Northwest Computing Support Center
       was ordered closed by the University of Washington, thus Unix TeX
       can no longer be ordered.

       Instructions for retrieving TeX via anonymous ftp are available
       in the document FTP.nwc, itself available via anonymous ftp from
       ftp.cs.umb.edu (158.21.104.33) in ./pub/tex.

       Note: The Unix version of TeX allows your ``macros'' or ``inputs''
       and ``fonts'' directories to be hierarchically organized with
       further subdirectories, rather than dumping everything into one
       directory. This can cause TeX to start very slowly. The cure
       for this problem is to insure each subdirectory contains either
       only directories or only files.

    AIX - TeX for the IBM RS6000 running AIX can be found on
       ftp.dante.de (129.206.100.192) in ./tex-archive/systems/unix/aix3.2.

    386/ix - Executables for the 386/ix are available via anonymous ftp 
       from tik.vtt.fi (130.188.52.2) in ./pub/tex/bin-386ix and from 
       math.berkeley.edu (128.32.183.94) in ./pub/tex386ix.tar.Z.

    PC - A TeX package for the PC, including LaTeX, BibTeX, previewers,
       and drivers is available via anonymous ftp from 
       vax.eedsp.gatech.edu (130.207.226.24) in ./pub/TeX. The variety here
       is sbtex version 30 by Wayne Sullivan. EmTeX, another TeX package 
       for the PC by Eberhard Mattes, is available via anonymous ftp from 
       ftp.dante.de (129.206.100.192) in 
       ./tex-archive/systems/msdos/emtex and also from niord.shsu.edu
       (192.92.115.8) in [.emtex]. This package includes LaTeX, METAFONT,
       BibTeX, etc., as well. Documentation is available in both German 
       and English.

    Mac - see question 7 for a public domain version (OzTeX). Another version
       is CMacTeX, which has TeX 3.14, METAFONT 2.7, a screen previewer,
       dvips, a PostScript printing utility for the LaserWriter, and some font
       managing utilities. It is available from the CTAN archives discussed
       in question 22. 

    TOPS-20 - TeX was originally written on a DEC-10 under WAITS, and so
       was easily ported to TOPS-20. A Distribution that runs on TOPS-20 
       is available via anonymous ftp from ftp.math.utah.edu 
       (128.110.198.34) in ./pub/tex/pub/web.

    VAX/VMS - TeX for VMS is available from any CTAN site (see question 22)
       in the directory ./systems/vms. Standard tape distribution is 
       through DECUS.

    Atari - TeX is available for the Atari ST from atari.archive.umich.edu
       (141.211.165.41) in ./atari/tex. If anonymous ftp is not available
       to you, send a message containing the line ``help'' to
       atari@atari.archive.umich.edu. The mail server can uuencode
       binary files. Another version can be obtained via anonymous
       ftp from ifi.informatik.uni-stuttgart.de (129.69.211.1) in
       ./pub/atari.st/tex. There is also lots of TeX stuff for the
       Atari on the CTAN and ftp.cs.ruu.nl archives mentioned in
       question 22.

    Amiga - A full implementation of TeX 3.1 call PasTeX and METAFONT 2.7
        are available via anonymous ftp from merlin.etsu.edu (192.43.199.20)
        in ./ab20/AMIGA. It is also available via anonymous ftp from
        forwiss.uni-passau.de (132.231.20.10) in ./pub/amiga/tex. 
        You can also order a CDROM containing this and other amiga software
        from Walnut Creek CDROM, (510) 947-5997.

    Tandy 6000 - If you are interested in building TeX on this machine
        contact Ken Yap (ken@syd.dit.csiro.au), and he'll help you.

20) Where can I get a thesis style for LaTeX?

    Thesis styles are usually very specific to your University, so it's
    usually not profitable to ask the whole newsgroup for one. If you
    want to write your own, a good place to start is the ucthesis style
    available from any CTAN archive in macros/latex/contrib/ucthesis
    (see question 22).

21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
    and so on?

    These symbols are known as ``blackboard bold'' and are available in
    the AMS fonts ``msam'' (e.g., ``msam10'' for 10pt) and ``msbm''. 
    They replace the older ``msxm'' and ``msym''. The fonts have a large
    number of mathematical symbols to supplement the ones 
    provided by TeX. The fonts are available via anonymous ftp from
    e-math.ams.com (130.44.1.100) in the directory ./ams/amsfonts.
    Two files which load the fonts and define the symbols are provided,
    and both work with either TeX or LaTeX. Questions or suggestions 
    regarding these fonts should be directed to 
    tech-support@math.ams.com.

    A geometric sans serif blackboard bold font by Alan Jeffrey is available
    from any CTAN archive (see question 22) in ./tex-archive/fonts/bbold.

    A set of LaTeX macros for a ``lazy person's'' blackboard bold are:
       \newcommand{\R}{{\sf R\hspace*{-0.9ex}\rule{0.15ex}%
       {1.5ex}\hspace*{0.9ex}}}
       \newcommand{\N}{{\sf N\hspace*{-1.0ex}\rule{0.15ex}%
       {1.3ex}\hspace*{1.0ex}}}
       \newcommand{\Q}{{\sf Q\hspace*{-1.1ex}\rule{0.15ex}%
       {1.5ex}\hspace*{1.1ex}}}
       \newcommand{\C}{{\sf C\hspace*{-0.9ex}\rule{0.15ex}%
       {1.3ex}\hspace*{0.9ex}}}

22) What repositories of TeX material are available, and how can I access
    them?
 
    To aid the archiving and retrieval of of TeX-related files, a TUG
    working group developed the Comprehensive TeX Archive Network
    (CTAN).  Each CTAN site has identical material, and maintains
    authoritative versions of its material.  These collections are
    extensive; in particular, almost everything mentioned in this
    document is archived at the CTAN sites, even if not explicitly
    stated.

    The CTAN sites are currently ftp.dante.de (129.206.100.192)
    ftp.tex.ac.uk (134.151.44.19), and pip.shsu.edu (192.92.115.10). 
    The organization of TeX files on all these sites is identical and
    starts at ./tex-archive. To reduce network load, please use the
    CTAN site or mirror closest to you. A complete and current list
    of CTAN sites and mirrors can be obtained by using the finger
    utility to finger ctan_us@ftp.SHSU.edu.

    To find software at a CTAN site, use anonymous ftp to the host,
    and then execute the command `quote site index <search-term>'.

    The mail servers of the CTAN sites are not yet identical, but this is
    planned. Here are the current methods of access via electronic mail:
      - For the UK site, send a message to texserver@tex.ac.uk. The
        first non-blank line of the message must contain a valid
        TeXserver command (help, directory, files, whereis, search,
        or path). The program will then mail you a response notifying
        you that your request has been received. If you fail to get a
        response from the TeXserver, you may need to use the ``path''
        command to help the program out. For Internet users the
        return address is of the form name%site@nsfnet-relay, while
        for Bitnet and EARN it is name%site@earn-relay (i.e., include
        a line that says ``path name%site@nsfnet-relay'' along with a
        line containing ``help''). 
      - For ftp.dante.de, send a message containing the line
        ``help'' to mail-server@ftp.dante.de.
      - For the SHSU site, send a message with the line "help" to
        ftpmail@ftp.shsu.edu. This provides an ftp-like interface
        through mail.

    There are several other repositories of TeX material available:
      - ftp.cs.ruu.nl (131.211.80.17) also contains a substantial TeX
        archive with ftp access. To use it via email, send a message
        containing the line ``help'' to mail-server@cs.ruu.nl. This mail 
        server can send binary files in a variety of different formats.
      - There are LISTSERV facilities for TeX at LISTSERV@DHDURZ1.BITNET. 
        Send a message containing the line ``help'' to this address.
      - For users on BITNET, access to anonymous ftp for some files can
        be obtained indirectly by sending mail to BITFTP@PUCC.BITNET.
        Send a message containing the line ``help'' to this address for
        more information.
     
    There is also the DECUS TeX collection, a collection of TeX material
    for VMS, Unix, MS-DOS, and the Macintosh. It is available via 
    anonymous ftp from wuarchive.wustl.edu (128.252.135.4) in ./decus/tex.
    It can also be obtained from the DECUS Library (reference number 
    VS0058) in the US, or through your DECUS office outside of the US. To 
    contact the DECUS Library, send mail or call:
                 The DECUS Program Library
                 334 South Street SHR3-1/T25
                 Shrewsbury, MA 01545-4195
                 (800)332-3755
    The last update to this collection was in February 1991, so it is old.
     
    Another good source of information is NETWORK SOURCES OF TeX WARE by
    Peter Flynn which appeared in TeXhax, volume 90, issues 45-47 (in
    May 1990).      

23) How do I use PostScript fonts with LaTeX?

    The best way to do this is to install LaTeX2e (see question 41)
    and use the PSNFSS2e package written by Sebastian Rahtz. It is
    available from all the major archives mentioned in question
    22. Other methods for using PostScript fonts in LaTeX are
    cumbersome at best.

24) How can I convert from format Y to TeX or LaTeX, and vice-versa?

    troff - TROFF-TO-LATEX.TAR-Z is available via anonymous ftp from
      wsmr-simtel20.army.mil (192.88.110.20) in the directory 
      pd2:<unix-c.textproc>. This program, written by Kamal Al-Yahya 
      at Stanford, assists in the translation of a troff document into 
      LaTeX format.  It recognizes most -ms and -man macros, plus most 
      eqn and some tbl preprocessor commands. Anything fancier needs 
      to be done by hand.  Two style files are provided.  There 
      is also a man page (which converts very well to LaTeX :-).  
      The program is copyrighted but free. An enhanced version of this
      program, tr2latex, is available from 
      ftp.informatik.rwth-aachen.de (137.226.112.172) in ./pub/TeX. 
      The DECUS TeX distribution (see question 22) also contains a program
      which converts troff to TeX. If you are interested in obtaining a copy
      of this program without getting the entire DECUS TeX distribution, 
      send the command: SENDME TROFFTOTEX in the body of a mail message to
      FILESERV@SHSU.BITNET (FILESERV@SHSU.edu), or use anonymous ftp to the
      directory [.TROFFTOTEX] on Niord.SHSU.edu (192.92.115.8). 

    scribe - Mark James has a copy of scribe2latex he has been
      unable to test but which he will let anyone interested have.
      Send email to jamesm@procor.dialogic.com. The program was written
      by Van Jacobson of Lawrence Berkeley Laboratory.

    wordperfect -  wp2latex.zip is available on wuarchive.wustl.edu
      (128.252.135.4) in the directory ./mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in the directory pd1:<msdos.tex>.
      This is a PC program written in Turbo Pascal by R. C. Houtepen at
      the Eindhoven University in the Netherlands.  It converts
      WordPerfect 5.0 documents to LaTeX.  Pascal source is included.
      Users find it ``helpful'' and ``decent'' in spite of some
      limitations. It gets high marks for handling font changes.
      Limitations include no indices, table of contents, margins or
      graphics.  It also won't handle the new features of WordPerfect
      5.1, in particular the equation formatter. The program is
      copyrighted but free.

      Glenn Geers of the University of Sydney (glenn@qed.physics.su.oz.au)
      is translating wp2latex into C and adding some WordPerfect 5.1
      features, in particular its equation handling.  This is an ongoing
      project; the most recent version can be retrieved via anonymous ftp
      from suphys.physics.su.oz.au (129.78.129.1) in ./wp2latex. It was 
      posted to alt.sources on 8 August 1990.

      Commercial packages are available for DOS which convert from
      WordPerfect to LaTeX, and from TeX and LaTeX to WordPerfect, but
      I am unaware of any free products which do this.

    PC-Write - pcwritex.arc is available on wuarchive.wustl.edu
      (128.252.135.4) in directory mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in directory pd1:<msdos.tex>.
      This is a print driver for PC-Write that ``prints'' a PC-Write V2.71
      document to a TeX-compatible disk file.  It was written by Peter
      Flynn at University College, Cork, Ireland.  It is public domain.  

    runoff - Peter Vanroose (vanroose@esat.kuleuven.ac.be) has 
      written a RUNOFF-to-TeX conversion program in VMS Pascal.  It is 
      available from comp.text archives (they do exist, don't they?  The 
      program was submitted in December 1987) or from the author 
      (peter@dit.lth.se) or from Mark James (jamesm@procor.dialogic.com).

    refer/Tib - There are a few programs for converting bibliographic data 
      between BibTeX and refer/Tib formats.  They are available via 
      anonymous ftp from ftp.ai.mit.edu (128.52.32.11) in the 
      directory ./pub/refer-to-bibtex.  In spite of the directory name, 
      it also contains a  shell script to convert BibTeX to REFER as 
      well. Unfortunately, this collection is not maintained.

    RTF - A program for converting Microsoft's Rich Text Format to TeX
      is available via anonymous ftp from astro.princeton.edu
      (128.112.128.131) in ./pub/rtf2TeX.tar.Z. It was written and is
      maintained by Robert Lupton (rhl@astro.princeton.edu). There is
      also an rtf2LateX written by Erwin Wechtl available from 
      ftp.vmars.tuwien.ac.at (128.130.39.16) in ./pub/misc.

    Microsoft Word - A rudimentary program for converting MS-Word
      to LaTeX is wd2latex, for MS-DOS, available via anonymous ftp
      from any CTAN site (see question 22). A better idea, however, 
      is to convert the document to RTF format and use the RTF 
      converter mentioned above.
    
    In addition, a group at Ohio State University is working on a common
    document format based on SGML.  In theory any format could be
    translated to or from this one.  Also, Framemaker supposedly has
    ``import filters'' to aid in the translation from alien formats
    (presumably including TeX) to Framemaker; perhaps other desktop
    publishing programs have similar things.
      
25) How do I get a file into the major style repositories?
    
    Use anonymous ftp to any CTAN archive (see question 22) and
    retrieve the file README.uploads in the root directory. It contains
    instructions for uploading files and notifying the appropriate
    people for that site.

    If you cannot use ftp, mail your contribution to sty-mgr@shsu.edu
    and it will be passed along. You will make everyone's life easier
    if you choose a descriptive and unique name for your submission, so
    it's probably good idea to browse through some of the styles
    already available to insure your style file's name is not already
    in use.

26) Where can I get font Y?

    A comprehensive list of METAFONT fonts is posted to Comp.fonts
    about once every six weeks by Lee Quin (lee@sq.sq.com). It contains
    both commercial fonts and fonts available via anonymous ftp. Most
    of the fonts available via anonymous ftp are available from
    the CTAN archives (see question 22). Also, the file wujastyk.txh
    ./tex-archive/digests/texhax/txh/wujastyk.txh is a copy of
    Dominik Wujastyk's font article, and contains information on
    METAFONT fonts as well.

27) Where can I get a dvi driver for the HP LaserJet?

    PC - The emtex package mentioned in question 19 contains a driver for
       the LaserJet, dvihplj. 

    Version 2.10 of the Beebe drivers support the LaserJet. These drivers
    will compile under Unix, VMS, and on the Atari ST and DEC-20's. They
    are available from ftp.math.utah.edu (128.110.198.34) in ./pub/tex/dvi.

28) TeX and LaTeX are hyphenating words weirdly. What can I do?

    You have a version mismatch problem. The hyphenation algorithm changed
    between version 2.9 and 3.0. If you are using TeX version 3.0 or
    later, make sure you have plain.tex and lplain.tex files with a
    version number of at least 3.0.

    For those of you curious about the change, here's what happened:
    in versions of TeX before 3.0 the hyphenation algorithm would not
    break a word if the part before the break was not at least two
    characters long, and the part after the break at least three 
    characters long. Starting with version 3.0 two integer parameters,
    \lefthyphenmin and \righthyphenmin, control the length of these
    fragments. These are set to 2 and 3, respectively, in the new
    plain and lplain formats. They can be set to any value, of course,
    but if \lefthyphenmin + \righthyphenmin is greater than 62, all
    hyphenation is suppressed.

29) How can I convert a TeX or LaTeX file into a plain ASCII file,
    with all the formatting intact, a la nroff?

    Ralph Droms (droms@bucknell.edu) has a style file and a C program
    that provide the LaTeX equivalent of nroff. Although it doesn't do
    a good job with tables and math, it's the best way to convert that
    I've seen. The software is available for anonymous ftp from
    sol.cs.bucknell.edu (134.82.1.8) in ./droms/txt-dist.tar. This is a
    modification of the dvi2tty program; the original often does an
    acceptable job and can be gotten from any CTAN site (see question 22).

    Another possibility is to use screen.sty, available from all the
    major archives. However you need a program called crudetype to
    process the resulting dvi file. It is available from
    emx.utexas.edu (128.83.186.11) in
    ./pub/mnt/source/tex/tex-3.0/DVIware/lpr-viewers/crudetype and
    from ftp.uni-stuttgart.de (129.69.8.13) in
    ./tex-archive/dviware/screenview. Another possibility is to use
    the LaTeX-to-ASCII conversion program, l2a, available from
    comp.sources.misc archives (one archive site is ftp.uu.net
    (192.48.96.9)), although this is really more of a de-TeXing
    program. If you are running under Unix and have C++ and perl, you
    might try Jonathan Monsarrat's LameTeX package (which actually
    does much more than this), available from wilma.cs.brown.edu
    (128.148.33.66) in ./pub/lametex.tar.Z.

30) How do I enlarge TeX? I keep getting `memory capacity exceeded'
    errors.

    Most of the time, a ``memory capacity exceeded'' error can be fixed
    without enlarging TeX.  The most common causes are unmatched braces,
    extra-long lines, and poorly-written macros.  Extra-long lines
    are often introduced when files are transferred incorrectly between
    operating systems.  (The tell-tale sign of an extra-long line error
    is when the complaint is that the `buf_size' has overflowed.)

    If you really need to extend your TeX's capacity, the proper method
    varies depending on your installation.  In the purest form, you
    change the parameters in module 11 (``The following parameters can
    be changed...'')  In less pure forms, you might need to modify a
    change file, or perhaps change some environment variables.  Consult
    the documentation that came with your particular implementation.

31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
    numbered. What do I do?

    If you see this, you are using the \maketitle command too. This is
    not a bug but a feature! The standard LaTeX styles are written so
    that initial pages (pages containing a \maketitle, \part, or \chapter)
    have a different page style than the rest of the document. Hence, the
    above commands internally issue a \thispagestyle{plain}. This is
    usually not acceptable behavior is the page style is `empty'.

    Possible workarounds include:   
     - Put \thispagestyle{empty} immediately after the \maketitle command, 
       with no blank line between them.
     - Use fancyheadings.sty, available from any CTAN (see question 22).
       In this style, the style for initial pages can be customized as well.

32) Where do I find documentation about BibTeX?

    BibTeX, a program originally designed to produce bibliographies in
    conjunction with LaTeX, is explained in Section 4.3 and Appendix B 
    of Leslie Lamport's LaTeX manual.  The ``BibTeXing'' document, 
    contained in the file btxdoc.tex, gives a more complete description.
    _The LaTeX Companion_ also has information on BibTeX and writing 
    BibTeX style files.

    The ``Designing BibTeX Styles'' document, contained in the file 
    btxhak.tex, explains the postfix stack-based language used to
    write BibTeX styles (.bst files).  The file btxbst.doc is the template
    file for the four standard styles (plain, abbrv, alpha, unsrt). It
    also contains the documentation for them.

    The current Unix-BibTeX man page, contained in the file
    bibtex.1, was updated in January 1992 and is about one page long.
    There's an old and obsolete version floating around, written in 1985
    before ``BibTeXing'' and ``Designing BibTeX Styles'' appeared, that is
    several pages long.  You should ignore it (or throw it away), since it
    describes BibTeX version 0.98, style files of which are incompatible 
    with the current version, 0.99 (to be precise, 0.99c).

    All files mentioned in this answer are available via anonymous ftp
    from labrea.stanford.edu (36.8.0.112) in the BibTeX ftp area, 
    tex/bibtex. All the non-Unix files should be available on any system 
    that runs BibTeX; if they're not on your system, please complain to 
    your BibTeX installer or to your distribution source.

33) How do I use BibTeX with plain TeX?

    The file btxmac.tex contains TeX macros and documentation for using
    BibTeX with plain TeX, either directly or with Karl Berry's Eplain
    package. It is available via anonymous ftp from labrea.stanford.edu
    (36.8.0.112) in tex/bibtex (see question 32 for more information 
    about BibTeX).

34) How do I draw Feynman diagrams in LaTeX?

    Michael Levine's macro package for drawing Feynman diagrams in LaTeX
    is available via mail-server from physics.utoronto.ca. Send a message
    containing the line ``send INDEX'' to mail-server@physics.utoronto.ca
    for information on how to retrieve it. It is also available from any
    CTAN site or mirror (see question 22).

35) What is the New Font Selection Scheme (NFSS)?

    NFSS is an extension to LaTeX written by Frank Mittelbach and Rainer
    Sch\"opf. It is described in TUGboat, volume 10 (1989), No. 2.
    In traditional typesetting, fonts are described by four parameters:
    the family (e.g., computer modern), the series (i.e., the weight and
    width of the font, like light or bold), the shape (e.g., italic), and
    the size. NFSS is a mechanism allowing the user to change any of these
    independently. NFSS makes it relatively easy to use nonstandard fonts
    such as the PostScript ones with LaTeX, and easy to change math fonts.
    It also allows dynamic loading of fonts at runtime (not when the
    format file is created).

    NFSS is no longer supported for LaTeX version 2.09, but is standard
    with LaTeX2e (see question 41).

    There is one caveat that applies to LaTeX documents written for
    the OLD scheme: some of them use special styles for special fonts
    which will not work under the NFSS.

36) In LaTeX, my cross-references for floats (figures and tables) are
    incorrect. What's wrong?

    The \label command must come after the \caption command, or
    be part of it. For example,
       \begin{figure}               \begin{figure}
       \caption{A Figure}    or     \caption{A Figure\label{fig}}
       \label{fig}                  \end{figure}
       \end{figure}

37) I want to change the margins in LaTeX. What can I do?

    This answer first helps you change the margins throughout a
    document, then tells you how to change the margins in a portion
    of the document.

    Perhaps the easiest way to get more out of a page in LaTeX is to
    get fullpage.sty, available from all the major archive servers
    mentioned in question 22. This sets the margins of the page identical
    to those of Plain TeX, i.e., 1-inch margins at all four sides of the
    paper. It also contains an adjustment for A4 paper.

    Here is a brief explanation of what's going on with the page
    parameters in LaTeX. They are explained in section C.4.2 of the
    LaTeX manual (p. 163). The margin parameters represent measurements
    made to the DVI file. The origin in DVI coordinates is one inch
    from the top of the paper and one inch from the left side. This
    explains the ``one inch less than'' terminology used in the LaTeX
    manual. In DVI coordinates, positive horizontal measurements extend
    right across the page, and positive vertical measurements extend down
    the page. Thus, for margins closer to the left and top edges of the
    page than 1 inch, the corresponding parameters, e.g.,
    \evensidemargin, \oddsidemargin, \topmargin, can be set to negative
    values.

    Finally, to change the margins of a document within the document,
    modifying the parameters listed on page 163 will not work. They
    can only be changed in the preamble of the document, i.e, before
    the \begin{document} statement. To adjust the margins within a
    document we define an environment which does it:
      \newenvironment{changemargin}[2]{\begin{list}{}{
         \setlength{\topsep}{0pt}\setlength{\leftmargin}{0pt}
         \setlength{\rightmargin}{0pt}
         \setlength{\listparindent}{\parindent}
         \setlength{\itemindent}{\parindent}
         \setlength{\parsep}{0pt plus 1pt}
         \addtolength{\leftmargin}{#1}\addtolength{\rightmargin}{#2}
         }\item }{\end{list}}
    This environment takes two arguments, and will indent the left
    and right margins by their values, respectively. Negative values
    will cause the margins to be widened, so
    \begin{changemargin}{-1cm}{-1cm} widens the left and right margins
    by 1cm.

38) How do I find the width of a letter, word, or phrase in TeX?

    Put the word in a box, and measure the width of the box. For example,
        \setbox0=\hbox{hi}
        width=\wd0
    Note that if the quantity in the hbox is a phrase, the actual 
    measurement only approximates this width, since the interword glue
    can be adjusted in paragraph mode.

    In LaTeX, the following works (taken from the manual):
        \newlength{\gnat}
        \settowidth{\gnat}{\em small}
    This sets the value of the length command \gnat to the width of ``small''
    in emphasized text.

39) In LaTeX, is there a comment or ``ignore'' environment with which
    I can exclude blocks of text from the .dvi file?

    Rainer Sch\"opf's verbatim.sty provides a comment environment which
    excludes everything between \begin{comment} and \end{comment}. It is
    available via anonymous ftp from any CTAN site (see question 22) in
    ./tex-archive/macros/latex/distribs. Several files are needed to
    install the package. A more general environment for doing this is
    comment.sty, also available from the CTAN sites in
    ./tex-archive/macros/latex/contrib/misc.

40) Where can I find a spelling checker for my TeX file?

    For Unix, ispell is probably the program of choice. It is available
    from any CTAN site (see question 22) in ./tex-archive/support/ispell.

    For DOS, jspell is an extended version of ispell, and is available via
    anonymous ftp from oak.oakland.edu (141.210.10.117) in 
    ./pub/msdos/tex/jspell*.zip.

    For VMS, a spell checker can be found via anonymous ftp from ftp.spc.edu
    in  [.MACRO32.SAVESETS]. Retrieve SPELL.ZIP and SPELL_DICTIONARY.ZIP. 

41) What is LaTeX2e?

    LaTeX2e is the new standard version of LaTeX, prepared and
    supported by the LaTeX3 project team. It is the current version of
    LaTeX and is available from any CTAN site (see question 22) in
    ./tex-archive/macros/latex. LaTeX 2.09 is no longer supported.

    LaTeX2e is upwardly compatible with LaTeX 2.09, but supports many new
    features, including:
     - NFSS (see question 35) is now standard.
     - SliTeX is consolidated into it, and there is no longer a need for
       a separate program.
     - The output routine gives better control of floating environments,
       such as figures.
     - There is a documented interface to style files.
     - Enhanced box commands, e.g., options to specify the height of a 
       minipage.
     - \ref is now robust and can be used in \caption.
     - \newcommand can define commands with optional arguments.
     - A standard package for color and graphics inclusion.

    Since LaTeX2e is supported, you can report bugs or problems with it by
    typing `latex latexbug' and sending the report it generates to 
    latex-bugs@rus.uni-stuttgart.de.

42) In LaTeX, how can I define a new log-like function?

    Use the \mathop command, as in:
         \newcommand{\diag}{\mathop{\mathrm{diag}}}

    Subscripts and superscripts to \diag will be done identically to \lim.
    If you want your subscripts and superscripts placed to the right, do:
         \newcommand{\diag}{\mathop{\mathrm{diag}}\nolimits}

    Older versions of LaTeX may not define \mathrm; alternatively, use
    {\rm diag}.

43) In LaTeX, how do I put a \sqrt in my \caption statement?

    \sqrt is a fragile command and the argument to \caption is ordinarily
    a moving argument. Therefore \sqrt needs to be preceded with a \protect
    command.

44) In LaTeX, how do I get thin and thick \hlines in a table?

    In the preamble, do: 
         \setlength{\doublerulesep}{\arrayrulewidth}.
    Then in a table or array, do:
         <stuff in the table>  \\\hline         %thin hline
         <more stuff in table> \\\hline\hline   %thick hline

45) In LaTeX, how do I number the bibliography using Arabic numbers without
    square brackets or using superscripts?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\@biblabel[1]{#1.}     % Arabic numbers, no brackets
         \renewcommand\@biblabel[1]{$^{#1}$} % Superscripts

46) In LaTeX, why are my cites all numbered zero?

    Your document style and your version of LaTeX are incompatible.
    Since this may reflect an incomplete update done at some point,
    you should probably get the complete distribution (see question
    22).

    This problem usually occurs using an old university style file
    which is not maintained. If you are going to correct the style
    file, the definition of \thebibliography needs to be updated from
    article.cls (or article.sty).

47) In LaTeX, my figures get put on a page by themselves with too much
    whitespace, but when I tried \begin{figure}[t] they get printed at
    the end. Why?

    Your figures are bigger than \floatpagefraction, but you are
    willing to accept pages with less text than the default.  Use:
         \renewcommand\floatpagefraction{.9}
         \renewcommand\topfraction{.9}
         \renewcommand\bottomfraction{.9}
         \renewcommand\textfraction{.1}

    You can adjust the cut-off value if you like, but it makes no
    sense to go higher than .95 (LaTeX's default value is only .5).
    Also, the first 3 values should be equal, and the last should be
    1 - \floatpagefraction.  Otherwise, you are likely to get floats
    flushed to the end.

48) In LaTeX, how do I make a line break in a section title?

    It is better to try to prevent bad breaks by using ~ than to force
    good breaks. Unfortunately, LaTeX's default styles make titles with
    flush margins and most other styles have followed, so this may not
    work in many cases. You should definitely avoid hyphenation in titles.

    To force line breaks in a title, but not in the table of contents,
    use the optional argument for \section:
         \section[This is the Title]{This is\\ the Title}

    One benefit of this is that \\ is safe and no \protect is needed.

49) In LaTeX, how do I number equations by section?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\theequation{\thesection.\arabic{equation}}
         \@addtoreset{equation}{section}

    If you have chapters with a preamble that comes before the first
    section, you should not put equations there, as you will get funny
    numbers like 3.0.1. There are also two style files available from
    any CTAN site called seceqn.sty and apeqnum.sty. The first numbers
    equations by section, and the second gives individual equation
    numbers to equations in the appendix.

-- 
Bobby Bodenheimer				@hot.caltech.edu
// ARPA  : bobby@hot.caltech.edu                |
// BITNET: bobby@caltech.bitnet                 | Woof!
// UUCP  : {amdahl,ames!elroy}!cit-vax!bobby    | 


Article: 28330 of comp.text.tex
Path: news.doit.wisc.edu!saimiri.primate.wisc.edu!caen!spool.mu.edu!howland.reston.ans.net!agate!dog.ee.lbl.gov!overload.lbl.gov!lll-winken.llnl.gov!fnnews.fnal.gov!nntp-server.caltech.edu!hot.caltech.edu!bobby
From: bobby@hot.caltech.edu (Bobby Bodenheimer)
Newsgroups: comp.text.tex,fr.comp.text.tex,comp.answers,news.answers
Subject: TeX, LaTeX, etc.: Frequently Asked Questions with Answers [Monthly]
Supersedes: <tex-faq_784267264@hot.caltech.edu>
Followup-To: comp.text.tex
Date: 8 Nov 1994 04:08:37 GMT
Organization: California Institute of Technology, Pasadena, CA.
Lines: 1210
Approved: news-answers-request@MIT.Edu
Expires: 6 Jan 1995 04:08:34 GMT
Message-ID: <tex-faq_784267714@hot.caltech.edu>
Reply-To: bobby@hot.caltech.edu
NNTP-Posting-Host: hot.caltech.edu
Keywords: monthly faq
Originator: bobby@hot.caltech.edu
Xref: news.doit.wisc.edu comp.text.tex:28330 comp.answers:7442 news.answers:23104

Archive-name: tex-faq

Comp.text.tex is a forum for the discussion of TeX, LaTeX and other
related things. TeX is a software system written by Donald Knuth to
typeset text, especially text containing mathematics. LaTeX is a set
of macros written in TeX, designed to simplify the the typesetting of
a document by allowing the user to concentrate on the content and
structure of the document rather than the exact appearance of the
finished product. METAFONT, also discussed here, is a program which
allows the user to design their own fonts. The definitive reference
for TeX is _The TeXbook_, by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13447-0, paperback 0-201-13448-9). For LaTeX, see _LaTeX, a
Document Preparation System_ by Leslie Lamport (Addison Wesley, 1986,
ISBN 0-201-15790-X); the second edition of this book covers LaTeX2e.
Full documentation for LaTeX2e can be found in _The LaTeX Companion_
by Michael Goossens, Frank Mittelbach, and Alexander Samarin (Addison
Wesley, 1993, ISBN 0-201-54199-8). For METAFONT, see _The
METAFONTbook_ by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13445-4). The American Mathematical Society has two macro
packages which are also popular, called AMS-TeX and AMS-LaTeX.

This article contains answers to some frequently asked questions on
comp.text.tex. Please don't ask these questions again, as they've been
answered many times before.

Malencontreusement, je n'ai ni le temps ni la comp\'etence pour
traduire cet article en fran\c{c}ais. Je prie donc, le lecture
interess\'e par fr.comp.text.tex d'avoir l'indulgence d'accepter la
version anglaise.

This is version 1.48 for November, last changed 11/7/94.

This article includes answers to:

  1) How can I get a copy of this article?
  2) Where can I get a DVI to PostScript conversion program?
  3) How can I include a PostScript figure in LaTeX?
  4) Where can I find a DVI previewer for machine Y running Q?
  5) Where can I get the manual for PiCTeX?
  6) In LaTeX, I put some definitions in my document, but I get the error
     ``Use of \@ doesn't match its definition.'' What's wrong?
  7) What is OzTeX and where can I get it (TeX for the Mac)?
  8) What is Fig and where can I get it?
  9) How do I get WEB for C, FORTRAN, or some other language?
  10) How can I typeset music in TeX?
  11) What is TUG and TUGboat?
  12) How do I convert Adobe's afm files to tfm format?
  13) In LaTeX, how do I get a double-spaced document?
  14) In LaTeX, how do I include a file in the verbatim environment?
  15) In LaTeX, how do I do Y?
  16) Where can I find a TeX macro or LaTeX style file for doing Y?
  17) How do I generate an index in TeX/LaTeX?
  18) How do I get METAFONT to do what I want it to do?
  19) Where do I get TeX/LaTeX for machine Y running Q?
  20) Where can I get a thesis style for LaTeX?
  21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
      and so on?
  22) What repositories of TeX material are available, and how can I
      access them?
  23) How do I use PostScript fonts with LaTeX?
  24) How can I convert from format Y to TeX or LaTeX, and vice-versa?
  25) How do I get a file into the major style repositories?
  26) Where can I get font Y?
  27) Where can I get a dvi driver for the HP LaserJet?
  28) TeX and LaTeX are hyphenating words weirdly. What can I do?
  29) How can I convert a TeX or LaTeX file into a plain ASCII file,
      with all the formatting intact, a la nroff?
  30) How do I enlarge TeX? I keep getting ``memory capacity exceeded''
      errors.
  31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
      numbered. What do I do?
  32) Where do I find documentation about BibTeX?
  33) How do I use BibTeX with plain TeX?
  34) How do I draw Feynman diagrams in LaTeX?
  35) What is the New Font Selection Scheme (NFSS)?
  36) In LaTeX, my cross-references for floats (figures and tables) are
      incorrect. What's wrong?
  37) I want to change the margins in LaTeX. What can I do?
  38) How do I find the width of a letter, word, or phrase in TeX?
  39) In LaTeX, is there a comment or ``ignore'' environment with which
      I can exclude blocks of text from the .dvi file?
  40) Where can I find a spelling checker for my TeX file?
  41) What is LaTeX2e?
  42) In LaTeX, how can I define a new log-like function?
  43) In LaTeX, how do I put a \sqrt in my \caption statement?
  44) In LaTeX, how do I get thin and thick \hlines in a table?
  45) In LaTeX, how do I number the bibliography using Arabic numbers without
      square brackets or using superscripts?
  46) In LaTeX, why are my cites all numbered zero?
  47) In LaTeX, my figures get put on a page by themselves with too much
      whitespace, but when I tried \begin{figure}[t] they get printed at
      the end. Why?
  48) In LaTeX, how do I make a line break in a section title?
  49) In LaTeX, how do I number equations by section?

If you are looking, for instance, for the answer to question 17, and wish
to skip everything else, you can search ahead for the regular expression
``^17)''.

These are all legitimate questions, but they seem to appear too 
frequently for long-time readers of the list. 

Many of the answers below tell you that you can obtain something
through anonymous ftp. ``Ftp'' stands for file transfer protocol, and
is also the name of a program implementing the protocol. The program
allows users to transfer files to and from remote sites, if the sites
are connected via a network such as the Internet. ``Anonymous ftp'' 
indicates a user may connect to a remote site as the user 
``anonymous'' with a password consisting of their email address, and
thus be able to retrieve files from that site. Remember, anonymous
ftp is a privilege and the system administrators for these sites 
have made these files available out of their own generosity. Therefore
please restrict your ftp'ing to non-prime hours at the various sites.

I would like to acknowledge Don Hosek, Ken Yap, Tomas Rokicki, Micah
Beck, David Carlisle, and Donald Arseneau who provided many of the
answers.  Joe Weening, Hal Perkins, Walter Carlip, Max Hailpern, Tad
Guy, Raymond Chen, Henning Schulzrinne, Sebastian Rahtz, Mark James,
Peter Galko, Mike Ernst, Rainer Sch\"opf, Oren Patashnik, Philippe
Louarn, Rafal Zbikowski, Anita Marie Hoover, David Rhead, Darrell
McCauley, Cameron Smith, Emma Pease, Patrick McPhee, Karl Berry, Robin
Fairbairns, Joohee Jeong, Sam Steingold, J\"org Knappen, Barbara
Beeton, Norman Ramsay, and Richard Mathar provided additional material
and criticisms. The format of this document is based on the Frequently
Asked Questions written by Steve Hayman which formerly appeared in
comp.unix.wizards. Any mistakes are mine. Send corrections,
suggestions, and additions to bobby@hot.caltech.edu.

1) How can I get a copy of this article?

   You're reading it aren't you? SAVE it :-). This article is posted
   monthly to comp.text.tex and cross-posted to news.answers. It is
   therefore archived at any site that archives news.answers.
   News.answers is archived on rtfm.mit.edu, and this article is
   available there via anonymous ftp in the directory
   ./pub/usenet/news.answers/tex-faq. If you do not have anonymous
   ftp, send an e-mail message containing the lines ``SENDME FAQ.'' to
   fileserv@shsu.edu (fileserv@shsu.bitnet).  Another way to retrieve
   it via email is through the mailserver at rtfm: send a message
   containing the lines ``help'' and ``index'' to
   mail-server@rtfm.mit.edu for information on how to obtain it.
 
   Other news.answers/FAQ archives are: cnam.cnam.fr (163.173.128.6)
   in the anonymous ftp directory /pub/FAQ; ftp.uu.net (192.48.96.2)
   in the anonymous ftp directory /pub/usenet (also available via mail
   server requests to netlib@uunet.uu.net, or via uunet's 1-900
   anonymous UUCP phone number); and ftp.cs.ruu.nl (131.211.80.17) in
   the anonymous ftp directory NEWS.ANSWERS (also accessible via mail
   server requests to mail-server@cs.ruu.nl). Many of the archives
   mentioned in question 22 also maintain current versions of this
   document.

2) Where can I get a DVI to PostScript conversion program?

   Two good DVI to PostScript conversion programs that run under
   Unix are:
     dvips - by Tomas Rokicki. This driver is very nice and has the
       ability to deal with virtual fonts. Available via anonymous ftp
       from labrea.stanford.edu (36.8.0.112) in ./pub. Dvips is
       written in C and ports easily to other operating systems.  It
       is available for VMS via anonymous ftp from any CTAN site (see
       question 22) and also through the DECUS library (see question
       22). A precompiled version for MSDOS is available from
       monu1.cc.monash.edu.au (130.194.1.101) in ./pub/dvips54.zip,
       from shape.mps.ohio-state.edu (128.146.110.30) in
       ./pub/msdos/dvips/dvips54.zip, or from any CTAN site (see
       question 22) in ./systems/msdos/drivers/dvips.  If you wish to
       use postscript fonts, get dvipslib.zip as well.  Documentation
       is available in dvips.ps.Z. Karl Berry has a version of dvips
       called dvipsk which has a configure script and path searching
       code similar to that in his other programs (e.g., web2c).  It
       is available via anonymous ftp from ftp.cs.umb.edu
       (158.121.104.33) in ./pub/tex/.

     dvitops - by James Clark. Available via anonymous ftp from any CTAN site
       (see question 22, e.g., pip.shsu.edu (192.92.115.10)), in 
       ./tex-archive/dviware/dvitops. Dvitops is written in C and will 
       compile under Unix, MSDOS, VMS, and Primos.

3) How can I include a PostScript figure in LaTeX?

   In LaTeX2e, the best way is \usepackage[dvips]{graphics}.

   Perhaps the best way to do this is to use the psfig macros written
   by Trevor Darrell. They are available via anonymous ftp from
   any CTAN site (see question 22) in graphics/psfig. You will
   also need a dvi to PostScript conversion program that supports
   \specials. The ones mentioned in question 2 do, and come with a
   version of psfig ready to use with them. The psfig macros work best
   with Encapsulated PostScript Files (EPS). In particular, psfig will
   need the file to have a BoundingBox (see Appendix C of the
   _PostScript Language Reference Manual_). If you don't have an EPS
   file, life can be difficult.

   To allow resizing by dvips (see question 2) with PostScript files
   that are not EPS files, add the one line comment
   %%BoundingBox: llx lly urx ury" 
   prior to any non-comment line in the PostScript file. The four
   ``lower left'' and ``upper right'' arguments must be numbers to
   indicate the lower left and upper right corner in units of 1/72 of
   an inch. Otherwise, dvips assumes the PostScript file fills a whole
   page.

   One further note about including PostScript figures is that they
   are not part of the dvi file, but are included when you use a dvi
   to PostScript conversion program. As a result, most dvi previewers
   will simply show the blank space TeX has reserved for your figure,
   not the figure itself. LaTeX2e (see question 41) will have a standard
   interface for graphics inclusion, rotation, color, and other 
   driver-related features.

   Anil K. Goel has written a long document describing in detail how to
   include figures, pictures, and images in LaTeX documents. It is available
   via anonymous ftp from math.uwaterloo.ca (129.97.140.144) in
   ./pub/figsInLatex.ps.Z. A dvi file with the included PostScript files
   is also available.

4) Where can I find a DVI previewer for machine Y running Q?

   This briefly lists some previewers available via anonymous ftp. All
   are available from any CTAN site (see question 22) in addition to the
   sites listed below:
      dvipage - For SunView. This was published in volume 15 of 
        comp.sources.unix and is available at sites that archive
        this. One such source is archive.cis.ohio-state.edu 
        (128.146.8.52).
      xtex - For the X Window System. Available via anonymous ftp 
        from ftp.cs.colorado.edu (128.138.243.151) in 
        ./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z.
      dviapollo- for Apollo Domain. Available via anonymous ftp from
        labrea.stanford.edu (36.8.0.112) in ./pub/dviapollo.tar.Z.
      dvidis - For VAXstation VWS. Available via anonymous ftp from
        src.doc.ic.ac.uk (146.169.2.1) in /packages/tex/dviware/dvidis.
      xdvi - Also for the X Window System. Available via anonymous ftp
        from ftp.x.org (192.112.44.100) in ./contrib/xdvi.tar.Z. Karl
        Berry has a version of called xdvik with features analogous
        to his dvipsk (see question 2) available via anonymous ftp from
        ftp.cs.umb.edu (158.121.104.33) in ./pub/tex.
      dvitovdu - for Tektronix 4010 and other terminals under Unix.
        Available via anonymous ftp from wsmr-simtel20.army.mil
        (192.88.110.20) in the directory pd6:<unix-c.printers> as
        dvi2vdu.tar-z (ftp in ``tenex'' mode).
      dvi2tty - A dvi to ASCII conversion program, for normal terminals.
        Available from ftp.cs.ruu.nl (131.211.80.17) in 
        ./pub/TEX/DVI/dvi2tty.shar. A VMS version is available from
        fileserv@shsu.edu (see question 22).
      texsgi - For SGI under Irix. Available via anonymous ftp from 
        ftp.brl.mil (128.63.16.158) in ./info-iris/tex. Both a binary 
        and source are available, but be sure to get the fonts as well.
   
5) Where can I get the manual for PiCTeX?

   The PiCTeX manual is not free. It is available for $30 ($35 with the
   disk) from the TeX Users Group:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

   The proceeds from this sale go to Michael Wichura, the author of PiCTeX,
   and TUG.

6) In LaTeX, I put some definitions in my document, but I get the error
   ``Use of \@ doesn't match its definition.'' What's wrong?

   Definitions should be be in a style file, and if you move them there,
   you should have no problem.

   If you don't want to do that, you need to include \makeatletter
   before the definitions to allow the ``internal'' LaTeX commands to
   be accessed.  These commands are normally protected from change by
   having @ in them.  Since @ is not a letter, it is normally not
   allowed as part of a multi-letter command name. To access internal
   commands you need to tell LaTeX to pretend that @ is a letter.
   This happens automatically when LaTeX reads a style file, but in
   your main document you need to surround the offending commands with
   \makeatletter ... \makeatother.

7) What is OzTeX and where can I get it (TeX for the Mac)?

   OzTeX is a public domain version of TeX for the Macintosh. A DVI
   Previewer and PostScript driver are also included. It should run on
   any Macintosh Plus, SE, II, or newer model, but will not work on a
   128K or 512K Mac. It was written by Andrew Trevorrow, and is available 
   via anonymous ftp from from midway.uchicago.edu (128.135.12.73) in 
   ./pub/OzTeX, which contains other public domain TeX-related software 
   for the Mac as well, or on a floppy disk from TUG (see question 11). 
   Questions about OzTeX may be directed to oztex@midway.uchicago.edu.
   
8) What is Fig and where can I get it?

   Fig is a menu driven tool similar to MacDraw that allows you to
   draw objects on the screen of a Sun Workstation running SunView.
   TransFig is a set of tools which translate the code fig produces to
   other graphics languages including PostScript and the LaTeX picture
   environment. Both are available via anonymous ftp from
   ftp.cs.cornell.edu (128.84.218.75) in ./pub/fig. Both Fig and
   TransFig are also available from the Clarkson archive server at
   sun.soe.clarkson.edu (see question 22). Fig is supported by Micah
   Beck (beck@cs.cornell.edu) and Transfig is maintained by Brian
   Smith (bvsmith@lbl.gov). Another tool for fig conversion is fig2MF
   which generates METAFONT code from fig input. It is available from
   the CTAN archives discussed in question 22.

   XFig is essentially the same program except it runs under the X
   Window System. It is available via anonymous ftp from ftp.x.org
   (192.112.44.100) in ./contrib/applications/drawing_tools/xfig. It
   was written by Brian Smith.

9) How do I get WEB for C, FORTRAN, or some other language?

   TeX is written in the programming language WEB; WEB is a tool to
   implement the concept of ``literate programming.'' For more information
   on literate programming, see the newsgroup comp.programming.literate.

   There is a version of WEB for C called CWEB written by Silvio Levy. It
   is available via anonymous ftp from princeton.edu (128.112.128.1) in 
   the directory ./pub/cweb.

   There is a version of WEB called Spidery WEB which supports many 
   languages including ADA, awk, and C. It was written by Norman Ramsey 
   and, while not in the public domain, is usable free. It is available 
   via anonymous ftp from pip.shsu.edu (192.92.115.10) in 
   tex-archive/web/spiderweb.

   FWEB is a version of WEB for Fortran, Ratfor, and C written by John
   Krommes (krommes@lyman.pppl.gov). Version 1.13 is available via
   anonymous ftp from lyman.pppl.gov (192.55.106.129) in ./pub/fweb.

   SchemeWEB is a Unix filter that translates SchemeWEB into LaTeX source
   or Scheme source. It was written by John Ramsdell and is available from
   sun.soe.clarkson.edu (128.153.12.3) in ./pub/tex/tex-programs/schemeweb.

   APLWEB is a version of WEB for APL and is available from
   watserv1.waterloo.edu (129.97.129.140) in ./languages/apl.

   There are three flavors of WEB that are language-independent and
   have substantial user communities: funnelweb, noweb, and nuweb.
   NoWeb and NuWeb both emphasize simplicity; NoWeb is a bit simpler
   and more flexible, but NuWeb is more portable and easier to
   install.  FunnelWeb is more complex, but is routinely used on a
   wide variety of machines.  All three systems are available from any
   CTAN site (see question 22) in directory
   /tex-archive/web/{funnelweb,noweb,nuweb}.  An introduction to NoWeb
   appeared in the September 1994 IEEE Software, page 97.  Funnelweb
   also appeared in comp.sources.unix volume 26 issue 121, posted 11
   April 1993.

   Most of the above are also available from your nearest CTAN site
   (see question 22).

10) How can I typeset music in TeX?

    A package called MuTeX, written by Andrea Steinbach and Angelika
    Schofer, aids in doing this. It is available via anonymous ftp
    from ftp.cs.ruu.nl (131.211.80.17) in pub/TEX/MuTeX.tar.Z.  This
    package allows you to typeset single-staff music and lyrics.

    A more powerful package which allows the typesetting of orchestral
    and polyphonic music is MusicTeX, written by Daniel Taupin 
    (taupin@frups51.bitnet). It is available via anonymous ftp from
    rsovax.ups.circe.fr (130.84.128.100) [.musictex]. It should also
    be available from the archive sites detailed in question 22.

    There is a mailing list for discussion of typesetting music in TeX.
    To subscribe, send a request to mutex-request@stolaf.edu.

11) What is TUG and TUGboat?

    TUG is the TeX Users Group. TUGboat is their newsletter, containing
    useful articles about TeX and METAFONT. TUG also distributes
    TeX-related microcomputer software on disks. Inquiries should be 
    directed to:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

12) How do I convert Adobe's afm files to tfm format?

    An afm2tfm program is distributed with dvips, available via
    anonymous ftp from labrea.stanford.edu (36.8.0.112) in ./pub. Alan
    Jeffrey's fontinst package is an afm2tfm converter written in TeX 
    and will be used to support the PostScript tfm files for LaTeX2e
    (see question 41). It is available from any CTAN site (see question
    22).

    For the Macintosh, there is a program called EdMetrics which does
    the job (and more). It is available free from:
              Blue Sky Research
              534 Southwest Third Avenue
              Portland, Oregon 97204 (USA)
              800-622-8398 or 503-222-9571

13) In LaTeX, how do I get a double-spaced document?

    Are you producing a thesis, and trying to obey regulations that were
    drafted in the typewriter era?  LaTeX is a typesetting system, so the
    appropriate design conventions are for ``real books''.  Find whoever
    is responsible for the regulations, and try to get the wording changed
    to cater for typeset theses (e.g., to say ``if using a typesetting 
    system, aim to make your thesis look like a well-designed book'').

    If you fail to convince your officials, or want some inter-line 
    space for copy-editing:
     - In LaTeX2e, use \linespread. For double-spaced output, use
       \linespread{1.6}.
     - Try changing \baselinestretch: \renewcommand{\baselinestretch}{1.2}
       may be enough to give officials the impression you've kept
       to their regulations.  Don't try changing \baselineskip: its
       value is reset at any size-changing command.
     - Alternatively, get doublespace.sty from any CTAN site (see question 22,
       e.g., pip.shsu.edu (192.92.115.10)) in 
       ./tex-archive/macros/latex/contrib/misc. There's also a setspace.sty
       in the same directory which is more flexible, and consistent with the
       latest release of LaTeX.

    It's not worth going to a lot of trouble.  (If officials won't allow
    standard typographic conventions, you won't be able to produce an
    aesthetically pleasing document anyway!)

14) In LaTeX, how do I include a file in the verbatim environment?

    A good way to do this is to use Rainer Sch\"opf's verbatim.sty,
    which provides the command \verbatiminput that takes a file
    as an argument. This package is available from any CTAN site (see 
    question 22) in ./tex-archive/macros/latex/distribs. Several
    files are needed.

    Another way to do this is to use the alltt environment defined in
    the style file alltt.sty available from the CTAN archives in 
    ./tex-archive/macros/latex/contrib/misc/alltt.sty.

15) In LaTeX, how do I do Y?

    If you can't figure out how to do something in LaTeX after you
    have read the manual very carefully, asked your local LaTeX
    guru, and thought about it, there is a LaTeX help service 
    available. Please note that the way to accomplish something 
    in LaTeX is often by using an appropriate style file, so please
    check this also (see question 16). If none of this works, send mail 
    in English describing your problem to latex-help@cs.stanford.edu. 
    If you haven't gotten a reply to your problem within about a week, 
    send mail to latex-help-coordinator@cs.stanford.edu.

16) Where can I find a TeX macro or LaTeX style file for doing Y?

    Before you ask for a TeX macro or LaTeX style file to do something, 
    please search the TeX macro index written by David M. Jones
    (dmjones@theory.lcs.mit.edu) and available via anonymous ftp
    from theory.lcs.mit.edu (18.52.0.92) in ./pub/tex/TeX-index. Those 
    without access to anonymous ftp can send a message containing the
    line ``send tex TeX-index'' to archive-server@theory.lcs.mit.edu.
    The index is an excellent reference document with plenty of 
    cross-references. Also, many of the archive sites mentioned in
    question 22 maintain extensive latex style collections, which you
    can look through if you need something not in the index.

    Another possibility is to use the searching features of the CTAN
    archives (see question 22). Once you have an anonymous ftp connection
    established to a CTAN site, you can type the command `quote site index
    <term>' and it will provide a list of files with the string <term> in
    their names.
    
17) How do I generate an index in TeX/LaTeX?

    Making an index is not trivial. There are several indexing programs
    which aid in doing this. The following are available from any CTAN
    site (see question 22):
      makeindex - for LaTeX under Unix (but runs under other OS's
         without changes). A version for the Macintosh is available from
         Johnny Tolliver at tolliver%atf.mfenet@nmfecc.llnl.gov. The 
         Makeindex documentation is a good source of information on how 
         to create your own index. Makeindex can be used with some TeX macro
         packages other than LaTeX, such as Eplain.
      idxtex - for LaTeX under VMS.
      texix - for TeX on CMS and Macintosh machines.
      texindex - for LaTeX under Unix. Available from
         comp.sources.misc archives in Volume 23.

18) How do I get METAFONT to do what I want it to do?

    METAFONT allows you to create your own fonts, and ordinary TeX users
    will never need to use it. METAFONT, unlike TeX, requires some 
    customization. Each output device for which you will be generating 
    fonts needs a mode associated with it. Modes are defined using the 
    mode_def convention described on page 94 of _The METAFONTbook_. So 
    first create a file, which we will call local.mf, containing all the 
    mode_defs you will be using. The file modes.mf by Karl Berry,
    available via anonymous ftp from ftp.cs.umb.edu (158.121.104.33) in
    ./pub/tex is a good starting point for this. Listings of settings for 
    various output devices are also published periodically in TUGboat 
    (see question 11). Now create a plain base file using inimf, plain.mf, 
    and local.mf:
       % inimf
       This is METAFONT....
       **plain                 # you type plain
       (output)
       *input local            # you type this
       (output)
       *dump                   # you type this
       Beginning to dump on file plain....
       (output)
       %
    This should create a base file named plain.base (or something close)
    and should be moved to the directory containing the base files on
    your system.
 
    Now you need to make sure METAFONT loads this base when it starts
    up. If METAFONT loads the plain base by default on your system, then
    you're ready to go. Under Unix, we might, for instance define a 
    command mf which executes ``virmf &plain,'' loading the plain base
    file.
 
    The usual way to create a font with plain METAFONT is to then start 
    it with the line
       \mode=<mode name>; mag=<magnification>; input <font file name>
    in response to the * prompt or on the METAFONT command line. If 
    <mode name> is unknown or omitted, then the mode defaults to proof 
    mode. If this has happened METAFONT will produce an output file
    called <font file name>.2602gf. The <magnification> is a floating 
    point number or magstep (magsteps are defined in _The METAFONTbook_ 
    and _The TeXbook_). If mag=<magnification> is omitted, then the 
    default is 1. For example, to generate cmr10 at 12pt for an epson 
    printer you would type
       mf \mode=epson; mag=1.2; input cmr10
    Note that under Unix the '\' and ';' characters must usually be 
    escaped, so this would typically look something like
       mf \\mode=epson\; mag=1.2\; input cmr10
 
    If you don't have inimf or need a special mode that isn't in the
    base, you can put its commands in a file (e.g., ln03.mf) and invoke
    it on the fly with the \smode command. For example, to create 
    ln03.300gf for an LN03 printer, using the file
	% This is ln03.mf as of 2/27/90
	% mode_def courtesy of John Sauter
	proofing:=0;
	fontmaking:=1;
	tracingtitles:=0;
	pixels_per_inch:=300;
	blacker:=0.65;
	fillin:=-0.1;
	o_correction:=.5;
    (note the absence of the mode_def and enddef commands), you would type
       mf \smode="ln03"; input cmr10
    
19) Where do I get TeX/LaTeX for machine Y running Q?

    Unix - The Unix TeX distribution is available via anonymous ftp from any 
       CTAN archive (see question 22). The Northwest Computing Support Center
       was ordered closed by the University of Washington, thus Unix TeX
       can no longer be ordered.

       Instructions for retrieving TeX via anonymous ftp are available
       in the document FTP.nwc, itself available via anonymous ftp from
       ftp.cs.umb.edu (158.21.104.33) in ./pub/tex.

       Note: The Unix version of TeX allows your ``macros'' or ``inputs''
       and ``fonts'' directories to be hierarchically organized with
       further subdirectories, rather than dumping everything into one
       directory. This can cause TeX to start very slowly. The cure
       for this problem is to insure each subdirectory contains either
       only directories or only files.

    AIX - TeX for the IBM RS6000 running AIX can be found on
       ftp.dante.de (129.206.100.192) in ./tex-archive/systems/unix/aix3.2.

    386/ix - Executables for the 386/ix are available via anonymous ftp 
       from tik.vtt.fi (130.188.52.2) in ./pub/tex/bin-386ix and from 
       math.berkeley.edu (128.32.183.94) in ./pub/tex386ix.tar.Z.

    PC - A TeX package for the PC, including LaTeX, BibTeX, previewers,
       and drivers is available via anonymous ftp from 
       vax.eedsp.gatech.edu (130.207.226.24) in ./pub/TeX. The variety here
       is sbtex version 30 by Wayne Sullivan. EmTeX, another TeX package 
       for the PC by Eberhard Mattes, is available via anonymous ftp from 
       ftp.dante.de (129.206.100.192) in 
       ./tex-archive/systems/msdos/emtex and also from niord.shsu.edu
       (192.92.115.8) in [.emtex]. This package includes LaTeX, METAFONT,
       BibTeX, etc., as well. Documentation is available in both German 
       and English.

    Mac - see question 7 for a public domain version (OzTeX). Another version
       is CMacTeX, which has TeX 3.14, METAFONT 2.7, a screen previewer,
       dvips, a PostScript printing utility for the LaserWriter, and some font
       managing utilities. It is available from the CTAN archives discussed
       in question 22. 

    TOPS-20 - TeX was originally written on a DEC-10 under WAITS, and so
       was easily ported to TOPS-20. A Distribution that runs on TOPS-20 
       is available via anonymous ftp from ftp.math.utah.edu 
       (128.110.198.34) in ./pub/tex/pub/web.

    VAX/VMS - TeX for VMS is available from any CTAN site (see question 22)
       in the directory ./systems/vms. Standard tape distribution is 
       through DECUS.

    Atari - TeX is available for the Atari ST from atari.archive.umich.edu
       (141.211.165.41) in ./atari/tex. If anonymous ftp is not available
       to you, send a message containing the line ``help'' to
       atari@atari.archive.umich.edu. The mail server can uuencode
       binary files. Another version can be obtained via anonymous
       ftp from ifi.informatik.uni-stuttgart.de (129.69.211.1) in
       ./pub/atari.st/tex. There is also lots of TeX stuff for the
       Atari on the CTAN and ftp.cs.ruu.nl archives mentioned in
       question 22.

    Amiga - A full implementation of TeX 3.1 call PasTeX and METAFONT 2.7
        are available via anonymous ftp from merlin.etsu.edu (192.43.199.20)
        in ./ab20/AMIGA. It is also available via anonymous ftp from
        forwiss.uni-passau.de (132.231.20.10) in ./pub/amiga/tex. 
        You can also order a CDROM containing this and other amiga software
        from Walnut Creek CDROM, (510) 947-5997.

    Tandy 6000 - If you are interested in building TeX on this machine
        contact Ken Yap (ken@syd.dit.csiro.au), and he'll help you.

20) Where can I get a thesis style for LaTeX?

    Thesis styles are usually very specific to your University, so it's
    usually not profitable to ask the whole newsgroup for one. If you
    want to write your own, a good place to start is the ucthesis style
    available from any CTAN archive in macros/latex/contrib/ucthesis
    (see question 22).

21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
    and so on?

    These symbols are known as ``blackboard bold'' and are available in
    the AMS fonts ``msam'' (e.g., ``msam10'' for 10pt) and ``msbm''. 
    They replace the older ``msxm'' and ``msym''. The fonts have a large
    number of mathematical symbols to supplement the ones 
    provided by TeX. The fonts are available via anonymous ftp from
    e-math.ams.com (130.44.1.100) in the directory ./ams/amsfonts.
    Two files which load the fonts and define the symbols are provided,
    and both work with either TeX or LaTeX. Questions or suggestions 
    regarding these fonts should be directed to 
    tech-support@math.ams.com.

    A geometric sans serif blackboard bold font by Alan Jeffrey is available
    from any CTAN archive (see question 22) in ./tex-archive/fonts/bbold.

    A set of LaTeX macros for a ``lazy person's'' blackboard bold are:
       \newcommand{\R}{{\sf R\hspace*{-0.9ex}\rule{0.15ex}%
       {1.5ex}\hspace*{0.9ex}}}
       \newcommand{\N}{{\sf N\hspace*{-1.0ex}\rule{0.15ex}%
       {1.3ex}\hspace*{1.0ex}}}
       \newcommand{\Q}{{\sf Q\hspace*{-1.1ex}\rule{0.15ex}%
       {1.5ex}\hspace*{1.1ex}}}
       \newcommand{\C}{{\sf C\hspace*{-0.9ex}\rule{0.15ex}%
       {1.3ex}\hspace*{0.9ex}}}

22) What repositories of TeX material are available, and how can I access
    them?
 
    To aid the archiving and retrieval of of TeX-related files, a TUG
    working group developed the Comprehensive TeX Archive Network
    (CTAN).  Each CTAN site has identical material, and maintains
    authoritative versions of its material.  These collections are
    extensive; in particular, almost everything mentioned in this
    document is archived at the CTAN sites, even if not explicitly
    stated.

    The CTAN sites are currently ftp.dante.de (129.206.100.192)
    ftp.tex.ac.uk (134.151.44.19), and pip.shsu.edu (192.92.115.10). 
    The organization of TeX files on all these sites is identical and
    starts at ./tex-archive. To reduce network load, please use the
    CTAN site or mirror closest to you. A complete and current list
    of CTAN sites and mirrors can be obtained by using the finger
    utility to finger ctan_us@ftp.SHSU.edu.

    To find software at a CTAN site, use anonymous ftp to the host,
    and then execute the command `quote site index <search-term>'.

    The mail servers of the CTAN sites are not yet identical, but this is
    planned. Here are the current methods of access via electronic mail:
      - For the UK site, send a message to texserver@tex.ac.uk. The
        first non-blank line of the message must contain a valid
        TeXserver command (help, directory, files, whereis, search,
        or path). The program will then mail you a response notifying
        you that your request has been received. If you fail to get a
        response from the TeXserver, you may need to use the ``path''
        command to help the program out. For Internet users the
        return address is of the form name%site@nsfnet-relay, while
        for Bitnet and EARN it is name%site@earn-relay (i.e., include
        a line that says ``path name%site@nsfnet-relay'' along with a
        line containing ``help''). 
      - For ftp.dante.de, send a message containing the line
        ``help'' to mail-server@ftp.dante.de.
      - For the SHSU site, send a message with the line "help" to
        ftpmail@ftp.shsu.edu. This provides an ftp-like interface
        through mail.

    There are several other repositories of TeX material available:
      - ftp.cs.ruu.nl (131.211.80.17) also contains a substantial TeX
        archive with ftp access. To use it via email, send a message
        containing the line ``help'' to mail-server@cs.ruu.nl. This mail 
        server can send binary files in a variety of different formats.
      - There are LISTSERV facilities for TeX at LISTSERV@DHDURZ1.BITNET. 
        Send a message containing the line ``help'' to this address.
      - For users on BITNET, access to anonymous ftp for some files can
        be obtained indirectly by sending mail to BITFTP@PUCC.BITNET.
        Send a message containing the line ``help'' to this address for
        more information.
     
    There is also the DECUS TeX collection, a collection of TeX material
    for VMS, Unix, MS-DOS, and the Macintosh. It is available via 
    anonymous ftp from wuarchive.wustl.edu (128.252.135.4) in ./decus/tex.
    It can also be obtained from the DECUS Library (reference number 
    VS0058) in the US, or through your DECUS office outside of the US. To 
    contact the DECUS Library, send mail or call:
                 The DECUS Program Library
                 334 South Street SHR3-1/T25
                 Shrewsbury, MA 01545-4195
                 (800)332-3755
    The last update to this collection was in February 1991, so it is old.
     
    Another good source of information is NETWORK SOURCES OF TeX WARE by
    Peter Flynn which appeared in TeXhax, volume 90, issues 45-47 (in
    May 1990).      

23) How do I use PostScript fonts with LaTeX?

    The best way to do this is to install LaTeX2e (see question 41)
    and use the PSNFSS2e package written by Sebastian Rahtz. It is
    available from all the major archives mentioned in question
    22. Other methods for using PostScript fonts in LaTeX are
    cumbersome at best.

24) How can I convert from format Y to TeX or LaTeX, and vice-versa?

    troff - TROFF-TO-LATEX.TAR-Z is available via anonymous ftp from
      wsmr-simtel20.army.mil (192.88.110.20) in the directory 
      pd2:<unix-c.textproc>. This program, written by Kamal Al-Yahya 
      at Stanford, assists in the translation of a troff document into 
      LaTeX format.  It recognizes most -ms and -man macros, plus most 
      eqn and some tbl preprocessor commands. Anything fancier needs 
      to be done by hand.  Two style files are provided.  There 
      is also a man page (which converts very well to LaTeX :-).  
      The program is copyrighted but free. An enhanced version of this
      program, tr2latex, is available from 
      ftp.informatik.rwth-aachen.de (137.226.112.172) in ./pub/TeX. 
      The DECUS TeX distribution (see question 22) also contains a program
      which converts troff to TeX. If you are interested in obtaining a copy
      of this program without getting the entire DECUS TeX distribution, 
      send the command: SENDME TROFFTOTEX in the body of a mail message to
      FILESERV@SHSU.BITNET (FILESERV@SHSU.edu), or use anonymous ftp to the
      directory [.TROFFTOTEX] on Niord.SHSU.edu (192.92.115.8). 

    scribe - Mark James has a copy of scribe2latex he has been
      unable to test but which he will let anyone interested have.
      Send email to jamesm@procor.dialogic.com. The program was written
      by Van Jacobson of Lawrence Berkeley Laboratory.

    wordperfect -  wp2latex.zip is available on wuarchive.wustl.edu
      (128.252.135.4) in the directory ./mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in the directory pd1:<msdos.tex>.
      This is a PC program written in Turbo Pascal by R. C. Houtepen at
      the Eindhoven University in the Netherlands.  It converts
      WordPerfect 5.0 documents to LaTeX.  Pascal source is included.
      Users find it ``helpful'' and ``decent'' in spite of some
      limitations. It gets high marks for handling font changes.
      Limitations include no indices, table of contents, margins or
      graphics.  It also won't handle the new features of WordPerfect
      5.1, in particular the equation formatter. The program is
      copyrighted but free.

      Glenn Geers of the University of Sydney (glenn@qed.physics.su.oz.au)
      is translating wp2latex into C and adding some WordPerfect 5.1
      features, in particular its equation handling.  This is an ongoing
      project; the most recent version can be retrieved via anonymous ftp
      from suphys.physics.su.oz.au (129.78.129.1) in ./wp2latex. It was 
      posted to alt.sources on 8 August 1990.

      Commercial packages are available for DOS which convert from
      WordPerfect to LaTeX, and from TeX and LaTeX to WordPerfect, but
      I am unaware of any free products which do this.

    PC-Write - pcwritex.arc is available on wuarchive.wustl.edu
      (128.252.135.4) in directory mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in directory pd1:<msdos.tex>.
      This is a print driver for PC-Write that ``prints'' a PC-Write V2.71
      document to a TeX-compatible disk file.  It was written by Peter
      Flynn at University College, Cork, Ireland.  It is public domain.  

    runoff - Peter Vanroose (vanroose@esat.kuleuven.ac.be) has 
      written a RUNOFF-to-TeX conversion program in VMS Pascal.  It is 
      available from comp.text archives (they do exist, don't they?  The 
      program was submitted in December 1987) or from the author 
      (peter@dit.lth.se) or from Mark James (jamesm@procor.dialogic.com).

    refer/Tib - There are a few programs for converting bibliographic data 
      between BibTeX and refer/Tib formats.  They are available via 
      anonymous ftp from ftp.ai.mit.edu (128.52.32.11) in the 
      directory ./pub/refer-to-bibtex.  In spite of the directory name, 
      it also contains a  shell script to convert BibTeX to REFER as 
      well. Unfortunately, this collection is not maintained.

    RTF - A program for converting Microsoft's Rich Text Format to TeX
      is available via anonymous ftp from astro.princeton.edu
      (128.112.128.131) in ./pub/rtf2TeX.tar.Z. It was written and is
      maintained by Robert Lupton (rhl@astro.princeton.edu). There is
      also an rtf2LateX written by Erwin Wechtl available from 
      ftp.vmars.tuwien.ac.at (128.130.39.16) in ./pub/misc.

    Microsoft Word - A rudimentary program for converting MS-Word
      to LaTeX is wd2latex, for MS-DOS, available via anonymous ftp
      from any CTAN site (see question 22). A better idea, however, 
      is to convert the document to RTF format and use the RTF 
      converter mentioned above.
    
    In addition, a group at Ohio State University is working on a common
    document format based on SGML.  In theory any format could be
    translated to or from this one.  Also, Framemaker supposedly has
    ``import filters'' to aid in the translation from alien formats
    (presumably including TeX) to Framemaker; perhaps other desktop
    publishing programs have similar things.
      
25) How do I get a file into the major style repositories?
    
    Use anonymous ftp to any CTAN archive (see question 22) and
    retrieve the file README.uploads in the root directory. It contains
    instructions for uploading files and notifying the appropriate
    people for that site.

    If you cannot use ftp, mail your contribution to sty-mgr@shsu.edu
    and it will be passed along. You will make everyone's life easier
    if you choose a descriptive and unique name for your submission, so
    it's probably good idea to browse through some of the styles
    already available to insure your style file's name is not already
    in use.

26) Where can I get font Y?

    A comprehensive list of METAFONT fonts is posted to Comp.fonts
    about once every six weeks by Lee Quin (lee@sq.sq.com). It contains
    both commercial fonts and fonts available via anonymous ftp. Most
    of the fonts available via anonymous ftp are available from
    the CTAN archives (see question 22). Also, the file wujastyk.txh
    ./tex-archive/digests/texhax/txh/wujastyk.txh is a copy of
    Dominik Wujastyk's font article, and contains information on
    METAFONT fonts as well.

27) Where can I get a dvi driver for the HP LaserJet?

    PC - The emtex package mentioned in question 19 contains a driver for
       the LaserJet, dvihplj. 

    Version 2.10 of the Beebe drivers support the LaserJet. These drivers
    will compile under Unix, VMS, and on the Atari ST and DEC-20's. They
    are available from ftp.math.utah.edu (128.110.198.34) in ./pub/tex/dvi.

28) TeX and LaTeX are hyphenating words weirdly. What can I do?

    You have a version mismatch problem. The hyphenation algorithm changed
    between version 2.9 and 3.0. If you are using TeX version 3.0 or
    later, make sure you have plain.tex and lplain.tex files with a
    version number of at least 3.0.

    For those of you curious about the change, here's what happened:
    in versions of TeX before 3.0 the hyphenation algorithm would not
    break a word if the part before the break was not at least two
    characters long, and the part after the break at least three 
    characters long. Starting with version 3.0 two integer parameters,
    \lefthyphenmin and \righthyphenmin, control the length of these
    fragments. These are set to 2 and 3, respectively, in the new
    plain and lplain formats. They can be set to any value, of course,
    but if \lefthyphenmin + \righthyphenmin is greater than 62, all
    hyphenation is suppressed.

29) How can I convert a TeX or LaTeX file into a plain ASCII file,
    with all the formatting intact, a la nroff?

    Ralph Droms (droms@bucknell.edu) has a style file and a C program
    that provide the LaTeX equivalent of nroff. Although it doesn't do
    a good job with tables and math, it's the best way to convert that
    I've seen. The software is available for anonymous ftp from
    sol.cs.bucknell.edu (134.82.1.8) in ./droms/txt-dist.tar. This is a
    modification of the dvi2tty program; the original often does an
    acceptable job and can be gotten from any CTAN site (see question 22).

    Another possibility is to use screen.sty, available from all the
    major archives. However you need a program called crudetype to
    process the resulting dvi file. It is available from
    emx.utexas.edu (128.83.186.11) in
    ./pub/mnt/source/tex/tex-3.0/DVIware/lpr-viewers/crudetype and
    from ftp.uni-stuttgart.de (129.69.8.13) in
    ./tex-archive/dviware/screenview. Another possibility is to use
    the LaTeX-to-ASCII conversion program, l2a, available from
    comp.sources.misc archives (one archive site is ftp.uu.net
    (192.48.96.9)), although this is really more of a de-TeXing
    program. If you are running under Unix and have C++ and perl, you
    might try Jonathan Monsarrat's LameTeX package (which actually
    does much more than this), available from wilma.cs.brown.edu
    (128.148.33.66) in ./pub/lametex.tar.Z.

30) How do I enlarge TeX? I keep getting `memory capacity exceeded'
    errors.

    Most of the time, a ``memory capacity exceeded'' error can be fixed
    without enlarging TeX.  The most common causes are unmatched braces,
    extra-long lines, and poorly-written macros.  Extra-long lines
    are often introduced when files are transferred incorrectly between
    operating systems.  (The tell-tale sign of an extra-long line error
    is when the complaint is that the `buf_size' has overflowed.)

    If you really need to extend your TeX's capacity, the proper method
    varies depending on your installation.  In the purest form, you
    change the parameters in module 11 (``The following parameters can
    be changed...'')  In less pure forms, you might need to modify a
    change file, or perhaps change some environment variables.  Consult
    the documentation that came with your particular implementation.

31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
    numbered. What do I do?

    If you see this, you are using the \maketitle command too. This is
    not a bug but a feature! The standard LaTeX styles are written so
    that initial pages (pages containing a \maketitle, \part, or \chapter)
    have a different page style than the rest of the document. Hence, the
    above commands internally issue a \thispagestyle{plain}. This is
    usually not acceptable behavior is the page style is `empty'.

    Possible workarounds include:   
     - Put \thispagestyle{empty} immediately after the \maketitle command, 
       with no blank line between them.
     - Use fancyheadings.sty, available from any CTAN (see question 22).
       In this style, the style for initial pages can be customized as well.

32) Where do I find documentation about BibTeX?

    BibTeX, a program originally designed to produce bibliographies in
    conjunction with LaTeX, is explained in Section 4.3 and Appendix B 
    of Leslie Lamport's LaTeX manual.  The ``BibTeXing'' document, 
    contained in the file btxdoc.tex, gives a more complete description.
    _The LaTeX Companion_ also has information on BibTeX and writing 
    BibTeX style files.

    The ``Designing BibTeX Styles'' document, contained in the file 
    btxhak.tex, explains the postfix stack-based language used to
    write BibTeX styles (.bst files).  The file btxbst.doc is the template
    file for the four standard styles (plain, abbrv, alpha, unsrt). It
    also contains the documentation for them.

    The current Unix-BibTeX man page, contained in the file
    bibtex.1, was updated in January 1992 and is about one page long.
    There's an old and obsolete version floating around, written in 1985
    before ``BibTeXing'' and ``Designing BibTeX Styles'' appeared, that is
    several pages long.  You should ignore it (or throw it away), since it
    describes BibTeX version 0.98, style files of which are incompatible 
    with the current version, 0.99 (to be precise, 0.99c).

    All files mentioned in this answer are available via anonymous ftp
    from labrea.stanford.edu (36.8.0.112) in the BibTeX ftp area, 
    tex/bibtex. All the non-Unix files should be available on any system 
    that runs BibTeX; if they're not on your system, please complain to 
    your BibTeX installer or to your distribution source.

33) How do I use BibTeX with plain TeX?

    The file btxmac.tex contains TeX macros and documentation for using
    BibTeX with plain TeX, either directly or with Karl Berry's Eplain
    package. It is available via anonymous ftp from labrea.stanford.edu
    (36.8.0.112) in tex/bibtex (see question 32 for more information 
    about BibTeX).

34) How do I draw Feynman diagrams in LaTeX?

    Michael Levine's macro package for drawing Feynman diagrams in LaTeX
    is available via mail-server from physics.utoronto.ca. Send a message
    containing the line ``send INDEX'' to mail-server@physics.utoronto.ca
    for information on how to retrieve it. It is also available from any
    CTAN site or mirror (see question 22).

35) What is the New Font Selection Scheme (NFSS)?

    NFSS is an extension to LaTeX written by Frank Mittelbach and Rainer
    Sch\"opf. It is described in TUGboat, volume 10 (1989), No. 2.
    In traditional typesetting, fonts are described by four parameters:
    the family (e.g., computer modern), the series (i.e., the weight and
    width of the font, like light or bold), the shape (e.g., italic), and
    the size. NFSS is a mechanism allowing the user to change any of these
    independently. NFSS makes it relatively easy to use nonstandard fonts
    such as the PostScript ones with LaTeX, and easy to change math fonts.
    It also allows dynamic loading of fonts at runtime (not when the
    format file is created).

    NFSS is no longer supported for LaTeX version 2.09, but is standard
    with LaTeX2e (see question 41).

    There is one caveat that applies to LaTeX documents written for
    the OLD scheme: some of them use special styles for special fonts
    which will not work under the NFSS.

36) In LaTeX, my cross-references for floats (figures and tables) are
    incorrect. What's wrong?

    The \label command must come after the \caption command, or
    be part of it. For example,
       \begin{figure}               \begin{figure}
       \caption{A Figure}    or     \caption{A Figure\label{fig}}
       \label{fig}                  \end{figure}
       \end{figure}

37) I want to change the margins in LaTeX. What can I do?

    This answer first helps you change the margins throughout a
    document, then tells you how to change the margins in a portion
    of the document.

    Perhaps the easiest way to get more out of a page in LaTeX is to
    get fullpage.sty, available from all the major archive servers
    mentioned in question 22. This sets the margins of the page identical
    to those of Plain TeX, i.e., 1-inch margins at all four sides of the
    paper. It also contains an adjustment for A4 paper.

    Here is a brief explanation of what's going on with the page
    parameters in LaTeX. They are explained in section C.4.2 of the
    LaTeX manual (p. 163). The margin parameters represent measurements
    made to the DVI file. The origin in DVI coordinates is one inch
    from the top of the paper and one inch from the left side. This
    explains the ``one inch less than'' terminology used in the LaTeX
    manual. In DVI coordinates, positive horizontal measurements extend
    right across the page, and positive vertical measurements extend down
    the page. Thus, for margins closer to the left and top edges of the
    page than 1 inch, the corresponding parameters, e.g.,
    \evensidemargin, \oddsidemargin, \topmargin, can be set to negative
    values.

    Finally, to change the margins of a document within the document,
    modifying the parameters listed on page 163 will not work. They
    can only be changed in the preamble of the document, i.e, before
    the \begin{document} statement. To adjust the margins within a
    document we define an environment which does it:
      \newenvironment{changemargin}[2]{\begin{list}{}{
         \setlength{\topsep}{0pt}\setlength{\leftmargin}{0pt}
         \setlength{\rightmargin}{0pt}
         \setlength{\listparindent}{\parindent}
         \setlength{\itemindent}{\parindent}
         \setlength{\parsep}{0pt plus 1pt}
         \addtolength{\leftmargin}{#1}\addtolength{\rightmargin}{#2}
         }\item }{\end{list}}
    This environment takes two arguments, and will indent the left
    and right margins by their values, respectively. Negative values
    will cause the margins to be widened, so
    \begin{changemargin}{-1cm}{-1cm} widens the left and right margins
    by 1cm.

38) How do I find the width of a letter, word, or phrase in TeX?

    Put the word in a box, and measure the width of the box. For example,
        \setbox0=\hbox{hi}
        width=\wd0
    Note that if the quantity in the hbox is a phrase, the actual 
    measurement only approximates this width, since the interword glue
    can be adjusted in paragraph mode.

    In LaTeX, the following works (taken from the manual):
        \newlength{\gnat}
        \settowidth{\gnat}{\em small}
    This sets the value of the length command \gnat to the width of ``small''
    in emphasized text.

39) In LaTeX, is there a comment or ``ignore'' environment with which
    I can exclude blocks of text from the .dvi file?

    Rainer Sch\"opf's verbatim.sty provides a comment environment which
    excludes everything between \begin{comment} and \end{comment}. It is
    available via anonymous ftp from any CTAN site (see question 22) in
    ./tex-archive/macros/latex/distribs. Several files are needed to
    install the package. A more general environment for doing this is
    comment.sty, also available from the CTAN sites in
    ./tex-archive/macros/latex/contrib/misc.

40) Where can I find a spelling checker for my TeX file?

    For Unix, ispell is probably the program of choice. It is available
    from any CTAN site (see question 22) in ./tex-archive/support/ispell.

    For DOS, jspell is an extended version of ispell, and is available via
    anonymous ftp from oak.oakland.edu (141.210.10.117) in 
    ./pub/msdos/tex/jspell*.zip.

    For VMS, a spell checker can be found via anonymous ftp from ftp.spc.edu
    in  [.MACRO32.SAVESETS]. Retrieve SPELL.ZIP and SPELL_DICTIONARY.ZIP. 

41) What is LaTeX2e?

    LaTeX2e is the new standard version of LaTeX, prepared and
    supported by the LaTeX3 project team. It is the current version of
    LaTeX and is available from any CTAN site (see question 22) in
    ./tex-archive/macros/latex. LaTeX 2.09 is no longer supported.

    LaTeX2e is upwardly compatible with LaTeX 2.09, but supports many new
    features, including:
     - NFSS (see question 35) is now standard.
     - SliTeX is consolidated into it, and there is no longer a need for
       a separate program.
     - The output routine gives better control of floating environments,
       such as figures.
     - There is a documented interface to style files.
     - Enhanced box commands, e.g., options to specify the height of a 
       minipage.
     - \ref is now robust and can be used in \caption.
     - \newcommand can define commands with optional arguments.
     - A standard package for color and graphics inclusion.

    Since LaTeX2e is supported, you can report bugs or problems with it by
    typing `latex latexbug' and sending the report it generates to 
    latex-bugs@rus.uni-stuttgart.de.

42) In LaTeX, how can I define a new log-like function?

    Use the \mathop command, as in:
         \newcommand{\diag}{\mathop{\mathrm{diag}}}

    Subscripts and superscripts to \diag will be done identically to \lim.
    If you want your subscripts and superscripts placed to the right, do:
         \newcommand{\diag}{\mathop{\mathrm{diag}}\nolimits}

    Older versions of LaTeX may not define \mathrm; alternatively, use
    {\rm diag}.

43) In LaTeX, how do I put a \sqrt in my \caption statement?

    \sqrt is a fragile command and the argument to \caption is ordinarily
    a moving argument. Therefore \sqrt needs to be preceded with a \protect
    command.

44) In LaTeX, how do I get thin and thick \hlines in a table?

    In the preamble, do: 
         \setlength{\doublerulesep}{\arrayrulewidth}.
    Then in a table or array, do:
         <stuff in the table>  \\\hline         %thin hline
         <more stuff in table> \\\hline\hline   %thick hline

45) In LaTeX, how do I number the bibliography using Arabic numbers without
    square brackets or using superscripts?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\@biblabel[1]{#1.}     % Arabic numbers, no brackets
         \renewcommand\@biblabel[1]{$^{#1}$} % Superscripts

46) In LaTeX, why are my cites all numbered zero?

    Your document style and your version of LaTeX are incompatible.
    Since this may reflect an incomplete update done at some point,
    you should probably get the complete distribution (see question
    22).

    This problem usually occurs using an old university style file
    which is not maintained. If you are going to correct the style
    file, the definition of \thebibliography needs to be updated from
    article.cls (or article.sty).

47) In LaTeX, my figures get put on a page by themselves with too much
    whitespace, but when I tried \begin{figure}[t] they get printed at
    the end. Why?

    Your figures are bigger than \floatpagefraction, but you are
    willing to accept pages with less text than the default.  Use:
         \renewcommand\floatpagefraction{.9}
         \renewcommand\topfraction{.9}
         \renewcommand\bottomfraction{.9}
         \renewcommand\textfraction{.1}

    You can adjust the cut-off value if you like, but it makes no
    sense to go higher than .95 (LaTeX's default value is only .5).
    Also, the first 3 values should be equal, and the last should be
    1 - \floatpagefraction.  Otherwise, you are likely to get floats
    flushed to the end.

48) In LaTeX, how do I make a line break in a section title?

    It is better to try to prevent bad breaks by using ~ than to force
    good breaks. Unfortunately, LaTeX's default styles make titles with
    flush margins and most other styles have followed, so this may not
    work in many cases. You should definitely avoid hyphenation in titles.

    To force line breaks in a title, but not in the table of contents,
    use the optional argument for \section:
         \section[This is the Title]{This is\\ the Title}

    One benefit of this is that \\ is safe and no \protect is needed.

49) In LaTeX, how do I number equations by section?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\theequation{\thesection.\arabic{equation}}
         \@addtoreset{equation}{section}

    If you have chapters with a preamble that comes before the first
    section, you should not put equations there, as you will get funny
    numbers like 3.0.1. There are also two style files available from
    any CTAN site called seceqn.sty and apeqnum.sty. The first numbers
    equations by section, and the second gives individual equation
    numbers to equations in the appendix.

-- 
Bobby Bodenheimer				@hot.caltech.edu
// ARPA  : bobby@hot.caltech.edu                |
// BITNET: bobby@caltech.bitnet                 | Woof!
// UUCP  : {amdahl,ames!elroy}!cit-vax!bobby    | 


#define FPR_L(N)		(F.l[(N)^1])
#define SET_FPR_L(N,EXPR)	(F.l[(N)^1] = (EXPR))
#define FPR_F(N)		(F.f[(N)^1])
#define SET_FPR_F(N,EXPR)	(F.f[(N)^1] = (EXPR))
#define FPR_D(N)		(F.d[(N) >> 1])
#define SET_FPR_D(N,EXPR)	(F.d[(N) >> 1] = (EXPR))

#define SET_HI(EXPR)		(HI = (EXPR))
#define SET_LO(EXPR)		(LO = (EXPR))
#define FC			(FCond)
#define SET_FC(EXPR)		(FCond = (EXPR))

#define TCacheAccess(cp, op, addr, dest, sz, tally)			\
  (blockingCache							\
   ? ({									\
	 ulong lat;							\
	 lat = CacheAccess(cp, op, addr, dest, sz, cycle, tally);	\
	 pipeStats.dcStall += numIssue * lat;				\
	 cycle += lat;							\

####################################################################
#### Compiling SPECINT92/benchspec/008.espresso...
####################################################################
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" espresso-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cofactor.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c compl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compl.c:78: warning: static declaration for `compl_special_cases' follows non-static
compl.c:161: warning: static declaration for `compl_merge' follows non-static
compl.c:253: warning: static declaration for `compl_lift' follows non-static
compl.c:290: warning: static declaration for `compl_lift_onset' follows non-static
compl.c:325: warning: static declaration for `compl_lift_onset_complex' follows non-static
compl.c:363: warning: static declaration for `compl_d1merge' follows non-static
compl.c:385: warning: static declaration for `compl_cube' follows non-static
compl.c:459: warning: static declaration for `simp_comp_special_cases' follows non-static
compl.c:596: warning: static declaration for `simplify_special_cases' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c contain.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cubestr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrmisc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c equiv.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c espresso.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c essen.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c exact.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expand.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gasp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c globals.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c irred.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c map.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c opo.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
opo.c:608: warning: static declaration for `minimize' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pair.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c primes.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c set.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c setc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sharp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sminterf.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sparse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c verify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cpu_time.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c prtime.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c strsav.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c matrix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rows.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cols.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dominate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c mincov.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
mincov.c:255: warning: static declaration for `select_column' follows non-static
mincov.c:312: warning: static declaration for `select_essential' follows non-static
mincov.c:353: warning: static declaration for `verify_cover' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gimpel.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c solution.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c part.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
part.c:48: warning: `visit_col' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c indep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c qsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs espresso-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o espresso-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" espresso-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cofactor.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c compl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compl.c:78: warning: static declaration for `compl_special_cases' follows non-static
compl.c:161: warning: static declaration for `compl_merge' follows non-static
compl.c:253: warning: static declaration for `compl_lift' follows non-static
compl.c:290: warning: static declaration for `compl_lift_onset' follows non-static
compl.c:325: warning: static declaration for `compl_lift_onset_complex' follows non-static
compl.c:363: warning: static declaration for `compl_d1merge' follows non-static
compl.c:385: warning: static declaration for `compl_cube' follows non-static
compl.c:459: warning: static declaration for `simp_comp_special_cases' follows non-static
compl.c:596: warning: static declaration for `simplify_special_cases' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c contain.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cubestr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrmisc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c equiv.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c espresso.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c essen.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c exact.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expand.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gasp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c globals.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c irred.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c map.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c opo.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
opo.c:608: warning: static declaration for `minimize' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pair.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c primes.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c set.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c setc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sharp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sminterf.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sparse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c verify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cpu_time.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c prtime.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c strsav.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c matrix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rows.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cols.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dominate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c mincov.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
mincov.c:255: warning: static declaration for `select_column' follows non-static
mincov.c:312: warning: static declaration for `select_essential' follows non-static
mincov.c:353: warning: static declaration for `verify_cover' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gimpel.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c solution.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c part.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
part.c:48: warning: `visit_col' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c indep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c qsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs espresso-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o espresso-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
####################################################################
#### Compiling SPECINT92/benchspec/022.li...
####################################################################
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" xlisp-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlbfun.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlbfun.c:189: warning: static declaration for `bquote1' follows non-static
xlbfun.c:319: warning: `placeform' was declared implicitly `extern' and later `static'
xlbfun.c:396: warning: static declaration for `defun' follows non-static
xlbfun.c:468: warning: static declaration for `makesymbol' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlcont.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlcont.c:110: warning: `keypresent' was declared implicitly `extern' and later `static'
xlcont.c:211: warning: static declaration for `let' follows non-static
xlcont.c:259: warning: static declaration for `prog' follows non-static
xlcont.c:334: warning: static declaration for `progx' follows non-static
xlcont.c:398: warning: static declaration for `doloop' follows non-static
xlcont.c:755: warning: `dobindings' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xldbug.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldbug.c:75: warning: `doerror' was declared implicitly `extern' and later `static'
xldbug.c:87: warning: `breakloop' was declared implicitly `extern' and later `static'
xldbug.c:162: warning: static declaration for `stacktop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xldmem.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldmem.c:210: warning: static declaration for `newnode' follows non-static
xldmem.c:235: warning: static declaration for `stralloc' follows non-static
xldmem.c:253: warning: static declaration for `strsave' follows non-static
xldmem.c:401: warning: `sweep' was declared implicitly `extern' and later `static'
xldmem.c:486: warning: `livecar' was declared implicitly `extern' and later `static'
xldmem.c:512: warning: `livecdr' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xleval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xleval.c:105: warning: static declaration for `evform' follows non-static
xleval.c:158: warning: static declaration for `evalhook' follows non-static
xleval.c:235: warning: static declaration for `evfun' follows non-static
xleval.c:338: warning: `iskeyword' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlfio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlfio.c:90: warning: static declaration for `printit' follows non-static
xlfio.c:132: warning: static declaration for `flatsize' follows non-static
xlfio.c:170: warning: static declaration for `openit' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlftab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlglob.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlinit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlisp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xljump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xljump.c:127: warning: `findtarget' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xllist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xllist.c:66: warning: static declaration for `cxr' follows non-static
xllist.c:316: warning: static declaration for `subst' follows non-static
xllist.c:362: warning: static declaration for `sublis' follows non-static
xllist.c:382: warning: static declaration for `assoc' follows non-static
xllist.c:471: warning: static declaration for `nth' follows non-static
xllist.c:553: warning: static declaration for `map' follows non-static
xllist.c:829: warning: static declaration for `cequal' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlmath.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlmath.c:108: warning: static declaration for `binary' follows non-static
xlmath.c:295: warning: static declaration for `unary' follows non-static
xlmath.c:379: warning: static declaration for `predicate' follows non-static
xlmath.c:461: warning: static declaration for `compare' follows non-static
xlmath.c:523: warning: `badiop' was declared implicitly `extern' and later `static'
xlmath.c:529: warning: `badfop' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlobj.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlobj.c:342: warning: static declaration for `entermsg' follows non-static
xlobj.c:363: warning: static declaration for `findmsg' follows non-static
xlobj.c:385: warning: static declaration for `sendmsg' follows non-static
xlobj.c:443: warning: `getivcnt' was declared implicitly `extern' and later `static'
xlobj.c:453: warning: `listlength' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlprin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlprin.c:107: warning: `putstring' was declared implicitly `extern' and later `static'
xlprin.c:152: warning: `putatm' was declared implicitly `extern' and later `static'
xlprin.c:161: warning: `putdec' was declared implicitly `extern' and later `static'
xlprin.c:169: warning: `putfloat' was declared implicitly `extern' and later `static'
xlprin.c:177: warning: `putoct' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlread.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlread.c:392: warning: static declaration for `phexnumber' follows non-static
xlread.c:410: warning: static declaration for `plist' follows non-static
xlread.c:477: warning: static declaration for `pvector' follows non-static
xlread.c:528: warning: static declaration for `pquote' follows non-static
xlread.c:553: warning: static declaration for `pname' follows non-static
xlread.c:575: warning: static declaration for `tentry' follows non-static
xlread.c:586: warning: `nextch' was declared implicitly `extern' and later `static'
xlread.c:598: warning: `checkeof' was declared implicitly `extern' and later `static'
xlread.c:609: warning: `badeof' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlstr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsubr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsym.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlsym.c:192: warning: static declaration for `findprop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsys.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unixstuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs xlisp-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o xlisp-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" xlisp-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlbfun.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlbfun.c:189: warning: static declaration for `bquote1' follows non-static
xlbfun.c:319: warning: `placeform' was declared implicitly `extern' and later `static'
xlbfun.c:396: warning: static declaration for `defun' follows non-static
xlbfun.c:468: warning: static declaration for `makesymbol' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlcont.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlcont.c:110: warning: `keypresent' was declared implicitly `extern' and later `static'
xlcont.c:211: warning: static declaration for `let' follows non-static
xlcont.c:259: warning: static declaration for `prog' follows non-static
xlcont.c:334: warning: static declaration for `progx' follows non-static
xlcont.c:398: warning: static declaration for `doloop' follows non-static
xlcont.c:755: warning: `dobindings' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xldbug.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldbug.c:75: warning: `doerror' was declared implicitly `extern' and later `static'
xldbug.c:87: warning: `breakloop' was declared implicitly `extern' and later `static'
xldbug.c:162: warning: static declaration for `stacktop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xldmem.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldmem.c:210: warning: static declaration for `newnode' follows non-static
xldmem.c:235: warning: static declaration for `stralloc' follows non-static
xldmem.c:253: warning: static declaration for `strsave' follows non-static
xldmem.c:401: warning: `sweep' was declared implicitly `extern' and later `static'
xldmem.c:486: warning: `livecar' was declared implicitly `extern' and later `static'
xldmem.c:512: warning: `livecdr' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xleval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xleval.c:105: warning: static declaration for `evform' follows non-static
xleval.c:158: warning: static declaration for `evalhook' follows non-static
xleval.c:235: warning: static declaration for `evfun' follows non-static
xleval.c:338: warning: `iskeyword' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlfio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlfio.c:90: warning: static declaration for `printit' follows non-static
xlfio.c:132: warning: static declaration for `flatsize' follows non-static
xlfio.c:170: warning: static declaration for `openit' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlftab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlglob.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlinit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlisp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xljump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xljump.c:127: warning: `findtarget' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xllist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xllist.c:66: warning: static declaration for `cxr' follows non-static
xllist.c:316: warning: static declaration for `subst' follows non-static
xllist.c:362: warning: static declaration for `sublis' follows non-static
xllist.c:382: warning: static declaration for `assoc' follows non-static
xllist.c:471: warning: static declaration for `nth' follows non-static
xllist.c:553: warning: static declaration for `map' follows non-static
xllist.c:829: warning: static declaration for `cequal' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlmath.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlmath.c:108: warning: static declaration for `binary' follows non-static
xlmath.c:295: warning: static declaration for `unary' follows non-static
xlmath.c:379: warning: static declaration for `predicate' follows non-static
xlmath.c:461: warning: static declaration for `compare' follows non-static
xlmath.c:523: warning: `badiop' was declared implicitly `extern' and later `static'
xlmath.c:529: warning: `badfop' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlobj.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlobj.c:342: warning: static declaration for `entermsg' follows non-static
xlobj.c:363: warning: static declaration for `findmsg' follows non-static
xlobj.c:385: warning: static declaration for `sendmsg' follows non-static
xlobj.c:443: warning: `getivcnt' was declared implicitly `extern' and later `static'
xlobj.c:453: warning: `listlength' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlprin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlprin.c:107: warning: `putstring' was declared implicitly `extern' and later `static'
xlprin.c:152: warning: `putatm' was declared implicitly `extern' and later `static'
xlprin.c:161: warning: `putdec' was declared implicitly `extern' and later `static'
xlprin.c:169: warning: `putfloat' was declared implicitly `extern' and later `static'
xlprin.c:177: warning: `putoct' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlread.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlread.c:392: warning: static declaration for `phexnumber' follows non-static
xlread.c:410: warning: static declaration for `plist' follows non-static
xlread.c:477: warning: static declaration for `pvector' follows non-static
xlread.c:528: warning: static declaration for `pquote' follows non-static
xlread.c:553: warning: static declaration for `pname' follows non-static
xlread.c:575: warning: static declaration for `tentry' follows non-static
xlread.c:586: warning: `nextch' was declared implicitly `extern' and later `static'
xlread.c:598: warning: `checkeof' was declared implicitly `extern' and later `static'
xlread.c:609: warning: `badeof' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlstr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsubr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsym.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlsym.c:192: warning: static declaration for `findprop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsys.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unixstuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs xlisp-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o xlisp-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
####################################################################
#### Compiling SPECINT92/benchspec/023.eqntott...
####################################################################
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" eqntott-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c bnode.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c canon.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cover.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c duple.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c merge.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
merge.c: In function `trymerge':
merge.c:167: warning: type mismatch with previous external decl
merge.c:31: warning: previous external decl of `pthash'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c nt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c prexpr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c procargs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pterm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pterm_ops.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c putpla.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c read_ones.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rmcvd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c substitute.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c x.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c y.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c yystuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs eqntott-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o eqntott-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" eqntott-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c bnode.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c canon.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cover.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c duple.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c merge.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
merge.c: In function `trymerge':
merge.c:167: warning: type mismatch with previous external decl
merge.c:31: warning: previous external decl of `pthash'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c nt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c prexpr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c procargs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pterm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pterm_ops.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c putpla.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c read_ones.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rmcvd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c substitute.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c x.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c y.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c yystuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs eqntott-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o eqntott-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
####################################################################
#### Compiling SPECINT92/benchspec/026.compress...
####################################################################
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" compress-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c compress.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compress.c: In function `main':
compress.c:437: warning: assignment from incompatible pointer type
compress.c:437: warning: comparison of distinct pointer types lacks a cast
compress.c:438: warning: passing arg 2 of `signal' from incompatible pointer type
compress.c:439: warning: passing arg 2 of `signal' from incompatible pointer type
ld-ss -write-relocs compress-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o compress-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" compress-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c compress.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compress.c: In function `main':
compress.c:437: warning: assignment from incompatible pointer type
compress.c:437: warning: comparison of distinct pointer types lacks a cast
compress.c:438: warning: passing arg 2 of `signal' from incompatible pointer type
compress.c:439: warning: passing arg 2 of `signal' from incompatible pointer type
ld-ss -write-relocs compress-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o compress-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
####################################################################
#### Compiling SPECINT92/benchspec/072.sc...
####################################################################
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" sc-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
sc.c: In function `signals':
sc.c:1455: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1456: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1457: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1458: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1459: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1460: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c interp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
interp.c: In function `dotime':
interp.c:398: warning: passing arg 1 of `time' from incompatible pointer type
interp.c:403: warning: passing arg 1 of `localtime' from incompatible pointer type
interp.c: In function `dodate':
interp.c:742: warning: passing arg 1 of `ctime' from incompatible pointer type
interp.c: In function `doext':
interp.c:836: warning: assignment makes pointer from integer without a cast
interp.c: In function `RealEvalAll':
interp.c:1000: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1013: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `let':
interp.c:1376: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1383: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `slet':
interp.c:1419: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1426: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmds.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c crypt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xmalloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c range.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c help.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c lex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
lex.c: In function `nmgetch':
lex.c:468: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c: In function `strtof':
lex.c:591: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:591: warning: assignment from incompatible pointer type
lex.c:595: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:662: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gram.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs sc-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses -ltermcap -lm \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o sc-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses -ltermcap -lm \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" sc-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
sc.c: In function `signals':
sc.c:1455: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1456: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1457: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1458: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1459: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1460: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c interp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
interp.c: In function `dotime':
interp.c:398: warning: passing arg 1 of `time' from incompatible pointer type
interp.c:403: warning: passing arg 1 of `localtime' from incompatible pointer type
interp.c: In function `dodate':
interp.c:742: warning: passing arg 1 of `ctime' from incompatible pointer type
interp.c: In function `doext':
interp.c:836: warning: assignment makes pointer from integer without a cast
interp.c: In function `RealEvalAll':
interp.c:1000: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1013: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `let':
interp.c:1376: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1383: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `slet':
interp.c:1419: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1426: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmds.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c crypt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xmalloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c range.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c help.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c lex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
lex.c: In function `nmgetch':
lex.c:468: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c: In function `strtof':
lex.c:591: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:591: warning: assignment from incompatible pointer type
lex.c:595: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:662: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gram.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs sc-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses-red -ltermcap-red -lm-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o sc-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses-red -ltermcap-red -lm-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
####################################################################
#### Compiling SPECINT92/benchspec/085.gcc...
####################################################################
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" cc1-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-parse.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-decl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-typeck.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-convert.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c toplev.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c print-tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stor-layout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c fold-const.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stmt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expmed.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c explow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c optabs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c varasm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c symout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dbxout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sdbout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c emit-rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-emit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c integrate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c jump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c loop.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c flow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stupid.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c combine.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regclass.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c local-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c global-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reload.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reload1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c caller-save.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-peep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c final.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-extract.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-output.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs cc1-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o cc1-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" cc1-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-parse.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-decl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-typeck.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-convert.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c toplev.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c print-tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stor-layout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c fold-const.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stmt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expmed.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c explow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c optabs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c varasm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c symout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dbxout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sdbout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c emit-rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-emit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c integrate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c jump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c loop.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c flow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stupid.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c combine.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regclass.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c local-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c global-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reload.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reload1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c caller-save.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-peep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c final.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-extract.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-output.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs cc1-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o cc1-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
####################################################################
#### Compiling SPECINT92/benchspec/aaa.elvis...
####################################################################
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" elvis-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c blk.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c e_ctype.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c curses.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
curses.c: In function `getsize':
curses.c:761: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cut.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c input.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c modify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move3.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move4.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move5.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c opts.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c recycle.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c redraw.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regexp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regexp.c: In function `regcomp':
regexp.c:439: warning: assignment discards `volatile' from pointer target type
regexp.c:591: warning: return discards `volatile' from pointer target type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regsub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c system.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tmp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vars.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vcmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vi.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs elvis-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap -lcurses \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o elvis-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap -lcurses \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" elvis-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c blk.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c e_ctype.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c curses.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
curses.c: In function `getsize':
curses.c:761: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cut.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c input.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c modify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move3.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move4.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move5.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c opts.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c recycle.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c redraw.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regexp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regexp.c: In function `regcomp':
regexp.c:439: warning: assignment discards `volatile' from pointer target type
regexp.c:591: warning: return discards `volatile' from pointer target type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regsub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c system.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tmp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vars.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vcmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vi.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs elvis-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap-red -lcurses-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o elvis-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap-red -lcurses-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
####################################################################
#### Compiling SPECINT92/benchspec/bbb.perl...
####################################################################
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" perl-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c perly.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c array.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cons.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c consarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c doarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
doarg.c: In function `do_sprintf':
doarg.c:995: warning: initialization makes pointer from integer without a cast
doarg.c:1009: warning: initialization makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c doio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dolist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c eval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
eval.c: In function `eval':
eval.c:1674: warning: passing arg 1 of `time' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c form.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c perl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
perl.c: In function `main':
perl.c:143: warning: passing arg 1 of `sprintf' makes pointer from integer without a cast
perl.c:827: warning: assignment makes pointer from integer without a cast
perl.c:862: warning: assignment makes pointer from integer without a cast
perl.c: In function `incpush':
perl.c:949: warning: assignment makes pointer from integer without a cast
perl.c: In function `savelines':
perl.c:972: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regcomp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regcomp.c: In function `regcomp':
regcomp.c:248: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regexec.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c str.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c toke.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
toke.c: In function `checkcomma':
toke.c:1503: warning: assignment makes pointer from integer without a cast
toke.c: In function `scansubst':
toke.c:1809: warning: assignment makes pointer from integer without a cast
toke.c: In function `scanstr':
toke.c:2317: warning: assignment makes pointer from integer without a cast
toke.c: In function `load_format':
toke.c:2550: warning: assignment makes pointer from integer without a cast
toke.c:2671: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c util.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
util.c: In function `scanhex':
util.c:1770: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c usersub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs perl-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o perl-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" perl-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c perly.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c array.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cons.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c consarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c doarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
doarg.c: In function `do_sprintf':
doarg.c:995: warning: initialization makes pointer from integer without a cast
doarg.c:1009: warning: initialization makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c doio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dolist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c eval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
eval.c: In function `eval':
eval.c:1674: warning: passing arg 1 of `time' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c form.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c perl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
perl.c: In function `main':
perl.c:143: warning: passing arg 1 of `sprintf' makes pointer from integer without a cast
perl.c:827: warning: assignment makes pointer from integer without a cast
perl.c:862: warning: assignment makes pointer from integer without a cast
perl.c: In function `incpush':
perl.c:949: warning: assignment makes pointer from integer without a cast
perl.c: In function `savelines':
perl.c:972: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regcomp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regcomp.c: In function `regcomp':
regcomp.c:248: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regexec.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c str.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c toke.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
toke.c: In function `checkcomma':
toke.c:1503: warning: assignment makes pointer from integer without a cast
toke.c: In function `scansubst':
toke.c:1809: warning: assignment makes pointer from integer without a cast
toke.c: In function `scanstr':
toke.c:2317: warning: assignment makes pointer from integer without a cast
toke.c: In function `load_format':
toke.c:2550: warning: assignment makes pointer from integer without a cast
toke.c:2671: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c util.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
util.c: In function `scanhex':
util.c:1770: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c usersub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs perl-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o perl-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
####################################################################
#### Compiling SPECINT92/benchspec/ccc.grep...
####################################################################
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" grep-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c grep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dfa.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c kwset.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c search.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs grep-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o grep-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" grep-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c grep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dfa.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c kwset.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c search.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs grep-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o grep-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
	 /* observed latency */0;					\
       })								\
   : CacheAccess(cp, op, addr, dest, sz, cycle, tally))

#define READ_MEM_UNSIGNED(DST,SRC,SZ,DIRECT)				\
  (memLat=TCacheAccess(dCache, Read, SRC, (uchar *)&temp##SZ, SZ, TRUE),\
   DST = (ulong)temp##SZ)
#define READ_MEM_SIGNED(DST,SRC,SZ,DIRECT)				\
  (memLat=TCacheAccess(dCache, Read, SRC, (uchar *)&temp##SZ, SZ, TRUE),\
   DST = (ulong)temp##SZ,						\
   ((DST) & (1 << ((SZ*8)-1))) ? DST |= (~((1 << (SZ*8))-1)) : 0)
#define WRITE_MEM(SRC,DST,SZ,DIRECT)					\
  (temp##SZ=(ulong)SRC,							\
   memLat=TCacheAccess(dCache, Write, DST, (uchar *)&temp##SZ, SZ, TRUE))

#define SYSCALL(INST)		(Syscall(DCacheAccess, INST))

static void
DCacheAccess(enum MemCmd cmd,		/* Read or Write */
	     ulong addr,		/* address to access */
	     uchar *p,			/* where to copy to/from */
	     int numBytes)		/* xfer length */
{
  CacheAccess(dCache, cmd, addr, p, numBytes, cycle, FALSE);
}

#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)
#define CONNECT(OP)
#define IMPL  Timing
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
#undef IMPL

extern ulong PC;
extern ulong Ihead, Itail;
extern struct SSInst *IR1;
extern ulong *PC1, *NPC1;
void SquashIDecode(void);

/* current VM page size */
static unsigned long pageSize = 4096;

/* virtual page number accessor */
#define VPN(addr)	((addr) & ~(pageSize-1))

static inline void
RegUpdate(unsigned long reg, unsigned long result,
	  unsigned long srcA, int validA, unsigned long srcB, int validB)
{
  unsigned long srcVPN;
  unsigned long destVPN;

  /* $r0 is always invalid as a pointer value */
  if (reg == 0)
    return;

  /* either valid, but not both, makes the result valid */
  valid[reg] = (validA || validB) && !(validA && validB);

  if (validA && validB)
    doubleValid++;

  if (valid[reg]) {
    if (validA)
      srcVPN = VPN(srcA);
    else
      srcVPN = VPN(srcB);

    destVPN = VPN(result);

    if (srcVPN != destVPN) {
      /* ran off the page */
      valid[reg] = FALSE;
      invalidOverrun++;
    }
    else
      invalidNoOverrun++;	/* still valid!!! */
  }
}

void
Execute(void)
{
  ulong i, nextPC;
  struct SSInst inst;
  uchar temp1;
  ushort temp2;
  ulong temp4;
  ulong exLat, memLat;
  unsigned long srcA, srcB;
  int validA, validB;
  int ldst, direct, jamFailed;

  for (i=0; i<N2; i++) {

    /* maintain R[0] semantics */
    R[0] = 0;

    assert(IC2[i] != Trap || N2 == 1);

    nextPC = PC2[i] + 8;
    inst = IR2[i];
    exLat = 0; memLat = 0;
    ldst = FALSE; direct = FALSE; jamFailed = TRUE;
    dirMode = FALSE; jamMode = FALSE; pCalcMode = FALSE; dualMode = FALSE;

    srcA = 0; validA = FALSE;
    srcB = 0; validB = FALSE;

    switch (OP2[i]) {

Article: 10118 of alt.sources
Path: uwvax!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!agate!doc.ic.ac.uk!uknet!pipex!sunic!news.funet.fi!nntp.hut.fi!nntp.hut.fi!tri
From: tri@snakemail.hut.fi (Timo Rinne)
Newsgroups: alt.sources
Subject: Re: Where is this code???
Date: 26 Feb 1994 13:49:33 GMT
Organization: Helsinki University of Technology
Lines: 755
Distribution: world
Message-ID: <TRI.94Feb26154933@gamma.hut.fi>
References: <2kl8t5INNlqd@owl.csrv.uidaho.edu>
Reply-To: Timo.Rinne@hut.fi
NNTP-Posting-Host: gamma.hut.fi
In-reply-to: ander882@priest.cs.uidaho.edu's message of 25 Feb 1994 16:27:17 GMT

>>>>> ander882@priest.cs.uidaho.edu (Craig J. Anderson) said:
> For a project (as described below) I'm in search of the following program.
> I've tried to reach the author but the mail keeps bouncing back and I don't
> know where the archives are.  Please help.

> language:	C, C++
> package:	Cyclo - cyclomatic complexity tool
> version:	the one and only version
> parts:		code analysis tool
> author:		Roger D Binns 
> how to get:	alt.sources archive, 1993/06/28, <C9C2rH.EE@brunel.ac.uk>
> description:	It measures cyclomatic complexity, shows function calls and 
> 		can draw flowgraphs of ANSI C and C++ code.
> requires:	lex, C++
> updated:	1993/06/28

begin 644 cyclo.tar.gz
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
1^[_O_^1L]O\#ZI&/*P`P`@!@
`
end


    case LB:
    case LBD:
    case LBU:
    case LBUD:
    case LH:
    case LHD:
    case LHU:
    case LHUD:
    case LW:
    case LWL:
    case LWR:
    case LWD:
#if 0
    case LBJ:
    case LBUJ:
    case LHJ:
    case LHUJ:
    case LWJ:
#endif
      /* input from memory */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case LAD:
    case LUI:
      /* input from instruction */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case ADD:
    case ADDU:
    case SUB:
    case SUBU:
    case AND_:
    case OR:
    case XOR:
    case NOR:
    case SLL:
    case SLLV:
    case SRL:
    case SRLV:
    case SRA:
    case SRAV:
      srcA = GPR(RS); validA = valid[RS];
      srcB = GPR(RT); validB = valid[RT];
      break;
    case ADDI:
    case ADDIU:
    case ANDI:
    case ORI:
    case XORI:
      srcA = GPR(RS); validA = valid[RS];
      srcB = IMM; validB = /* not a pointer */FALSE;
      break;
    case SLT:
    case SLTI:
    case SLTU:
    case SLTIU:
      /* definately not pointer results */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case MFC1:
      /* definately not a pointer result */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case MFLO:
    case MFHI:
      /* not valid pointer sources */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case JAL:
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case JALR:
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    default:
      /* not valid pointer sources */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
    }

    switch (OP2[i]) {
#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)	\
    case OP:								\
      EXPR; numInsts++;							\
      break;
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)\
    case OP:								\
      EXPR; ldst = TRUE; direct = DIRECT; numInsts++;			\
      break;
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)					\
    case OP:								\
      error("tried to execute a linking opcode, %d", OP);
#define CONNECT(OP)
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
    default:
      error("bogus opcode `%d' encountered", OP2[i]);
    }

    switch (OP2[i]) {
    case LB:
    case LBU:
    case LH:
    case LHU:
    case LW:
    case LWL:
    case LWR:
    case LUI:
#if 0
    case LBJ:
    case LBUJ:
    case LHJ:
    case LHUJ:
    case LWJ:
#endif
      /* input from memory (or inst for LUI) */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case LBD:
    case LBUD:
    case LHD:
    case LHUD:
    case LWD:
    case LAD:
      /* input from memory */
      RegUpdate(RS, GPR(RS), 0, FALSE, -1, FALSE);
      break;
    case ADD:
    case ADDU:
    case SUB:
    case SUBU:
    case AND_:
    case OR:
    case XOR:
    case NOR:
    case SLL:
    case SLLV:
    case SRL:
    case SRLV:
    case SRA:
    case SRAV:
      RegUpdate(RD, GPR(RD), srcA, validA, srcB, validB);
      break;
    case ADDI:
    case ADDIU:
    case ANDI:
    case ORI:
    case XORI:
      RegUpdate(RT, GPR(RT), srcA, validA, srcB, validB);
      break;
    case SLT:
    case SLTU:
      /* definately not pointer results */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    case SLTI:
    case SLTIU:
      /* definately not pointer results */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case MFC1:
      /* definately not a pointer result */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case MFLO:
    case MFHI:
      /* not valid pointer sources */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    case JAL:
      /* not a valid pointer source */
      RegUpdate(31, GPR(31), 0, FALSE, -1, FALSE);
      break;
    case JALR:
      /* not a valid pointer source */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    default:
      /* rest of instruction do not write an integer register */
    }

    if (verbose && ldst && jamminMan) {
      if (jamFailed)
	info("jam failed    @ 0x%08x, GPR(%d)=0x%08x OFS=%x",
	     PC2[i], BS, GPR(BS), OFS);
      else
	info("jam succeeded @ 0x%08x, GPR(%d)=0x%08x OFS=%x",
	     PC2[i], BS, GPR(BS), OFS);
    }

    if (ldst) {
      enum Opcode op = OP2[i];
      nRefs++;
      if (IC2[i] == MemRead) {
	nReads++;
	if ((unsigned)LB_RR<=(unsigned)op && (unsigned)op<=(unsigned)LWC1_RR)
	  nRRLoads++;
	if (op == LWC1_RR_R2 || op == LW_RR_R2)
	  nRRLoads++;
	if (direct)
	  nDirectLoads++;
	if (jamFailed)
	  nFailedLdJams++;
      }
      else {
	if ((unsigned)SB_RR<=(unsigned)op && (unsigned)op<=(unsigned)SWC1_RR)
	  nRRStores++;
	if (op == SWC1_RR_R2 || op == SW_RR_R2)
	  nRRStores++;
	if (direct)
	  nDirectStores++;
	if (jamFailed)
	  nFailedStJams++;
      }

      if (dirMode)
	nDirMode++;
      else if (jamMode)
	nJamMode++;
      else if (pCalcMode)
	nPCalcMode++;
      else if (dualMode)
	nDualMode++;
    }

    /* compute amount of extra latency noted in the EX stage */
    exLat =
      (/* memory latency, from cache misses */
       memLat
       /* address translation latency */
       + /* GetTLBLat((FU2[i]==DirRdPort || FU2[i]==DirWrPort),
	    BS, IC2[i], cycle) */ 0
       /* failed jam ld/st */
       + ((ldst && (stallIssue || jamFailed || !jamminMan) && IC2[i]==MemRead)
	  ? mjCost : 0));

    if (jamminMan && ldst && jamFailed && !stallIssue) {
      /* this is a mis-speculated and executed memory access */
      nFailedInEX++;
    }

    /* record any lagging loads or stores */
    if (jamminMan && ldst && IC2[i] == MemWrite && (jamFailed || stallIssue)) {
      stalledStore = TRUE;
    }
    if (jamminMan && ldst && IC2[i] == MemRead && (jamFailed || stallIssue)) {
      stalledLoad = TRUE;
    }

    /* schedule the write back event, do this here as non-deterministic
       latencies are generated/computed in the EX stage (e.g., cache miss,
       TLB xlation, failed jams */
    if (out1_2[i])
      ScheduleEvent((cycle-1)+fuClassToResOpLatency[FU2[i]][res2[i]]+exLat,
		    out1_2[i]);
    if (out2_2[i])
      ScheduleEvent((cycle-1)+fuClassToResOpLatency[FU2[i]][res2[i]]+exLat,
		    out2_2[i]);

    if (IC2[i] == CondCtrl || IC2[i] == UncondCtrl) {
      /* did the BTB predict correctly, even if it missed */
      ProbeSample(btbPredRate, (NPC2[i] == nextPC) ? 1 : 0);

      /* update the branch target buffer stats */
      BTBUpdate(/* br addr */PC2[i], /* taken? */(nextPC != (PC2[i] + 8)),
		/* target */nextPC);

      /* was a branch taken? if so, reset the IF stage PC */
      if (/* predicted incorrectly? */ NPC2[i] != nextPC) {

	/* taken if (nextPC != (PC2[i] + 8)) */
	/* not taken if (nextPC == (PC2[i] + 8)) */
	PC = nextPC;

	/* commit this instruction to the next stage, and return */
	IR3[N3] = IR2[i];
	PC3[N3] = PC2[i];
	NPC3[N3] = NPC2[i];
	OP3[N3] = OP2[i];
	FU3[N3] = FU2[i];
	IC3[N3++] = IC2[i];

	/* keep a backtrace */
	DTraceLog("squashing branch @ 0x%08lx: %ld insts", PC2[i], numInsts);

	/* reset any previously set busy bits */
	for (i++; i<N2; i++) {
	  if (out1_2[i]) {
	    RSClearBit(busy, out1_2[i]);
	    outToFU[out1_2[i]] = -1;
	  }
	  if (out2_2[i]) {
	    RSClearBit(busy, out2_2[i]);
	    outToFU[out2_2[i]] = -1;
	  }
	}

	/* squash rest of execute state insts and decode stage */
	SquashExecute();
	SquashIDecode();
	cycle += nCycleMP;
	pipeStats.mpStall += (nCycleMP * numIssue);
	return;
      }
    }

    /* commit this instruction to the next stage */
    IR3[N3] = IR2[i];
    PC3[N3] = PC2[i];
    NPC3[N3] = NPC2[i];
    OP3[N3] = OP2[i];
    FU3[N3] = FU2[i];
    IC3[N3++] = IC2[i];

    /* keep a backtrace */
    DTraceLog("ALU/Ctrl op @ 0x%08lx: %ld insts", PC2[i], numInsts);
  }

  /* all instruction processed */
  N2 = 0;
}


/** 1-IDECODE **/
ulong N1;
ulong Ihead, Itail;
struct SSInst *IR1;
ulong *PC1, *NPC1;

void
SquashIDecode(void)
{
  N1 = 0;
  Ihead = Itail = 0;

  if (stalledStore)
    stalledStore = FALSE;
  if (stalledLoad)
    stalledLoad = FALSE;
}

void
InitIDecode(void)
{
  if (!(IR1 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC1 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC1 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  SquashIDecode();
}

char *regName[] = {
  "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7",
  "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15",
  "r16", "r17", "r18", "r19", "r20", "r21", "r22", "r23",
  "r24", "r25", "r26", "r27", "r28", "r29", "r30", "r31",
  "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7",
  "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15",
  "f16", "f17", "f18", "f19", "f20", "f21", "f22", "f23",
  "f24", "f25", "f26", "f27", "f28", "f29", "f30", "f31",
  "HI", "LO", "FC",
};

void
DumpRegSet(RegSet rs)
{
  ulong i;

  for (i=0; i<RS_BIT_SIZE; i++)
    if (RSBitIsSet(rs, i))
	fprintf(stderr, "%s, ", regName[i]);
  fprintf(stderr, "\n");
}

#undef GPR(N)
#undef CGPR(N)
#undef FPR_L(N)
#undef FPR_F(N)
#undef FPR_D(N)
#undef HI
#undef LO
#undef FC

#define GPR(N)		(N)
#define CGPR(N)		(COMP_OP != COMP_NOP ? N : 0)
#define FPR_L(N)	(((N)+32)&~1)
#define FPR_F(N)	(((N)+32)&~1)
#define FPR_D(N)	(((N)+32)&~1)
#define HI		(0+32+32)
#define LO		(1+32+32)
#define FC		(2+32+32)
#define MEM		(0)
#define CTRL		(0)

#define I_GPR(N)	RSSetBit(inputs, GPR(N))
#define I_CGPR(N)	(COMP_OP != COMP_NOP ? RSSetBit(inputs, GPR(N)) : 0)
#define I_FPR_L(N)	RSSetBit(inputs, FPR_L(N))
#define I_FPR_F(N)	RSSetBit(inputs, FPR_F(N))
#define I_FPR_D(N)	RSSetBit(inputs, FPR_F(N));
#define I_HI		RSSetBit(inputs, HI)
#define I_LO		RSSetBit(inputs, LO)
#define I_FC		RSSetBit(inputs, FC)
#define I_MEM		/* RSSetBit(inputs, MEM) */
#define I_CTRL		/* RSSetBit(inputs, CTRL) */
#define I_NA

#define O_GPR(N)	RSSetBit(outputs, GPR(N))
#define O_CGPR(N)	(COMP_OP != COMP_NOP ? RSSetBit(outputs, GPR(N)) : 0)
#define O_FPR_L(N)	RSSetBit(outputs, FPR_L(N))
#define O_FPR_F(N)	RSSetBit(outputs, FPR_F(N))
#define O_FPR_D(N)	RSSetBit(outputs, FPR_F(N));
#define O_HI		RSSetBit(outputs, HI)
#define O_LO		RSSetBit(outputs, LO)
#define O_FC		RSSetBit(outputs, FC)
#define O_MEM		/* RSSetBit(outputs, MEM) */
#define O_CTRL		/* RSSetBit(outputs, CTRL) */
#define O_NA

ulong WAWstalls = 0;

void
IDecode(void)
{
  ulong i;
  enum Opcode op;
  enum FUClass fu;
  enum InstClass ic;
  ulong out1, out2, in1, in2, in3;
  struct SSInst inst;
  ulong j;
  RegSet inputs;
  RegSet outputs;
  ulong Ntotal = N1;
  int direct;
  int iRes;

  /* a load and store cannot issue in parallel */
  int issuedLoad = FALSE;
  int issuedStore = FALSE;

  /* any empty slots, due to BTB target switch */
  pipeStats.mpStall += numIssue-N1;

  /* no outputs yet */
  RSClear(outputs);

  for (i=0; i<Ntotal; i++) {

    out1 = 0; out2 = 0;
    in1 = 0; in2 = 0; in3 = 0;
    direct = FALSE;
    RSClear(inputs);
    fu = NA;
    iRes = -1;

    SET_OPCODE(op, IR1[Itail]);

    inst = IR1[Itail];

    switch (op) {
#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)	\
    case OP:								\
      fu = RES; ic = CLASS;						\
      out1 = O1; O_##O1; out2 = O2; O_##O2;				\
      in1 = I1; I_##I1; in2 = I2; I_##I2; in3 = I3; I_##I3;		\
      break;
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)\
    case OP:								\
      fu = RES; ic = CLASS;						\
      out1 = O1; O_##O1; out2 = O2; O_##O2;				\
      in1 = I1; I_##I1; in2 = I2; I_##I2; in3 = I3; I_##I3;		\
      direct = DIRECT;							\
      break;
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)					\
    case OP:								\
      error("tried to get dependency info for a linking opcode, %d", OP);
#define CONNECT(OP)
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
    default:
      /* speculatively, we may (try to) decode a bogus opcode */
      /* error("bogus opcode `%d' encountered", op); */
      fu = IntALU; ic = IntComp;
      out1 = 0; out2 = 0;
      in1 = 0; in2 = 0; in3 = 0;
    }

    /* make sure direct loads and stores are typed right */
    /* assert(!direct || RSEmpty(inputs)); */

    /* r0 is a zero source/sink register */
    RSClearBit(inputs, 0);
    RSClearBit(outputs, 0);

    if (ic == Trap) {
      /* system call instruction, this needs to execute all alone,
         the stage of execute is unimportant as all SYSCALL insts will
	 be preceded by a LI R2,0x... instruction, which will always
	 complete in the EX stage */
      if (i == 0) {
	/* commit this instruction to the next stage */
	assert(N2 == 0);
	IR2[N2] = IR1[Itail];
	PC2[N2] = PC1[Itail];
	NPC2[N2] = NPC1[Itail];
	OP2[N2] = op;
	FU2[N2] = fu;
	IC2[N2] = ic;
	out1_2[N2] = out1;
	out2_2[N2] = out2;
	/* no resource allocated */
	res2[N2++] = -1;

	Itail = (Itail + 1) & niMask;
	N1--;
	pipeStats.trapStall += N1;
	pipeStats.computing++;
	return;
      }
      else {
	/* it will execute in the next cycle, otherwise, in either case
	   there is something for the EX stage to do in the next cycle */
	pipeStats.trapStall += N1;
	return;
      }
    }

    /* stall on RAW hazards */
    if (RSInterP(busy, inputs)) {
      /* busy register not ready yet, bail */
      if (in1 && outToFU[in1] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in1]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in1))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else if (in2 && outToFU[in2] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in2]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in2))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else if (in3 && outToFU[in3] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in3]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in3))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else
	panic("OUTTOFU is out of sync");
      return;
    }

    if (!perfectMemory) {
      /* stores must fly alone (no other stores or loads) */

      /* basic pipeline issue constraints */
      if ((ic == MemRead && issuedStore)
	  || (ic == MemWrite && (issuedLoad || issuedStore))) {
	pipeStats.noFUStall += N1;
	return;
      }

      /* extended jamming load/store issue constraints */
      if ((ic == MemRead && stalledStore)
	  || (ic == MemWrite && (stalledLoad || stalledStore))) {
	/* this issue is allowed but must be stalled */
	stallIssue = TRUE;
      }

      /* sanity check */
      assert(!issuedLoad || !issuedStore);
    }

    if (ic == MemRead)
      issuedLoad = TRUE;
    else if (ic == MemWrite)
      issuedStore = TRUE;

    /* get the necessary resources */
    if (fu) {
      int gotOne = FALSE;

      for (j=0; j<N_ELT(resource); j++) {
	if (fuClassToRes[fu][j] != -1) {
	  iRes = fuClassToRes[fu][j];
	  if (resource[iRes].busy == 0) {
	    gotOne = TRUE;
	    resource[iRes].busy = fuClassToResIssueLatency[fu][iRes];
	    break;
	  }
	}
	else {
	  /* do not need to scan the whole list, it is terminated by
	     a `-1' at the end of the resource index list, no functional
	     unit available, so bail */
	  pipeStats.noFUStall += N1;
	  return;
	}
      }
      if (!gotOne) {
	/* no functional unit available, so bail */
	pipeStats.noFUStall += N1;
	return;
      }
    }

    /* registers are now pending results */
    RSOrSet(busy, outputs);
    if (out1)
      outToFU[out1] = iRes;
    if (out2)
      outToFU[out2] = iRes;

    /* commit this instruction to the next stage */
    pipeStats.computing++;
    IR2[N2] = IR1[Itail];
    PC2[N2] = PC1[Itail];
    NPC2[N2] = NPC1[Itail];
    OP2[N2] = op;
    FU2[N2] = fu;
    IC2[N2] = ic;
    out1_2[N2] = out1;
    out2_2[N2] = out2;
    res2[N2++] = iRes;
    Itail = (Itail + 1) & niMask;
    N1--;
  }
  assert(N1 == 0);
}


/** 0-IFETCH **/
ulong PC;

/* fetch up to NUMISSUE instructions, the fetched instructions are
   placed into the circular queue owned by the decode stage; when the
   decode queue is full fetching terminates; fetching also terminates
   when the BTB predicts a jump, since the instructions at the new
   address will not be available until the next cycle */
void
IFetch(void)
{
  ulong i;
  ulong target;
  struct SSInst inst;
  ulong lastPC;
  int done = FALSE;

  for (i=0;
       (i < numIssue)		/* fetch up to NUMISSUE insts */
       && (N1 < numIssue)	/* fetch until IDecode() stage is full */
       && !done;		/* for BTB fetch termination */
       i++) {

    /* fetch instruction */
#if 0
    CacheAccess(iCache, Read, PC, (uchar *)&inst, 8, cycle, TRUE);
#else
    inst = GetInst(PC);
#endif
    lastPC = PC;

    /* possibly use the BTB target */
    if ((target = BTBLookup(PC))) {
      PC = target;
      /* discontinuous stream, so stop fetching until the next cycle */
      done = (target != (PC + 8));
      /* hit in the BTB */
      ProbeSample(btbHitRate, 1);
    }
    else {
      /* missed in the BTB, continue fetching linearly */
      PC += 8;
      /* missed in the BTB */
      ProbeSample(btbHitRate, 0);
    }

    /* commit this instruction to the next stage */
    IR1[Ihead] = inst;
    PC1[Ihead] = lastPC;
    NPC1[Ihead] = PC;
    Ihead = (Ihead + 1) & niMask;
    N1++;
  }
}


void
DumpPipeState(void)
{
  ulong i, j;

  fprintf(stderr, ">>>> Pipe state <<<<\n");
  fprintf(stderr, "\tcycle => %15.0f\n", (double)cycle);
  fprintf(stderr, "\tWriteBack():\n");
  for (i=0; i<N3; i++) {
    fprintf(stderr, "\t\tPC3.%ld: 0x%08lx  NPC3.%ld: 0x%08lx  IR3.%ld: ",
	    i, PC3[i], i, NPC3[i], i);
    DisassembleInst(IR3[i], stderr);
    fprintf(stderr, "\n");
    fprintf(stderr, "\t\tOP3.%ld: %s  FU3.%ld: %s  IC3.%ld: %s\n",
	    i, opName[OP3[i]], i, fuClassDesc[FU3[i]], i, iClassDesc[IC3[i]]);
    fprintf(stderr,
	    "\t\tres2.%ld: %d  out1_2.%ld: 0x%08x  out2_2.%ld: 0x%08x\n",
	    i, res2[i], i, out1_2[i], i, out2_2[i]);
    if (i+1 < N3)
      fprintf(stderr, "\t\t--\n");
  }
  DumpEventQueue();
  fprintf(stderr, "\tBusy: "); DumpRegSet(busy);
  fprintf(stderr, "\tExecute():\n");
  for (i=0; i<N2; i++) {
    fprintf(stderr, "\t\tPC2.%ld: 0x%08lx  NPC2.%ld: 0x%08lx  IR2.%ld: ",
	    i, PC2[i], i, NPC2[i], i);
    DisassembleInst(IR2[i], stderr);
    fprintf(stderr, "\n");
    fprintf(stderr, "\t\tOP2.%ld: %s  FU2.%ld: %s  IC2.%ld: %s\n",
	    i, opName[OP2[i]], i, fuClassDesc[FU2[i]], i, iClassDesc[IC2[i]]);
    if (i+1 < N2)
      fprintf(stderr, "\t\t--\n");
  }
  fprintf(stderr, "\tIDecode():\n");
  for (i=0,j=Itail; i<N1; i++,j=(j+1)&niMask) {
    fprintf(stderr, "\t\tPC1.%ld: 0x%08lx  IR1.%ld: ", i, PC1[j], i);
    DisassembleInst(IR1[j], stderr);
    fprintf(stderr, "\n");
    if (i+1 < N1)
      fprintf(stderr, "\t\t--\n");
  }
  fprintf(stderr, "\tIFetch():\n");
  {
    fprintf(stderr, "\t\tPC: 0x%08lx\n", PC);
  }
}

void
SSOptions(int argc, char **argv)
{
  char c;

  /* parse options */
  NewOpt();
  while ((c = GetOpt(argc, argv, ALL_OPTIONS)) != EOF) {
    switch (c) {
    case 'w':
      numIssue = atoi(optArg);
      if (numIssue == 0)
	fatal("numIssue is zero");
      if ((numIssue & (numIssue-1)) != 0)
	fatal("numIssue is not a power of two, numIssue = %d",
	      numIssue);
      break;
    case 'i':
      /* instruction cache */
      if (!strcmp(optArg, "-")) {
	useICache = FALSE;
	break;
      }
      if (!ParseCacheParam(&iCacheParams, optArg))
	fatal("invalid iCache format: %s", optArg);
      useICache = TRUE;
      break;
    case 'd':
      /* data cache */
      if (!strcmp(optArg, "-")) {
	break;
      }
      if (!ParseCacheParam(&dCacheParams, optArg))
	fatal("invalid dCache format: %s", optArg);
      break;
    /* TLB configuration */
    case 'x':
      if (sscanf(optArg, "%lu:%lu:%lu", &nTLB, &opLatTLB, &issueLatTLB) != 3)
	fatal("invalid TLB configuration (n:opLat:issueLat): %s", optArg);
      break;
    case 'g':
      /* reset page size */
      pageSize = atoi(optArg);
      if ((pageSize & (pageSize - 1)) != 0)
	fatal("page size, %u, is not a power-of-two", pageSize);
      break;
    /* simulation modes */
    case '1':	/* all single cycle loads and stores */
      {
	int i, j;

	info("resetting all ld/st's to 1 cycle...");
	for (i=0; i<N_ELT(resource); i++)
	  for (j=0; j<NUM_FU_CLASSES; j++)
	    if (resource[i].x[j].fuClass == DirRdPort
		|| resource[i].x[j].fuClass == DirWrPort
		|| resource[i].x[j].fuClass == JamRdPort
		|| resource[i].x[j].fuClass == JamWrPort
		|| resource[i].x[j].fuClass == RdPort
		|| resource[i].x[j].fuClass == WrPort) {
	      resource[i].x[j].opLatency = 1;
	      resource[i].x[j].issueLatency = 1;
	    }
	mjCost = 0;
      }
      break;
    case '2':	/* perfect memory performance */
      {
	extern ulong accessLatency;
	extern ulong interLatency;

	info("running with infinitely fast memory...");
	accessLatency = 0;
	interLatency = 0;
      }
      break;
    case '3':	/* ideal memory interface */
      info("running with perfect memory system (no conflicts)...");
      perfectMemory = TRUE;
      break;
    case '4':	/* failed jams have no penalty */
      abort();
      break;
    case '5':
      info("running with %d-cycle mis-prediction latency (was %d)",
	   2 + nCycleMP + 1, 2 + nCycleMP);
      nCycleMP++;
      break;
    case '6':
      {
	int i, gotone = FALSE;
	unsigned long nPipes = 0;

	for (i=0; i<N_ELT(resource); i++) {
	  if (resource[i].x[0].fuClass == DirRdPort
	      || resource[i].x[0].fuClass == DirWrPort
	      || resource[i].x[0].fuClass == JamRdPort
	      || resource[i].x[0].fuClass == JamWrPort
	      || resource[i].x[0].fuClass == RdPort
	      || resource[i].x[0].fuClass == WrPort) {
	    if (resource[i].busy == 0 && !gotone) {
	      resource[i].busy = -1; /* disabled */
	      gotone = TRUE;
	    }
	    nPipes += ((resource[i].busy == 0) ? 1 : 0);
	  }
	}
	info("running with one less ld/st pipes (%d ld/st pipes left)...",
	     nPipes);
      }
      break;
    case '7':
      dirJam = TRUE;
      info("using direct ld/st jam scheme");
      break;
    case '8':	/* all two cycle loads and stores, except direct */
      baseJam = TRUE;
      info("using base jam scheme");
      break;
    case '9':
      altJam = TRUE;
      jamSize = atoi(optArg);
      if ((jamSize & (jamSize-1)) != 0)
	fatal("jamsize (%lu) must be a power-of-two", jamSize);
      info("using alternate jam scheme, setting block size to `%d'", jamSize);
      break;
    case '0':
      {
	int i, j;

	info("resetting all ld/st's to 1 cycle...");
	for (i=0; i<N_ELT(resource); i++)
	  for (j=0; j<NUM_FU_CLASSES; j++)
	    if (resource[i].x[j].fuClass == DirRdPort
		|| resource[i].x[j].fuClass == DirWrPort
		|| resource[i].x[j].fuClass == JamRdPort
		|| resource[i].x[j].fuClass == JamWrPort
		|| resource[i].x[j].fuClass == RdPort
		|| resource[i].x[j].fuClass == WrPort) {
	      resource[i].x[j].opLatency = 1;
	      resource[i].x[j].issueLatency = 1;
	    }
	info("attempting to jam loads and stores...");
	jamminMan = TRUE;
      }
      break;
    }
  }
}

void
SSConfig(void)
{
  char buf[256];

  if (simType != SuperScalar)
    return;
  info("numIssue = %d", numIssue);
  if (useICache)
    info("%s", PrintCacheParam(buf, &iCacheParams));
  info("%s", PrintCacheParam(buf, &dCacheParams));
  info("BTB contains %d entries, direct mapped", btbSize);
  info("page size = %u bytes", pageSize);
  info("running with %d-cycle mis-prediction latency", 2+nCycleMP);
}

void
SuperSimStats(FILE *stream)
{
  long long sum;

  info("executed %.0f cycles", (double)cycle);
  info("avg issue rate + mem %f insts/cycle", (double)numInsts/cycle);

  ProbePrint(btbHitRate, stream, TRUE);
  ProbePrint(btbPredRate, stream, TRUE);
  if (useICache)
    info("iCache miss rate: %f",
	 (double)iCache->misses/max(iCache->hits + iCache->misses, 1));
  info("dCache miss rate: %f",
       (double)dCache->misses/max(dCache->hits + dCache->misses, 1));
  info("detected %lu WAW stalls", WAWstalls);
  info("direct TLB accesses = %.0f of %.0f (%f%%)",
       (double)directTLBAccess, (double)TLBAccess,
       ((double)directTLBAccess/(double)TLBAccess)*100.0);
  info("elided TLB accesses = %.0f of %.0f (%f%%) (%f%% of indirect)",
       (double)elidedTLBAccess, (double)TLBAccess,
       ((double)elidedTLBAccess/(double)TLBAccess)*100.0,
       ((double)elidedTLBAccess/(double)(TLBAccess-directTLBAccess))*100.0);
  info("required TLB accesses = %.0f of %.0f (%f%%)",
       (double)(TLBAccess - (directTLBAccess+elidedTLBAccess)),
       (double)TLBAccess,
       ((double)(TLBAccess - (directTLBAccess+elidedTLBAccess)) /
	(double)TLBAccess) * 100.0);
  info("pre-translation revivals = %.0f or %.0f (%f%%)",
       (double)invalidNoOverrun,
       (double)invalidNoOverrun+(double)invalidOverrun,
       ((double)invalidNoOverrun /
	((double)invalidNoOverrun+(double)invalidOverrun)) * 100.0);
  info("total double valid ALU ops = %.0f", (double)doubleValid);
  fprintf(stream, "nRefs      = %15.0f (100.00%%) {%.0fr/%.0fw}\n",
	  (double)nRefs, (double)nReads, (double)(nRefs - nReads));
  fprintf(stream, "nDirectLds = %15.0f (%6.2f%%)\n",
	  (double)nDirectLoads,
	  100.0 * (double)nDirectLoads/(double)nRefs);
  fprintf(stream, "nDirectSts = %15.0f (%6.2f%%)\n",
	  (double)nDirectStores,
	  100.0 * (double)nDirectStores/(double)nRefs);
  fprintf(stream, "nRRLoads   = %15.0f (%6.2f%%)\n",
	  (double)nRRLoads,
	  100.0 * (double)nRRLoads/(double)nRefs);
  fprintf(stream, "nRRStores  = %15.0f (%6.2f%%)\n",
	  (double)nRRStores,
	  100.0 * (double)nRRStores/(double)nRefs);
  fprintf(stream, "nFailedLdJams = %15.0f (%6.2f%%)\n",
	  (double)nFailedLdJams,
	  100.0 * (double)nFailedLdJams/(double)nReads);
  fprintf(stream, "nFailedStJams = %15.0f (%6.2f%%)\n",
	  (double)nFailedStJams,
	  100.0 * (double)nFailedStJams/(double)(nRefs - nReads));
  sum = nDirMode + nJamMode + nPCalcMode + nDualMode;
  fprintf(stream, "nDirMode      = %15.0f (%6.2f%%)\n",
	  (double)nDirMode, 100.0 * (double)nDirMode/(double)sum);
  fprintf(stream, "nJamMode      = %15.0f (%6.2f%%)\n",
	  (double)nJamMode, 100.0 * (double)nJamMode/(double)sum);
  fprintf(stream, "nPCalcMode    = %15.0f (%6.2f%%)\n",
	  (double)nPCalcMode, 100.0 * (double)nPCalcMode/(double)sum);
  fprintf(stream, "nDualMode     = %15.0f (%6.2f%%)\n",
	  (double)nDualMode, 100.0 * (double)nDualMode/(double)sum);
  fprintf(stream, "nNotFailed    = %15.0f\n", (double)nRefs);
  fprintf(stream, "nFailedInEX    = %15.0f\n", (double)nFailedInEX);
  DumpPipeStats(stream);
}

void
SuperSim(void)
{
  info("starting superscalar simulation");

  /* build the caches */
  iCache = CreateCache(&iCacheParams, TRUE);
  dCache = CreateCache(&dCacheParams, TRUE);

  /* compute the shift count needed to do a "% numIssue" */
  niMask = numIssue-1;
  debug("numIssue = %d, niMask = %x", numIssue, niMask);

  /* initialize simulation probes */
  btbHitRate = ProbeCreate("BTB hit rate", Mean);
  btbPredRate = ProbeCreate("BTB pred accuracy", Mean);

  /* initialize the processor state */
  InitPreciseState();
  BuildMaskMap();
  InitFUMap();
  InitBTB(1024);
  InitEventQueue();
  InitWriteBack();
  InitExecute();
  InitIDecode();
  InitTLB();
  ResetPipeStats();

  PC = progEntry;
  cycle = 0;

  while (1) {

    if (dumpStats) {
      DumpPreciseState(stderr);
      DumpFinalStats(stderr);
      dumpStats = FALSE;
    }

    if (verbose && cycle >= verbose)
      DumpPipeState();

#if 0    /* check for deadlock conditions */
    if (!evQueue && !RSEmpty(busy))
      fatal("event queue is empty and busy bits are set");
#endif

    WriteBack();
    Execute();
    stallIssue = FALSE;
    IDecode();
    /* IFetch() could stall on an i-cache miss, but that is currently
       not supported */
    if (stalledStore)
      stalledStore = FALSE;
    if (stalledLoad)
      stalledLoad = FALSE;
    IFetch();

    cbreak(PC == breakAddr);

    numCycles++; cycle++;
  }
}
      return (VOID *) p;
  return 0;
}
#endif
    
/* Define flags declared in grep.h. */
char *matcher;
int match_icase;
int match_words;
int match_lines;

/* Functions we'll use to search. */
static void (*compile)();
static char *(*execute)();

/* For error messages. */
static char *prog;
static char *filename;
static int errseen;

/* Print a message and possibly an error string.  Remember
   that something awful happened. */
static void
error(mesg, errnum)
#ifdef __STDC__
     const
#endif
     char *mesg;
     int errnum;
{
  if (errnum)
    fprintf(stderr, "%s: %s: %s\n", prog, mesg, strerror(errnum));
  else
    fprintf(stderr, "%s: %s\n", prog, mesg);
  errseen = 1;
}

/* Like error(), but die horribly after printing. */
void
fatal(mesg, errnum)
#ifdef __STDC__
     const
#endif
     char *mesg;
     int errnum;
{
  error(mesg, errnum);
  exit(2);
}

/* Interface to handle errors and fix library lossage. */
char *
xmalloc(size)
     size_t size;
{
  char *result;

  result = malloc(size);
  if (size && !result)
    fatal("memory exhausted", 0);
  return result;
}

/* Interface to handle errors and fix some library lossage. */
char *
xrealloc(ptr, size)
     char *ptr;
     size_t size;
{
  char *result;

  if (ptr)
    result = realloc(ptr, size);
  else
    result = malloc(size);
  if (size && !result)
    fatal("memory exhausted", 0);
  return result;
}

#if !defined(HAVE_VALLOC)
#define valloc malloc
#else
#ifdef __STDC__
extern void *valloc(size_t);
#else
extern char *valloc();
#endif
#endif

/* Hairy buffering mechanism for grep.  The intent is to keep
   all reads aligned on a page boundary and multiples of the
   page size. */

static char *buffer;		/* Base of buffer. */
static size_t bufsalloc;	/* Allocated size of buffer save region. */
static size_t bufalloc;		/* Total buffer size. */
static int bufdesc;		/* File descriptor. */
static char *bufbeg;		/* Beginning of user-visible stuff. */
static char *buflim;		/* Limit of user-visible stuff. */

#if defined(HAVE_WORKING_MMAP)
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/mman.h>

static int bufmapped;		/* True for ordinary files. */
static struct stat bufstat;	/* From fstat(). */
static off_t bufoffset;		/* What read() normally remembers. */
#endif

/* Reset the buffer for a new file.  Initialize
   on the first time through. */
void
reset(fd)
     int fd;
{
  static int initialized;

  if (!initialized)
    {
      initialized = 1;
#ifndef BUFSALLOC
      bufsalloc = MAX(8192, getpagesize());
#else
      bufsalloc = BUFSALLOC;
#endif
      bufalloc = 5 * bufsalloc;
      /* The 1 byte of overflow is a kludge for dfaexec(), which
	 inserts a sentinel newline at the end of the buffer
	 being searched.  There's gotta be a better way... */
      buffer = valloc(bufalloc + 1);
      if (!buffer)
	fatal("memory exhausted", 0);
      bufbeg = buffer;
      buflim = buffer;
    }
  bufdesc = fd;
#if defined(HAVE_WORKING_MMAP)
  if (fstat(fd, &bufstat) < 0 || !S_ISREG(bufstat.st_mode))
    bufmapped = 0;
  else
    {
      bufmapped = 1;
      bufoffset = lseek(fd, 0, 1);
    }
#endif
}

/* Read new stuff into the buffer, saving the specified
   amount of old stuff.  When we're done, 'bufbeg' points
   to the beginning of the buffer contents, and 'buflim'
   points just after the end.  Return count of new stuff. */
static int
fillbuf(save)
     size_t save;
{
  char *nbuffer, *dp, *sp;
  int cc;
#if defined(HAVE_WORKING_MMAP)
  caddr_t maddr;
#endif
  static int pagesize;

  if (pagesize == 0 && (pagesize = getpagesize()) == 0)
    abort();

  if (save > bufsalloc)
    {
      while (save > bufsalloc)
	bufsalloc *= 2;
      bufalloc = 5 * bufsalloc;
      nbuffer = valloc(bufalloc + 1);
      if (!nbuffer)
	fatal("memory exhausted", 0);
    }
  else
    nbuffer = buffer;

  sp = buflim - save;
  dp = nbuffer + bufsalloc - save;
  bufbeg = dp;
  while (save--)
    *dp++ = *sp++;

  /* We may have allocated a new, larger buffer.  Since
     there is no portable vfree(), we just have to forget
     about the old one.  Sorry. */
  buffer = nbuffer;

#if defined(HAVE_WORKING_MMAP)
  if (bufmapped && bufoffset % pagesize == 0
      && bufstat.st_size - bufoffset >= bufalloc - bufsalloc)
    {
      maddr = buffer + bufsalloc;
      maddr = mmap(maddr, bufalloc - bufsalloc, PROT_READ | PROT_WRITE,
		   MAP_PRIVATE | MAP_FIXED, bufdesc, bufoffset);
      if (maddr == (caddr_t) -1)
	{
	  fprintf(stderr, "%s: warning: %s: %s\n", filename,
		  strerror(errno));
	  goto tryread;
	}
#if 0
      /* You might thing this (or MADV_WILLNEED) would help,
	 but it doesn't, at least not on a Sun running 4.1.
	 In fact, it actually slows us down about 30%! */
      madvise(maddr, bufalloc - bufsalloc, MADV_SEQUENTIAL);
#endif
      cc = bufalloc - bufsalloc;
      bufoffset += cc;
    }
  else
    {
    tryread:
      /* We come here when we're not going to use mmap() any more.
	 Note that we need to synchronize the file offset the
	 first time through. */
      if (bufmapped)
	{
	  bufmapped = 0;
	  lseek(bufdesc, bufoffset, 0);
	}
      cc = read(bufdesc, buffer + bufsalloc, bufalloc - bufsalloc);
    }
#else
  cc = read(bufdesc, buffer + bufsalloc, bufalloc - bufsalloc);
#endif
  if (cc > 0)
    buflim = buffer + bufsalloc + cc;
  else
    buflim = buffer + bufsalloc;
  return cc;
}

/* Flags controlling the style of output. */
static int out_quiet;		/* Suppress all normal output. */
static int out_invert;		/* Print nonmatching stuff. */
static int out_file;		/* Print filenames. */
static int out_line;		/* Print line numbers. */
static int out_byte;		/* Print byte offsets. */
static int out_before;		/* Lines of leading context. */
static int out_after;		/* Lines of trailing context. */

/* Internal variables to keep track of byte count, context, etc. */
static size_t totalcc;		/* Total character count before bufbeg. */
static char *lastnl;		/* Pointer after last newline counted. */
static char *lastout;		/* Pointer after last character output;
				   NULL if no character has been output
				   or if it's conceptually before bufbeg. */
static size_t totalnl;		/* Total newline count before lastnl. */
static int pending;		/* Pending lines of output. */

static void
nlscan(lim)
     char *lim;
{
  char *beg;

  for (beg = lastnl; beg < lim; ++beg)
    if (*beg == '\n')
      ++totalnl;
  lastnl = beg;
}

static void
prline(beg, lim, sep)
     char *beg;
     char *lim;
     char sep;
{
  if (out_file)
    printf("%s%c", filename, sep);
  if (out_line)
    {
      nlscan(beg);
      printf("%d%c", ++totalnl, sep);
      lastnl = lim;
    }
  if (out_byte)
    printf("%lu%c", totalcc + (beg - bufbeg), sep);
  fwrite(beg, 1, lim - beg, stdout);
  if (ferror(stdout))
    error("writing output", errno);
  lastout = lim;
}

/* Print pending lines of trailing context prior to LIM. */
static void
prpending(lim)
     char *lim;
{
  char *nl;

  if (!lastout)
    lastout = bufbeg;
  while (pending > 0 && lastout < lim)
    {
      --pending;
      if ((nl = memchr(lastout, '\n', lim - lastout)) != 0)
	++nl;
      else
	nl = lim;
      prline(lastout, nl, '-');
    }
}

/* Print the lines between BEG and LIM.  Deal with context crap.
   If NLINESP is non-null, store a count of lines between BEG and LIM. */
static void
prtext(beg, lim, nlinesp)
     char *beg;
     char *lim;
     int *nlinesp;
{
  static int used;		/* avoid printing "--" before any output */
  char *bp, *p, *nl;
  int i, n;

  if (!out_quiet && pending > 0)
    prpending(beg);

  p = beg;

  if (!out_quiet)
    {
      /* Deal with leading context crap. */

      bp = lastout ? lastout : bufbeg;
      for (i = 0; i < out_before; ++i)
	if (p > bp)
	  do
	    --p;
	  while (p > bp && p[-1] != '\n');

      /* We only print the "--" separator if our output is
	 discontiguous from the last output in the file. */
      if ((out_before || out_after) && used && p != lastout)
	puts("--");

      while (p < beg)
	{
	  nl = memchr(p, '\n', beg - p);
	  prline(p, nl + 1, '-');
	  p = nl + 1;
	}
    }

  if (nlinesp)
    {
      /* Caller wants a line count. */
      for (n = 0; p < lim; ++n)
	{
	  if ((nl = memchr(p, '\n', lim - p)) != 0)
	    ++nl;
	  else
	    nl = lim;
	  if (!out_quiet)
	    prline(p, nl, ':');
	  p = nl;
	}
      *nlinesp = n;
    }
  else
    if (!out_quiet)
      prline(beg, lim, ':');

  pending = out_after;
  used = 1;
}

/* Scan the specified portion of the buffer, matching lines (or
   between matching lines if OUT_INVERT is true).  Return a count of
   lines printed. */
static int
grepbuf(beg, lim)
     char *beg;
     char *lim;
{
  int nlines, n;
  register char *p, *b;
  char *endp;

  nlines = 0;
  p = beg;
  while ((b = (*execute)(p, lim - p, &endp)) != 0)
    {
      /* Avoid matching the empty line at the end of the buffer. */
      if (b == lim && ((b > beg && b[-1] == '\n') || b == beg))
	break;
      if (!out_invert)
	{
	  prtext(b, endp, (int *) 0);
	  nlines += 1;
	}
      else if (p < b)
	{
	  prtext(p, b, &n);
	  nlines += n;
	}
      p = endp;
    }
  if (out_invert && p < lim)
    {
      prtext(p, lim, &n);
      nlines += n;
    }
  return nlines;
}

/* Search a given file.  Return a count of lines printed. */
static int
grep(fd)
     int fd;
{
  int nlines, i;
  size_t residue, save;
  char *beg, *lim;

  reset(fd);

  totalcc = 0;
  lastout = 0;
  totalnl = 0;
  pending = 0;

  nlines = 0;
  residue = 0;
  save = 0;

  for (;;)
    {
      if (fillbuf(save) < 0)
	{
	  error(filename, errno);
	  return nlines;
	}
      lastnl = bufbeg;
      if (lastout)
	lastout = bufbeg;
      if (buflim - bufbeg == save)
	break;
      beg = bufbeg + save - residue;
      for (lim = buflim; lim > beg && lim[-1] != '\n'; --lim)
	;
      residue = buflim - lim;
      if (beg < lim)
	{
	  nlines += grepbuf(beg, lim);
	  if (pending)
	    prpending(lim);
	}
      i = 0;
      beg = lim;
      while (i < out_before && beg > bufbeg && beg != lastout)
	{
	  ++i;
	  do
	    --beg;
	  while (beg > bufbeg && beg[-1] != '\n');
	}
      if (beg != lastout)
	lastout = 0;
      save = residue + lim - beg;
      totalcc += buflim - bufbeg - save;
      if (out_line)
	nlscan(beg);
    }
  if (residue)
    {
      nlines += grepbuf(bufbeg + save - residue, buflim);
      if (pending)
	prpending(buflim);
    }
  return nlines;
}

static char version[] = "GNU grep version 2.0";

#define USAGE \
  "usage: %s [-[[AB] ]<num>] [-[CEFGVchilnqsvwx]] [-[ef]] <expr> [<files...>]\n"

static void
usage()
{
  fprintf(stderr, USAGE, prog);
  exit(2);
}

/* Go through the matchers vector and look for the specified matcher.
   If we find it, install it in compile and execute, and return 1.  */
int
setmatcher(name)
     char *name;
{
  int i;

  for (i = 0; matchers[i].name; ++i)
    if (strcmp(name, matchers[i].name) == 0)
      {
	compile = matchers[i].compile;
	execute = matchers[i].execute;
	return 1;
      }
  return 0;
}  

int
main(argc, argv)
     int argc;
     char *argv[];
{
  char *keys;
  size_t keycc, oldcc, keyalloc;
  int keyfound, count_matches, no_filenames, list_files, suppress_errors;
  int opt, cc, desc, count, status;
  FILE *fp;
  extern char *optarg;
  extern int optind;

  prog = argv[0];
  if (prog && strrchr(prog, '/'))
    prog = strrchr(prog, '/') + 1;

  keys = NULL;
  keycc = 0;
  keyfound = 0;
  count_matches = 0;
  no_filenames = 0;
  list_files = 0;
  suppress_errors = 0;
  matcher = NULL;

  while ((opt = getopt(argc, argv, "0123456789A:B:CEFGVX:bce:f:hiLlnqsvwxy"))
	 != EOF)
    switch (opt)
      {
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
	out_before = 10 * out_before + opt - '0';
	out_after = 10 * out_after + opt - '0';
	break;
      case 'A':
	out_after = atoi(optarg);
	if (out_after < 0)
	  usage();
	break;
      case 'B':
	out_before = atoi(optarg);
	if (out_before < 0)
	  usage();
	break;
      case 'C':
	out_before = out_after = 2;
	break;
      case 'E':
	if (matcher && strcmp(matcher, "egrep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);
	matcher = "posix-egrep";
	break;
      case 'F':
	if (matcher && strcmp(matcher, "fgrep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);;
	matcher = "fgrep";
	break;
      case 'G':
	if (matcher && strcmp(matcher, "grep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);
	matcher = "grep";
	break;
      case 'V':
	fprintf(stderr, "%s\n", version);
	break;
      case 'X':
	if (matcher)
	  fatal("matcher already specified", 0);
	matcher = optarg;
	break;
      case 'b':
	out_byte = 1;
	break;
      case 'c':
	out_quiet = 1;
	count_matches = 1;
	break;
      case 'e':
	cc = strlen(optarg);
	keys = xrealloc(keys, keycc + cc + 1);
	if (keyfound)
	  keys[keycc++] = '\n';
	strcpy(&keys[keycc], optarg);
	keycc += cc;
	keyfound = 1;
	break;
      case 'f':
	fp = strcmp(optarg, "-") != 0 ? fopen(optarg, "r") : stdin;
	if (!fp)
	  fatal(optarg, errno);
	for (keyalloc = 1; keyalloc <= keycc; keyalloc *= 2)
	  ;
	keys = xrealloc(keys, keyalloc);
	oldcc = keycc;
	if (keyfound)
	  keys[keycc++] = '\n';
	while (!feof(fp)
	       && (cc = fread(keys + keycc, 1, keyalloc - keycc, fp)) > 0)
	  {
	    keycc += cc;
	    if (keycc == keyalloc)
	      keys = xrealloc(keys, keyalloc *= 2);
	  }
	if (fp != stdin)
	  fclose(fp);
	/* Nuke the final newline to avoid matching a null string. */
	if (keycc - oldcc > 0 && keys[keycc - 1] == '\n')
	  --keycc;
	keyfound = 1;
	break;
      case 'h':
	no_filenames = 1;
	break;
      case 'i':
      case 'y':			/* For old-timers . . . */
	match_icase = 1;
	break;
      case 'L':
	/* Like -l, except list files that don't contain matches.
	   Inspired by the same option in Hume's gre. */
	out_quiet = 1;
	list_files = -1;
	break;
      case 'l':
	out_quiet = 1;
	list_files = 1;
	break;
      case 'n':
	out_line = 1;
	break;
      case 'q':
	out_quiet = 1;
	break;
      case 's':
	suppress_errors = 1;
	break;
      case 'v':
	out_invert = 1;
	break;
      case 'w':
	match_words = 1;
	break;
      case 'x':
	match_lines = 1;
	break;
      default:
	usage();
	break;
      }

  if (!keyfound)
    if (optind < argc)
      {
	keys = argv[optind++];
	keycc = strlen(keys);
      }
    else
      usage();

  if (!matcher)
    matcher = prog;

  if (!setmatcher(matcher) && !setmatcher("default"))
    abort();

  (*compile)(keys, keycc);

  if (argc - optind > 1 && !no_filenames)
    out_file = 1;

  status = 1;

  if (optind < argc)
    while (optind < argc)
      {
	desc = strcmp(argv[optind], "-") ? open(argv[optind], O_RDONLY) : 0;
	if (desc < 0)
	  {
	    if (!suppress_errors)
	      error(argv[optind], errno);
	  }
	else
	  {
	    filename = desc == 0 ? "(standard input)" : argv[optind];
	    count = grep(desc);
	    if (count_matches)
	      {
		if (out_file)
		  printf("%s:", filename);
		printf("%d\n", count);
	      }
	    if (count)
	      {
		status = 0;
		if (list_files == 1)
		  printf("%s\n", filename);
	      }
	    else if (list_files == -1)
	      printf("%s\n", filename);
	  }
	if (desc != 0)
	  close(desc);
	++optind;
      }
  else
    {
      filename = "(standard input)";
      count = grep(0);
      if (count_matches)
	printf("%d\n", count);
      if (count)
	{
	  status = 0;
	  if (list_files == 1)
	    printf("(standard input)\n");
	}
      else if (list_files == -1)
	printf("(standard input)\n");
    }

  exit(errseen ? 2 : status);
}
9)  Moamar al-Gaddafi
10) Mu'ammar Al Qathafi
11) Muammar Al Qathafi
12) Mo'ammar el-Gadhafi
13) Moamar El Kadhafi
14) Muammar al-Qadhafi
15) Mu'ammar al-Qadhdhafi
16) Mu'ammar Qadafi
17) Moamar Gaddafi
18) Mu'ammar Qadhdhafi
19) Muammar Khaddafi
20) Muammar al-Khaddafi
21) Mu'amar al-Kadafi
/* Getopt for GNU.
   NOTE: getopt is now part of the C library, so if you don't know what
   "Keep this file name-space clean" means, talk to roland@gnu.ai.mit.edu
   before changing it!

   Copyright (C) 1987, 88, 89, 90, 91, 92, 1993
   	Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by the
   Free Software Foundation; either version 2, or (at your option) any
   later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

/* NOTE!!!  AIX requires this to be the first thing in the file.
   Do not put ANYTHING before it!  */
#if !defined (__GNUC__) && defined (_AIX)
 #pragma alloca
#endif

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __GNUC__
#define alloca __builtin_alloca
#else /* not __GNUC__ */
#if defined (HAVE_ALLOCA_H) || (defined(sparc) && (defined(sun) || (!defined(USG) && !defined(SVR4) && !defined(__svr4__))))
#include <alloca.h>
#else
#ifndef _AIX
char *alloca ();
#endif
#endif /* alloca.h */
#endif /* not __GNUC__ */

#if !__STDC__ && !defined(const) && IN_GCC
#define const
#endif

/* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.  */
#ifndef _NO_PROTO
#define _NO_PROTO
#endif

#include <stdio.h>

/* Comment out all this code if we are using the GNU C Library, and are not
   actually compiling the library itself.  This code is part of the GNU C
   Library, but also included in many other GNU distributions.  Compiling
   and linking in this code is a waste when using the GNU C library
   (especially if it is a shared library).  Rather than having every GNU
   program understand `configure --with-gnu-libc' and omit the object files,
   it is simpler to just do this in the source for each such file.  */

#if defined (_LIBC) || !defined (__GNU_LIBRARY__)


/* This needs to come after some library #include
   to get __GNU_LIBRARY__ defined.  */
#ifdef	__GNU_LIBRARY__
#undef	alloca
/* Don't include stdlib.h for non-GNU C libraries because some of them
   contain conflicting prototypes for getopt.  */
#include <stdlib.h>
#else	/* Not GNU C library.  */
#define	__alloca	alloca
#endif	/* GNU C library.  */

/* If GETOPT_COMPAT is defined, `+' as well as `--' can introduce a
   long-named option.  Because this is not POSIX.2 compliant, it is
   being phased out.  */
/* #define GETOPT_COMPAT */

/* This version of `getopt' appears to the caller like standard Unix `getopt'
   but it behaves differently for the user, since it allows the user
   to intersperse the options with the other arguments.

   As `getopt' works, it permutes the elements of ARGV so that,
   when it is done, all the options precede everything else.  Thus
   all application programs are extended to handle flexible argument order.

   Setting the environment variable POSIXLY_CORRECT disables permutation.
   Then the behavior is completely standard.

   GNU application programs can use a third alternative mode in which
   they can distinguish the relative order of options and other arguments.  */

#include "getopt.h"

/* For communication from `getopt' to the caller.
   When `getopt' finds an option that takes an argument,
   the argument value is returned here.
   Also, when `ordering' is RETURN_IN_ORDER,
   each non-option ARGV-element is returned here.  */

char *optarg = 0;

/* Index in ARGV of the next element to be scanned.
   This is used for communication to and from the caller
   and for communication between successive calls to `getopt'.

   On entry to `getopt', zero means this is the first call; initialize.

   When `getopt' returns EOF, this is the index of the first of the
   non-option elements that the caller should itself scan.

   Otherwise, `optind' communicates from one call to the next
   how much of ARGV has been scanned so far.  */

/* XXX 1003.2 says this must be 1 before any call.  */
int optind = 0;

/* The next char to be scanned in the option-element
   in which the last option character we returned was found.
   This allows us to pick up the scan where we left off.

   If this is zero, or a null string, it means resume the scan
   by advancing to the next ARGV-element.  */

static char *nextchar;

/* Callers store zero here to inhibit the error message
   for unrecognized options.  */

int opterr = 1;

/* Set to an option character which was unrecognized.
   This must be initialized on some systems to avoid linking in the
   system's own getopt implementation.  */

int optopt = '?';

/* Describe how to deal with options that follow non-option ARGV-elements.

   If the caller did not specify anything,
   the default is REQUIRE_ORDER if the environment variable
   POSIXLY_CORRECT is defined, PERMUTE otherwise.

   REQUIRE_ORDER means don't recognize them as options;
   stop option processing when the first non-option is seen.
   This is what Unix does.
   This mode of operation is selected by either setting the environment
   variable POSIXLY_CORRECT, or using `+' as the first character
   of the list of option characters.

   PERMUTE is the default.  We permute the contents of ARGV as we scan,
   so that eventually all the non-options are at the end.  This allows options
   to be given in any order, even with programs that were not written to
   expect this.

   RETURN_IN_ORDER is an option available to programs that were written
   to expect options and other ARGV-elements in any order and that care about
   the ordering of the two.  We describe each non-option ARGV-element
   as if it were the argument of an option with character code 1.
   Using `-' as the first character of the list of option characters
   selects this mode of operation.

   The special argument `--' forces an end of option-scanning regardless
   of the value of `ordering'.  In the case of RETURN_IN_ORDER, only
   `--' can cause `getopt' to return EOF with `optind' != ARGC.  */

static enum
{
  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER
} ordering;

#ifdef	__GNU_LIBRARY__
/* We want to avoid inclusion of string.h with non-GNU libraries
   because there are many ways it can cause trouble.
   On some systems, it contains special magic macros that don't work
   in GCC.  */
#include <string.h>
#define	my_index	strchr
#define	my_bcopy(src, dst, n)	memcpy ((dst), (src), (n))
#else

/* Avoid depending on library functions or files
   whose names are inconsistent.  */

char *getenv ();

static char *
my_index (str, chr)
     const char *str;
     int chr;
{
  while (*str)
    {
      if (*str == chr)
	return (char *) str;
      str++;
    }
  return 0;
}

static void
my_bcopy (from, to, size)
     const char *from;
     char *to;
     int size;
{
  int i;
  for (i = 0; i < size; i++)
    to[i] = from[i];
}
#endif				/* GNU C library.  */

/* Handle permutation of arguments.  */

/* Describe the part of ARGV that contains non-options that have
   been skipped.  `first_nonopt' is the index in ARGV of the first of them;
   `last_nonopt' is the index after the last of them.  */

static int first_nonopt;
static int last_nonopt;

/* Exchange two adjacent subsequences of ARGV.
   One subsequence is elements [first_nonopt,last_nonopt)
   which contains all the non-options that have been skipped so far.
   The other is elements [last_nonopt,optind), which contains all
   the options processed since those non-options were skipped.

   `first_nonopt' and `last_nonopt' are relocated so that they describe
   the new indices of the non-options in ARGV after they are moved.  */

static void
exchange (argv)
     char **argv;
{
  int nonopts_size = (last_nonopt - first_nonopt) * sizeof (char *);
  char **temp = (char **) __alloca (nonopts_size);

  /* Interchange the two blocks of data in ARGV.  */

  my_bcopy ((char *) &argv[first_nonopt], (char *) temp, nonopts_size);
  my_bcopy ((char *) &argv[last_nonopt], (char *) &argv[first_nonopt],
	    (optind - last_nonopt) * sizeof (char *));
  my_bcopy ((char *) temp,
	    (char *) &argv[first_nonopt + optind - last_nonopt],
	    nonopts_size);

  /* Update records for the slots the non-options now occupy.  */

  first_nonopt += (optind - last_nonopt);
  last_nonopt = optind;
}

/* Scan elements of ARGV (whose length is ARGC) for option characters
   given in OPTSTRING.

   If an element of ARGV starts with '-', and is not exactly "-" or "--",
   then it is an option element.  The characters of this element
   (aside from the initial '-') are option characters.  If `getopt'
   is called repeatedly, it returns successively each of the option characters
   from each of the option elements.

   If `getopt' finds another option character, it returns that character,
   updating `optind' and `nextchar' so that the next call to `getopt' can
   resume the scan with the following option character or ARGV-element.

   If there are no more option characters, `getopt' returns `EOF'.
   Then `optind' is the index in ARGV of the first ARGV-element
   that is not an option.  (The ARGV-elements have been permuted
   so that those that are not options now come last.)

   OPTSTRING is a string containing the legitimate option characters.
   If an option character is seen that is not listed in OPTSTRING,
   return '?' after printing an error message.  If you set `opterr' to
   zero, the error message is suppressed but we still return '?'.

   If a char in OPTSTRING is followed by a colon, that means it wants an arg,
   so the following text in the same ARGV-element, or the text of the following
   ARGV-element, is returned in `optarg'.  Two colons mean an option that
   wants an optional arg; if there is text in the current ARGV-element,
   it is returned in `optarg', otherwise `optarg' is set to zero.

   If OPTSTRING starts with `-' or `+', it requests different methods of
   handling the non-option ARGV-elements.
   See the comments about RETURN_IN_ORDER and REQUIRE_ORDER, above.

   Long-named options begin with `--' instead of `-'.
   Their names may be abbreviated as long as the abbreviation is unique
   or is an exact match for some defined option.  If they have an
   argument, it follows the option name in the same ARGV-element, separated
   from the option name by a `=', or else the in next ARGV-element.
   When `getopt' finds a long-named option, it returns 0 if that option's
   `flag' field is nonzero, the value of the option's `val' field
   if the `flag' field is zero.

   The elements of ARGV aren't really const, because we permute them.
   But we pretend they're const in the prototype to be compatible
   with other systems.

   LONGOPTS is a vector of `struct option' terminated by an
   element containing a name which is zero.

   LONGIND returns the index in LONGOPT of the long-named option found.
   It is only valid when a long-named option has been found by the most
   recent call.

   If LONG_ONLY is nonzero, '-' as well as '--' can introduce
   long-named options.  */

int
_getopt_internal (argc, argv, optstring, longopts, longind, long_only)
     int argc;
     char *const *argv;
     const char *optstring;
     const struct option *longopts;
     int *longind;
     int long_only;
{
  int option_index;

  optarg = 0;

  /* Initialize the internal data when the first call is made.
     Start processing options with ARGV-element 1 (since ARGV-element 0
     is the program name); the sequence of previously skipped
     non-option ARGV-elements is empty.  */

  if (optind == 0)
    {
      first_nonopt = last_nonopt = optind = 1;

      nextchar = NULL;

      /* Determine how to handle the ordering of options and nonoptions.  */

      if (optstring[0] == '-')
	{
	  ordering = RETURN_IN_ORDER;
	  ++optstring;
	}
      else if (optstring[0] == '+')
	{
	  ordering = REQUIRE_ORDER;
	  ++optstring;
	}
      else if (getenv ("POSIXLY_CORRECT") != NULL)
	ordering = REQUIRE_ORDER;
      else
	ordering = PERMUTE;
    }

  if (nextchar == NULL || *nextchar == '\0')
    {
      if (ordering == PERMUTE)
	{
	  /* If we have just processed some options following some non-options,
	     exchange them so that the options come first.  */

	  if (first_nonopt != last_nonopt && last_nonopt != optind)
	    exchange ((char **) argv);
	  else if (last_nonopt != optind)
	    first_nonopt = optind;

	  /* Now skip any additional non-options
	     and extend the range of non-options previously skipped.  */

	  while (optind < argc
		 && (argv[optind][0] != '-' || argv[optind][1] == '\0')
#ifdef GETOPT_COMPAT
		 && (longopts == NULL
		     || argv[optind][0] != '+' || argv[optind][1] == '\0')
#endif				/* GETOPT_COMPAT */
		 )
	    optind++;
	  last_nonopt = optind;
	}

      /* Special ARGV-element `--' means premature end of options.
	 Skip it like a null option,
	 then exchange with previous non-options as if it were an option,
	 then skip everything else like a non-option.  */

      if (optind != argc && !strcmp (argv[optind], "--"))
	{
	  optind++;

	  if (first_nonopt != last_nonopt && last_nonopt != optind)
	    exchange ((char **) argv);
	  else if (first_nonopt == last_nonopt)
	    first_nonopt = optind;
	  last_nonopt = argc;

	  optind = argc;
	}

      /* If we have done all the ARGV-elements, stop the scan
	 and back over any non-options that we skipped and permuted.  */

      if (optind == argc)
	{
	  /* Set the next-arg-index to point at the non-options
	     that we previously skipped, so the caller will digest them.  */
	  if (first_nonopt != last_nonopt)
	    optind = first_nonopt;
	  return EOF;
	}

      /* If we have come to a non-option and did not permute it,
	 either stop the scan or describe it to the caller and pass it by.  */

      if ((argv[optind][0] != '-' || argv[optind][1] == '\0')
#ifdef GETOPT_COMPAT
	  && (longopts == NULL
	      || argv[optind][0] != '+' || argv[optind][1] == '\0')
#endif				/* GETOPT_COMPAT */
	  )
	{
	  if (ordering == REQUIRE_ORDER)
	    return EOF;
	  optarg = argv[optind++];
	  return 1;
	}

      /* We have found another option-ARGV-element.
	 Start decoding its characters.  */

      nextchar = (argv[optind] + 1
		  + (longopts != NULL && argv[optind][1] == '-'));
    }

  if (longopts != NULL
      && ((argv[optind][0] == '-'
	   && (argv[optind][1] == '-' || long_only))
#ifdef GETOPT_COMPAT
	  || argv[optind][0] == '+'
#endif				/* GETOPT_COMPAT */
	  ))
    {
      const struct option *p;
      char *s = nextchar;
      int exact = 0;
      int ambig = 0;
      const struct option *pfound = NULL;
      int indfound;

      while (*s && *s != '=')
	s++;

      /* Test all options for either exact match or abbreviated matches.  */
      for (p = longopts, option_index = 0; p->name;
	   p++, option_index++)
	if (!strncmp (p->name, nextchar, s - nextchar))
	  {
	    if (s - nextchar == strlen (p->name))
	      {
		/* Exact match found.  */
		pfound = p;
		indfound = option_index;
		exact = 1;
		break;
	      }
	    else if (pfound == NULL)
	      {
		/* First nonexact match found.  */
		pfound = p;
		indfound = option_index;
	      }
	    else
	      /* Second nonexact match found.  */
	      ambig = 1;
	  }

      if (ambig && !exact)
	{
	  if (opterr)
	    fprintf (stderr, "%s: option `%s' is ambiguous\n",
		     argv[0], argv[optind]);
	  nextchar += strlen (nextchar);
	  optind++;
	  return '?';
	}

      if (pfound != NULL)
	{
	  option_index = indfound;
	  optind++;
	  if (*s)
	    {
	      /* Don't test has_arg with >, because some C compilers don't
		 allow it to be used on enums.  */
	      if (pfound->has_arg)
		optarg = s + 1;
	      else
		{
		  if (opterr)
		    {
		      if (argv[optind - 1][1] == '-')
			/* --option */
			fprintf (stderr,
				 "%s: option `--%s' doesn't allow an argument\n",
				 argv[0], pfound->name);
		      else
			/* +option or -option */
			fprintf (stderr,
			     "%s: option `%c%s' doesn't allow an argument\n",
			     argv[0], argv[optind - 1][0], pfound->name);
		    }
		  nextchar += strlen (nextchar);
		  return '?';
		}
	    }
	  else if (pfound->has_arg == 1)
	    {
	      if (optind < argc)
		optarg = argv[optind++];
	      else
		{
		  if (opterr)
		    fprintf (stderr, "%s: option `%s' requires an argument\n",
			     argv[0], argv[optind - 1]);
		  nextchar += strlen (nextchar);
		  return optstring[0] == ':' ? ':' : '?';
		}
	    }
	  nextchar += strlen (nextchar);
	  if (longind != NULL)
	    *longind = option_index;
	  if (pfound->flag)
	    {
	      *(pfound->flag) = pfound->val;
	      return 0;
	    }
	  return pfound->val;
	}
      /* Can't find it as a long option.  If this is not getopt_long_only,
	 or the option starts with '--' or is not a valid short
	 option, then it's an error.
	 Otherwise interpret it as a short option.  */
      if (!long_only || argv[optind][1] == '-'
#ifdef GETOPT_COMPAT
	  || argv[optind][0] == '+'
#endif				/* GETOPT_COMPAT */
	  || my_index (optstring, *nextchar) == NULL)
	{
	  if (opterr)
	    {
	      if (argv[optind][1] == '-')
		/* --option */
		fprintf (stderr, "%s: unrecognized option `--%s'\n",
			 argv[0], nextchar);
	      else
		/* +option or -option */
		fprintf (stderr, "%s: unrecognized option `%c%s'\n",
			 argv[0], argv[optind][0], nextchar);
	    }
	  nextchar = (char *) "";
	  optind++;
	  return '?';
	}
    }

  /* Look at and handle the next option-character.  */

  {
    char c = *nextchar++;
    char *temp = my_index (optstring, c);

    /* Increment `optind' when we start to process its last character.  */
    if (*nextchar == '\0')
      ++optind;

    if (temp == NULL || c == ':')
      {
	if (opterr)
	  {
#if 0
	    if (c < 040 || c >= 0177)
	      fprintf (stderr, "%s: unrecognized option, character code 0%o\n",
		       argv[0], c);
	    else
	      fprintf (stderr, "%s: unrecognized option `-%c'\n", argv[0], c);
#else
	    /* 1003.2 specifies the format of this message.  */
	    fprintf (stderr, "%s: illegal option -- %c\n", argv[0], c);
#endif
	  }
	optopt = c;
	return '?';
      }
    if (temp[1] == ':')
      {
	if (temp[2] == ':')
	  {
	    /* This is an option that accepts an argument optionally.  */
	    if (*nextchar != '\0')
	      {
		optarg = nextchar;
		optind++;
	      }
	    else
	      optarg = 0;
	    nextchar = NULL;
	  }
	else
	  {
	    /* This is an option that requires an argument.  */
	    if (*nextchar != '\0')
	      {
		optarg = nextchar;
		/* If we end this ARGV-element by taking the rest as an arg,
		   we must advance to the next element now.  */
		optind++;
	      }
	    else if (optind == argc)
	      {
		if (opterr)
		  {
#if 0
		    fprintf (stderr, "%s: option `-%c' requires an argument\n",
			     argv[0], c);
#else
		    /* 1003.2 specifies the format of this message.  */
		    fprintf (stderr, "%s: option requires an argument -- %c\n",
			     argv[0], c);
#endif
		  }
		optopt = c;
		if (optstring[0] == ':')
		  c = ':';
		else
		  c = '?';
	      }
	    else
	      /* We already incremented `optind' once;
		 increment it again when taking next ARGV-elt as argument.  */
	      optarg = argv[optind++];
	    nextchar = NULL;
	  }
      }
    return c;
  }
}

int
getopt (argc, argv, optstring)
     int argc;
     char *const *argv;
     const char *optstring;
{
  return _getopt_internal (argc, argv, optstring,
			   (const struct option *) 0,
			   (int *) 0,
			   0);
}

#endif	/* _LIBC or not __GNU_LIBRARY__.  */

#ifdef TEST

/* Compile with -DTEST to make an executable for use in testing
   the above definition of `getopt'.  */

int
main (argc, argv)
     int argc;
     char **argv;
{
  int c;
  int digit_optind = 0;

  while (1)
    {
      int this_option_optind = optind ? optind : 1;

      c = getopt (argc, argv, "abc:d:0123456789");
      if (c == EOF)
	break;

      switch (c)
	{
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	  if (digit_optind != 0 && digit_optind != this_option_optind)
	    printf ("digits occur in two different argv-elements.\n");
	  digit_optind = this_option_optind;
	  printf ("option %c\n", c);
	  break;

	case 'a':
	  printf ("option a\n");
	  break;

	case 'b':
	  printf ("option b\n");
	  break;

	case 'c':
	  printf ("option c with value `%s'\n", optarg);
	  break;

	case '?':
	  break;

	default:
	  printf ("?? getopt returned character code 0%o ??\n", c);
	}
    }

  if (optind < argc)
    {
      printf ("non-option ARGV-elements: ");
      while (optind < argc)
	printf ("%s ", argv[optind++]);
      printf ("\n");
    }

  exit (0);
}

#endif /* TEST */
22) Muammar Ghaddafy
23) Muammar Ghadafi
24) Muammar Ghaddafi
25) Muamar Kaddafi
26) Muammar Quathafi
27) Muammar Gheddafi
28) Muamar Al-Kaddafi
29) Moammar Khadafy
30) Moammar Qudhafi
31) Mu'ammar al-Qaddafi
32) Mulazim Awwal Mu'ammar Muhammad Abu Minyar al-Qadhafi

Article: 9179 of gnu.misc.discuss
Path: daffy!uwvax!uwm.edu!zaphod.mps.ohio-state.edu!usc!enterpoop.mit.edu!ai-lab!life.ai.mit.edu!friedman
From: friedman@gnu.ai.mit.edu (Noah Friedman)
Newsgroups: gnu.misc.discuss
Subject: Re: Why hack?
Date: 23 Mar 93 22:42:09
Organization: Free Software Foundation, 675 Mass Ave. Cambridge, MA 02139
Lines: 182
Message-ID: <FRIEDMAN.93Mar23224209@nutrimat.gnu.ai.mit.edu>
References: <1993Mar22.203522.21684@maths.tcd.ie>
NNTP-Posting-Host: nutrimat.gnu.ai.mit.edu
In-reply-to: tim@maths.tcd.ie's message of Mon, 22 Mar 1993 20:35:22 GMT

In article <1993Mar22.203522.21684@maths.tcd.ie> tim@maths.tcd.ie (Timothy Murphy) writes:
>I wonder if anyone has a copy of Stallman's article "Why Hack?"
>from -- would it be 10? -- years ago.
>
>This was the article where Stallman lambasted computer administrators,
>likening them to the then rulers in E Europe.

I think this might be something of general interest.  It is indeed about 10
years old, and many people may not have seen it. 

Besides, gnu.misc.discuss doesn't have enough flamage yet.  :-)

In general I agree with rms' assertions.  The one exception is that, from
my personal experience, I do not think computer security needs to be an all
or nothing thing.  Moderate levels of security do necessitate some risk,
but that risk can be arbitrarily small (modulo the ability to fix certain
security holes with the source code at hand).

For one, there is a vast difference between internal and external security
in terms of how it affects actual users of a system.  You can keep out
unknowns and still allow great freedom among all the people who have access
to the machine to begin with.  (While I don't approve of proprietary
software, I can see that vendors of proprietary software can't allow
corporate spies onto their systems.)

My general rules of thumb are
   1) Assume minimal security first.  If you don't actually need security,
      you save time and make everyone's lives easier.
   2) Don't waste more time implementing security than you would spend
      recovering the intentional damage from crackers or unintentional
      mistakes by your own users.  Paying a full-time security consultant
      is probably more expensive in the long-run than losing 1 or 2 days of
      work from time to time.
   3) Keep backups.  Do it once a day or more often.  (Backups not only
      insure against intentional damage, but also allow you to recover from
      your own mistakes, hardware failures, and other acts of random
      malevolent dieties.)


Please note that references to the Soviet Union require some context: this
article was written in 1983. 


Here is Stallman's original article:
----------------------------------------------------------------------

Recently the teen-age computer "hacker", the security cracker, has
become a topic of national concern.  But the many articles on the
subject have condemned the cracker without showing the galling aspects
of the way of life he is rebelling against and without questioning its
ethical foundation.  There is no hint that the confused cracker of today
may be resisting, albeit ineffectually, a serious social problem of
tomorrow.

If you look at the social organization of the users on a typical
timeshared computer of today and compare it with other social groups, it
most resembles the Soviet Union.  It is pervaded by suspicion, ruled
arbitrarily by a small oligarchy, and hostile toward outsiders.  This
arouses resentment, which inspires the security crackers.  But the
authoritarian social organization itself is a worse problem than the
crackers are.

Most computer users see no alternative.  I am fortunate in having
experienced one.  At the MIT laboratory where I have worked as a
researcher for ten years, our old computer system treated users as free
equals with a responsibility to cooperate, and guests were welcome.  Our
hospitality guided clever young people to become responsible engineers
rather than crackers.

On the typical computer system, the activities of the ordinary users are
regulated very narrowly and precisely by the elite, who are bound by no
principle of fairness or due process and allow no appeal.  Which files
you can read, which files you cano appeal.  Which files
you can read, which files you can write, how many files you can have,
what programs you can run, how long you can use them, and when you can
log in are under their control.  They can bump you off the computer at
any time.  They can watch what you type as you use the computer; you
cannot watch them.  They can make it very easy for you to do your job,
if they like you, or if you curry favor.  Or they can obstruct you
at every turn, making your life miserable.  You have no recourse.
They can use the commands that change a user's restrictions, and you
cannot, because your restrictions don't permit it.

The users are suspicious of each other, and use "file protection" to
deny each other access to files.  Often this means you cannot make
progress in your work because you need to fix a program you cannot get
at.  People with high morale become discouraged and cynical because of
this.  The authorities are immune to file protection, however, and can
easily erase your file if they do not like what it says.

People outside the organization are viewed with hostility and suspicion.
They are presumed to lack only an opportunity to delete or scramble all
the files on the computer.  If the computer is idle, at night for
example, its computing power goes to waste rather than allow an outsider
to use it for a constructive purpose (such as learning to program).

Now imagine that one of the people outside the organization, the
recipient of all this suspicion and hostility, is a hacker: a person who
is curious, playful and enjoys clever humor.  (When computer researchers
at MIT in the 1960's first began calling themselves "hackers", this is
what they meant.  I am proud to call myself a hacker, and I call
security-breakers "crackers" to emphasize the distinction.)

A hacker, finding a mysterious and complicated computer system, wants to
understand it.  He would like to explore the computer system, to learn
how to use it, or to learn how it works.  He knows in advance what
reception he will get if he simply asks to use the computer when there
is spare time.  And he senses intuitively that computer system
authorities in general are amoral and do not deserve respect.

Naturally, he tries to sneak in and use the computer anyway.  He becomes
a cracker.  If successful, he gets to explore and learn, and can be
proud of his cleverness as well.  Beefed-up security measures only make
the battle of wits more challenging and absorbing.

But if he is only a teen-ager, he is probably not used to the kind of
thinking that would enable him to question the social system he is part
of.  (The teen-agers who are politically aware are usually not the
computer enthusiasts.)  He knows only that he has something to resent.
So he does not make a serious attempt to change the system.  The best he
can manage is instinctive, furtive disobedience.  This is why the young
cracker seems so usure of the rightness of his actions, and occasionally
may do minor damage, almost without noticing.  He has not asked the
question of how he ought to behave, or how the computer owners ought to
behave.

This is also why it is so easy to win a cracker over to the
security-enforcing establishment with personal inducements.  Joining the
authorities will end his direct personal difficulties and recognize his
cleverness, even better than successfully evading them.  Without an
ethical awareness, he does not see that he solves his own problem only
by contributing to similar problems for others.

The software on most computer systems is designed to support the ruling
class just as surely as the KGB is.  The software written and used by
the hackers at MIT was designed to make users free and equal.  Our
system had no restrictions that could be imposed on selected users; all
users were treated alike.  Thus nobody could seize power by restricting
everyone else.  We did not care whether a change to the files was
authorized; we cared whether it was an improvement.  This can only be
decided by human beings, on a case-by-case basis.  So, rather than
having file protection to control changes, we called for discussion
of any planned change.

And if a stranger came to the lab and wanted to play with the computer
when it was not fully needed by us--we let him!  Chances are he would
appreciate some of the value of our work, learn from it, and spread the
knowledge to others.  At best, he would become enthusiastic for our
software and our attitudes, join our lab, and contribute to our work.

People hearing about our lab usually took it for granted that our system
would be destroyed by vandals.  Actually, vandalism was very rare, and
the damage done by vandals was small compared with the damage caused by
the inevitable computer malfunctions and our own mistakes.  Simple
measures analogous to the glass window on a fire alarm discouraged
dangerous activities, deliberate or accidental, without actually
forbidding anything.  Ultimately it was rising commercialism that
destroyed the lab and caused our old computer system to be junked.

The technology of computer security is not suited to any middle ground
between the extremes.  Unless security is iron-fisted and dominates the 
lives of the users, it is easy to circumvent, and useless.  We should
put military secrets, bank records and the like on computers with strict
security.  For other activities, we should have computers that are free
of security, and free of its burdens.

Then we need not attack the symptom of morally confused crackers with
jail threats, security technology, or hiring them as security enforcers
to breed more resentment and new crackers.  We can invite them to use
computers openly on terms of mutual respect, and they will repay our
friendship tenfold.  Their cleverness and curiosity are just what make
for a creative engineer.

So far the issue of security versus freedom on computer systems affects
mainly computer hackers.  But, in the future, computer systems will play
a bigger and bigger role in everyone's life.  And these systems will be
built on today's entrenched authoritarian tradition, unless we stop it.
The crackers are a warning sign of a problem that every American is
going to face--soon.





1)  Muammar Qaddafi
2)  Mo'ammar Gadhafi
3)  Muammar Kaddafi
4)  Muammar Qadhafi
5)  Moammar El Kadhafi
6)  Muammar Gadafi
7)  Mu'ammar al-Qadafi
8)  Moamer El Kazzafi
/* grep.c - main driver file for grep.
   Copyright (C) 1992 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

   Written July 1992 by Mike Haertel.  */

#include <errno.h>
#include <stdio.h>

#ifndef errno
extern int errno;
#endif

#ifdef STDC_HEADERS
#include <stdlib.h>
#else
#include <sys/types.h>
extern char *malloc(), *realloc();
extern void free();
#endif

#if defined(STDC_HEADERS) || defined(HAVE_STRING_H)
#include <string.h>
#ifdef NEED_MEMORY_H
#include <memory.h>
#endif
#else
#include <strings.h>
#ifdef __STDC__
extern void *memchr();
#else
extern char *memchr();
#endif
#define strrchr rindex
#endif

#ifdef HAVE_UNISTD_H
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>
#else
#define O_RDONLY 0
extern int open(), read(), close();
#endif

#include "getpagesize.h"
#include "grep.h"

#undef MAX
#define MAX(A,B) ((A) > (B) ? (A) : (B))

/* Provide missing ANSI features if necessary. */

#ifndef HAVE_STRERROR
extern int sys_nerr;
extern char *sys_errlist[];
#define strerror(E) ((E) < sys_nerr ? sys_errlist[(E)] : "bogus error number")
#endif

#ifndef HAVE_MEMCHR
#ifdef __STDC__
#define VOID void
#else
#define VOID char
#endif
VOID *
memchr(vp, c, n)
     VOID *vp;
     int c;
     size_t n;
{
  unsigned char *p;

  for (p = (unsigned char *) vp; n--; ++p)
    if (*p == c)

/*
 * This file was written by Todd Austin, University of Wisconsin - Madison
 * Department of Computer Sciences
 *
 * Copyright (C) 1994 by Todd Austin
 *
 * This source file is distributed in the hope that it will be useful,
 * but without any warranty.  No author or distributor accepts
 * responsibility to anyone for the consequences of using it or for
 * whether it serves any particular purpose or works at all.
 *
 * Everyone is granted permission to copy, modify and redistribute
 * this source file under the following conditions:
 *
 *    Permission is granted to anyone to make or distribute copies
 *    of this source code, either as received or modified, in any
 *    medium, provided that all copyright notices, permission and
 *    nonwarranty notices are preserved, and that the distributor
 *    grants the recipient permission for further redistribution as
 *    permitted by this document.
 *
 *    Permission is granted to distribute this file in compiled
 *    or executable form under the same conditions applying for
 *    source code, provided that either
 *    A. it is accompanied by the corresponding machine-readable
 *       source code, or
 *    B. it is accompanied by a written offer, with no time limit,
 *       to give anyone a machine-readable copy of the corresponding
 *       source code in return for reimbursement of the cost of
 *       distribution.  This written offer must permit verbatim
 *       duplication by anyone.
 *    C. it is distributed by someone who received only the
 *       executable form, and is accompanied by a copy of the
 *       written offer of source code which s/he received along with it.
 *
 * In other words, you are welcome to use, share and improve this
 * source file.  You are forbidden to forbid anyone else to use, share
 * and improve what you give them.   Help stamp out software-hoarding!
 *
 * ARPANET: austin@cs.wisc.edu
 * US Mail: 1210 W. Dayton Street, Madison, WI 53706
 *
 * $Log: grep-input.txt,v $
 * Revision 1.1.1.1  2000/11/29 14:53:54  cu-cs
 * Grand unification of arm sources.
 *
 *
 * Revision 1.1.2.1  2000/10/31 19:13:55  taustin
 * Yet more benchmarks...
 *
 * Revision 1.6  1994/11/15  21:14:16  austin
 * *** empty log message ***
 *
 * Revision 1.5  1994/11/14  17:08:47  austin
 * *** empty log message ***
 *
 * Revision 1.4  1994/11/09  14:36:07  austin
 * *** empty log message ***
 *
 * Revision 1.3  1994/03/06  17:05:32  austin
 * - added DIRECT option
 *
 * Revision 1.2  1994/02/21  16:22:18  austin
 * - moved RegSet stuff to regs.h
 * - moved cache vars to this file
 * - cache options now work
 * - added probes
 *
 * $Id: grep-input.txt,v 1.1.1.1 2000/11/29 14:53:54 cu-cs Exp $
 */

static char rcsid[] = "$Id: grep-input.txt,v 1.1.1.1 2000/11/29 14:53:54 cu-cs Exp $";

/*
 *	detailed timing simulator code
 */

#include <stdio.h>
#include <math.h>

#include "misc.h"
#include "probe.h"
#include "memory.h"
#include "syscall.h"
#include "state.h"
#include "ss.h"
#include "dtrace.h"

/* bit size of a register set */
#define RS_BIT_SIZE  (32/*GPRs*/+32/*FPRs*/+1/*HI*/+1/*LO*/+1/*FC*/+1/*MEM*/)
#include "regs.h"

/* timing instrumentation */
long long cycle;			/* current cycle, total cycles */

/* non-zero if memory can handle any combination of loads and stores */
int perfectMemory = FALSE;

/* non-zero if pre-translations can be used to elide TLB accesses */
int elideTranslations = TRUE;

/* non-zero if jamming execution */
int jamminMan = FALSE;

/* load/store is stalled (re-executing in the MEM stage) due to a failed jam */
int stalledLoad = FALSE;
int stalledStore = FALSE;

/* just issued insts must stall as well */
int stallIssue = FALSE;

/* use base or alternative jam scheme (pnevmati's) */
int dirMode = FALSE;
int jamMode = FALSE;
int pCalcMode = FALSE;
int dualMode = FALSE;
int dirJam = FALSE;
int baseJam = FALSE;
int altJam = FALSE;
unsigned long jamSize = 0;




		The Tao Of Programming

		Translated By Geoffrey James
		Transcribed By Seth Robertson


		Table of Contents

			Book 1  --  The Silent Void
			Book 2  --  The Ancient Masters
			Book 3  --  Design
			Book 4  --  Coding
			Book 5  --  Maintenance
			Book 6  --  Management
			Book 7  --  Corporate Wisdom
			Book 8  --  Hardware and Software
			Book 9  --  Epilogue


		The Silent Void
		Book One

		   Thus spake the master programmer:
				   
	 "When you have learned to snatch the error code from
	  the trap frame, it will be time for you to leave."

				 1.1

Something mysterious is formed, born in the silent void.  Waiting alone
and unmoving, it is at once still and yet in constant motion.  It is
the source of all programs.  I do not know its name, so I will call it
the Tao of Programming.

If the Tao is great, then the operating system is great.  If the
operating system is great, then the compiler is great.  If the compiler
is greater, then the applications is great.  The user is pleased and
there is harmony in the world.

The Tao of Programming flows far away and returns on the wind of morning.

				  1.2

The Tao gave birth to machine language.  Machine language gave birth to
the assembler.

The assembler gave birth to the compiler.  Now there are ten thousand
languages.

Each language has its purpose, however humble.  Each language expresses
the Yin and Yang of software.  Each language has its place within the Tao.

But do not program in COBOL if you can avoid it.

				  1.3

In the beginning was the Tao.  The Tao gave birth to Space and Time.
Therefore, Space and Time are the Yin and Yang of programming.

Programmers that do not comprehend the Tao are always running out of
time and space for their programs.  Programmers that comprehend the Tao
always have enough time and space to accomplish their goals.

How could it be otherwise?

				  1.4

The wise programmer is told about the Tao and follows it.  The average
programmer is told about the Tao and searches for it.  The foolish
programmer is told about the Tao and laughs at it.

If it were not for laughter, there would be no Tao.

The highest sounds are the hardest to hear.  Going forward is a way to
retreat.  Greater talent shows itself late in life.  Even a perfect
program still has bugs.

			The Ancient Masters
				Book Two

		   Thus spake the master programmer:
				   
   "After three days without programming, life becomes meaningless."

				  2.1

The programmers of old were mysterious and profound.  We cannot fathom
their thoughts, so all we do is describe their appearance.

Aware, like a fox crossing the water.  Alert, like a general on the
battlefield.  Kind, like a hostess greeting her guests. Simple, like
uncarved blocks of wood.  Opaque, like black pools in darkened caves.

Who can tell the secrets of their hearts and minds?

The answer exists only in the Tao.

				  2.2

Grand Master Turing once dreamed that he was a machine.  When he awoke
he exclaimed:

     "I don't know whether I am Turing dreaming that I am a machine,
      or a machine dreaming that I am Turing!"

				  2.3

A programmer from a very large computer company went to a software
conference and then returned to report to his manager, saying: "What
sort of programmers work for other companies?  They behaved badly and
were unconcerned with appearances. Their hair was long and unkempt and
their clothes were wrinkled and old. They crashed out hospitality
suites and they made rude noises during my presentation."

The manager said: "I should have never sent you to the conference.
Those programmers live beyond the physical world.  They consider life
absurd, an accidental coincidence.  They come and go without knowing
limitations.  Without a care, they live only for their programs.  Why
should they bother with social conventions?"

"They are alive within the Tao."

				  2.4

A novice asked the Master: "Here is a programmer that never designs,
documents, or tests his programs.  Yet all who know him consider him
one of the best programmers in the world.  Why is this?"

The Master replies: "That programmer has mastered the Tao.  He has gone
beyond the need for design; he does not become angry when the system
crashes, but accepts the universe without concern.  He has gone beyond
the need for documentation; he no longer cares if anyone else sees
his code.  He has gone beyond the need for testing; each of his
programs are perfect within themselves, serene and elegant, their
purpose self-evident.  Truly, he has entered the mystery of the Tao."

				Design
				Book Three

		   Thus spake the master programmer:
				   

begin 644 input.txt.gz
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
8&O_H)SL7L^1U/KJ-*V;^+QK$NW%C4PL 
 
end
"When program is being tested, it is too late to make design changes."

				  3.1

There once was a man who went to a computer trade show.  Each day as he
entered, the man told the guard at the door:

     "I am a great thief, renowned for my feats of shoplifting.  Be
      forewarned, for this trade show shall not escape unplundered."

This speech disturbed the guard greatly, because there were millions of
dollars of computer equipment inside, so he watched the man carefully.
But the man merely wandered from booth to booth, humming quietly to
himself.

When the man left, the guard took him aside and searched his clothes,
but nothing was to be found.

On the next day of the trade show, the man returned and chided the
guard saying: "I escaped with a vast booty yesterday, but today will be
even better."  So the guard watched him ever more closely, but to no
avail.

On the final day of the trade show, the guard could restrain his
curiosity no longer. "Sir Thief," he said, "I am so perplexed, I cannot
live in peace.  Please enlighten me.  What is it that you are stealing?"

The man smiled.  "I am stealing ideas," he said.

				  3.2

There once was a master programmer who wrote unstructured programs.  A
novice programmer, seeking to imitate him, also began to write
unstructured programs.  When the novice asked the master to evaluate
his progress, the master criticized him for writing unstructured
programs, saying: "What is appropriate for the master is not
appropriate for the novice.  You must understand the Tao before
transcending structure."

				  3.3

There was once a programmer who was attached to the court of the
warlord of Wu.  The warlord asked the programmer: "Which is easier to
design: an accounting package or an operating system?"

"An operating system," replied the programmer.

The warlord uttered an exclamation of disbelief.  "Surely an accounting
package is trivial next to the complexity of an operating system," he said.

"Not so," said the programmer, "when designing an accounting package,
the programmer operates as a mediator between people having different
ideas: how it must operate, how its reports must appear, and how it
must conform to the tax laws.  By contrast, an operating system is not
limited my outside appearances.  When designing an operating system,
the programmer seeks the simplest harmony between machine and ideas.
This is why an operating system is easier to design."

The warlord of Wu nodded and smiled.  "That is all good and well, but
which is easier to debug?"

The programmer made no reply.

				  3.4

A manager went to the master programmer and showed him the requirements
document for a new application.  The manager asked the master: "How
long will it take to design this system if I assign five programmers
to it?"

"It will take one year," said the master promptly.

"But we need this system immediately or even sooner!  How long will it
take it I assign ten programmers to it?"

The master programmer frowned.  "In that case, it will take two years."

"And what if I assign a hundred programmers to it?"

The master programmer shrugged.  "Then the design will never be
completed," he said.

				Coding
				Book Four

		   Thus spake the master programmer:
				   
	      "A well-written program is its own heaven;
	      a poorly-written program is its own hell."

				  4.1

A program should be light and agile, its subroutines connected like a
strings of pearls.  The spirit and intent of the program should be
retained throughout.  There should be neither too little nor too much,
neither needless loops nor useless variables, neither lack of structure
nor overwhelming rigidity.

A program should follow the 'Law of Least Astonishment'.  What is this
law?  It is simply that the program should always respond to the user
in the way that astonishes him least.

A program, no matter how complex, should act as a single unit.  The
program should be directed by the logic within rather than by outward
appearances.

If the program fails in these requirements, it will be in a state of
disorder and confusion.  The only way to correct this is to rewrite the
program.

				  4.2

A novice asked the master: "I have a program that sometimes runs and
sometimes aborts.  I have followed the rules of programming, yet I am
totally baffled. What is the reason for this?"

The master replied: "You are confused because you do not understand the
Tao.  Only a fool expects rational behavior from his fellow humans. Why
do you expect it from a machine that humans have constructed? Computers
simulate determinism; only the Tao is perfect.

The rules of programming are transitory; only the Tao is eternal.
Therefore you must contemplate the Tao before you receive enlightenment."

"But how will I know when I have received enlightenment?" asked the novice.

"Your program will then run correctly," replied the master.

				  4.3

A master was explaining the nature of the Tao to one of his novices,
"The Tao is embodied in all software -- regardless of how
insignificant," said the master.

"Is the Tao in a hand-held calculator?" asked the novice.

"It is," came the reply.

"Is the Tao in a video game?" continued the novice.

"It is even in a video game," said the master.

"And is the Tao in the DOS for a personal computer?"

The master coughed and shifted his position slightly.  "The lesson is
over for today," he said.

				  4.4

Price Wang's programmer was coding software.  His fingers danced upon
the keyboard.  The program compiled without an error message, and the
program ran like a gentle wind.

Excellent!" the Price exclaimed, "Your technique is faultless!"

"Technique?" said the programmer, turning from his terminal, "What I
follow is the Tao -- beyond all technique.  When I first began to
program I would see before me the whole program in one mass.  After
three years I no longer saw this mass. Instead, I used subroutines.
But now I see nothing.  My whole being exists in a formless void.  My
senses are idle.  My spirit, free to work without a plan, follows its
own instinct.  In short, my program writes itself. True, sometimes
there are difficult problems.  I see them coming, I slow down, I watch
silently. Then I change a single line of code and the difficulties
vanish like puffs of idle smoke.  I then compile the program.  I sit
still and let the joy of the work fill my being.  I close my eyes for a
moment and then log off."

Price Wang said, "Would that all of my programmers were as wise!"

			Maintenance
			Book Five

		   Thus spake the master programmer:
				   
	      "Though a program be but three lines long,
	       someday it will have to be maintained."

				  5.1

       A well-used door needs no oil on its hinges.
       A swift-flowing steam does no grow stagnant.
       Neither sound nor thoughts can travel through a vacuum.
       Software rots if not used.

       These are great mysteries.

				  5.2

A manager asked a programmer how long it would take him to finish the
program on which he was working.  "I will be finished tomorrow," the
programmer promptly replied.

"I think you are being unrealistic," said the manager. "Truthfully, how
long will it take?"

The programmer thought for a moment.  "I have some features that I wish
to add.  This will take at least two weeks," he finally said.

"Even that is too much to expect," insisted the manager, "I will be
satisfied if you simply tell me when the program is complete."

The programmer agreed to this.

Several years slated, the manager retired.  On the way to his
retirement lunch, he discovered the programmer asleep at his terminal.
He had been programming all night.

				  5.3

A novice programmer was once assigned to code a simple financial
package.

The novice worked furiously for many days, but when his master reviewed
his program, he discovered that it contained a screen editor, a set of
generalized graphics routines, and artificial intelligence interface,
but not the slightest mention of anything financial.

When the master asked about this, the novice became indignant.  "Don't
be so impatient," he said, "I'll put the financial stuff in eventually."

				  5.4

      Does a good farmer neglect a crop he has planted?
      Does a good teacher overlook even the most humble student?
      Does a good father allow a single child to starve?
      Does a good programmer refuse to maintain his code?

				Management
				Book Six

		   Thus spake the master programmer:
				   
	     "Let the programmer be many and the managers
		 few -- then all will be productive."

				  6.1

When managers hold endless meetings, the programmers write games.  When
accountants talk of quarterly profits, the development budget is about
to be cut.  When senior scientists talk blue sky, the clouds are about
to roll in.

Truly, this is not the Tao of Programming.

When managers make commitments, game programs are ignored.  When
accountants make long-range plans, harmony and order are about to be
restored.  When senior scientists address the problems at hand, the
problems will soon be solved.

Truly, this is the Tao of Programming.

				  6.2

Why are programmers non-productive?
Because their time is wasted in meetings.

Why are programmers rebellious?
Because the management interferes too much.

Why are the programmers resigning one by one?
Because they are burnt out.

Having worked for poor management, they no longer value their jobs.

				  6.3

A manager was about to be fired, but a programmer who worked for him
invented a new program that became popular and sold well.  As a result,
the manager retained his job.

The manager tried to give the programmer a bonus, but the programmer
refused it, saying, "I wrote the program because I though it was an
interesting concept, and thus I expect no reward."

The manager, upon hearing this, remarked, "This programmer, though he
holds a position of small esteem, understands well the proper duty of
an employee.  Lets promote him to the exalted position of management
consultant!"

But when told this, the programmer once more refused, saying, "I exist
so that I can program.  If I were promoted, I would do nothing but
waste everyone's time.  Can I go now?  I have a program that I'm
working one."

				  6.4

A manger went to his programmers and told them: "As regards to your
work hours: you are going to have to come in at nine in the morning and
leave at five in the afternoon."  At this, all of them became angry and
several resigned on the spot.

So the manager said: "All right, in that case you may set your own
working hours, as long as you finish your projects on schedule."  The
programmers, now satisfied, began to come in a noon and work to the wee
hours of the morning.

			Corporate Wisdom
			Book Seven

		   Thus spake the master programmer:
				   
	    "You can demonstrate a program for a corporate
	executive, but you can't make him computer literate."

				  7.1

A novice asked the master: "In the east there is a great tree-structure
that men call 'Corporate Headquarters'.  It is bloated out of shape
with vice-presidents and accountants.  It issues a multitude of memos,
each saying 'Go, Hence!' or 'Go, Hither!' and nobody knows what is
meant.  Every year new names are put onto the branches, but all to no
avail.  How can such an unnatural entity exist?"

The master replies: "You perceive this immense structure and are
disturbed that it has no rational purpose.  Can you not take amusement
from its endless gyrations?  Do you not enjoy the untroubled ease of
programming beneath its sheltering branches?  Why are you bothered by
its uselessness?"

				  7.2

In the east there is a shark which is larger than all other fish.  It
changes into a bird whose winds are like clouds filling the sky.  When
this bird moves across the land, it brings a message from Corporate
Headquarters.  This message it drops into the midst of the program-
mers, like a seagull making its mark upon the beach.  Then the bird
mounts on the wind and, with the blue sky at its back, returns home.

The novice programmer stares in wonder at the bird, for he understands
it not.  The average programmer dreads the coming of the bird, for he
fears its message.  The master programmer continues to work at his
terminal, for he does not know that the bird has come and gone.

				  7.3

The Magician of the Ivory Tower brought his latest invention for the
master programmer to examine.  The magician wheeled a large black box
into the master's office while the master waited in silence.

"This is an integrated, distributed, general-purpose workstation,"
began the magician, "ergonomically designed with a proprietary
operating system, sixth generation languages, and multiple state of the
art user interfaces.  It took my assistants several hundred man years
to construct.  Is it not amazing?"

The master raised his eyebrows slightly. "It is indeed amazing," he
said.

"Corporate Headquarters has commanded," continued the magician, "that
everyone use this workstation as a platform for new programs.  Do you
agree to this?"

"Certainly," replied the master, "I will have it transported to the
data center immediately!"  And the magician returned to his tower, well
pleased.

Several days later, a novice wandered into the office of the master
programmer and said, "I cannot find the listing for my new program.  Do
you know where it might be?"

"Yes," replied the master, "the listings are stacked on the platform in
the data center."

				  7.4

The master programmer moves from program to program without fear.  No
change in management can harm him.  He will not be fired, even if the
project is canceled. Why is this?  He is filled with the Tao.

			Hardware and Software
			Book Eight

		   Thus spake the master programmer:
				   
	     "Without the wind, the grass does not move.
	       Without software, hardware is useless."

				  8.1

A novice asked the master: "I perceive that one computer company is
much larger than all others.  It towers above its competition like a
giant among dwarfs.  Any one of its divisions could comprise an entire
business.  Why is this so?"

The master replied, "Why do you ask such foolish questions?  That
company is large because it is so large.  If it only made hardware,
nobody would buy it.  If it only maintained systems, people would treat
it like a servant.  But because it combines all of these things, people
think it one of the gods!  By not seeking to strive, it conquers
without effort."

				  8.2

A master programmer passed a novice programmer one day.  The master
noted the novice's preoccupation with a hand-held computer game.
"Excuse me", he said, "may I examine it?"

The novice bolted to attention and handed the device to the master. "I
see that the device claims to have three levels of play: Easy, Medium,
and Hard", said the master.  "Yet every such device has another level
of play, where the device seeks not to conquer the human, nor to be
conquered by the human."

"Pray, great master," implored the novice, "how does one find this
mysterious setting?"

The master dropped the device to the ground and crushed it under foot.
And suddenly the novice was enlightened.

				  8.3

There was once a programmer who worked upon microprocessors.  "Look at
how well off I am here," he said to a mainframe programmer who came to
visit, "I have my own operating system and file storage device. I do
not have to share my resources with anyone.  The software is
self-consistent and easy-to-use.  Why do you not quit your present job
and join me here?"

The mainframe programmer then began to describe his system to his
friend, saying: "The mainframe sits like an ancient sage meditating in
the midst of the data center.  Its disk drives lie end-to-end like a
great ocean of machinery.  The software is a multi-faceted as a diamond
and as convoluted as a primeval jungle.  The programs, each unique,
move through the system like a swift-flowing river.  That is why I am
happy where I am."

The microcomputer programmer, upon hearing this, fell silent.  But the
two programmers remained friends until the end of their days.

				  8.4

Hardware met Software on the road to Changtse.  Software said: "You are
the Yin and I am the Yang.  If we travel together we will become famous
and earn vast sums of money."  And so the pair set forth together,
thinking to conquer the world.

Presently, they met Firmware, who was dressed in tattered rags, and
hobbled along propped on a thorny stick.  Firmware said to them: "The
Tao lies beyond Yin and Yang.  It is silent and still as a pool of
water. It does not seek fame, therefore nobody knows its presence.  It
does not seeks fortune, for it is complete within itself.  It exists
beyond space and time."

Software and Hardware, ashamed, returned to their homes.


				Epilogue
				Book Nine

		   Thus spake the master programmer:
				   
		       "Time for you to leave."
/* missed jam cost */
unsigned long mjCost = 1;

/* just to be sure the profiler is working */
static long long nRefs = 0;
static long long nOSRefs = 0;
static long long nReads = 0;
static long long nDirectLoads = 0;
static long long nDirectStores = 0;
static long long nRRLoads = 0;
static long long nRRStores = 0;
static long long nFailedLdJams = 0;
static long long nFailedStJams = 0;

static long long nFailedInEX = 0;

static long long nDirMode = 0;
static long long nJamMode = 0;
static long long nPCalcMode = 0;
static long long nDualMode = 0;

/*
static long long nStores = 0;
static long long nLoads = 0;
static long long nFailedStJams = 0;
static long long nFailedLdJams = 0;
*/

/*
 * processor parameters/state
 */

/* max number of instructions to issue each cycle */
ulong numIssue = 4;
static ulong niMask = 3;			/* numIssue - 1 */

int useICache = FALSE;
struct Cache *iCache = NULL;			/* instruction cache */
struct CacheParam iCacheParams = {
  /* default instruction cache parameters */
  "text",	/* name */
  1024,		/* nSets */
  16,		/* bSize */
  1,		/* nAssoc */
  TRUE	/* wrBack */
};

struct Cache *dCache = NULL;			/* data cache */
struct CacheParam dCacheParams = {
  /* default data cache parameters */
  "data",	/* name */
  1024,		/* nSets */
  16,		/* bSize */
  1,		/* nAssoc */
  TRUE		/* wrBack */
};

/* default to two cycle miss-prediction latencies */
static int nCycleMP = 0;

/*
 * probes
 */
static struct Probe *btbHitRate;		/* BTB hit rate */
static struct Probe *btbPredRate;		/* BTB prediction accuracy */


/*
 * pipe stats
 */
struct {
  long long computing;			/* pipe issued an instruction */
  long long mpStall;			/* pipe stalled waiting for
					   misprediction re-fill */
  long long dcStall;			/* pipe stalled on data cache miss */
  long long trapStall;			/* pipe drained for a trap */
  long long noFUStall;			/* pipe stalled waiting for an FU */
  long long FUStall;			/* pipe stalled waiting on a FU */
  long long ldStall;			/* pipe stalled waiting on a ld port */
  long long cldStall;			/* pipe stalled waiting on a ld port,
					   the dependency is collapable */
} pipeStats;

void
ResetPipeStats(void)
{
  pipeStats.computing = 0;
  pipeStats.mpStall = 0;
  pipeStats.dcStall = 0;
  pipeStats.trapStall = 0;
  pipeStats.noFUStall = 0;
  pipeStats.FUStall = 0;
  pipeStats.ldStall = 0;
  pipeStats.cldStall = 0;
}

void
DumpPipeStats(FILE *stream)
{
  long long sum =
    pipeStats.computing + pipeStats.mpStall + pipeStats.dcStall
      + pipeStats.trapStall + pipeStats.noFUStall
	+ pipeStats.FUStall + pipeStats.ldStall + pipeStats.cldStall;

  fprintf(stream, ">>>> Pipe Stats <<<<\n");
  fprintf(stream, "\tcomputing    = %.0f\n", (double)pipeStats.computing);
  fprintf(stream, "\tmpStall      = %.0f\n", (double)pipeStats.mpStall);
  fprintf(stream, "\tdcStall      = %.0f\n", (double)pipeStats.dcStall);
  fprintf(stream, "\ttrapStall    = %.0f\n", (double)pipeStats.trapStall);
  fprintf(stream, "\tnoFUStall    = %.0f\n", (double)pipeStats.noFUStall);
  fprintf(stream, "\tFUStall      = %.0f\n", (double)pipeStats.FUStall);
  fprintf(stream, "\tldStall      = %.0f\n", (double)pipeStats.ldStall);
  fprintf(stream, "\tcldStall     = %.0f\n", (double)pipeStats.cldStall);
  fprintf(stream, "\ttotal cycles = %.0f (of %.0f)\n",
	  (double)sum, numIssue*(double)cycle);
  if (sum != numIssue*cycle)
    warn("sum != %d*cycle at end of execution, sum=%.0f, %d*cycle=%.0f",
	 numIssue, (double)sum, numIssue, numIssue*(double)cycle);
}


/* output to FU:
     maps a busy output to the FU that is creating its value, -1 indicates
     the output is not awaying a result */
int outToFU[RS_BIT_SIZE];

/* resource descriptor */
struct ResDesc {
  char *name;				/* name of functional unit */
  struct ResTmpl {
    enum FUClass fuClass;		/* matching fu class */
    ulong opLatency;			/* cycles until result is ready */
    ulong issueLatency;			/* cycles between issues */
  } x[NUM_FU_CLASSES];
  long busy;				/* cycles until this unit can issue,
					   -1 renders the unit unusable */
};

/* maximum number of instructions that can be inflight in the functional
   units, this is the number of entries allocated for the EVQUEUE free list */
#define MAX_STATE	64		/* FIXME: we should compute this */

/* resource configuration, in the event of a tie between two resources
   the resources are allocated in the order that they occur in this list,
   order these from most used to least used resources */
#ifndef BIG_CONFIG
static struct ResDesc resource[] = {
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0

Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p1of5]
Message-ID: <free1-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free1-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
Date: Mon, 1 Aug 1994 11:00:16 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1343
Xref: bloom-beacon.mit.edu comp.compilers:3316 comp.lang.misc:5185 comp.archives.admin:675 news.answers:23367 comp.answers:6565

Archive-name: free-compilers/part1
Last-modified: 1994/6/30
Version: 6.5

-------------------------------------------------------------------------------
Catalog of Free Compilers and Interpreters.
-------------------------------------------------------------------------------
Copyright (c) 1993, David Muir Sharnoff, All Rights Reserved
Copyright (c) 1994, Steven Allen Robenalt, All Rights Reserved

This list catalogues freely available software for language tools, which
includes the following: compilers, compiler generators, interpreters, 
translators, important libraries, assemblers, etc.  -- things whose user 
interface is a language.  Natural language processing tools may also 
be included.

This list is primarily aimed at developers rather than researchers, and
consists mainly of citations for production quality systems.  There is some
overlap of coverage between this document and other lists and catalogs.  See
the references section for a list...

All the listed items should be free and come with source code, exceptions have
generally been deleted from the list in the past.  If you find any such items
in the list let me know and I'll remove them.

The latest version of the catalog can be ftp'ed: get
pub/compilers-list/free-compilers from idiom.berkeley.ca.us.

This catalog is available through World Wide Web.  A searchable
hypertext version can be accessed through http://cui_www.unige.ch/freecomp.
(As of the middle of January, the WWW version was still based on rev. 5.2)

Not all entries have complete citations.  Some fields are filled with question
marks (?).  Fields with both the ? and an entry are implicit requests for
confirmation.  Also, specific questions will often be asked [in brackets --ed].

I put in the reference entry last year to help decentralise the accquisition
of new entries.  So if you have information not included in here or updates to
information listed here, a template has been provided below (in fact, the
first entry in the tools section) for you to use.  You can send whatever
new items or updates you have to <free-compilers@idiom.berkeley.ca.us>.
Note that the "how to get" field in each entry has been returned to "location"
as before -- for increased future compatibility with various formats.

-Mark Hopkins, June 29, 1994

-------------------------------------------------------------------------------
overview (table of contents)
-------------------------------------------------------------------------------

Section							Parts
introduction 						  1
overview (table of contents) 				  1
changes and history					  1
prototype entry						  1
tools							 1-5
	scripting languages				  1
	functional languages				  1
	C variants					  2
	compiled, imperitive languages			  2
	object oriented languages			  2
	lisp family					  3
	document formatting languages			  3
	logic programming languages			  3
	concurrent, parellel, and simulation languages	  4
	Forth family languages				  4
	compiler generators and related tools		  4
	mathematical tools and languages		  4
	electrical engineering languages		  4
	Wirth family languages				  5
	assemblers					  5
	macro preprocessors				  5
	special purpose languages			  5
	natural languages				  5
	curiosities					  5
	unable to classify due to lack of knowledge	  5
references						  5
archives						  5
cross-reference						  5

-------------------------------------------------------------------------------
changes and history
-------------------------------------------------------------------------------

This document grew out of David Muir Sharnoff filing away postings that he 
saw (mostly Ed Vielmetti's postings to comp.archives) during 1991 and the 
first half of 1992.  At the Summer 1992 USENIX Technical Conference, the 
other attendees of the archivists BOF convinced David to compile his data 
into a posting.  David posted for about one year, then turned the list over 
to Mark Hopkins.  Mark Hopkins <markh@csd4.csd.uwm.edu> took care of it for 
the summer of 1993 and then gave it back to David Sharnoff when he dropped 
off the net.  Steve Robenalt <robenalt@orange.digex.net> has took over 
the list maintenance from Dave in 1994, and it was returned to Mark Hopkins
<mark@omnifest.uwm.edu> in May, but Dave's organization, Idiom Consulting,
remains as the focal point for information to be submitted.

A new minor alterations have been made in this version in relation to
last month.  Tabs have been inserted into the list to reduce its size, I'm
assuming the common tab stop at every 8th place, so you may need to set your
editor or viewer appropriately.  The following items have been swapped:

           Language category             Before     After
           -----------------------------------------------
           Wirth family languages        Part 3     Part 5
           document formatting languages Part 5     Part 3

in order to more even out the sizes of the various parts to the list.  Also,
the table of contents above has been made a little bit more detailed.

For this version the changes to the list are:

	language		package
	--------		-------
new listings:
	BNF (yacc)		bison-A2.2
	LPC			LPC4 (v. 4.05.11)
	Prolog + constraints	clp(FD) 2.1
	Prolog			wamcc 2.1
	EBNF			ETO (test release)
	CAML, Bigloo		Camloo 0.2
	? Lisp, X		winterp 2.01
new versions:
 	TCL			   Extended Tcl (tclx) 7.3a
 	Scheme			   VSCM V0r3
 	C, nroff, texinfo, latex   c2man 2.0 patchlevel 31
 	REXX			   REXX/imc 1.6
 	COCOL (EBNF variant)	   COCO/R 1.36
 	Common Lisp		   CLiCC 0.6.4
 	C			   GNU C Library (glibc) 1.08.1
 	Korn Shell		   Bash (Bourne Again SHell) 1.14
 	csh (C-Shell)		   tcsh 6.05
 	Lisp (elisp - Emacs Lisp)  Lucid Emacs (lemacs) 19.10

-------------------------------------------------------------------------------
prototype entry
-------------------------------------------------------------------------------
Every entry should at least have the fields marked with two asterisks (**).

language:	**Reference Entry 
		Language: what the software compiles/interprets...
package:	**The name of the package
version:	**Its current version
parts:		**compiler, assembler, interpreter, translator, grammar(yacc,
		lex), library, documentation, examples, assembler, simulator,
		tutorial, test suite, byte-code compiler, run-time,
		translator(from->to)...  Compilers that use C as an 
		intermediate lanaguage should be noted as "compiler(->C)".
		Compilers that compile into a coded representation that is
		interpreted by a runtime module should be noted as "bytecode
		compiler".  Do not say "source code" -- if source is not
		included, do not send an entry at all!
author: 	**the creator of the package.  Email addresses are in the 
		form "Real Name <email@address>".  Surface mail addresses
		are not used unless there is no email address.
location:	**where to get the source, how to get it -- usually an FTP site
		or two.  May have subheaders for specific areas or different
		ports of the software (don't overdo this!):  Only official
		sites should be listed.  The format for ftp directives is "ftp
		dir/file from host", although valid URL's are acceptable too.
		No IP address is generally given.
		Also, either of the forms "host:directory or file" or
		"host in directory file" may be used with the understanding
		that it refers to an anonymous FTP site.
    N.America:	Sites for North Americans.
    Europe:	Sites Europeans should use
    Japan:	Sites for people in Japan
    OS/2:	Sites with OS/2 ports.
description:	**what the package is, possibly including some history
		A short review encouraged, but no propaganda please.
conformance:	how well does it conform to the existing Standard, if one
		exists
reference:	research references and other external documentation.
features:	salient features not listed in the description.
bugs:		known bugs (also: where to go to find/report bugs)
restriction:	restrictions using the software will place on the user.
requires:	what is needed to install it.  A C compiler is assumed.
ports:		where it has been installed
portability:	how system-independent is it, system dependencies.
status: 	development status (active, history, supported, etc)
discussion:	where discussion about the package takes place
help:		where help may be gotten from
support:	where support may be gotten from
contributions:	possible requests for money contributions (but no shareware)
announcements:	where new releases are announced
contact:	who to reach concerning the package (if not author)
updated:	**last known update to the package, not time of the update 
		to the entry in the catalog!

In addition to the above, in entries for categories, and languages, 
cross-references can be made.  
cref:		cross-reference to a category
lref:		cross-reference to a language
iref:		(language it's filed under in parenthesis) cross-reference 
		to an implementation

-------------------------------------------------------------------------------
tools
-------------------------------------------------------------------------------

scripting languages
-------------------------------------------------------------------------------
category:	scripting languages
description:	These are languages that are primarily interpreted, and on 
		unix sytems, can ususally be invoked directly from a text 
		using #!.  

language:	ABC
package:	ABC
version:	1.04.01
parts:		interpreter/compiler
author: 	Leo Geurts, Lambert Meertens, 
		Steven Pemberton <Steven.Pemberton@cwi.nl>
location:	ftp programming/languages/abc/* from ftp.eu.net or ftp.nluug.nl
description:	ABC is an imperative language embedded in its own environment.
		It is interactive, structured, high-level, very easy to learn,
		and easy to use.  It is suitable for general everyday
		programming, such as you would use BASIC, Pascal, or AWK for.
		It is not a systems-programming language. It is an excellent
		teaching language, and because it is interactive, excellent for
		prototyping.  ABC programs are typically very compact, around a
		quarter to a fifth the size of the equivalent Pascal or C
		program.  However, this is not at the cost of readability, on
		the contrary in fact.
reference:	"The ABC Programmer's Handbook" by Leo Geurts,
		Lambert Meertens and Steven Pemberton, published by 
		Prentice-Hall (ISBN 0-13-000027-2)
		"An Alternative Simple Language and Environment for PCs" 
		by Steven Pemberton, IEEE Software, Vol. 4, No. 1, 
		January 1987, pp.  56-64.
ports:		unix, MSDOS, atari, mac
discussion:	abc-list-request@cwi.nl
contact:	abc@cwi.nl
updated:	1991/05/02

language:	awk (new)
package:	mawk
version:	1.1.3
parts:		interpreter
author: 	Mike Brennan <brennan@bcsaic.boeing.com>
location:	ftp public/mawk* from oxy.edu
description:	?
conformance:	superset
		+ RS can be a regular expression
features:	+ faster than most new awks
ports:		sun3,sun4:sunos4.0.3 vax:bsd4.3,ultrix4.1 stardent3000:sysVR3 
		decstation:ultrix4.1 msdos:turboC++
status: 	actively developed
contact:	Mike Brennan <brennan@bcsaic.boeing.com>
updated:	1993/03/14

language:	awk (new)
package:	GNU awk (gawk)
version:	2.15.5
parts:		interpreter, documentation
author: 	David Trueman <david@cs.dal.ca> and 
		Arnold Robbins <arnold@cc.gatech.edu>
location:	ftp gawk-2.15.tar.Z from a GNU archive site
description:	?
conformance:	superset including some Plan 9 features
ports:		unix, msdos:msc5.1
status: 	activly developed
updated:	1994/05/19

language:	BASIC
package:	bwBASIC (Bywater BASIC interpreter)
version:	2.10
parts:		interpreter, shell, ?
author: 	Ted A. Campbell <tcamp@delphi.com>
location:	comp.sources.misc volume 40
description:	The Bywater BASIC Interpreter (bwBASIC) implements a large
		superset of the ANSI Standard for Minimal BASIC (X3.60-1978)
		implemented in ANSI C, and offers a simple interactive environ-
		ment including some shell program facilities as an extension of
		BASIC. The interpreter has been compiled successfully on a
		range of ANSI C compilers on varying platforms with no
		alterations to source code necessary.
ports:		DOS, Unix, Acorn's RISC OS
updated:	1993/10/29

language:	BASIC
package:	? basic ?
version:	?
parts:		paser(yacc), interpreter
author: 	?
location:	comp.sources.unix archives volume 2
description:	?
updated:	?

language:	BASIC
package:	? bournebasic ?
version:	?
parts:		interpreter
author: 	?
location:	comp.sources.misc archives volume 1
description:	?
updated:	?

language:	BASIC
package:	ubasic
version:	8
parts:		?
author: 	Yuji Kida
location:	? ask archie ?
description:	?
reference:	reviewed in Notices of the A.M.S #36 (May/June 1989),
		and "A math-oriented high-precision BASIC", #38 (3/91)
contact:	?
updated:	1992/07/06

language:	BASIC
package:	?
version:	?
parts:		interpreter
author: 	?
location:	ftp pub/unix-c/languages/basic/basic.tar-z from oak.oakland.edu
description:	public domain version of DEC's MU-Basic with Microsoft
		Basic mixed together
contact:	?
updated:	?

language:	Bourne Shell
package:	ash
version:	?
parts:		interpreter, manual page
author: 	Kenneth Almquist
location:	ftp from any 386BSD, NetBSD, or FreeBSD archive
    Linux:	ftp pub/linux/ports/ash-linux-0.1.tar.gz from ftp.win.tue.nl
description:	A Bourne Shell clone.  It works pretty well.  For running
		scripts, it is sometimes better and sometimes worse than Bash.
ports:		386BSD, NetBSD, FreeBSD, Linux
updated:	?

language:	csh (C-Shell)
package:	tcsh
version:	6.05
parts:		interpreter, manual page, html manual
author: 	Christos Zoulas <christos@ee.cornell.edu>
location:	/pub/tcsh/tcsh-6.05.tar.gz
		   from tesla.ee.cornell.edu (128.84.253.11)
description:	a modified C-Shell with history editing
ports:		unix, VMS_POSIX, nearing completion: OS/2 EMX.
updated:	1994/06/27

language:	ERGO-Shell (a window-based Unix shell)
package:	ERGO-Shell
version:	2.1
parts:		interpreter
author: 	Regine Freitag <freitag@gmd.de>
location:	ftp gmd/ergo/? from ftp.gmd.de 
description:	An ergonomic window-based Unix shell for software engineers.
		[Can one program in ERGO-Shell? --ed]
bugs:		Relative path names are not expanded on the SUN 3 port,
		expansion ability on SUN 4 only on certain conditions.
requires:	Needs X-windows (X11R4) or OSF/Motif (revision 1.1)
ports:		Sun 4
contact:	Dr. Wolfgang Dzida, GMD <dzida@gmd.de> or the author
updated:	1993/06/04

language:	es (a functional shell)
package:	es
version:	0.84
parts:		interpreter
author: 	Byron Rakitzis <byron@netapp.com>, Paul Haahr <haahr@adobe.com>
location:	ftp pub/es/es-0.84.tar.Z from ftp.sys.utoronto.ca
description:	shell with higher order functions
		+ builtin features implemented as redefineable functions
updated:	1993/04/30

language:	Glish
package:	glish
version:	2.4.1
parts:		interpreter, C++ class library, user manual
author: 	Vern Paxson <vern@ee.lbl.gov>
location:	ftp glish/glish-2.4.1.tar.Z from ftp.ee.lbl.gov
description:	Glish is an interpretive language for building loosely-coupled
		distributed systems from modular, event-oriented programs.
		These programs are written in conventional languages such as C,
		C++, or Fortran.  Glish scripts can create local and remote
		processes and control their communication.  Glish also provides
		a full, array-oriented programming language (similar to S) for
		manipulating binary data sent between the processes.  In
		general Glish uses a centralized communication model where
		interprocess communication passes through the Glish
		interpreter, allowing dynamic modification and rerouting of
		data values, but Glish also supports point-to-point links
		between processes when necessary for high performance.
reference:	"Glish: A User-Level Software Bus for Loosely-Coupled
		Distributed Systems," Vern Paxson and Chris Saltmarsh,
		Proceedings of the 1993 Winter USENIX Conference, San Diego,
		CA, January, 1993.
requires:	C++
ports:		SunOS, Ultrix, HP/UX (rusty)
updated:	1993/11/01

language:	ici
package:	ici
version:	?
parts:		interpreter, documentation, examples
author: 	Tim Long
location:	ftp pub/ici.tar.Z from ftp.su.edu.au
		ftp pub/oz/ici.tar.Z from nexus.yorku.ca
description:	ICI has dynamic arrays, structures and typing with the flow
		control constructs, operators and syntax of C.	There are
		standard functions to provided the sort of support provided
		by the standard I/O and the C libraries, as well as additional
		types and functions to support common needs such as simple
		data bases and character based screen handling.
features:	+ direct access to many system calls
		+ structures, safe pointers, floating point
		+ simple, non-indexed built in database
		+ terminal-based windowing library
ports:		Sun4, 80x86 Xenix, NextStep, MSDOS, HP-UX
portability:	high
status: 	actively developed.
discussion:	send "help" to listserv@research.canon.oz.au
contact:	Andy Newman <andy@research.canon.oz.au>
updated:	1994/04/18

language:	Icon
package:	icon
version:	8.8 (8.7, 8.5, 8.0 depending on platform)
parts:		interpreter, compiler (some platforms), library (v8.8)
author: 	Ralph Griswold <ralph@CS.ARIZONA.EDU>
location:	ftp icon/* from cs.arizona.edu
		MS-DOS version: ftp norman/iconexe.zip from bellcore.com
description:	Icon is a high-level, general purpose programming language that
		contains many features for processing nonnumeric data,
		particularly for textual material consisting of string of
		characters.
		- no packages, one name-space
		- no exceptions
		+ object oriented features
		+ records, sets, lists, strings, tables
		+ unlimited line length
		- unix interface is primitive
		+ co-expressions
reference:	"The Icon Programmming Language", Ralph E. Griswold and 
		Madge T. Griswold, Prentice Hall, seond edition, 1990.
		"The Implementation of the Icon Programmming Language", 
		Ralph E. Griswold and Madge T. Griswold, Princeton 
		University Press 1986
ports:		Amiga, Atari, CMS, Macintosh, Macintosh/MPW, MSDOS, MVS, OS/2,
		Unix (most variants), VMS, Acorn
discussion:	comp.lang.icon
contact:	icon-project@cs.arizona.edu
		mengarini@delphi.com for MS-DOS version
updated:	1992/08/21

language:	Icon
iref:		(BNF) ibpag2

language:	IVY
package:	Ivy
version:	experimental
parts:		interpreter
author: 	Joseph H Allen <jhallen@world.std.com>
location:	alt.sources 1993/09/28 <CE1wo3.74A@world.std.com>
description:	A language with a pleasant syntax compared to perl, tcl or
		lisp.  It has nice features like low punctuation count, blocks
		indicated by indentation, and similarity to normal procedural
		languages.  This language started out as an idea for an
		extension language for the editor JOE.
updated:	1993/09/28

language:	Korn Shell
package:	SKsh
version:	2.1
parts:		interpreter, utilities
author: 	Steve Koren <koren@hpfcogv.fc.hp.com>
location:	ftp pub/amiga/incom*/utils/SKsh021.lzh from hubcap.clemson.edu
description:	SKsh is a Unix ksh-like shell which runs under AmigaDos.
		it provides a Unix like environment but supports many
		AmigaDos features such as resident commands, ARexx, etc.
		Scripts can be written to run under either ksh or SKsh,
		and many of the useful Unix commands such as xargs, grep,
		find, etc. are provided.
ports:		Amiga
updated:	1992/12/16

language:	Korn Shell 
package:	Bash (Bourne Again SHell)
version:	1.14
parts:		parser(yacc), interpreter, documentation
author: 	Brian Fox <bfox@vision.ucsb.edu>
location:	ftp bash-1.14.tar.gz from a GNU archive site
description:	Bash is a Posix compatable shell with full Bourne shell syntax,
		and some C-shell commands built in.  The Bourne Again Shell
		supports emacs-style command-line editing, job control,
		functions, and on-line help.  
bugs:		gnu.bash.bug, bug-bash@prep.ai.mit.edu
restriction:	GNU General Public License
updated:	1994/06/02

language:	Korn Shell
package:	pdksh
version:	4.9
parts:		interpreter
author: 	Simon J. Gerraty <sjg@zen.void.oz.au>
location:	comp.sources.misc volume 4
description:	It is not intended to be the ultimate shell but rather a usable
		ksh work alike.
conformance:	Almost identical to ksh88, but missing arrays
ports:		Sun, 386bsd, ?
contact:	Simon J Gerraty <sjg@melb.bull.oz.au> (zen.void.oz.au is down)
updated:	1993/10/11

language:	LPC
package:	LPC4
version:	4.05.11
parts:		interpreter, bytecode compiler, documentation, sample scripts,
		sample mudlib
author:		Fredrik Hubinette <hubbe@lysator.liu.se>
location:	ftp://ftp.lysator.liu.se/pub/lpmud/drivers/profezzorn/
description:	A development of Lars Pensj|'s language for MUD, with
		script-running capability. LPC has a syntax similar to C,
		but works internally like Perl or some one-cell Lisp.
features:	mappings, dynamic arrays, binary strings (ie. they
		can contain zeros) and socket communication functions
restriction:	May currently not be used for monetary gain.
		(Imposed by Lars Pensj|)
requires:	yacc/byacc/bison
ports:		dynix, hp-ux, Sunos4, Solaris, Linux
portability:	Should work fine on most Unix.
discussion:	lpc4-request@lysator.liu.se
updated:	1994/06/04

language:	Perl5 (Practical Extraction and Report Language)
package:	perl
version:	5.0 alpha 3
parts:		interpreter, debugger, libraries, tests, documentation
author: 	Larry Wall <lwall@netlabs.com>
location:	ftp pub/perl5.0/* from ftp.netlabs.com 
description:	perl5 is a major rewrite and enhancement to perl4.  It adds
		real data structures (by way of "references"), un-adorned
		subroutine calls, and method inheritance.  It is not 
		stable (yet).
ports:		SunOS
updated:	1993/11

language:	Perl (Practical Extraction and Report Language)
package:	perl
version:	4.0 patchlevel 36
parts:		interpreter, debugger, libraries, tests, documentation
author: 	Larry Wall <lwall@netlabs.com>
location:	ftp pub/perl.4.0/* from jpl-devvax.jpl.nasa.gov 
    OS/2:	ftp pub/os2/all/unix/prog*/perl4019.zip from hobbes.nmsu.edu
    Macintosh:	ftp software/mac/src/mpw_c/Mac_Perl_405_* from nic.switch.ch
    Amiga:	ftp perl4.035.V010.* from wuarchive.wustl.edu
    VMS:	ftp software/vms/perl/* from ftp.pitt.edu
    Atari:	ftp amiga/Languages/perl* from atari.archive.umich.edu
    MSDOS:	ftp pub/msdos/perl/* from ftp.ee.umanitoba.ca
		ftp pub/msdos/perl/bperl* from oak.oakland.edu
    Windows NT: ftp pub/pc/win3/nt/ntperl*.zip from cica.cica.indiana.edu
    MVS:	ftp dist/perl-4036.tar.Z from oozelum.csi.cam.ac.uk
    Netware:	contact Jack Thomasson <Jack_Thomasson@Novell.COM>
description:	perl is an interpreted language optimized for scanning 
		arbitrary text files, extracting information from those text
		files, and printing reports based on that information.	It's
		also a good language for many system management tasks.	
reference:	"Programming Perl" by Larry Wall and Randal L. Schwartz,
		O'Reilly & Associates, Inc.  Sebastopol, CA.
		ISBN 0-93715-64-1
		"Learning Perl" by Randal L. Schwartz, 
		O'Reilly & Associates, Inc.  Sebastopol, CA.
		ISBN [??? --ed]
		The perl FAQ, ftp from rtfm.mit.edu
features:	+ very-high semantic density becuase of powerful operators
		like regular expression substitution
		+ exceptions, provide/require
		+ associative array can be bound to dbm files
		+ no arbitrary limits
		+ direct access to almost all system calls
		+ can access binary data 
		+ many powerful idioms for common tasks
		+ 8-bit clean, including nulls
		- three variable types: scalar, array, and hash table
		- syntax requires variable and function prefix characters
bugs:		comp.lang.perl; Larry Wall <lwall@netlabs.com>
ports:		almost all unix, MSDOS, Mac, Amiga, Atari, OS/2, VMS, NT, MVS
portability:	very high for unix, not so high for others
discussion:	comp.lang.perl
    Macintosh:	mpw-perl-request@iis.ee.ethz.ch
updated:	1993/02/07

language:	perl, awk, sed, find
package:	a2p, s2p, find2perl
version:	?
parts:		translators(perl)
author: 	Larry Wall
location:	comes with perl
description:	translators to turn awk, sed, and find programs into perl 
		programs.
updated:	?

language:	Perl
package:	perl profiler.
version:	? 1
parts:		profiler
author: 	Anthony Iano-Fletcher <arf@maths.nott.ac.uk>
location:	Source posted on comp.lang.perl in mid-June 1993
description:	Profiles Perl scripts (mkpprof).
		Collates data from Perl scripts (pprof)
updated:	1993/06/17

language:	Perl
package:	Dylperl
version:	?
parts:		?
author: 	Roberto Salama <rs@fi.gs.com>
location:	posted to comp.lang.perl, 1993/08/11, <CBM3Bo.Lpw@fi.gs.com>
description:	A dynamic linking package for perl.  Dynamically-loaded 
		functions are accessed as if they were user-defined funtions.
		This code is based on Oliver Sharp's May 1993 article in 
		Dr. Dobbs Journal (Dynamic Linking under Berkeley UNIX).
ports:		?
updated:	1993/08/11

language:	Perl
package:	curseperl
version:	?
parts:		?
author: 	Larry Wall <lwall@netlabs.com>
location:	comes with perl
description:	A curses library for perl
updated:	?

language:	Python
package:	Python
version:	1.0.2
parts:		interpeter, libraries, documentation, emacs macros
author: 	Guido van Rossum <guido@cwi.nl>
location:	ftp pub/python* from ftp.cwi.nl
    N.America:	ftp pub/plan/python/cwi from gatekeeper.dec.com
    Europe:	ftp pub/unix/languages/python from ftp.fu-berlin.de
description:	Python is a simple, yet powerful programming language
		that bridges the gap between C and shell programming,
		and is thus ideally suited for rapid prototyping.  Its
		syntax is put together from constructs borrowed from a
		variety of other languages; most prominent are
		influences from ABC, C, Modula-3 and Icon.  Python is
		object oriented and is suitable for fairly large programs.
		+ packages
		+ exceptions
		+ good C interface
		+ dynamic loading of C modules
		- arbitrary restrictions
reference:	Python documentation URL <http://www.cwi.nl/~guido/Python.html>
ports:		unix and Macintosh
discussion:	python-list-request@cwi.nl
updated:	1994/05/08

language:	Python
package:	vpApp
version:	0.2
parts:		Class Library, User Reference
author: 	Per Spilling <per@cwi.nl>
		Real Name <email@address>
location:	ftp.cwi.nl in /pub/python/vpApp.tar.gz.
description:	vpApp = visual-programming application.  It supports the
		building of applications in Python.
requires:	Python interpreter with built-in X support.
updated:	1994/05/06

language:	Q (also small subsets of Common Lisp and Scheme)
package:	Q
version:	? 1
parts:		interpreter, compiler framework, libraries, documentation
author: 	Per Bothner <bothner@cygnus.com>
location:	ftp pub/Q.* from ftp.cygnus.com
description:	Q is a very high-level programming language, and a test-bed
		for programming language ideas.  Where APL uses arrays
		to explicit looping, Q uses generalized sequences
		(finite or infinite, stored or calculated on demand).
		It has lexical scoping, and some support for logical and
		constraint programming.  The syntax was designed for
		convenient interactive use.  A macro facility together
		with primitives to run programs is used to make an
		interactive command language with full shell features.
		The Q system is written in C++, and its run-time code
		may be useful to people implementing other languages.
ports:		Linux and SUN 4
portability:	Should work on 32-bit Unix-like systems
updated:	1993/06/07

language:	REXX
package:	The Regina Rexx Interpreter
version:	0.05i
parts:		interpreter, documentation, test programs
author: 	Anders Christensen <anders@pvv.unit.no>
location:	ftp pub/rexx/regina-0.05g.tar.Z from flipper.pvv.unit.no
    N.America:	ftp pub/freerexx/regina/regina-0.05d.tar.Z
		from rexx.uwaterloo.ca
description:	A Rexx interpreter.  The VMS version has an almost complete
		set of DCL lexical functions in the interpreter.  Ports to
		MS-DOS and OS/2 exist by lack special support for these
		platforms.
conformance:	Almost completely to Rexx Language Level 4.00 with some 
		Rexx SAA API extensions.
restriction:	GNU General Public License
ports:		Unix, VMS, MS-DOS (partial), OS/2 (partial)
discussion:	comp.lang.rexx
updated:	1993/10/15

language:	REXX
package:	?
version:	102
parts:		interpreter
author: 	? al ? 
location:	ftp alrexx/rx102.tar.Z from rexx.uwaterloo.ca
    USA:	ftp ? from tony.cat.syr.edu
description:	?
requires:	C++
ports:		unix
discussion:	comp.lang.rexx
contact:	?
updated:	1992/05/13

language:	REXX
package:	REXX/imc
version:	1.6
parts:		Interpreter, documentation.
author: 	Ian Collier <imc@comlab.oxford.ac.uk>
location:	ftp pub/freerexx/imc/rexx-imc-1.6.tar.Z from rexx.uwaterloo.ca
description:	REXX for Unix.	A general-purpose programming language
		designed by Mike Cowlishaw of IBM UK for readability and
		ease of use.  Also useful as a control language for Unix
		or for applications which make use of REXX's programming
		interface (REXX/imc may be compiled as a dynamic C library
		for applications to include on some systems).  REXX is an
		official scripting language of VM/CMS, OS/2 and AmigaDOS.
conformance:	REXX language level 4.00 (more or less), with some small
		extensions.  The C programming interface is a subset of
		the SAA interface exhibited by OS/2 REXX.
reference:	"The REXX Language" 2nd edition, by M.F. Cowlishaw;
		Prentice-Hall 1990.
ports:		SunOS, AIX 3.2
portability:	Requires Unix-domain sockets (restriction may be relaxed in
		the future).  Dynamic link function dlopen() is useful but
		not essential.
status: 	Under slow development.  Contact author for help/support.
discussion:	comp.lang.rexx (general forum for all REXX-related products).
announcements:	comp.lang.rexx
updated:	1994/05/18

language:	sed
package:	GNU sed 
version:	2.04
parts:		interpreter, ?
author: 	Tom Lord <lord+@andrew.cmu.edu>
location:	ftp sed-* from a GNU archive site
description:	A SED interpreter.  Sed is a stream editing filter language.
features:	Modulo n line addressing.
bugs:		bug-gnu-utils@prep.ai.mit.edu
updated:	1994/04/30

language:	rc (Plan 9 shell)
package:	rc
version:	1.4
parts:		interpretor
author: 	Byron Rakitzis <byron@netapp.com>
location:	ftp pub/rc/* from ftp.white.toronto.edu
description:	a free implementation of the Plan 9 shell.
discussion:	rc-request@hawkwind.utcs.toronto.edu
updated:	1992/05/26

language:	S-Lang
package:	slang
version:	0.94
parts:		interpreter, documentation, examples
author: 	John E. Davis <davis@amy.tch.harvard.edu>
location:	ftp pub/slang/* from amy.tch.harvard.edu
description:	A small but highly functional embedded interpreter.  S-Lang was
		a stack-based postfix language resembling Forth and BC/DC with
		limited support for infix notation.   Now it has a C-like infix
		syntax.  Arrays, Stings, Integers, Floating Point, and
		Autoloading are all suported.  The editor JED embeds S-lang.
restriction:	GNU Library General Public License
ports:		MSDOS, Unix, VMS
portability:	Must be compiled with large memory model on MSDOS.
updated:	1993/06/12

language:	Snobol4
package:	SIL (Macro Implementation of SNOBOL4)
version:	3.11
parts:		?
author: 	?
location:	ftp snobol4/* from cs.arizona.edu
description:	?
contact:	snobol4@arizona.edu
updated:	1986/07/29

language:	Snobol4
package:	vanilla
version:	?
parts:		?
author: 	Catspaw, Inc.
location:	ftp snobol4/vanilla.arc from cs.arizona.edu
description:	?
ports:		MSDOS
contact:	?
updated:	1992/02/05

language:	ssh (Steve's Shell)
package:	ssh
version:	1.7
parts:		interpreter
author: 	Steve Baker <ice@judy.indstate.edu> with help from Thomas Moore
location:	comp.sources.unix volume 26
description:	A unix shell with a lot of csh/ksh-like features.
ports:		sequent, sun, next, ultrix, bsdi
updated:	1993/04/15

language:	subscript
package:	sub (seismic unix basic)
version:	0.9
parts:		Embedded interpreter, demo application, User's Guide,
		example inputs for demo.
author: 	Martin L. Smith (martin@ner.com)
location:	hilbert.mines.colorado.edu (138.67.12.63) in
		pub/cwpcodes/*sub*.tar
description:	subscript is a bytecode-compiled scripting language that
		provides a convenient way of manipulating binary stream
		data.  It is currently distributed embedded in a demo
		application (sub), which illustrates the processing of
		seismic data, but the interpreter/compiler core is
		portable to other applications.
features:	the interpreted language provides atomic manipulation
		of vectors of floating-point values.
requires:	yacc.
ports:		Unixware 1.x, SunOS 4.x, NextStep, Linux 0.99.
status: 	Undergoing active development, with future inclusion into
		the Colorado School of Mines' Seismic Unix package.
updated:	?

language:	TCL (Tool Command Language)
package:	Tcl
version:	7.3
parts:		interpreter, libraries, tests, documentation
author: 	John Ousterhout <ouster@cs.berkeley.edu>
location:	ftp.cs.berkeley.edu in ucb/tcl/tcl*
    MSDOS:	harbor.ecn.purdue.edu in /pub/tcl/distrib/mstcl73e.zip
    Macintosh:	bric-a-brac.apple.com in pub/ticl 
		harbor.ecn.purdue.edu in pub/tcl/distrib/MacTcl7.3.sea.*
    Examples:	ftp tcl/* from barkley.berkeley.edu
    Kanji:	ftp pub/lang/tcl/jp/tk3.2jp-patch.Z from srawgw.sra.co.jp
description:	A small text-oriented embedded language similar to LISP with
		add-on extensions that allow it to also function more as a
		shell.	TCL also allows algebraic expressions to be written
		for simplicity and convenience.  Its greatest strength lies
		in its uniform representation of everything as a string.
		This is also its weakness.
		+ may be used as an embedded interpreter
		+ exceptions, packages (called libraries)
		- only a single name-space
		+ provide/require
		- no dynamic loading ability
		+ 8-bit clean
		- only three variable types: strings, lists, associative arrays
bugs:		?
requires:	DOS port requires Desqview/X.
ports:		MSDOS, others in progress (see comp.lang.tcl FAQ)
discussion:	comp.lang.tcl
updated:	1993/11/15

language:	TCL, Tk
package:	Tk
version:	3.5
parts:		GUI library
author: 	John Ousterhout <ouster@sprite.Berkeley.EDU>
location:	ftp ucb/tcl/tk* from ftp.cs.berkeley.edu
description:	Tk is a X11 gui library that is designed to interoperate
		with TCL. It provides a very easy way to create sophisticated
		applications.  The appearence of Tk is very similar to Motif.
updated:	1993/11/15

language:	TCL
package:	BOS - The Basic Object System
version:	1.31
parts:		library
author: 	Sean Levy <Sean.Levy@cs.cmu.edu>
location:	ftp tcl/? from barkley.berkeley.edu
description:	BOS is a C-callable library that implements the notion of
		object and which uses Tcl as its interpreter for interpreted
		methods (you can have "compiled" methods in C, and mix compiled
		and interpreted methods in the same object, plus lots more
		stuff).  I regularly (a) subclass and (b) mixin existing
		objects using BOS to extend, among other things, the set of tk
		widgets (I have all tk widgets wrapped with BOS "classes"). BOS
		is a class-free object system, also called a prototype-based
		object system; it is modeled loosely on the Self system from
		Stanford.
updated:	1992/08/21

language:	TCL
package:	Tcl-DP
version:	3.0
parts:		library
author: 	Larry Rowe ?
location:	ftp pub/multimedia/Tcl-DP from toe.cs.berkeley.edu
description:	Tcl-DP extends the "send" by removing the restriction
		that you can only send to other clients of the same 
		X11 server.  [could someone give a better description? --ed]
updated:	?

language:	Tcl
package:	Tickle
version:	5.0v1
parts:		Text Editor, File Translator, TCL Interpreter
author: 	time@ice.com
location:	/pub/vendor/ice/tickle/Tickle5.0v1.hqx from ftp.msen.com
description:	A Macintosh TCL interprter and library.  It includes a 
		text editor (>32k); file translation utilities; support
		for tclX extensions; some unix-equivelent utilites; access
		to Macintosh functions (Resource Manager, Communications
		Toolbox, OSA Components, Editions, and Apple Events); OSA
		Script Support; and Drag and Drop.
bugs:		time@ice.com?
requires:	?
ports:		Mac
portability:	Mac-specific package
updated:	1994/01/12
lref:		TCL

language:	TCL
package:	Wafe
version:	0.95
parts:		interface
author: 	Gustaf Neumann <neumann@watson.ibm.com>
location:	ftp pub/src/X11/wafe/wafe-0.95.tar.gz from ftp.wu-wien.ac.at
description:	Wafe (Widget[Athena]front end) is a package that implements
		a symbolic interface to the Athena widgets (X11R5) and
		OSF/Motif.  A typical Wafe application consists of two
		parts: a front-end (Wafe) and an application program which
		runs typically as a separate process.  The distribution
		contains sample application programs in Perl, GAWK, Prolog,
		TCL, C and Ada talking to the same Wafe binary.
portability:	very high, just needs X11R4 or X11R5.
discussion:	send "subscribe Wafe <Your Name>" to listserv@wu-wien.ac.at
updated:	1993/07/01

language:	TCL
package:	Extended Tcl (tclx)
version:	7.3a
parts:		library
author:		Mark Diekhans <markd@Grizzly.com>,
		Karl Lehenbauer <karl@NeoSoft.com>
location:	ftp pub/tcl/distrib/tclX7.3a.tar.gz from ftp.neosoft.com
		ftp pub/tcl/extensions/tclX7.3a.tar.gz from
		   harbor.ecn.purdue.edu
description:	Extended Tcl adds statements to the TCL language to provide
		high-level access unix system primitives.
contact:	tcl-project@NeoSoft.com
updated:	1994/05/31

language:	TCL
package:	tcl-debug
version:	?
parts:		debugger
author: 	Don Libes <libes@cme.nist.gov>
location:	ftp pub/expect/tcl-debug.tar.Z from ftp.cme.nist.gov
description:	A debugger for Tcl that can be easily embedded in other
		applications.  It is included with many other Tcl libraries.
updated:	?

language:	TCL
package:	Cygnus Tcl Tools
version:	Release-930124
parts:		?
author: 	david d 'zoo' zuhn <zoo@cygnus.com>
location:	ftp pub/tcltools-* from cygnus.com
description:	A rebundling of Tcl and Tk into the Cyngus GNU build 
		framework with 'configure'.
updated:	1993/01/24

language:	Z-shell
package:	zsh
version:	2.3.1 (2.4 in beta)
parts:		interpreter
author: 	Paul Falstad <pf@ttisms.com>
location:	ftp pub/bas/zsh/zsh-*.tar.z from carlo.phys.uva.nl
description:	zsh is most similar to ksh, while many of the additions are to
		please csh users.
features:	+ multi-line commands editable as a single buffer,
		+ variable editing (vared),
		+ command buffer stack,
		+ recursive globbing,
		+ manipulation of arrays,
		+ spelling correction.
ports:		Berkeley-based Unix, SVR4-based Unix 
discussion:	zsh-request@cs.uow.edu.au
contact:	zsh-list@cs.uow.edu.au
updated:	1993/03/23

functional languages
-------------------------------------------------------------------------------
category:	functional languages
description:	[someone have a good one-liner?  --ed]
lref:		es
lref:		LIFE
lref:		ALLOY

language:	Caml
package:	CAML
version:	3.1
parts:		compiler, interactive development environment
author: 	Ascander Suarez, Pierre Weis, Michel Mauny, others (INRIA)
location:	ftp lang/caml/* from ftp.inria.fr
description:	Caml is a programming language from the ML/Standard ML family,
		with functions as first-class values, static type inference
		with polymorphic types, user-defined variant and product
		types, and pattern-matching. The CAML V3.1 implementation
		adds lazy and mutable data structures, a "grammar" mechanism
		for interfacing with the Yacc parser generator,
		pretty-printing tools, high-performance arbitrary-precision
		arithmetic, and a complete library.
bugs:		caml@margaux.inria.fr
ports:		Sun-3 Sun-4 Sony-68k Sony-R3000 Decstation Mac-A/UX Apollo
portability:	low (built on a proprietary runtime system)
status: 	maintained but no longer developed
discussion:	caml-list@margaux.inria.fr, comp.lang.ml
contact:	Pierre Weis <Pierre.Weis@inria.fr>
updated:	1991/10/20

language:	Caml 
package:	Caml Light
version:	0.6
parts:		bytecode compiler, emacs mode, libraries, scanner generator, 
		parser generator, runtime, interactive development environment
author: 	Xavier Leroy, Damien Doligez (INRIA)
location:	ftp lang/caml-light/* from ftp.inria.fr
description:	Caml is a programming language from the ML/Standard ML family,
		with functions as first-class values, static type inference
		with polymorphic types, user-defined variant and product
		types, and pattern-matching. The Caml Light implementation
		adds a Modula-2-like module system, separate compilation,
		lazy streams for parsing and printing, graphics primitives,
		and an interface with C.
features:	very small
bugs:		caml-light@margaux.inria.fr
ports:		most unix, Macintosh, MSDOS (16 and 32 bit modes), Atari ST
portability:	very high
status: 	actively developed
discussion:	caml-list@margaux.inria.fr, comp.lang.ml
contact:	Xavier Leroy <Xavier.Leroy@inria.fr>
updated:	1993/10/06

language:	CAML, Bigloo
package:	Camloo
version:	0.2
parts:		?
author: 	? Manuel.Serrano@inria.fr, Pierre.Weis@inria.fr
location:	ftp from ftp.inria.fr [192.93.2.54], in Camloo0.2
    N.America:	Sites for North Americans.
description:	An implementation of CAML in Bigloo.  It can be considered as
		an alternative to the regular camlc compiler.  In particular,
		it has successfully compiled many complex Caml Light programs,
		including camlc and the Coq system (the ``calculus of
		constructions'', a proof assistant).
conformance:	Full compliance with Caml Light 0.6 and Caml Light Libraries
		(including camlyacc and camllex).
requires:	Bigloo1.6c (available from same address).
contact:	Manuel.Serrano@inria.fr, Pierre.Weis@inria.fr.
updated:	1994/06/13

language:	Concurrent Clean
package:	The Concurrent Clean System
version:	0.8.1
parts:		development environment, documentation, compiler(byte-code), 
		compiler(native), interpreter(byte-code), examples
author: 	Research Institute for Declarative Systems, 
		University of Nijmegen
location:	ftp pub/Clean/* from ftp.cs.kun.nl 
description:	The Concurrent Clean system is a programming environment for
		the functional language Concurrent Clean, developed at the
		University of Nijmegen, The Netherlands. The system is one of
		the fastest implementations of functional languages available
		at the moment. Its I/O libraries make it possible to do modern,
		yet purely functional I/O (including windows, menus, dialogs
		etc.) in Concurrent Clean. With the Concurrent Clean system it
		is possible to develop real-life applications in a purely
		functional language.
		* lazy and purely functional
		* strongly typed - based on Milner/Mycroft scheme
		* module structure
		* modern I/O
		* programmer-infulenced evaluation order by annotations
ports:		Sun-3, Sun-4, Macintosh
contact:	clean@cs.kun.nl
updated:	1992/11/07

language:	FP
package:	? funcproglang ?
version:	?
parts:		translator(C)
author: 	?
location:	comp.sources.unix archive volume 13
description:	? Backus Functional Programming ?
updated:	?

language:	Gofer (Haskell derivative)
package:	Gofer
version:	2.28b
parts:		interpreter, compiler(->C), documentation, examples
author: 	Mark Jones <jones-mark@cs.yale.edu>
location:	ftp pub/haskell/gofer/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/gofer/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/gofer/* from ftp.cs.chalmers.se
description:	Gofer is based quite closely on the Haskell programming
		language, version 1.2.	It supports lazy evaluation, higher
		order functions, pattern matching, polymorphism, overloading
		etc and runs on a wide range of machines.
conformance:	Gofer does not implement all of Haskell, although it is 
		very close.
ports:		many, including Sun, PC, Mac, Atari, Amiga
status: 	maintained but not developed (for a while anyway)
updated:	1993/08/02

language:	Gofer
iref:		(BNF) Ratatosk

language:	Haskell
package:	Chalmers Haskell (aka Haskell B.)
version:	0.999.5
parts:		compiler, interpreter, library, documentation, examples
author: 	Lennart Augustsson <augustss@cs.chalmers.se>
location:	ftp pub/haskell/chalmers/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/chalmers/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/chalmers/* from ftp.cs.chalmers.se
description:	Full-featured implementation of Haskell 1.2, 
		with quite a few "Haskell B" extensions
requires:	LML
ports:		many, including Sun, DEC, Sequent, PC, Symmetry
		(unsupported versions for NS32000, RT/PC, CRAY, SUN3, VAX,
		ARM, and RS6000.)
discussion:	haskell-request@cs.yale.edu
    Europe:	haskell-request@dcs.glasgow.ac.uk
contact:	hbc@cs.chalmers.se
updated:	1993/08/02

language:	Haskell
package:	Glasgow Haskell Compiler (GHC)
version:	0.19
parts:		translator (C, SPARC), profiler
author: 	AQUA project, headed by Simon Peyton Jones
		<simonpj@dcs.glasgow.ac.uk>
location:	ftp pub/haskell/glasgow/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/glasgow/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/glasgow/* from ftp.cs.chalmers.se
description:	A near complete subset of Haskell 1.2, with numerous
		extensions.
conformance:	Almost all of Haskell 1.2 is implemented.
reference:	Papers at ftp.dcs.glasgow.ac.uk (only) in pub/glasgow-fp,
		"Imperative functional programming",
		Peyton Jones & Wadler, POPL '93
		"Unboxed data types as first-class citizens",
		Peyton Jones & Launchbury, FPCA '91
		"Profiling lazy functional languages",
		Sansom & Peyton Jones, Glasgow workshop '92
		"Implementing lazy functional languages on stock hardware",
		Peyton Jones, Journal of Functional Programming, Apr 1992
features:	An extensible I/O system is provided, based on a "monad"
		In-line C code
		Fully fledged unboxed data types,
		Incrementally-updatable arrays
		Mutable reference types.
		Generational garbage collector
bugs:		<glasgow-haskell-bugs@dcs.glasgow.ac.uk>
requires:	GNU C 2.1+, perl
ports:		solid: Sun4, Sun3; sort of: HP-PA, Alpha, DECstation
portability:	should be high
contact:	<glasgow-haskell-request@dcs.glasgow.ac.uk>
updated:	1993/12/17

language:	Haskell
package:	Yale Haskell
version:	2.0.5
parts:		compiler, documentation, reference manual (dvi format)
author: 	Yale Haskell project <haskell-request@cs.yale.edu>
location:	ftp pub/haskell/yale/* from nebula.cs.yale.edu
    UK: 	ftp pub/haskell/yale/* from ftp.dcs.glasgow.ac.uk
    Sweden:	ftp pub/haskell/yale/* from ftp.cs.chalmers.se
description:	?
features:	X-window interface, available at the Haskell level too.
requires:	CMU Common Lisp, Lucid, Common Lisp, Allegro Common Lisp, or
		Harlequin LispWorks
ports:		SunOS 4.1.2, Sparc 10 (sun4m) 4.1.3
discussion:	haskell-request@cs.yale.edu
    Europe:	haskell-request@dcs.glasgow.ac.uk
contact:	haskell-request@cs.yale.edu
updated:	1993/07/14

language:	Hope
package:	?
version:	?
parts:		?
author: 	?
location:	ftp ? from brolga.cc.uq.oz.au
description:	Functional language with polymorphic types and lazy lists.
		First language to use call-by-pattern.
ports:		Unix, Mac, PC
updated:	1992/11/27

language:	IFP (Illinois Functional Programming)
package:	ifp
version:	0.5
parts:		interpreter
author: 	Arch D. Robison <robison@shell.com>
location:	comp.sources.unix archive volume 10
description:	A variant of Backus' "Functional Programming" language
		with a syntax reminiscent of Modula-2.	The interpreter
		is written in portable C.
reference:	[1] Arch D. Robison, "Illinois Functional Programming: A
		Tutorial," BYTE, (February 1987), pp. 115--125.
		[2] Arch D. Robison, "The Illinois Functional
		Programming Interpreter," Proceedings of 1987 SIGPLAN
		Conference on Interpreters and Interpretive Techniques,
		(June 1987), pp. 64-73
ports:		Unix, MS-DOS, CTSS (Cray)
updated:	?

language:	ML
package:	LML
version:	?
parts:		compiler(?), interactive environment
author: 	?
location:	ftp pup/haskell/chalmers/* from animal.cs.chalmers.se
description:	lazy, completely functional variant of ML.
ports:		?
contact:	?
updated:	1992/07/06

language:	Standard ML
package:	SML/NJ (Standard ML of New Jersey)
version:	0.93
parts:		compiler, libraries, extensions, interfaces, documentation,
		build facility
author: 	D. B. MacQueen <dbm@research.att.com>, Lal George 
		<george@research.att.com>, AJ. H. Reppy <jhr@research.att.com>,
		A. W. Appel <appel@princeton.edu>
location:	ftp dist/ml/* from research.att.com
description:	Standard ML is a modern, polymorphically typed, (impure)
		functional language with a module system that supports flexible
		yet secure large-scale programming.  Standard ML of New Jersey
		is an optimizing native-code compiler for Standard ML that is
		written in Standard ML.  It runs on a wide range of
		architectures.	The distribution also contains:
		+ an extensive library - The Standard ML of New Jersey Library,
		including detailed documentation.
		+ CML - Concurrent ML
		+ eXene - an elegant interface to X11 (based on CML)
		+ SourceGroup - a separate compilation and "make" facility
		CML, eXene and SourceGroup not in the Macintosh port, but the
		Mac port has a built-in editor.
ports:		M68K, SPARC, MIPS, HPPA, RS/6000, I386/486, Macintosh
updated:	1993/02/18

language:	Concurrent ML
package:	Concurrent ML
version:	0.9.8
parts:		extension
author: 	?
location:	ftp pub/CML* from ftp.cs.cornell.edu or get SML/NJ
description:	Concurrent ML is a concurrent extension of SML/NJ, supporting
		dynamic thread creation, synchronous message passing on
		synchronous channels, and first-class synchronous operations.
		First-class synchronous operations allow users to tailor their
		synchronization abstractions for their application.  CML also
		supports both stream I/O and low-level I/O in an integrated
		fashion.
bugs:		sml-bugs@research.att.com
requires:	SML/NJ 0.75 (or later)
updated:	1993/02/18

language:	SASL
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Standard ML
package:	sml2c
version:	?
parts:		compiler(->C), documentation, tests
author: 	School of Computer Science, Carnegie Mellon University 
location:	ftp /usr/nemo/sml2c/sml2c.tar.Z from dravido.soar.cs.cmu.edu
    Linux:	ftp pub/linux/smlnj-0.82-linux.tar.Z from ftp.dcs.glasgow.ac.uk
description:	sml2c is a Standard ML to C compiler.  sml2c is a batch
		compiler and compiles only module-level declarations,
		i.e. signatures, structures and functors.  It provides
		the same pervasive environment for the compilation of
		these programs as SML/NJ.  As a result, module-level
		programs that run on SML/NJ can be compiled by sml2c
		without any changes.  Based on SML/NJ version 0.67 and shares
		front end and most of its runtime system, but does not support
		SML/NJ style debugging and profiling.
conformance:	superset
		+ first-class continuations,
		+ asynchronous signal handling
		+ separate compilation 
		+ freeze and restart programs
ports:		IBM-RT Decstation3100 Omron-Luna-88k Sun-3 Sun-4 386(Mach)
portability:	easy, easier than SML/NJ
contact:	david.tarditi@cs.cmu.edu anurag.acharya@cs.cmu.edu 
		peter.lee@cs.cmu.edu
updated:	1991/06/27

language:	Standard ML
package:	The ML Kit
version:	1
parts:		interprter, documentation
author: 	Nick Rothwell, David N. Turner, Mads Tofte <tofte@diku.dk>,
		and Lars Birkedal at Edinburgh and Copenhagen Universities.
location:	ftp diku/users/birkedal/* from ftp.diku.dk
    UK: 	ftp export/ml/mlkit/* from lfcs.ed.ac.uk
description:	The ML Kit is a straight translation of the Definition of
		Standard ML into a collection of Standard ML modules.  For
		example, every inference rule in the Definition is translated
		into a small piece of Standard ML code which implements it. The
		translation has been done with as little originality as
		possible - even variable conventions from the Definition are
		carried straight over to the Kit.  The Kit is intended as a
		tool box for those people in the programming language community
		who may want a self-contained parser or type checker for full
		Standard ML but do not want to understand the clever bits of a
		high-performance compiler. We have tried to write simple code
		and modular interfaces.
updated:	1993/03/12

language:	SISAL 1.2
package:	The Optimizing SISAL Compiler
version:	12.0
parts:		compiler?, manuals, documentation, examples, debugger,...
author: 	David C. Cann <cann@sisal.llnl.gov>
location:	ftp pub/sisal from sisal.llnl.gov
description:	Sisal is a functional language designed to be competitive with
		Fortran, and other imperative languages for scientific jobs.  
		In particualar, OSC uses advanced optimizing techniques to 
		achieve fast speeds for computation intensive programs.  
		It also features routines for making efficient use
		of parallel processors, such as that on the Cray.
ports:		?
updated:	?

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p2of5]
Message-ID: <free2-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free2-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free1-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:24 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1309
Xref: bloom-beacon.mit.edu comp.compilers:3317 comp.lang.misc:5186 comp.archives.admin:676 news.answers:23368 comp.answers:6566

Archive-name: free-compilers/part2
Last-modified: 1994/6/30
Version: 6.5

C variants
-------------------------------------------------------------------------------
category:	C variants
description:	These are languages that are closely based on C.  
lref:		C-Refine, C++-Refine, *-Refine			
lref:		(C,Duel) Duel (a <practical> C debugging language)	

language:	C, C++, Objective-C, RTL
package:	GNU CC (gcc)
version:	2.5.8
parts:		compiler, runtime, examples, documentation
		Library listed separately
author: 	Richard Stallman <gnu@prep.ai.mit.edu> and others
location:	ftp gcc-2.X.X.tar.gz from a GNU archive site
    MSDOS:	ftp pub/msdos/djgpp/* from oak.oakland.edu
    6811:	ftp pub/coactive/gcc-6811-beta.tar.gz from netcom.com
			(these are diffs from 2.5.8 distribution)
description:	A very high quality, very portable compiler for C, C++,
		Objective-C.  The compiler is designed to support multiple
		front-ends and multiple back-ends by translating first
		into RTL (Register Transfer Language) and from there into
		assembly for the target architecture.	Front ends for
		Ada, Pascal, and Fortran are all under development.
conformance:	C: superset of K&R C and ANSI C.
		C++: not exactly cfront 3.0? [could someone tell me which
		version of cfront it is equivalent to, if any?	--ed]
		Objective-C: ?
bugs:		gnu.gcc.bug
restriction:	GNU General Public License
ports:		3b1, a29k, aix385, alpha, altos3068, amix, arm, convex,
		crds, elxsi, fx2800, fx80, genix, hp320, clipper,
		i386-{dos,isc,sco,sysv.3,sysv.4,mach,bsd,linux,windows,OS/2},
		iris,i860, i960, irix4, m68k, m88ksvsv.3, mips-news,
		mot3300, next, ns32k, nws3250-v.4, hp-pa, pc532,
		plexus, pyramid, romp, rs6000, sparc-sunos, 
		sparc-solaris2, sparc-sysv.4, spur, sun386, tahoe, tow,
		umpis, vax-vms, vax-bsd, we32k, hitachi-{SH,8300}, 6811
portability:	very high
status: 	actively developed
discussion:	gnu.gcc.help
announcements:	gnu.gcc.announce
updated:	1993/11/27

language:	C, C++, Objective-C, RTL
package:	GNU CC (gcc) - unsupported Macintosh port
version:	1.37
parts:		compiler, runtime, examples, documentation
		Library listed separately
author: 	?
location:	ftp mpw-gcc-1.37.1r14 from ?
description:	This is an unsupported port of the GNU C compiler to the
		Macintosh environment. Note that the GNU project is actively
		supporting the League for Programming Freedom (LPF) boycott
		of Apple due to the "Look and Feel" lawsuit.
bugs:		?
restriction:	GNU General Public License
ports:		Macintosh
portability:	very high
status: 	?
updated:	1993/11/27

language:	C, FORTRAN, SUIF
package:	Stanford SUIF Compiler
version:	1.0.1
parts:		compiler(->C, ->MIPS), run-time, documentation, examples
author: 	"Stanford Compiler Group" <suif@hawg.stanford.edu>
location:	ftp pub/suif/suif-1.0.1.tar.Z from suif.stanford.edu
                http://suif.Stanford.EDU.
		(Patch to version 1.0 also available)
description:	SUIF is a framework for research in compiler algorithms.
		It contains a kernel, which supports the Stanford
		University Intermediate Format (file I/O, manipulation,
		etc.), and a toolkit consisting of passes and libraries
		for dependence analysis, loop transformations,
		scalar optimizations, code generation, etc.  Can generate
		parallel code from major benchmarks.
conformance:	C front end is ANSI-C compatible, FORTRAN front end mostly f77
reference:	Wide range of published papers available from ftp site
restriction:	Free for non-commercial use; redistribution prohibited
requires:	GNU g++ 2.5.8, GNU make
ports:		DECstation, SPARC/SunOS/Solaris, SGI, Linux
portability:	Very system independent - requires UNIX
status: 	First public release; not supported, but we'll try to help
discussion:	Mailing list information included in distribution
		Archives available from http://suif.stanford.edu
updated:	1994/06/15

language:	C
package:	GNU C Library (glibc)
version:	1.08.1
parts:		library
author: 	?
location:	ftp glibc-1.08.1.tar.gz from a GNU archive site
		Source for "crypt" must be FTP'ed from non-USA site if you are
		outside the USA (site: glibc-1.06-crypt.tar.z from
		ftp.uni-c.dk [129.142.6.74]).
description:	The run-time library for the GNU C compiler, gcc.  The source
		for libc.a.  This package is separately maintained.
conformance:	ANSI and POSIX.1 superset.  Large subset of POSIX.2
bugs:		Reports sent to mailing list bug-glibc@prep.ai.mit.edu.
updated:	1994/06/06

language:	C
package:	fdlibm
version:	?
parts:		library
author: 	Dr. K-C Ng
location:	ftp netlib/fdlibm.tar from netlib.att.com
description:	Dr. K-C Ng has developed a new version of libm that is the
		basis for the bundled /usr/lib/libm.so in Solaris 2.3 for SPARC
		and for future Solaris 2 releases for x86 and PowerPC.	 It
		provides the standard functions necessary to pass the usual
		test suites.  This new libm can be configured to handle
		exceptions in accordance with various language standards or in
		the spirit of IEEE 754. The C source code should be portable to
		any IEEE 754 system with minimal difficulty.
conformance:	IEEE 754
bugs:		Send comments and bug reports to:
		fdlibm-comments@sunpro.eng.sun.com.
updated:	1993/12/18

language:	C
package:	c68/c386
version:	4.2a
parts:		compiler
author: 	Matthew Brandt, Christoph van Wuellen, Keith and Dave Walker
location:	ftp pub/Minix/common-pkgs/c386-4.2.tar.Z from bugs.nosc.mil
description:	K&R C plus prototypes and other ANSI features.
		targetted to several 68k and i386 assemblers, incl. gas.
		floating point support by inline code or emulation.
		lots of available warnings.  better code generation than ACK.
ports:		386 and 68k Minix.  generic unix actually.
status: 	actively worked on by the Walkers.
discussion:	comp.os.min
updated:	?

language:	C
package:	GNU superoptimizer
version:	2.2
parts:		exhaustive instruction sequence optimizer
author: 	Torbjorn Granlund <tege@gnu.ai.mit.edu> with Tom Wood
location:	ftp superopt-2.2.tar.Z from a GNU archive site
description:	GSO is a function sequence generator that uses an exhaustive
		generate-and-test approach to find the shortest instruction
		sequence for a given function.	You have to tell the
		superoptimizer which function and which CPU you want to get
		code for.
		This is useful for compiler writers.
bugs:		Torbjorn Granlund <tege@gnu.ai.mit.edu>
restriction:	GNU General Public License
ports:		Alpha, Sparc, i386, 88k, RS/6000, 68k, 29k, Pyramid(SP,AP,XP)
updated:	1993/02/16

language:	C
package:	xdbx
version:	2.1
parts:		X11 front end for dbx
author: 	?
location:	retrieve xxgdb from comp.sources.x volumes 11, 12, 13, 14, & 16
description:	?
contact:	Po Cheung <cheung@sw.mcc.com>
updated:	1992/02/22

language:	C
package:	ups
version:	2.1
parts:		interpreter, symbolic debugger, tests, documentation
author: 	Mark Russell <mtr@ukc.ac.uk>
location:	? ftp from contrib/ups*.tar.Z from export.lcs.mit.edu ?
    unofficial: unofficial enhancements by Rod Armstrong <rod@sj.ate.slb.com>,
		available by ftp misc/unix/ups/contrib/rob from sj.ate.slb.com
description:	Ups is a source level C debugger that runs under X11 or 
		SunView.  Ups includes a C interpreter which allows you to add 
		fragments of code simply by editing them into the source window
bugs:		Mark Russell <mtr@ukc.ac.uk>
ports:		Sun, Decstation, VAX(ultrix), HLH Clipper
discussion:	ups-users-request@ukc.ac.uk
updated:	1991/05/20

language:	C
package:	C-Interp 
version:	?
parts:		interpreter
author: 	?
location:	ftp Mac/Misc/C_Interp.sit from oac2.hsc.uth.tmc.edu
description:	An interpreter for a small subset of C, originally part of a
		communications package.
contact:	? Chuck Shotton <cshotton@oac.hsc.uth.tmc.edu>
updated:	1993/05/14

language:	C
package:	ae (application executive)
version:	1?
parts:		interpreter
author: 	Brian Bliss <bliss@sp64.csrd.uiuc.edu> [Is this right? --ed]
location:	ftp pub/at.tar.Z from sp2.csrd.uiuc.edu
description:	ae (the "application executive") is a C interpreter library
		which is compiled with an application; hence, the interpreter
		exists in the same process and address space.  it includes a
		dbx symbol table scanner to access compiled vars & routines, or
		you can enter them manually by providing a type/name
		declaration and the address.  when the interpreter is invoked,
		source code fragments are read from the input stream (or a
		string), parsed, and evaluated immediately.  The user can call
		compiled functions in addition to a few built-in intrinsics,
		declare new data types and data objects, etc.  Different input
		streams can be evaluated in parallel on alliant machines.
ports:		SunOS (cc or gcc), Alliant FX, Cray YMP (soon)
updated:	1992/04/21

language:	C (ANSI), lcc
package:	lcc
version:	1.8
parts:		compiler, test suite, documentation
author: 	Dave Hanson <drh@cs.princeton.edu>
location:	ftp pub/lcc/lccfe-*.tar.Z from princeton.edu
description:	+ hand coded C parser (faster than yacc)
		+ retargetable
		+ code "as good as GCC"
ports:		vax (mips, sparc, 68k backends are commercial)
status: 	small-scale production use using commerical backends; the
		commercial backends are cheap (free?) to universities.
discussion:	lcc-requests@princeton.edu
updated:	1992/02/20

language:	C, lcc 
package:	Chop
version:	0.6
parts:		code generator
author: 	Alan L. Wendt <wendt@CS.ColoState.EDU>
location:	ftp pub/chop/0.6.tar.Z from beethoven.cs.colostate.edu
description:	The current revision, 0.6, is interfaced with Fraser and
		Hanson's lcc front end.  The result is a highly fast C compiler
		with good code selection and no global optimization.
		Project Status: Chop compiles and runs a number of small test
		programs on the Vax.  I'm currently updating the NS32k and 68K
		retargets for lcc compatibility.  After I get them working,
		I'll work on getting the system to compile itself, get struct
		assignments working, improve the code quality and compile
		speed, and run the SPEC benchmarks.  That will be rev 1.0.
reference:	"Fast Code Generation Using Automatically-Generated Decision 
		Trees", ACM SIGPLAN '90 PLDI
updated:	1993/04/28

language:	C
package:	GCT
version:	1.4
parts:		test-coverage-preprocessor
author: 	Brian Marick <marick@cs.uiuc.edu>
location:	ftp pub/testing/gct.file/ftp.* from cs.uiuc.edu
description:	GCT is test-coverage tool based on GNU C.  Coverage tools 
		measure how thoroughly a test suite exercises a program.
restriction:	CopyLeft
ports:		sun3, sun4, rs/6000, 68k, 88k, hp-pa, ibm 3090,
		ultrix, convex, sco
discussion:	Gct-Request@cs.uiuc.edu
support:	commercial support available from author, (217) 351-7228
updated:	1993/02/12

language:	C
package:	MasPar mpl, ampl
version:	3.1
parts:		compiler
author: 	?
location:	ftp put/mpl-* from maspar.maspar.com
description:	mpl & ampl - the intrinsic parallel languages for MasPar's
		machines are C (ampl is actually a gcc port these days). You
		can get the source from marpar.com.
contact:	?
updated:	?

language:	C
package:	gc
version:	3.4
parts:		library
author: 	Hans-J. Boehm <boehm@parc.xerox.com>, Alan J. Demers
location:	ftp pub/russell/gc3.4.tar.Z from parcftp.xerox.com
description:	This is a garbage colecting storage allocator that is intended
		to be used as a plug-in replacement for C's malloc.  Since the
		collector does not require pointers to be tagged, it does not
		attempt to ensure that all inaccessible storage is reclaimed.
		However, in our experience, it is typically more successful at
		reclaiming unused memory than most C programs using explicit
		deallocation.  Unlike manually introduced leaks, the amount of
		unreclaimed memory typically stays bounded.
ports:		Sun-3, Sun-4 , Vax/BSD, Ultrix, i386/Unix, SGI, Alpha/OSF/1,
		Sequent (single threaded), Encore (single threaded),
		RS/600, HP-UX, Sony News, A/UX, Amiag, NeXT.  
updated:	1993/11/05

language:	C
package:	dsp56k-gcc
version:	?
parts:		compiler
author: 	?
location:	ftp pub/ham/dsp/dsp56k-tools/dsp56k-gcc.tar.Z from nic.funet.fi
    Australia:	ftp pub/micros/56k/g56k.tar.Z from evans.ee.adfa.oz.au
description:	A port of gcc 1.37.1 to the Motorola DSP56000 done by 
		Motorola
contact:	?
updated:	?

language:	C
package:	dsp56165-gcc
version:	?
parts:		compiler
author: 	Andrew Sterian <asterian@eecs.umich.edu>
location:	ftp usenet/alt.sources/? from wuarchive.wustl.edu	
description:	A port of gcc 1.40 to the Motorola DSP56156 and DSP56000.
updated:	?

language:	C
package:	Harvest C
version:	1.3
parts:		compiler, assembler, linker.
author: 	?
location:	ftp mac/development/languages/harves* from archive.umich.edu
description:	The parts of the system are all integrated in a unique
		application, which manages a "project" composed by several C
		source files and resource files (which contain data).
ports:		Macintosh
contact:	Eric W. Sink
updated:	1992/05/26

language:	C, C++
package:	Cyclo - cyclomatic complexity tool
version:	the one and only version
parts:		code analysis tool
author: 	Roger D Binns 
location:	alt.sources archive, 1993/06/28, <C9C2rH.EE@brunel.ac.uk>
description:	It measures cyclomatic complexity, shows function calls and 
		can draw flowgraphs of ANSI C and C++ code.
requires:	lex, C++
updated:	1993/06/28

language:	C
package:	cxref
version:	?
parts:		code analysis tool
author: 	Arnold Robbins <arnold@gatech.?>
location:	use archie
description:	A cross-reference genrator
updated:	?

language:	C
package:	xref
version:	?
parts:		code analysis tool
author: 	Jim Leinweber
location:	use archie
description:	A cross-reference genrator
updated:	1985?

language:	C, C++
package:	Xcoral
version:	1.72
parts:		editor
author: 	?
location:	ftp X/contrib/clients/xcoral* from ftp.inria.fr
description:	Xcoral is a multiwindows mouse-based text editor, for X Window
		System, with a built-in browser to navigate through C functions
		and C++ classes hierarchies...	Xcoral provides variables width
		fonts, menus, scrollbars, buttons, search, regions,
		kill-buffers and 3D look.  Commands are accessible from menus
		or standard key bindings. Xcoral is a direct Xlib client and
		run on color/bw X Display.
contact:	?
updated:	1993/03/14

language:	C++
package:	Lily (LIsp LibrarY)
version:	0.1
parts:		library
author: 	Roger Sheldon <sheldon@kong.gsfc.nasa.gov>
location:	ftp uploads/lily-0.1.tar.gz from sunsite.unc.edu
description:	Lilly is a C++ class library which gives C++ programmers the
		capability to write LISP-style code.  Lily's garbage collection
		mechanism is not sufficient for commercial use.  The
		documentation is incomplete.
restriction:	GNU Library General Public License
requires:	C++ (g++ or Turbo C++, but not cfront)
updated:	1993/11/08

language:	C++
package:	C++SIM
version:	1.0
parts:		library
author: 	Mark Little <M.C.Little@newcastle.ac.uk>
location:	ftp ? from arjuna.ncl.ac.uk
description:	C++SIM is a class library that provides the same sort of
		features found in the simulation class libraries of SIMULA.
updated:	1993/06/14

language:	C++
package:	? signatures for GCC 2.5.2. ?
version:	?
parts:		patches to GNU CC, documentation
author: 	Gerald Baumgartner <gb@cs.purdue.edu>
location:	ftp pub/gb/* from ftp.cs.purdue.edu
description:	Signatures are very similar to abstract base classes except
		that they have their own heirarchy and can be applied to
		compiled classes.  They provide a means of separating
		subtyping and inheritance.
requires:	GNU CC 2.5.2
updated:	1993/11/03

language:	C++
package:	aard ???
version:	?
parts:		memory use tracer
author: 	?
location:	ftp pub/aard.tar.Z from wilma.cs.brown.edu
description:	We have a prototype implementation of a tool to do memory
		checking.  It works by keeping track of the typestate of each
		byte of memory in the heap and the stack.  The typestate can be
		one of Undefined, Uninitialized, Free or Set.  The program can
		detect invalid transitions (i.e. attempting to set or use
		undefined or free storage or attempting to access uninitialized
		storage).  In addition, the program keeps track of heap
		management through malloc and free and at the end of the run
		will report all memory blocks that were not freed and that are
		not accessible (i.e.  memory leaks).
		The tools works using a spliced-in shared library.
requires:	Sparc, C++ 3.0.1, SunOS 4.X
contact:	Steve Reiss <spr@cs.brown.edu>
updated:	?

language:	C++
package:	ET++
version:	3.0-alpha
parts:		class libraries, documentation
author: 	?
location:	ftp C++/ET++/* from iamsun.unibe.ch
description:	?
contact:	Erich Gamma <gamma@ifi.unizh.ch>
updated:	1992/10/26

language:	C++
package:	C++ grammar
version:	?
parts:		parser (yacc)
author: 	?
location:	comp.sources.misc volume ?
description:	[is this a copy of the Roskind grammar or something else? --ed]
updated:	1991/10/23

language:	C++
package:	cppp
version:	1.14
parts:		parser (yacc)
author: 	Tony Davis <ted@cs.brown.edu>
location:	wilma.cs.brown.edu:/pub/cppp.tar.Z
description:	A compiler front-end for C++, with complete semantic
		processing.  Outputs abstract syntax graph.
restriction:	Permission needed for incorporation into commercial software.
requires:	Native C++ compiler, lex, yacc, make, sed (or hand editing)
status: 	Upgrading the back end.
updated:	1993/05/26

language:	C++
package:	C++ Object Oriented Library
version:	COOL ?, GECOOL 2.1, JCOOL 0.1
parts:		libraries, tests, documentation
author: 	?
location:	GECOOL, JCOOL: ftp pub/COOL/* from cs.utexas.edu
		COOL: ftp pub/COOL.tar.Z from csc.ti.com
description:	A C++ class library developed at Texas Instruments.  Cool
		contains a set of containers like Vectors, List, Hash_Table,
		etc.  It uses a shallow hierarchy with no common base class.
		The funtionality is close to Common Lisp data structures (like
		libg++).  The template syntax is very close to Cfront3.x and
		g++2.x.  Can build shared libraries on Suns.  JCOOL's main
		difference from COOL and GECOOL is that it uses real C++
		templates instead of a similar syntax that is preprocessed by
		a special 'cpp' distributed with COOL and GECOOL.
ports:		?
contact:	Van-Duc Nguyen <nguyen@crd.ge.com>
updated:	1992/08/05

language:	C++
package:	GNU C++ Library (libg++)
version:	2.5.1
parts:		library
author: 	Per Bothner <bothner@cygnus.com> ?
location:	libg++-2.5.1.tar.gz from a GNU archive site
description:	The run-time library for the GNU C++ compiler.
		This package is separately maintained.
conformance:	? ANSI and POSIX.1 superset
bugs:		bug-lib-g++@prep.ai.mit.edu
updated:	1993/06/30

language:	C++
package:	??? A C++ Parser toolkit
version:	?
parts:		library
author: 	Mayan Moudgill <moudgill@cs.cornell.EDU>
location:	ftp pub/Parse.shar from ftp.cs.cornell.edu
description:	A collection of C++ classes that make building a 
		recursive descent parser/scanner very easy.
ports:		Sun 4 with cfront 3.0, 
portability:	uses mmap(); probably low.
updated:	1993/04/11

language:	C++, Extended C++
package:	EC++
version:	?
parts:		translator(C++), documentation
author: 	Glauco Masotti <masotti@lipari.usc.edu>
location:	? ftp languages/c++/EC++.tar.Z from ftp.uu.net ?
description:	EC++ is a preprocessor that translates Extended C++
		into C++.  The extensions include:
		+ preconditions, postconditions, and class invariants
		+ parameterized classes
		+ exception handling 
		+ garbage collection
status: 	?
updated:	1989/10/10

language:	C++
package:	LEDA
version:	3.0
parts:		libraries
author: 	?
location:	ftp pub/LEDA/* from ftp.mpi-sb.mpg.de
description:	library of efficient data types and algorithms.
		New with 3.0: both template and non-template versions.
contact:	Stefan N"aher <stefan@mpi-sb.mpg.de>
updated:	1992/11/30

language:	E (a persistent C++ variant)
package:	GNU E
version:	2.3.3
parts:		compiler
author: 	?
location:	ftp exodus/E/gnu_E* from ftp.cs.wisc.edu
description:	GNU E is a persistent, object oriented programming language
		developed as part of the Exodus project.  GNU E extends C++
		with the notion of persistent data, program level data objects
		that can be transparently used across multiple executions of a
		program, or multiple programs, without explicit input and
		output operations.
		GNU E's form of persistence is based on extensions to the C++
		type system to distinguish potentially persistent data objects
		from objects that are always memory resident.  An object is
		made persistent either by its declaration (via a new
		"persistent" storage class qualifier) or by its method of
		allocation (via persistent dynamic allocation using a special
		overloading of the new operator).  The underlying object
		storage system is the Exodus storage manager, which provides
		concurrency control and recovery in addition to storage for
		persistent data.
restriction:	Copyleft; not all runtime sources are available (yet)
requires:	release 2.1.1 of the Exodus storage manager
contact:	exodus@cs.wisc.edu
updated:	1993/01/20

language:	C (ANSI)
package:	? 1984 ANSI C to K&R C preprocessor ?
version:	?
parts:		translator(K&R C)
author: 	?
location:	from comp.sources.unix archive volume 1
description:	?
status: 	?
updated:	?

language:	C (ANSI)
package:	unproto ?
version:	? 4 ? 1.6 ?
parts:		translator(K&R C)
author: 	Wietse Venema <wietse@wzv.win.tue.nl>
location:	ftp pub/unix/unproto4.shar.Z from ftp.win.tue.nl
description:	?
contact:	?
updated:	?

language:	C (ANSI)
package:	cproto
version:	?
parts:		translator(K&R C)
author: 	Chin Huang <chin.huang@canrem.com>
location:	from comp.sources.misc archive volume 29
description:	cproto generates function prototypes from function definitions.
		It can also translate function definition heads between K&R
		style and ANSI C style.
ports:		Unix, MS-DOS
updated:	1992/07/18

language:	C (ANSI)
package:	cextract
version:	1.7
parts:		translator(K&R C), header file generator
author: 	Adam Bryant <adb@cs.bu.edu>
location:	ftp from any comp.sources.reviewed archive
description:	A C prototype extractor, it is ideal for generating
		header files for large multi-file C programs, and will
		provide an automated method for generating all of the
		prototypes for all of the functions in such a program.
		It may also function as a rudimentary documentation
		extractor, generating a sorted list of all functions
		and their locations
ports:		Unix, VMS
updated:	1992/11/03

language:	ANSI C
package:	cgram
version:	?
parts:		grammar
author: 	Mohd Hanafiah Abdullah <napi@cs.indiana.edu>
location:	ftp pub/comp.compilers/cgram-ll1.Z from primost.cs.wisc.edu
description:	An ANSI C grammar in LL(k) (1 <= k <= 2).  It's written in 
		Scheme, so you need to have a Scheme interpreter to process 
		the grammar using a program (f-f-d.s) that extracts the 
		FIRST/FOLLOW/DIRECTOR sets.
requires:	Scheme
ports:		?
updated:	?

language:	C, ANSI C, C++
package:	The Roskind grammars
version:	cpp5 (cf2.0)
parts:		parser(yacc), documenation
author: 	Jim Roskind <jar@hq.ileaf.com>
location:	ftp gnu/c++grammar2.0.tar.Z from ics.uci.edu
		ftp pub/C++/c++grammar2.0.tar.Z from mach1.npac.syr.edu
description:	The C grammar is CLEAN, it does not use %prec, %assoc, and
		has only one shift-reduce conflict.  The C++ grammar has
		a few conflicts.
		Also included is an extension to byacc that produces
		graphical parse trees automatically.
conformance:	the C grammar si true ANSI; the C++ grammar supports 
		cfront 2.0 constructs.
requires:	byacc 1.8 (for graphical parse trees)
status: 	actively developed
updated:	1991/07/01

language:	C, C++
package:	xxgdb
version:	1.06
parts:		X11 front end for gdb
author: 	?
location:	retrieve xxgdb from comp.sources.x volumes 11, 12, 13, 14, & 16
description:	?
contact:	Pierre Willard <pierre@la.tce.com>
updated:	1992/02/22

language:	C, C++
package:	gdb
version:	4.11
parts:		symbolic debugger, documentation
author: 	many, but most recently Fred Fish <fnf@cygnus.com>,
		Stu Grossman <grossman@cygnus.com>, and 
		John Gilmore <gnu@cygnus.com>, all of Cygnus Support
location:	ftp gdb-*.tar.[zZ] from a GNU archive site
description:	gdb is a full-featured symbolic debugger.  It fills the
		same niche as dbx.  Programs must be compiled with debugging
		symbols.
bugs:		<bug-gdb@prep.ai.mit.edu>
restriction:	CopyLeft
ports:		most unix variants, vms, vxworks, amiga, msdos
updated:	1993/10/29

language:	C, C++, Objective-C
package:	emx programming environment for OS/2
version:	0.8g
parts:		gcc, g++, gdb, libg++, .obj linkage, DLL, headers
author: 	Eberhard Mattes <mattes@azu.informatik.uni-stuttgart.de>
location:	ftp os2/2_x/unix/gnu/emx0.8g from ftp-os2.cdrom.com
    Europe:	ftp soft/os2/emx-0.8g from ftp.uni-stuttgart.de
description:	?
discussion:	subscribe to emx-list using listserv@ludd.luth.se
updated:	1992/09/21

language:	C
package:	Pthreads
version:	1.17
parts:		library
author: 	PART (POSIX / Ada-Runtime Project)
location:	ftp pub/PART/pthreads* from ftp.cs.fsu.edu
description:	As part of the PART project we have been designing and
		implementing a library package of preemptive threads which is
		compliant with POSIX 1003.4a Draft 6. A description of the
		interface for our Pthreads library is now available on ftp.
restriction:	GNU General Public License
ports:		Sun-4/SunOS 4.1.x
discussion:	send "Subject: subscribe-pthreads" to mueller@uzu.cs.fsu.edu
contact:	pthreads-bugs@ada.cs.fsu.edu
updated:	1993/07/22

language:	C, nroff, texinfo, latex
package:	c2man
version:	2.0 patchlevel 31
parts:		documentation generator (C -> nroff -man, -> texinfo, -> latex)
author: 	Graham Stoney <greyham@research.canon.oz.au>
location:	ftp from any comp.sources.misc archive, in volume42
		(the version in the comp.sources.reviewed archive is obsolete)
		ftp /pub/Unix/Util/c2man-2.0.*.tar.gz from ftp.et.tudelft.nl
    Australia:	ftp /usenet/comp.sources.misc/volume42/c2man-2.0/*
		from archie.au
    N.America:	ftp /usenet/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.wustl.edu
    Europe:	ftp /News/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.irisa.fr
    Japan:	ftp /pub/NetNews/comp.sources.misc/volume42/c2man-2.0/*
		from ftp.iij.ad.jp
    Patches:	ftp pub/netnews/sources.bugs/volume93/sep/c2man* from lth.se
description:	c2man is an automatic documentation tool that extracts comments
		from C source code to generate functional interface
		documentation in the same format as sections 2 & 3 of the Unix
		Programmer's Manual. It requires minimal effort from the
		programmer by looking for comments in the usual places near the
		objects they document, rather than imposing a rigid
		function-comment syntax or requiring that the programmer learn
		and use a typesetting language. Acceptable documentation can
		often be generated from existing code with no modifications.
conformance:	supports both K&R and ISO/ANSI C coding styles
features:	+ generates output in nroff -man, TeXinfo or LaTeX format
		+ handles comments as part of the language grammar
		+ automagically documents enum parameter & return values
		+ handles C (/* */) and C++ (//) style comments
		- doesn't handle C++ grammar (yet)
requires:	yacc/byacc/bison, lex/flex, and nroff/groff/texinfo/LaTeX.
ports:		Unix, OS/2, MSDOS, VMS.
portability:	very high for unix, via Configure
status: 	actively developed; contributions by users are encouraged.
discussion:	via a mailing list: send "subscribe c2man <Your Name>" (in the
		message body) to listserv@research.canon.oz.au
help:		from the author and other users on the mailing list:
		c2man@research.canon.oz.au
announcements:	patches appear first in comp.sources.bugs, and then in
		comp.sources.misc.
updated:	1994/06/22

language:	Small-C
package:	smallc
version:	?
parts:		compiler
author: 	?
location:	?, comp.sources.unix volume 5
description:	Small-C is a subset of the C programming language for which a
		number of public-domain compilers have been written.  The
		original compiler was written by Ron Cain and appeared in the
		May 1980 issue of Dr.Dobb's Journal.  More recently, James
		E.Hendrix has improved and extended the original Small-C
		compiler and published "The Small-C Handbook", ISBN
		0-8359-7012-4 (1984).  Both compilers produce 8080 assembly
		language, which is the most popular implementation of Small-C
		to-date.  My 6502 Small-C compiler for the BBC Micro is based
		on "RatC", a version of the original Ron Cain compiler
		described by R.E.Berry and B.A.Meekings in "A Book on C", ISBN
		0-333-36821-5 (1984).  The 6502 compiler is written in Small-C
		and was bootstrapped using Zorland C on an Amstrad PC1512 under
		MSDOS 3.2, then transferred onto a BBC Micro using Kermit.  The
		compiler can be used to cross-compile 6502 code from an MSDOS
		host, or as a 'resident' Small-C compiler on a BBC Micro.
conformance:	subset of C
ports:		68k, 6809, VAX, 8080, BBC Micro, Z80
updated:	1989/01/05

language:	Maisie
package:	Maisie
version:	2.1
parts:		?, user manual, examples
author: 	Wen-Toh Liao <wentoh@may.CS.UCLA.EDU>
location:	ftp pub/maisie.2.1.1.3.tar.Z from cs.ucla.edu 
description:	C-based parallel programming language that uses asynchronous
		typed-message passing and supports light-weight processes.
		The language is C with enhancements to allow processes to be
		defined, created, and destroyed, to send and receive messages,
		and manipulate the system clock.
ports:		PVM/3.1, Cosmic Environment, and SUN Sockets.
updated:	1993/06/14

language:	MeldC (MELD, C)
package:	MeldC
version:	2.0
parts:		microkernel, compiler, debugger, manual, examples
author: 	MELD Project, Programming Systems Laboratory at 
		Columbia University
location:	obtain license from <MeldC@cs.columbia.edu>
description:	MeldC 2.0: A Reflective Object-Oriented Coordination
		Programming Language MELDC is a C-based, concurrent,
		object-oriented language built on a reflective architecture.
		The core of the architecture is a micro-kernel (the MELDC
		kernel), which encapsulates a minimum set of entities that
		cannot be modeled as objects. All components outside of the
		kernel are implemented as objects in MELDC itself and are
		modularized in the MELDC libraries. MELDC is reflective in
		three dimensions: structural, computational and architectural.
		The structural reflection indicates that classes and
		meta-classes are objects, which are written in MELDC. The
		computational reflection means that object behaviors can be
		computed and extended at runtime. The architectural reflection
		indicates that new features/properties (e.g., persistency and
		remoteness) can be constructed in MELDC.
restriction:	must sign license, cannot use for commercial purposes
ports:		Sun4/SunOS4.1 Mips/Ultrix4.2
contact:	<MeldC@cs.columbia.edu>
updated:	1992/12/15

language:	uC++
package:	uC++ 
version:	3.7
parts:		compiler, reference
author: 	? Peter A. Ruhr <pabuhr@plg.uwaterloo.ca>
location:	ftp pub/uSystem/u++-3.7.tar.Z from plg.uwaterloo.ca
description:	An extended C++ with light-weight concurrency for Unix-like
		systems.  uC++ is pronounced "micro-C++".
reference:	Software--Practice and Experience, 22(2):137-172, February 1992.
requires:	dmake 3.0+ (ftp pub/dmake/dmake38.tar.Z from plg.uwaterloo.ca)
		GNU C++ 2.3.3
ports:		Sequent, Sun-4, Sun-3, Ultrix, SGI, RS/6000, HP-PA
portability:	Needs "setitimer" and "sigcontext" from Unix-like systems.
updated:	1993/06/10

language:	Objective-C
package:	libcoll -- Collection Class Library for GNU Objective-C
version:	940510
parts:		class library
author: 	Andrew McCallum <mccallum@cs.rochester.edu>
location:	ftp.cs.rochester.edu in pub/objc/libcoll-940510.tar.gz
description:	It's a library of Objective-C objects with similar
		functionality to Smalltalk's Collection objects.  It includes:
		Set, Bag, Array, LinkedList, LinkList, CircularArray, Queue,
		Stack, Heap, SortedArray, MappedCollector, GapArray and
		DelegateList.
updated:	1994/05/10

language:	Glenda
package:	Glenda parallel programming environment
version:	0.91
parts:		preprocessor,tuple server, and tuple functions
author: 	Ray Seyfarth <seyfarth@whale.st.usm.edu>
location:	ftp pub/glenda.tar.Z from seabass.st.usm.edu
description:	Glenda is a programming environment for parallel programming
		implementing a variation of the Linda programming model
		defined by Carriero and Gelernter. It consists of a C
		preprocessor to allow reasonable syntax for the added
		operations, a tuple server process and a set of functions to
		connect an application to the tuple server.
ports:		RS6000, SUN4, LINUX
updated:	1993/06/01

compiled, imperative languages
-------------------------------------------------------------------------------
category:	compiled, imperitive languages
description:	This is the set of traditional infix languages other than C 
		and Pascal which each have their own section.  
cref:		C variants
cref:		Wirth family languages
lref:		Simula
lref:		Fortran

language:	Ada
package:	Ada/Ed
version:	1.11.0a+
parts:		translator(?), interpreter, ?
author: 	?
location:	ftp pub/Ada/Ada-Ed from cnam.cnam.fr
description:	Ada/Ed is a translator-interpreter for Ada. It is
		intended as a teaching tool, and does not have the
		capacity, performance,	or robustness of commercial
		Ada compilers. Ada/Ed was developed at New York
		University, as part of a long-range project in
		language definition and software prototyping.
conformance:	Ada 83.  Last validated with version 1.7 of the ACVC tests.
		being an interpreter, it does not implement most 
		representation clauses, and thus does not support systems 
		programming close to the machine level.
ports:		Unix, MSDOS, Amiga, Atari
contact:	Michael Feldman <mfeldman@seas.gwu.edu>
updated:	1992/05/08

language:	Ada
package:	GW-Ada
version:	?
parts:		translator, interpreter, editor, runtime environment
author: 	?
location:	ftp languages/ada/compiler/adaed/gwu/9309/dos
		or languages/ada/compilers/adaed/gwu/mac from 
		wuarchive.wustl.edu
description:	Ada/Ed is a translator-interpreter for Ada. It is
		intended as a teaching tool, and does not have the
		capacity, performance,	or robustness of commercial
		Ada compilers. Ada/Ed was developed at New York
		University, as part of a long-range project in
		language definition and software prototyping.
conformance:	"Ada/Ed handles nearly all of Ada 83"
restriction:	For educational purposes only.
ports:		MSDOS and Mac
contact:	Michael Feldman <mfeldman@seas.gwu.edu>
updated:	1993/09/01

language:	Ada
package:	Ada grammar
version:	?
parts:		scanner(lex), parser(yacc)
author: 	?
location:	ftp from primost.cs.wisc.edu or mail to
		compilers-server@iecc.cambridge.ma.us
description:	?
contact:	masticol@dumas.rutgers.edu
updated:	1991/10/12

language:	Ada
package:	Compiler for Toy/Ada in SML/NJ
version:	?
parts:		translator(?)
author: 	Amit Bhatiani <bhatiaa@polly.cs.rose-hulman.edu>
location:	ftp pub/compiler*.tar.Z from master.cs.rose-hulman.edu
description:	?
conformance:	subset
updated:	1992/04/08

language:	Ada
package:	NASA PrettyPrinter
version:	?
parts:		Ada LR parser, ?
author: 	? Michael Feldman <mfeldman@seas.gwu.edu> in comp.compilers
		provided the initial reference to this package, he also has a
		yacc grammar for ada.
location:	ftp from Ada Software Repository on wsmr-simtel20.army.mil
description:	pretty-print program that contains an ada parser
requires:	Ada
updated:	1991/02/01

language:	Ada
package:	yacc grammar for Ada
version:	?
parts:		parser(yacc)
author: 	Herman Fischer
location:	ftp  PD2:<ADA.EXTERNAL-TOOLS>GRAM2.SRC 
		from wsmr-simtel20.army.mil
description:	?
contact:	?
updated:	1991/02/01

language:	Ada
package:	Paradise
version:	2.0
parts:		library
author: 	?
location:	ftp pub/Ada/Paradise from cnam.cnam.fr
description:	Paradise is a subsystem (a set of packages) developped
		to implement inter-processes, inter-tasks and
		inter-machines communication for Ada programs in
		the Unix world. This subsystem gives the user full
		access to files, pipes, sockets (both Unix and
		Internet), and pseudo-devices.
ports:		Sun, Dec, Sony Mips, Verdex compiler, DEC compiler, 
		Alsys/Systeam compiler
contact:	paradise-info@cnam.cnam.fr
updated:	1992/09/30

language:	Ada
package:	Adamakegen
version:	2.6.3
parts:		makefile generator
author: 	Owen O'Malley <omalley@porte-de-st-ouen.ics.uci.edu>
location:	ftp ftp/pub/arcadia/adamakegen* from spare.ics.uci.edu
description:	A program that generates makefiles for Ada programs 
requires:	Icon
ports:		Verdix, SunAda 
updated:	1993/03/02

language:	Ada 9X
package:	GNAT
version:	1.79
parts:		parser, library management system, documentation?
author: 	The GNAT Development Team <gnat-request@cs.nyu.edu>
location:	cs.nyu.edu in pub/gnat/*
		sunsite.unc.edu in /pub/Linux/development/ada/gnat-*.lp2.tar.gz
		nic.funet.fi in /pub/OS/Linux/util/languages/gnat-*.lp2.tar.gz
		tsx-11.mit.edu in /pub/linux/packages/Ada/gnat-*.lp2.tar.gz
description:	A bootstrapped implementation of a Ada83 subset.
conformance:	Currently only a subset of of Ada 83 is working.  Compliance 
		to Ada 9X being worked on.
requires:	gcc 2.5.x or higher
status: 	Actively developed.  
updated:	1994/05/15

language:	Algol, Foogol
package:	cfoogol
version:	?
parts:		compiler
author: 	? John Cowan <cowan@snark.thyrsus.com>
location:	comp.sources.misc from May 1994
description:	?
conformance:	subset of Algol
ports:		VAX
updated:	1994/05/08

language:	Algol
lref:		Simula

language:	BCPL
package:	?
version:	?
parts:		?
author: 	?
location:	ftp systems/amiga/programming/languages/BCPL/BCPL4Amiga.lzh
		from wuarchive.wustl.edu.
description:	The original INTCODE interpreter for BCPL.
ports:		Amiga, Unix, MSDOS
contact:	?
updated:	?

language:	BCPL
package:	?
version:	?
parts:		?
author: 	?
location:	ftp ftp.syd.dit.csiro.au in pub/ken/bcpl.tar.gz.
description:	A BCPL* (Basic Combined Programming Language) compiler
		bootstrap kit with an INTCODE interpreter in C.
contact:	Ken Yap <ken@syd.dit.CSIRO.AU>
updated:	?

language:	E
package:	Amiga E
version:	2.1b
parts:		compiler, assembler, linker, utilities
author: 	Wouter van Oortmerssen <Wouter@mars.let.uva.nl>
location:	ftp amiga/dev/lang/AmigaE21b.lha from amiga.physik.unizh.ch
description:	An Amiga specific E compiler.  E is a powerful and flexible
		procedural programming language and Amiga E a very fast
		compiler for it, with features such as compilation speed of
		20000 lines/minute on a 7 Mhz amiga, inline assembler and
		linker integrated into compiler, large set of integrated
		functions, module concept with 2.04 includes as modules,
		flexible type-system, quoted expressions, immediate and typed
		lists, low level polymorphism, exception handling and much,
		much more.  Written in Assembly and E.
ports:		Amiga
portability:	not portable at all
status: 	actively developed
discussion:	comp.sys.amiga.programmer (sometimes)
updated:	1993/03/01

language:	Eiffel
package:	?
version:	?
parts:		source checker
author: 	Olaf Langmack <langmack@inf.fu-berlin.de> and Burghardt Groeber
location:	ftp pub/heron/ep.tar.Z from ftp.fu-berlin.de
description:	A compiler front-end for Eiffel-3 is available. It has been
		generated automatically with the Karlsruhe toolbox for
		compiler construction according to the most recent public
		language definition. The parser derives an easy-to-use
		abstract syntax tree, supports elementary error recovery
		and provides a precise source code indication of errors. It
		performs a strict syntax check and analyses 4000 lines of
		source code per second on a Sun-SPARC workstation.
updated:	1992/12/14

language:	Sather
package:	Sather programming language and environment
version:	0.2i
parts:		compiler(->C), debugger, libraries, documentation, emacs macros
		See description for further details.
author: 	International Computer Science Institute in Berkeley, CA
location:	ftp pub/sather/sa-0.2i.tar.Z from ftp.icsi.berkeley.edu
    Europe:	ftp pub/Sather/* from ftp.gmd.de
    Australia:	ftp pub/sather/* from lynx.csis.dit.csiro.au
    Japan:	ftp pub/lang/sather/* from sra.co.jp
description:	Sather is a new object-oriented computer language developed at
		the International Computer Science Institute. It is derived
		from Eiffel and attempts to retain much of that language's
		theoretical cleanliness and simplicity while achieving the
		efficiency of C++.  It has clean and simple syntax,
		parameterized classes, object-oriented dispatch, multiple
		inheritance, strong typing, and garbage collection. The
		compiler generates efficient and portable C code which is
		easily integrated with existing code.  
		A variety of development tools including a debugger and browser
		based on gdb and a GNU Emacs development environment
		have also been developed. There is also a class library
		with several hundred classes that implement a variety
		of basic data structures and numerical, geometric,
		connectionist, statistical, and graphical abstractions.
		We would like to encourage contributions to the library
		and hope to build a large collection of efficient,
		well-written, well-tested classes in a variety of areas
		of computer science.
conformance:	reference implemantation
bugs:		sather-admin@icsi.berkeley.edu
ports:		Sun-4 HP9000/300 Decstation5000 MIPS SonyNews3000 Sequent/Dynix
		SCO SysVR3.2 NeXT (from others: RS6000 SGI)
portability:	high
status: 	actively developed.
discussion:	sather-request@icsi.berkeley.edu
updated:	1992/07/02

language:	XPL (PL/I dialect)
package:	XPL optimizing Compiler
version:	1
parts:		compiler, documentation
author: 	Robin Vowels <robin_vowels@rmit.edu.au>
location:	mail to author
description:	The compiler is a standard implementation of XPL and is based
		on McKeeman, Horning, and Wortman's improved XCOM (which
		employs hashed symbol table generation).  It includes the extra
		built-in function COREHALFWORD.
		The following areas have been optimized: procedures calls when
		the argument and corresponding parameter are of the same type,
		and when the argument is a constant; constant subscripts; use
		of CORELHALFWORD and COREWORD; string constants of length one;
		iterative DO statements by transferring code to the end of the
		loop.
		String constants of length one do not require a descriptor,
		hence more descriptors are available for string variables.
		Comparison operations are treated as commutative, and an
		improved Commute algorithm is used.  Halfword instructions are
		generated for BIT(16) variables.
		These areas have been improved or re-written: calls on OUTPUT,
		catenation, integer-to-string conversion, multiply, divide, and
		MOD.  An emitter for SS-type instructions has been added.
		The compiler achieves an 11% reduction in object code 
		compiling itself, an 11% increase in compilation rate, a 55%
		increase in compilation speed when the $E toggle is set.
		Special treatment for catenating a string to an integer
		substantially decreases consumption of the free string area,
		and decreases string moves.  The latter improvement is most 
		noticeable on small core machines.
		Core requirements: less than the improved XCOM on which it is
		based (approx. 98000 bytes).  Symbol table size is 468.
ports:		IBM System 370
portability:	The compiler is written in XPL.  The code generators are
		machine-specific.
updated:	1993/08/07

language:	PL/M grammar and parser
package:	plm-parse
version:	1.1
parts:		bison (GNU yacc) grammar description, flex (GNU lex)
		lexer description, and a scoped symbol table manager
author: 	Kirk Hays <hays@ichips.intel.com>
		Gary Funck <gary@intrepid.com>
location:	ftp pub/file/plm.shar.gz from iecc.com to obtain
		a shar archive in compressed GNU zip format.  To access
		the mail server, mail "send plm.shar"
		to compilers-server@iecc.com.
description:	this is a skeleton parser for PL/M.  The grammar description
		and lexer description files were written for bison and flex.
		The grammar description closely follows the EBNF documented
		in the _PL/M Programmer's Guide_, Intel doc. 452161-003,
		Appendix C.  A symbol table manager is supplied,
		though there is no semantic checking.
conformance:	the grammar describes PL/M 386 and where possible, will
		accept various other dialects
reference:	_PL/M Programmer's Guide_, Intel doc. 452161-003
features:	has support for PL/M's "literally" macro definitions
bugs:		doesn't support $-directives (includes)
restriction:	freely available, use at you own risk
requires:	flex, bison, an ANSI compliant C compiler (gcc), and the
		avl-subs balanced binary tree library routines
		(comp.sources.unix Volume 27, Issue 34 ,'avl-subs')
ports:		SGI IRTIX 5.2, and a 486DX2 PC clone running Linux
help:		contact the authors
updated:	04/04/1994

object oriented languages
-------------------------------------------------------------------------------
category:	object oriented languages
description:	In general, object oriented languages were categorized 
		elsewhere.  Only those that were not anything but object-
		oriented are here.
lref:		ABCL ???
lref:		ABCL/R2
lref:		ALLOY
lref:		C++
lref:		CLU
lref:		Common Lisp
lref:		Dylan
lref:		GNU E
lref:		MeldC
lref:		Objective-C
lref:		Oberon-2
lref:		Perl5
lref:		Python
lref:		Sather
lref:		Simula
iref:		(TCL) BOS
iref:		(Scheme) STk
iref:		(Scheme) SOS

language:	O'small
package:	O'small
version:	Initial release
parts:		compiler?, parser/scanner specification
author: 	? Andreas Hense <hense@sol.cs.uni-sb.de>
location:	FTP /pub/osmall/machine/* from cs.uni-sb.de (134.96.7.254)
description:	A concise, formally defined object-oriented language suited
		for teaching object oriented programming.
reference:	(Numerous references listed in software documentation)
		Christoph Boeschen.  Christmas - An abstract machine for
		O'small.  Master's thesis, Universit"at des Saarlandes, 
		Fachbereich 14, June 1993.
requires:	sml-yacc, sml-lex, sml-noshare (details in HowToGetML).
ports:		Sun 4, SPARC (binaries provided).
portability:	Probably portable to other Unix's.
updated:	1993/06/25

language:	O'small
package:	?
version:	?
parts:		interpreter
author: 	?
location:	?
description:	?
requires:	Miranda
ports:		?
portability:	?
updated:	?

language:	Self
package:	Self
version:	2.0
parts:		?, compiler?, debugger, browser
author: 	The Self Group at Sun Microsystems & Stanford University
location:	ftp ? from self.stanford.edu
description:	The Self Group at Sun Microsystems Laboratories, Inc., and
		Stanford University is pleased to announce Release 2.0 of the
		experimental object-oriented exploratory programming language
		Self.  Release 2.0 introduces full source-level debugging of
		optimized code, adaptive optimization to shorten compile
		pauses, lightweight threads within Self, support for
		dynamically linking foreign functions, changing programs within
		Self, and the ability to run the experimental Self graphical
		browser under OpenWindows.
		Designed for expressive power and malleability, Self combines a
		pure, prototype-based object model with uniform access to state
		and behavior. Unlike other languages, Self allows objects to
		inherit state and to change their patterns of inheritance
		dynamically. Self's customizing compiler can generate very
		efficient code compared to other dynamically-typed
		object-oriented languages.
ports:		Sun-3 (no optimizer), Sun-4
portability:	? [Can it be ported to non-Sun or non-Unix systems?]
discussion:	self-request@self.stanford.edu
contact:	?
updated:	1992/08/13

language:	Smalltalk
package:	Little Smalltalk
version:	3
parts:		?
author: 	Tim Budd <budd@cs.orst.edu> ?
location:	ftp pub/budd/? from cs.orst.edu
description:	?
ports:		unix, pc, atari, vms
status: 	?
updated:	?

language:	Smalltalk
package:	GNU Smalltalk
version:	1.1.1
parts:		?
author: 	Steven Byrne <sbb@eng.sun.com>
location:	ftp smalltalk-1.1.1.tar.Z from a GNU archive site
description:	?
bugs:		gnu.smalltalk.bug
discussion:	?
contact:	?
updated:	1991/09/15

language:	Smalltalk
package:	msgGUI
version:	1.0
parts:		library
author: 	Mark Bush <bush@ecs.ox.ac.uk>
location:	ftp pub/Packages/mst/mstGUI-1.0.tar.Z from ftp.comlab.ox.ac.uk
description:	GUI for GNU Smalltalk.	This this package contains the basics 
		for creating window applications in the manner available in 
		other graphical based Smalltalk implementations.
updated:	1992/12/14

language:	Smalltalk
package:	Mei
version:	0.50
parts:		interpreters(Lisp,Prolog), examples, libraries, tools, editor,
		browser
author: 	Atsushi Aoki <aoki@sra.co.jp> and others
location:	ftp pub/goodies/misc/Mei.tar.Z from mushroom.cs.man.ac.uk
    N.America:	ftp pub/MANCHESTER/misc/Mei from st.cs.uiuc.edu
    Japan:	ftp pub/lang/smalltalk/mei/Mei0.50.tar.Z from srawgw.sra.co.jp
description:	Mei is a set of class libraries for Objectworks Smalltalk
		Release 4.1.  it includes:   1.  Grapher Library (useful for
		drawing diagrams);  2. Meta Grapher Library (grapher to develop
		grapher);  3. Drawing tools and painting tools (structured
		diagram editors and drawing editors);  4. GUI editor (graphical
		user interface builder);  5. Lisp interpreter;	6. Prolog
		interpreter;  7. Pluggable gauges;  8. Extended browser;
		(package, history, recover, etc.)
restriction:	GNU General Public License
requires:	Objectworks Smalltalk Release 4.1
contact:	Watanabe Katsuhiro <katsu@sran14.sra.co.jp>
updated:	1993/01/20

language:	Smalltalk
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!hookup!yeshua.marcam.com!news.kei.com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p3of5]
Message-ID: <free3-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free3-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free2-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:32 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1661
Xref: bloom-beacon.mit.edu comp.compilers:3318 comp.lang.misc:5187 comp.archives.admin:677 news.answers:23369 comp.answers:6567

Archive-name: free-compilers/part3
Last-modified: 1994/6/30
Version: 6.5

lisp family
-------------------------------------------------------------------------------
category:	lisp family
description:	[The programming languages for those who like parenthesis --ed]

language:	Dylan
package:	Thomas
version:	1.1
parts:		translator(Scheme)
author: 	Matt Birkholz <Birkholz@crl.dec.com>, Jim Miller 
		<JMiller@crl.dec.com>, Ron Weiss <RWeiss@crl.dec.com>
location:	ftp pub/DEC/Thomas from gatekeeper.pa.dec.com
		ftp pub/dylan/Thomas from cambridge.apple.com
description:	Thomas, a compiler written at Digital Equipment
		Corporation's Cambridge Research Laboratory compiles
		a language compatible with the language described
		in the book "Dylan(TM) an object-oriented dynamic
		language" by Apple Computer Eastern Research and
		Technology, April 1992.  It does not perform well.
		Thomas is NOT Dylan(TM).
requires:	Scheme
ports:		MIT's CScheme, DEC's Scheme->C, Marc Feeley's Gambit, Mac, PC, 
		Vax, MIPS, Alpha, 680x0
updated:	1994/04/18

language:	Dylan 
package:	Marlais
version:	0.3
parts:		interpreter
author: 	Brent Benson <brent@ssd.csd.harris.com>
location:	ftp pub/marlais-0.2a.tar.gz from travis.csd.harris.com
		ftp pub/dylan/Marlais/marlais-0.3.tar.gz
			from cambridge.apple.com
description:	Marlais is a simple-minded interpreter for a programming
		language strongly resembling Dylan [1].  It is not intended as
		a final release, but rather to fill a perceived void where
		Dylan implementations are concerned.  This is a "hackers
		release" and is intended as a vehicle for education,
		experimentation and also to encourage people to port it to
		different architectures, add features, and fix bugs.  Marlais
		is alpha software and should not be used by people desiring
		reliability!!!
ports:		Sun-3, Sun-4, VAX/BSD, OS/2, Linux, Sequent Symmetry,
		Encore, HP-UX, Ultrix, SGI, Sony News, A/UX
updated:	1994/04/18

language:	EuLisp
package:	Feel (Free and Eventually Eulisp)
version:	0.75
parts:		interpreter, documentation
author: 	Pete Broadbery <pab@maths.bath.ac.uk>
location:	ftp pub/eulisp from ftp.bath.ac.uk
description:	+ integrated object system
		+ a module system
		+ parallelism
		+ interfaces to PVM library, tcp/ip sockets, futures, 
		Linda, and CSP.
ports:		most unix
portability:	high, but can use shared memory and threads if available
updated:	1992/09/14

language:	Common Lisp
package:	CMU Common Lisp
version:	17c
parts:		incremental compiler, profiler, runtime, documentation, 
		editor, debugger
author: 	?
location:	ftp pub/* from from lisp-sun1.slisp.cs.cmu.edu.
description:	CMU Common Lisp is public domain "industrial strength" Common
		Lisp programming environment.  Many of the X3j13 changes have
		been incorporated into CMU CL.	Wherever possible, this has
		been done so as to transparently allow use of either CLtL1 or
		proposed ANSI CL.  Probably the new features most interesting
		to users are SETF functions, LOOP and the WITH-
		COMPILATION-UNIT macro.
		+ The new CMU CL compiler (Python) is more sophisticated
		  thatn other Common Lisp compilers.  It produces better code
		  and is easier to use.
		+ The programming environment based on the Hemlock editor
		  is better integrated than gnu-emacs based environments.
conformance:	mostly X3J13 compatible.
ports:		Sparc/Mach Sparc/SunOS Mips/Mach IBMRT/Mach
contact:	slisp@cs.cmu.edu
updated:	1993/11/18

language:	Common Lisp
package:	PCL (Portable Common Loops)
version:	8/28/92 PCL
parts:		library
author: 	? Richard Harris <rharris@ptolemy2.rdrc.rpi.edu> ?
location:	ftp pcl/* from parcftp.xerox.com
description:	A portable CLOS implementation.  CLOS is the object oriented 
		programming standard for Common Lisp.  Based on Symbolics 
		FLAVORS and Xerox LOOPS, among others.	Loops stands for
		Lisp Object Oriented Programming System.
ports:		Lucid CL 4.0.1, CMUCL 16e, ?
status: 	?
updated:	1992/09/02

language:	Common Lisp
package:	WCL
version:	2.14
parts:		?, shared library runtime, source debugger
author: 	Wade Hennessey <wade@leland.Stanford.EDU>
location:	ftp pub/wcl/* from sunrise.stanford.edu,
		    miscellany/wcl from gummo.stanford.edu
description:	A common lisp implementation as a shared library.  WCL
		Is not a 100% complete Common Lisp, but it does have
		the full development environment including dynamic file
		loading and debugging.	A modified version of GDB provides
		mixed-language debugging.  A paper describing WCL was
		published in the proceedings of the 1992 Lisp and Functional
		Programming Conference. 
requires:	GNU C 2.1 (not 2.2.2)
ports:		Sparc/SunOS
discussion:	<wcl-request@sunrise.stanford.edu>
contact:	<wcl@sunrise.stanford.edu>
updated:	1992/10/28

language:	Common Lisp
package:	KCL (Kyoto Common Lisp)
version:	?
parts:		compiler(->C), interpreter
author: 	T. Yuasa <yuasa@tutics.tut.ac.jp>, M. Hagiya 
		<hagiya@is.s.u-tokyo.ac.jp> 
location:	? ftp pub/kcl*.tar.Z from rascal.ics.utexas.edu ?
description:	KCL, Kyoto Common Lisp, is an implementation of Lisp,
		It is written in the language C to run under Un*x-like 
		operating systems.  KCL is very C-oriented; for example, 
		the compilation of Lisp functions in KCL involves a 
		subsidiary C compilation.
conformance:	conforms to the book ``Common Lisp: The Language,''
		G. Steele, et al., Digital Press, 1984.  
bugs:		kcl@cli.com
restriction:	must sign license agreement
discussion:	kcl-request@cli.com
updated:	1987/06

language:	Common Lisp
package:	AKCL (Austin Kyoto Common Lisp)
version:	1-615
parts:		improvements
author: 	Bill Schelter <wfs@cli.com>, <wfs@rascal.ics.utexas.edu>
location:	ftp pub/akcl-*.tar.Z from rascal.ics.utexas.edu
description:	AKCL is a collection of ports, bug fixes, and
		performance improvements to KCL.
ports:		Decstation3100, HP9000/300, i386/sysV, IBM-PS2/aix, IBM-RT/aix
		SGI Sun-3/Sunos[34].* Sun-4 Sequent-Symmetry IBM370/aix,
		VAX/bsd VAX/ultrix NeXT
updated:	1992/04/29

language:	Common Lisp
package:	CLX 
version:	5.01
parts:		library
author: 	?
location:	ftp contrib/CLX.R5.01.tar.Z from export.lcs.mit.edu
description:	Common Lisp binding for X
bugs:		bug-clx@expo.lcs.mit.edu
ports:		?, CMU Common Lisp
contact:	?
updated:	1992/08/26

language:	Common Lisp
package:	CLISP
version:	1993/10/06
parts:		interpreter, bytecode compiler, runtime library, editor
author: 	Bruno Haible <haible@ma2s2.mathematik.uni-karlsruhe.de>,
		Michael Stoll <michael@rhein.iam.uni-bonn.de>
location:	ftp /pub/lisp/clisp from ma2s2.mathematik.uni-karlsruhe.de
description:	CLISP is a Common Lisp (CLtL1) implementation by Bruno Haible
		of Karlsruhe University and Michael Stoll of Munich University,
		both in Germany.  It needs only 1.5 MB of RAM.	German and
		English versions are available, French coming soon.  Packages
		running in CLISP include PCL and, on Unix machines, CLX.  A
		native subset of CLOS is included.
conformance:	CLtL1 + parts of CLtL2
restriction:	GNU General Public License
ports:		Atari, Amiga, MS-DOS, OS/2, Linux, Sun4, Sun386i, HP90000/800
		and others
discussion:	send "subscribe clisp-list" to 
		listserv@ma2s2.mathematik.uni-karlsruhe.de
contact:	Bruno Haible <haible@ma2s2.mathematik.uni-karlsruhe.de>
updated:	1993/10/06

language:	Common Lisp
package:	Cartier's Contribs
version:	1.2
parts:		libraries, documentation
author: 	Guillaume Cartier <cartier@math.uqam.ca>
location:	ftp pub/mcl2/contrib/Cartiers* from cambridge.apple.com
description:	libraries for MCL
requires:	Macintosh Common Lisp
discussion:	comp.lang.lisp.mcl
updated:	1994/04/18

language:	Common Lisp
package:	QT-OBJECTS
version:	?
parts:		library
author: 	Michael Travers <mt@media.mit.edu> and others
location:	?
description:	interface between MCL and QuickTime
requires:	Macintosh Common Lisp
discussion:	comp.lang.lisp.mcl
updated:	1994/04/18

language:	Common Lisp
package:	Memoization ?
version:	?
parts:		library
author: 	Marty Hall <hall@aplcenmp.apl.jhu.edu>
location:	ftp pub/Memoization from archive.cs.umbc.edu
description:	Automatic memoization is a technique by which an existing 
		function can be transformed into one that "remembers" 
		previous arguments and their associated results
updated:	1992/11/30

language:	Common Lisp
package:	GINA (Generic Interactive Application) 
version:	2.2
parts:		language binding, class library, interface builder
author: 	?
location:	ftp /gmd/gina from ftp.gmd.de 
    N.America:	ftp contrib/? from export.lcs.mit.edu
description:	GINA is an application framework based on Common Lisp and 
		OSF/Motif to simplify the construction of graphical 
		interactive applications. It consists of:
		+ CLM, a language binding for OSF/Motif in Common Lisp.
		+ the GINA application framework, a class library in CLOS
		+ the GINA interface builder, an interactive tool implemented 
		with GINA to design Motif windows.
requires:	OSF/Motif 1.1 or better.  Common Lisp with CLX, CLOS, PCL and
		processes.
ports:		Franz Allegro, Lucid, CMU CL and Symbolics Genera
discussion:	gina-users-request@gmd.de
updated:	?

language:	Common Lisp
package:	CLiCC
version:	0.6.4
parts:		compiler(->C), runtime library
author: 	Heinz Knutzen <hk@informatik.uni-kiel.de>,
		Ulrich Hoffman <uho@informatik.uni-kiel.de>,
		Wolfgang Goerigk <wg@informatik.uni-kiel.de>
location:	ftp pub/kiel/apply/clicc*
		   from ftp.informatik.uni-kiel.de (134.245.15.114)
description:	A Common Lisp to C compiler, meant to be used as a supplement
		to existing CLISP systems for generating portable applications.
		Target C code must be linked with CLiCC runtime library to
		produce executable.
conformance:	Subset of Common Lisp + CLOS (named: CL_0, or CommonLisp_0)
		CL_0 based on CLtL1.
restriction:	Freely distributable and modifiable
ports:		Runs in Lucid Lisp, AKCL, CLISP, ...
status: 	Working towards CLtL2 and ANSI-CL conformance.
updated:	1994/06/25

language:	Common Lisp
package:	Hyperlisp
version:	2.1f
parts:		?
author: 	Joe Chung, MIT Media Laboratory
location:	ftp pub/mcl2/contrib/hyperlisp21f.sit.hqx 
			from cambridge.apple.com
description:	Hyperlisp is a real-time MIDI programming environment
		embedded in Macintosh Common Lisp. The environment 
		was developed specifically for the Hyperinstruments project 
		at the MIT Media Laboratory, and is optimized for interactive 
		systems which require fast response times. Hyperlisp 
		provides two main services for the music programmer: 
		routines for MIDI processing and primitives for scheduling 
		the application of functions. Programs written in Macintosh 
		Common Lisp can use these services for a wide variety of 
		real-time MIDI applications.
updated:	1994/04/18

language:	Franz Lisp
package:	Liszt?
version:	?
parts:		compiler(->C)
author: 	port to C by J W Dalton <jeff@festival.ed.ac.uk>
location:	ask author
description:	A version of Liszt that emits C
updated:	?

language:	Lisp
package:	RefLisp
version:	2.67
parts:		interpreter, documentation, examples, profiler
author: 	Bill Birch <bbirch@hemel.bull.co.uk>
location:	ftp implementations/reflisp/* from the directory 
		/afs/cs.cmu.edu/user/mkant/Public/Lisp on ftp.cs.cmu.edu
description:	The interpreter is a shallow-binding (i.e., everything has
		dynamic scope), reference counting design making it suitable
		for experimenting with real-time and graphic user interface
		programming. Common Lisp compatibility macros are provided, and
		most of the examples in "Lisp" by Winston & Horn have been run
		on RefLisp.  RefLisp makes no distinction between symbol-values
		and function-values, so a symbol can be either but not both.
		There are Lisp modules for lexical scope and for running
		indefinite extent Scheme programs.
ports:		MSDOS (CGA/EGA/VGA), Unix (AIX)
status: 	"Last Update for a While," author is emigrating to Australia
updated:	1993/02/09

language:	Lisp
package:	xlisp
version:	2.1
parts:		interpreter
author: 	David Micheal Betz <dbetz@apple.com>
location:	ftp pub/xlisp* from wasp.eng.ufl.edu
    US Mail:	contact Tom Almy <toma@sail.labs.tek.com>
    Windows:	ftp util/wxlslib.zip from ftp.cica.indiana.edu
    Version2.0: ftp pub/xlisp/* from cs.orst.edu
    Macintosh:	ftp pub/bskendig/? from netcom.com (source comming)
description:	XLISP is an experimental programming language
		combining some of the features of Common Lisp with an
		object-oriented extension capability.  It was
		implemented to allow experimentation with
		object-oriented programming on small computers.
conformance:	subset of Common Lisp with additions of Class and Object
restriction:	? no commercial use ?
ports:		unix, amiga, atari, mac, MSDOS
portability:	very high: just needs a C compiler
discussion:	comp.lang.lisp.x
updated:	1992/05/26 (unix), 1987/12/16 (other platforms)

language:	Lisp
package:	"LISP, Objects, and Symbolic Programming"
version:	? 
parts:		book with compiler included
author: 	Robert R. Kessler and Amy R. Petajan,
		published by Scott, Foresman and Company, Glenview, IL
location:	bookstore...
description:	? (A short synopsis might help if anyone has one)
updated:	1988

language:	Lisp
package:	franz lisp
version:	?
parts:		?
author: 	?
location:	[does anyone know where you get franz lisp??? --ed]
description:	?
discussion:	franz-friends-request@berkeley.edu
updated:	?

language:	Lisp (WOOL - Window Object Oriented Language)
package:	GWM (Generic Window Manager)
version:	?
parts:		interpreter, examples
author: 	?
location:	ftp contrib/gwm/* from export.lcs.mit.edu
    France:	ftp pub/gwm/* from avahi.inria.fr
description:	Gwm is an extensible window manager for X11.  It is
		based on a WOOL kernel, and interpreted dialect of lisp 
		with specific winow management primitives.
discussion:	gwm-talk@???
contact:	?
updated:	?

language:	Lisp (elisp - Emacs Lisp)
package:	ILISP
version:	5.0
parts:		Emacs interface
author: 	?? Ivan Vazquez <ivan@haldane.bu.edu>
location:	ftp to haldane.bu.edu (128.197.54.25) in pub/ilisp/ilisp.tar.Z
description:	ILISP provides a somewhat lisp-machine like interface to lisp
		listeners from Emacs.
bugs:		ilisp-bug@darwin.bu.edu (or ilisp-bugs@darwin.bu.edu).
discussion:	ilisp@darwin.bu.edu
support:	Mailing list requests/deletions to ilisp-request@darwin.bu.edu
updated:	1993/06/28

language:	Lisp (elisp - Emacs Lisp)
package:	GNU Emacs
version:	19.25
parts:		editor, interpreter, documentation, source debugger
author: 	Richard Stallman <rms@gnu.ai.mit.edu> and others
location:	pub/gnu/emacs-19.25.tar.gz from any GNU site.
description:	An editor that is almost an operating system.  Quite
		programmable.  And it even fits in your tackle box.
bugs:		gnu.emacs.bug, e-mail to bug-gnu-emacs@prep.ai.mit.edu
ports:		Unix, VMS, ?
discussion:	alt.religion.emacs, gnu.emacs.sources
help:		gnu.emacs.help
announcements:	gnu.emacs.announce
updated:	1994/06/01

language:	Lisp (elisp - Emacs Lisp)
package:	Lucid Emacs (lemacs)
version:	19.10
parts:		? interpreter
author:		kyle@crystal.wonderworks.com
location:	/pub/lemacs/* from LUCID.COM (192.43.175.3).
description:	A version of Emacs based on Emacs 19.
		Mirrored at other sites including:
		   /pub/epoch-files/lemacs/ from cs.uiuc.edu
		   /pub/lemacs-19.10/ from self.stanford.edu
bugs:		alt.lucid-emacs.bug, bug-lucid-emacs@lucid.com
discussion:	alt.lucid-emacs.help, help-lucid-emacs@lucid.com
updated:	1994/06/01

language:	? Lisp, X
package:	winterp
version:	2.01
parts:		interpreter, documentation, examples
author:		Niels P. Mayer <mayer@eit.com> or <mayer@netcom.com>
location:	ftp.x.org in contrib/devel_tools/winterp-2.01.tar.gz
description:	An object-oriented rapid prototyping, development and delivery
		environment for building extensible applications with the
		OSF/Motif UI Toolkit and Xtango-based graphics/animation.
ports:		UNIX
discussion:	comp.lang.lisp.x.
announcements:	winterp@netcom.com
updated:	1994/06/09

language:	Lisp
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Oaklisp
package:	oaklisp
version:	1.2
parts:		interface, bytecode compiler, runtime system, documentation
author: 	Barak Pearlmutter, Kevin Lang
location:	ftp /afs/cs.cmu.edu/user/bap/oak/ftpable/* from f.gp.cs.cmu.edu
description:	Oaklisp is a Scheme where everything is an object.  It 
		provides multiple inheritence, a strong error system,
		setters and locators for operations, and a facility for
		dynamic binding.
status: 	actively developed?
contact:	Pearlmutter-Barak@CS.Yale.Edu ?
updated:	1992/05 ?

language:	Scheme
package:	Schematik
version:	1.1.5.2
parts:		programming environment
author: 	Chris Kane, Max Hailperin <max@nic.gac.edu>
location:	ftp /pub/next/scheme/* from ftp.gac.edu
    Europe:	ftp /pub/next/ProgLang from ftp.informatik.uni-muenchen.de
description:	Schematik is a NeXT front-end to MIT Scheme for
		the NeXT.  It provides syntax-knowledgeable text
		editing, graphics windows, and user-interface to
		an underlying MIT Scheme process. It comes packaged
		with MIT Scheme 7.1.3 ready to install on the NeXT.
ports:		NeXT, MIT Scheme 7.1.3
portability:	requires NeXTSTEP
contact:	schematik@gac.edu
updated:	1993/03/11

language:	Scheme
package:	T
version:	3.1
parts:		compiler (native machine code)
author: 	Norman Adams, David Kranz, Richard Kelsey, James Philbin,
		and Jonathan Rees.
location:	ftp pub/systems/t3.1 from ftp.ai.mit.edu
description:	a Scheme-like language developed at Yale.  T is
		written in itself and compiles to efficient native
		code.  Includes a Scheme environment.
		(A multiprocessing version of T is available from
		masala.lcs.mit.edu:/pub/mult)
bugs:		kranz@lcs.mit.edu
ports:		Decstation, Sparc, Iris. Old m68k version.
contact:	David Andrew Kranz <kranz@lcs.mit.edu>
updated:	1991/11/26

language:	Scheme
package:	scm
version:	4e1
parts:		interpreter, conformance test, documentation
author: 	Aubrey Jaffer <jaffer@zurich.ai.mit.edu>
location:	altdorf.ai.mit.edu in archive/scm/scm*
		prep.ai.mit.edu in pub/gnu/jacal/scm*.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/scm*.tar.gz
    Canada:	ftp pub/oz/scheme/new/* from nexus.yorku.ca
    Europe:	ftp pub/bosullvn/jacal/* from ftp.maths.tcd.ie
description:	Fast portable R4RS Scheme interpreter.
conformance:	Revised^4 Report on the Algorithmic Language Scheme,
		IEEE P1178 specification.
restriction:	GNU General Public License
requires:	SLIB (pointers to it in documentation)
ports:		Amiga, Atari-ST, MacOS, MS-DOS, OS/2, NOS/VE, Unicos, VMS,
		Unix. ASCII and EBCDIC both supported.
status: 	actively developed
contributions:	send $$$ to Aubrey Jaffer, 84 Pleasant St., Wakefield, MA 01880
updated:	1994/04/29

language:	Scheme
package:	Scheme Library (slib)
version:	2a1
parts:		library, documentation
author: 	?? Aubrey Jaffer <jaffer@ai.mit.edu>
location:	altdorf.ai.mit.edu in ftp archive/scm/slib*.tar.Z
		prep.ai.mit.edu in pub/gnu/jacal/slib*.tar.gz
		ftp.maths.tcd.ie in pub/bosullvn/jacal/slib*.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/slib*.tar.gz
description:	SLIB is a portable scheme library meant to provide 
		compatibiliy and utility functions for all standard scheme 
		implementations.
ports:		Scm4b, Chez, ELK 1.5, GAMBIT, MITScheme, Scheme->C, 
		Scheme48, T3.1.
status: 	actively developed
contact:	Aubrey Jaffer <jaffer@zurich.ai.mit.edu>
updated:	1993/10/09

language:	Scheme
package:	Hobbit
version:	release 2
parts:		compiler(->C), documentation
author: 	Tanel Tammet <tammet@cs.chalmers.se>
location:	altdorf.ai.mit.edu in archive/scm/hobbit2.tar.gz
		ftp.maths.tcd.ie in pub/bosullvn/jacal/hobbit2.tar.gz
		ftp.cs.indiana.edu in /pub/scheme-repository/imp/hobbit2.tar.gz
description:	The main aim of hobbit is to produce maximally fast C programs
		which would retain most of the original Scheme program
		structure, making the output C program readable and modifiable.
		Hobbit is written in Scheme and is able to self-compile.
		Hobbit release 1 works together with the scm release scm4b3. 
		Future releases of scm and hobbit will be coordinated.
requires:	scm 4b3
updated:	1993/04/25

language:	Scheme
package:	siod (Scheme In One Day, or Scheme In One Defun)
version:	3.0
parts:		interpreter,library,documentation,sql interface
author: 	George Carrette <gjc@world.std.com>
location:	ftp.std.com in pub/gjc
		ftp.cs.indiana.edu in scheme
description:	Small scheme implementation in C arranged as a set of
		subroutines that can be called from any main program
		for the purpose of introducing an interpreted extension
		language.  Compiles to 20K bytes of executable (VAX/VMS).
		Lisp calls C and C calls Lisp transparently.
features:	symbols,strings,arrays,hash tables, file i/o binary/text/seek,
		data save/restore in binary and text, interface to commercial
		databases such Oracle, Digital RDB.  Small executable (42k
		on VAX).
restriction:	none besides non-removal of copyright notice.
ports:		VAX/VMS, VAX Unix, Sun3, Sun4, Amiga, Macintosh, MIPS, Cray,
		ALPHA/VMS, Windows NT/WIN32, OS/2.
portability:	Liked by ANSI C compilers and C++ compilers. e.g. gcc -Wall
status: 	supported as benchmark/testbed at mitech.com
help:		the author will help anyone building something.
contributions:	antique/classic computer hardware, perhaps.
announcements:	comp.lang.scheme
updated:	1994/04/29

language:	Scheme
package:	MIT Scheme (aka C-Scheme)
version:	7.2
parts:		interpreter, large runtime library, emacs macros, 
		native-code compiler, emacs-like editor, source-level debugger
author: 	MIT Scheme Team (primarily Chris Hanson, Jim Miller, and
		Bill Rozas, but also many others)
location:	ftp archive/scheme-7.2 from altdorf.ai.mit.edu 
		DOS floppies ($95) and Unix tar tapes ($200) from 
		Scheme Team / c/o Prof. Hal Abelson / MIT AI Laboratory /
		545 Technology Sq. / Cambridge, MA 02139
description:	Scheme implementation with rich set of utilities.
conformance:	full compatibility with Revised^4 Report on Scheme, 
		one known incompatibility with IEEE Scheme standard
bugs:		bug-cscheme@zurich.ai.mit.edu
ports:		68k (hp9000, sun3, NeXT), MIPS (Decstation, Sony, SGI), 
		HP-PA (600, 700, 800), Vax (Ultrix, BSD), Alpha (OSF), 
		i386 (DOS/Windows, various Unix)
status: 	activly developed
discussion:	info-cscheme@zurich.ai.mit.edu 
		(cross-posted to comp.lang.scheme.c)
updated:	1992/08/24

language:	Scheme
package:	Scheme->C
version:	15mar93
parts:		compiler(->C)
author: 	Digital Western Research Laboratory; Joel Bartlett
location:	ftp pub/DEC/Scheme-to-C/* from gatekeeper.dec.com
description:	Translates Revised**4 Scheme to C that is then compiled
		by the native C compiler for the target machine.  This
		design results in a portable system that allows either
		stand-alone Scheme programs or programs written in both
		compiled and interpreted Scheme and other languages.
conformance:	superset of Revised**4
		+ "expansion passing style" macros
		+ foreign function call capability
		+ interfaces to Xlib (Ezd & Scix)
		+ records
reference:	send Subject "help" to WRL-Techreports@decwrl.dec.com
		for technical report.  Other documentation in
		Scheme-to-C directory on gatekeeper.
ports:		VAX/ULTRIX, DECstation ULTRIX, Alpha AXP OSF/1,
		Microsoft Windows 3.1, Apple Macintosh 7.1,
		HP 9000/300, HP 9000/700, Sony News, SGI Iris and
		Harris Nighthawk and other Unix-like m88k systems.
		The 01nov91 version is also available on Amiga, SunOS,
		NeXT, and Apollo systems.
status: 	actively developed, contributed ports welcomed
updated:	1993/03/15

language:	Scheme, Tk
package:	STk
version:	1.00
parts:		interpreter
author: 	Gallesio Erick <eg@unice.fr>
location:	ftp pub/STk-1.00.tar.gz from kaolin.unice.fr
description:	A Scheme interpreter blended with Ousterhout's Tk package.  
		STk expresses all of Tk as scheme objects.  STk includes
		a CLOS/Dylan-like OO extenstion, but the extension is slow.
conformance:	almost R4RS
ports:		SunOS 4.1.x, Ultrix/MIPS
updated:	1993/09/06

language:	Scheme
package:	PC-Scheme
version:	3.03
parts:		compiler, debugger, profiler, editor, libraries
author: 	Texas Instruments
location:	ftp archive/pc-scheme/* from altdorf.ai.mit.edu
description:	Written by Texas Instruments. Runs on MS-DOS 286/386 IBM PCs
		and compatibles.  Includes an optimizing compiler, an
		emacs-like editor, inspector, debugger, performance testing,
		foreign function interface, window system and an
		object-oriented subsystem.  Also supports the dialect used in
		Abelson and Sussman's SICP.  
conformance:	Revised^3 Report, also supports dialect used in SICP.
restriction:	official version is $95, contact rww@ibuki.com
ports:		MSDOS
updated:	1992/02/23

language:	Scheme
package:	PCS/Geneva
version:	4.02PL1
parts:		compiler, debugger, profiler, editor, libraries
author: 	"a team at the u. of Geneva"
location:	send email to schemege@uni2a.unige.ch
description:	PCS/Geneva is a cleaned-up version of Texas Instrument's PC
		Scheme developed at the University of Geneva. The main
		extensions to PC Scheme are 486 support, BGI graphics, LIM-EMS
		pagination support, line editing, and assembly-level
		interfacing.
contact:	schemege@uni2a.unige.ch
updated:	1994/01/11

language:	Scheme
package:	Gambit Scheme System
version:	2.0
parts:		interpreter, compiler, linker, libraries
author: 	Marc Feeley <feeley@iro.umontreal.ca>
location:	ftp pub/parallele/gambit/* from ftp.iro.umontreal.ca
description:	Gambit is an optimizing Scheme compiler/system.  The
		Macintosh port can run with Toolbox and has a built-in
		editor.
conformance:	IEEE Scheme standard and `future' construct.
ports:		68k: unix, sun3, hp300, bbn gp100, NeXT, Macintosh
updated:	?

language:	Scheme
package:	Elk (Extension Language Kit)
version:	2.2
parts:		interpreter, libraries
author: 	Oliver Laumann <net@cs.tu-berlin.de>, Carsten Bormann
		<cabo@cs.tu-berlin.de> 
location:	ftp pub/unix/languages/scheme/elk-2.2.tar.gz from 
		ftp.fu-berlin.de
    N.America:	ftp contrib/elk-2.2.tar.gz from ftp.x.org
description:	Elk is a Scheme interpreter designed to be used as a 
		general extension language.
		+ interfaces to Xlib, Xt, and various widget sets.
		+ dynamic loading of extensions
		+ almost all artificial limitations removed
		+ generational/incremental garbage collector
		+ Unix system call extensions
		+ Records (structures)
		+ bitstrings
conformance:	Mostly R3RS compatable.
ports:		unix, ultrix, vax, sun3, sun4, 68k, i386, mips, ibm rt, 
		rs6000, hp700, sgi, sony, DOS (gcc+DJGPP or go32)
updated:	1994/2/15

language:	Scheme
package:	libscheme
version:	0.3
parts:		embedded interpreter
author: 	Brent Benson <Brent.Benson@mail.csd.harris.com>
location:	ftp.cs.indiana.edu in imp/libscheme-0.3.tar.gz
description:	An embedded interpreter for Scheme written in C, can be used
		as a command interpreter or extension language, and is easily
		extended in C with new primitive types, primitve functions and
		syntax.
conformance:	Revised^4 Report on the Algorithmic Language Scheme.
updated:	1994/05/16

language:	Scheme
package:	ezd - easy drawing for programs on X displays
version:	15mar93
parts:		interpreter/server
author: 	?
location:	ftp pub/DEC/ezd/* from gatekeeper.dec.com
description:	Ezd is a graphics server that sits between an application
		program and the X server and allows both existing and new
		programs easy access to structured graphics.  Ezd users have
		been able to have their programs produce interactive drawings
		within hours of reading the man page.  Structured graphics:
		application defined graphical objects are ordered into drawings
		by the application.  Loose coupling to the application
		program:  unlike most X tools, ezd does not require any event
		handling by the application.  The ezd server mantains window
		contents.  When an event occurs on such an object, an
		application supplied Scheme expression is evaluated.
contact:	Joel Bartlett <bartlett@decwrl.dec.com> ?
updated:	1993/03/10

language:	Scheme
package:	XScheme
version:	0.28
parts:		?
author: 	David Betz <dbetz@apple.com>
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
discussion:	comp.lang.lisp.x
contact:	?
updated:	1992/02/02

language:	Scheme
package:	Fools' Lisp
version:	1.3.2
parts:		?
author: 	Jonathan Lee <jonathan@scam.berkeley.edu>
location:	ftp src/local/fools.tar.Z from scam.berkeley.edu
description:	a small Scheme interpreter that is R4RS conformant.
ports:		Sun-3, Sun-4, Decstation, Vax (ultrix), Sequent, Apollo
updated:	1991/10/31

language:	Scheme
package:	Scheme88
version:	?
parts:		?
author: 	?
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
contact:	?
updated:	?

language:	Scheme
package:	UMB Scheme
version:	?
parts:		?, editor, debugger
author: 	William Campbell <bill@cs.umb.edu>
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	?
conformance:	R4RS Scheme
ports:		?
updated:	?

language:	Scheme
package:	PseudoScheme
version:	2.8
parts:		translator(Common Lisp)
author: 	Jonathan Rees <jar@cs.cornell.edu>
location:	?
description:	?
conformance:	R3RS except call/cc.
requires:	Common Lisp
ports:		Lucid, Symbolics CL, VAX Lisp, Explorer CL
announcements:	info-clscheme-request@mc.lcs.mit.edu
updated:	?

language:	Scheme
package:	SOS (Scheme Object System)
version:	?
parts:		?
author: 	Chris Hanson ?
location:	ftp archive/cph/sos.tar.gz from altdorf.ai.mit.edu
description:	?
updated:	?

language:	Scheme
package:	Similix
version:	5.0
parts:		partial evaulator, debugger
author: 	Anders Bondorf <anders@diku.dk>
location:	ftp pub/diku/dists/Similix.tar.Z from ftp.diku.dk
description:	Similix is an autoprojector (self-applicable partial 
		evaluator) for a higher order subset of the strict functional 
		language Scheme.  Similix handles programs with user defined 
		primitive abstract data type operators which may process 
		global variables (such as input/output operators).
conformance:	extension of large subset of R4RS Scheme.
requires:	Scheme
ports:		Scm, Chez Scheme
portability:	high
contact:	Anders Bondorf <anders@diku.dk>
updated:	1993/05/18

language:	Scheme
package:	syntax-case
version:	2.1
parts:		macro system, documentation
author: 	R. Kent Dybvig <dyb@cs.indiana.edu>
location:	cs.indiana.edu in ftp pub/scheme/syntax-case.tar.Z
    Macintosh:	maya.dei.unipd.it in /pub/mac/gambit/
description:	We have designed and implemented a macro system that is
		vastly superior to the low-level system described in
		the Revised^4 Report; in fact, it essentially
		eliminates the low level altogether.  We also believe
		it to be superior to the other proposed low-level
		systems as well, but each of you can judge that for
		yourself.  We have accomplished this by "lowering the
		level" of the high-level system slightly, making
		pattern variables ordinary identifiers with essentially
		the same status as lexical variable names and macro
		keywords, and by making "syntax" recognize and handle
		references to pattern variables.
reference:	+ Robert Hieb, R. Kent Dybvig, and Carl Bruggeman "Syntactic
		Abstraction in Scheme", IUCS TR #355, 6/92 (revised 7/3/92)
		+ R. Kent Dybvig, "Writing Hygienic Macros in Scheme with
		Syntax-Case", IUCS TR #356, 6/92 (revised 7/3/92).
ports:		Chez Scheme, Mac port runs under MacGambit 2.0
updated:	1992/07/06

language:	Scheme
package:	x-scm
version:	?
parts:		?
author: 	Larry Campbell <campbell@redsox.bsw.com>
location:	alt.sources archive
description:	x-scm is a bolt-on accessory for the "scm" Scheme interpreter 
		that provides a handy environment for building Motif and 
		OpenLook applications.	(There is some support as well for raw 
		Xlib applications, but not enough yet to be useful.)
requires:	scm, X
ports:		?
updated:	1992/08/10

language:	Scheme, Prolog
package:	"Paradigms of AI Programming"
version:	?
parts:		book with interpreters and compilers in Common Lisp
author: 	Peter Norvig
location:	bookstore, and ftp pub/norvig/* from unix.sri.com
description:	?
updated:	?

language:	Scheme
package:	Psd (Portable Scheme Debugger)
version:	1.1
parts:		debugger
author: 	Kellom{ki Pertti <pk@cs.tut.fi>
location:	ftp pub/src/languages/schemes/psd.tar.Z from cs.tut.fi
description:	source code debugging from emacs
restriction:	GNU GPL
requires:	R4RS compliant Scheme, GNU Emacs.
ports:		scm, Elk, Scheme->C
updated:	1992/10/08

language:	Scheme
package:	Tiny Clos
version:	first release
parts:		?
author: 	?
location:	ftp pub/mops/* from parcftp.xerox.com
description:	A core part of CLOS (Common Lisp Object System) ported to
		Scheme and rebuilt using a MOP (Metaobject Protocol).
		This should be interesting to those who want to use MOPs
		without using a full Common Lisp or Dylan.
ports:		MIT Scheme 11.74
discussion:	mailing list: mops, administered by gregor@parc.xerox.com
contact:	Gregor Kiczales <gregor@parc.xerox.com>
updated:	1992/12/14

language:	Scheme
package:	VSCM 
version:	V0r3
parts:		runtime, bytecode compiler, bytecode interpreter
author: 	Matthias Blume <blume@cs.princeton.edu>
location:	ftp /pub/scheme-repository/imp/vscm*.tar.gz
		ftp.cs.indiana.edu
    Germany:	ftp pub/scheme/yorku/imp/vscm*
		from faui80.informatik.uni-erlangen.de
    UK:		ftp pub/uunet/languages/lisp/scheme/repository/imp/vscm*
		from unix.hensa.ac.uk
description:	VSCM is a highly portable implementation of Scheme, written in
		ANSI C and Scheme.  Portability is achieved by exlusive use of
		legal ANSI C features -- as opposed to a plethora of #ifdef's
		to adjust to various system peculiarities.  (Of course, in real
		life ANSI C doesn't guarantee portability per se, because there
		are too many systems with broken compilers or broken
		libraries.)
conformance:	R4RS, IEEE P1178
features:	exception and interrupt handling, executable portable memory 
		images, coroutines, continuations with multiple arguments
ports:		Unix, Macintosh
portability:	very high
status: 	actively developed
discussion:	comp.lang.scheme
updated:	1993/11/09

language:	Scheme
package:	PSI
version:	pre-release
parts:		interpreter, virtual machine
author: 	Ozan Yigit <oz@ursa.sis.yorku.ca>, David Keldsen, Pontus Hedman
location:	from author
description:	I am looking for a few interested language hackers to play with
		and comment on a scheme interpreter. I would prefer those who
		have been hacking portable [non-scheme] interpreters for many
		years.	The interpreter is PSI, a portable scheme interpreter
		that includes a simple dag compiler and a virtual machine.  It
		can be used as an integrated extension interpreter in other
		systems, allows for easy addition of new primitives, and it
		embodies some other interesting ideas. There are some
		unique[2] code debug/trace facilities, as well, acceptable
		performance resulting from a fairly straight-forward
		implementation.  Continuations are fully and portably
		supported, and perform well.  PSI is based on the simple
		compilers/vm in Kent Dbyvig's thesis.
conformance:	R^4RS compatible with a number of useful extensions.
updated:	1993/02/19

language:	Scheme
package:	Bigloo
version:	1.4
parts:		interpreter, compiler(->ANSI C), runtime
author: 	Manuel Serrano <Manuel.Serrano@inria.fr>
location:	ftp INRIA/Projects/icsla/Implementations/bigl* from ftp.inria.fr
description:	The main goal of Bigloo is to deliver small and fast stand 
		alone applications.
conformance:	IEEE Scheme standard with some extensions for regex handling
features:	Optimization supported.
ports:		sun, sony news, sgi, linux, hp-ux
portability:	very high for unix systems
updated:	1993/09/08

language:	Scheme
package:	Scheme84
version:	?
parts:		?
author: 	?
location:	Send a tape w/return postage to: Scheme84 Distribution /
		Nancy Garrett / c/o Dan Friedman / Department of Computer
		Science / Indiana University / Bloomington, Indiana.  Call
		1-812-335-9770.
description:	?
requires:	VAX, Franz Lisp, VMS or BSD
contact:	nlg@indiana.edu
updated:	?

language:	Scheme
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

document formatting languages
-------------------------------------------------------------------------------
category:	document formatting languages
description:	These are formatting languages.  Very application-specific.
		[Could someone make me an entry for TeX?  --ed]
iref:		(C) c2man

language:	CLiP
package:	CLiP
version:	2.1
parts:		documentation generator
author: 	Eric W. van Ammers <AMMERS@RCL.WAU.NL>
location:	ftp clip/* from sun01.info.wau.nl
description:	CLiP does not use explicite commands to perform the extraction
		process.  It recognizes pseudostatemens written as comment of
		the programming language in question. CLiP distinguishes
		pseudostatments from ordinary comments because the former
		comply with a a particular style. This specific style can be
		adjusted to suit virtually any programming language.  The CLiP
		approach to LP makes the system extremely versatile. It is
		independent of programming language and text processing
		environment.  We designed CLiP to be compatible with hypertext
		systems as well but we have not yet experimented with this form
		of documentation.
		CLiP works with almost any target and almost any source
		language
ports:		MS-DOS, VAX/VMS, Unix
updated:	1993/11/18

language:	HP-GL, Postscript
package:	hp2ps
version:	1.9c
parts:		interpreter
author: 	Alun Jones <alun@huey.wst.com>
location:	ftp pub/hp2ps/hp2ps19c.zip from ftp.wst.com
description:	hp2ps is an HP-GL interpreter that is written in Postscript.
		It runs on the printer itself.	
restriction:	If there is monetary benifit from using hp2ps, it is requested
		that money be set to Alun Jones.  Further, hp2ps may not be
		distributed as part of a commercial offering without prior
		agreement.
updated:	?

language:	Lout
package:	Lout
version:	2.05
parts:		translator(Lout->Postscript), documentation
author: 	Jeffrey H. Kingston <jeff@cs.su.oz.au>
location:	ftp jeff/lout.2.03.tar.Z from ftp.cs.su.oz.au
description:	Lout is a batch text formatting system.
		Lout offers an unprecedented range of advanced features,
		including equation formatting, tables, diagrams, rotation and
		scaling, sorted indexes, bibliographic databases, running
		headers and odd-even pages, automatic cross referencing, and
		much more, all ready to go.  Furthermore, Lout is easily
		extended with definitions which are very much easier to write
		than troff of TeX macros because Lout is a high-level language,
		the outcome of an eight-year research project that went back to
		the beginning.
ports:		unix
updated:	1993/07/30

language:	Postscript
package:	Ghostscript
version:	2.6.1
parts:		interpreter, ?
author: 	L. Peter Deutsch <ghost@aladdin.com>
location:	ftp pub/GNU/ghostscript* from a GNU archive site
		ftp from ftp.cs.wisc.edu:/pub/X/ghostscript*2.6.1*
description:	A postscript interpreter with previewers for serval
		systems and many fonts.
updated:	1993/05/29

language:	Postscript, Common Lisp
package:	PLisp
version:	?
parts:		translator(Postscript), programming environment(Postscript)
author: 	John Peterson <peterson-john@cs.yale.edu>
location:	?
description:	?
updated:	?

language:	SGML (Standardized Generalized Markup Language)
package:	sgmls
version:	1.1
parts:		parser
author: 	James Clark <jjc@jclark.com> and Charles Goldfarb
location:	ftp pub/text-processing/sgml/sgmls-1.0.tar.Z from ftp.uu.net
    UK: 	ftp sgmls/sgmls-1.1.tar.Z from ftp.jclark.com
description:	SGML is a markup language standardized in ISO 8879.  Sgmls is
		an SGML parser derived from the ARCSGML parser materials which
		were written by Charles Goldfarb.  It outputs a simple, easily
		parsed, line oriented, ASCII representation of an SGML
		document's Element Structure Information Set (see pp 588-593 of
		``The SGML Handbook'').  It is intended to be used as the front
		end for structure-controlled SGML applications.  SGML is an
		important move in the direction of separating information from
		its presentation, i.e. making different presentations possible
		for the same information.
bugs:		James Clark <jjc@jclark.com>
ports:		unix, msdos
updated:	1993/02/22

language:	troff, nroff, eqn, tbl, pic, refer, Postscript, dvi
package:	groff
version:	1.07
parts:		document formatter, documentation
author: 	James Clark <jjc@jclark.com>
location:	ftp groff-1.07.tar.z from a GNU archive site
description:	[An absolutely fabulous troff! --ed]
restriction:	GNU General Public License
requires:	C++
updated:	1993/03/03

language:	Web
package:	CWeb
version:	3.1
parts:		translator(ANSI C and C++)
author: 	Levy/Knuth?
location:	?
description:	[Referred to in the CWeb 3.x announcement (below). I'll follow
		 up on it in the next release of the list. -- Ed]
requires:	ANSI C and/or C++ Compiler?
contact:	?
updated:	?

language:	Web
package:	CWeb
version:	3.x
parts:		translator(ANSI C)
author: 	Marc van Leeuwen
location:	ftp pub/cweb/? from ftp.cwi.nl
description:	An ANSI C implementation of the Web literate-programming
		concept (Both source and output are ANSI C). This version was
		developed in parallel with v3.1 referred to above.
requires:	ANSI C Compiler
contact:	M.van.Leeuwen@cwi.nl
updated:	1993/12/16

language:	Web
package:	web2c
version:	5-851d
parts:		translator(C)
author: 	?
location:	ftp TeX/web2c.tar.Z from ics.uci.edu
    Europe:	ftp pub/tex/src/web2c/web2c.tar.Z from ftp.th-darmstadt.de
description:	
contact:	Karl Berry <karl@claude.cs.umb.edu>
updated:	1993/02/22

language:	Web
package:	Web
version:	?
parts:		translator(Pascal)
author: 	Donald Knuth
location:	ftp ? from labrea.stanford.edu
description:	Donald Knuth's programming language where you
		write the source and documentation together.
requires:	Pascal
contact:	?
updated:	?

language:	Web
package:	FunnelWeb
version:	?
parts:		macro preprocessor, documentation, tests, ?
author: 	Ross Williams <ross@spam.adelaide.edu.au>
location:	comp.sources.unix volume 26
description:	FunnelWeb is a production-quality literate-programming tool
		that emphasises simplicity and reliability. It provides a macro
		facility, and assists in the production of typeset
		documentation.	Input-programming-language independent
restriction:	CopyLeft
ports:		Sun, Vax, Mac, PC
updated:	1993/04/11

logic programming languages
-------------------------------------------------------------------------------
category:	logic programming languages
description:	languages designed to manipulate logic predicates.  Often
		used to build expert systems

language:	BABYLON
package:	BABYLON
version:	2.3
parts:		ai workbench (expert system development environment)
author: 	members of GMD, FIT-KI
location:	ftp gmd/ai-research/Software/Babylon/* from ftp.gmd.de
		   or in WWW from http://www.gmd.de/
description:	BABYLON is a development environment for expert systems. It
		includes frames, rules, constraints, a prolog-like logic
		formalism, and a description language for diagnostic
		applications (texi).
reference:	Christaller, T., Di Primio, F., Voss, A. (Hrsg.).
		Die KI-Werkbank Babylon.
		Eine offene und portable Entwicklungsumgebung fuer
		Expertensysteme. Addison-Wesley, 1989, ISBN 3-89319-155-0

		Christaller, T., Di Primio, F., Voss, A. (eds).
		The AI-Workbench BABYLON.
		An open and portable development environment for expert systems.
		Academic Press, London, 1992, ISBN 0-12-174235-0;

		Guesgen, H.-W.,
		CONSAT: A system for constraint satisfaction.
		Research Notes in Artificial Intelligence, Morgan Kaufman,
		San Mateo, 1989.
requires:	Common Lisp, works under:
		   Macintosh Common Lisp, Franz Allegro, CLisp, CMU, AKCL etc.
contact:	juergen.walther@gmd.de
updated:	1994/06/22

language:	Goedel
package:	Goedel
version:	1.4
parts:		book, compiler, user manual, system modules, example programs
author: 	Jiwei Wang <jiwei@lapu.bristol.ac.uk>
location:	ftp.cs.kuleuven.ac.be (134.58.41.2)
		   /pub/logic-prgm/goedel/README
		ftp.cs.bris.ac.uk (137.222.102.102)
		   /goedel/README
		both contain further pointers.
description:	An implementation of a significant subset of Goedel. Goedel is 
		a declarative, general-purpose strongly-typed logic programming
		language.  The type system is based on many-sorted logic with
		parametric polymorphism.  Modularity is supported, as well as
		infinite precision arithmetic, limited constraint satisfaction,
		and finite sets.
reference:	The Goedel Programming Language, P.M. Hill & J.W. Lloyd, 
		MIT Press, 1994, ISBN 0-262-08229-2.
requires:	SICStus Prolog version 2.1 #6 (or later).  Run time system for
		SPARCstation provided, though.
status: 	underging continuing development
contact:	goedel@compsci.bristol.ac.uk
updated:	1994/05/16

language:	Janus
package:	qdjanus
version:	1.3
parts:		translator(prolog)
author: 	Saumya Debray <debray@cs.arizona.edu>
location:	ftp janus/qdjanus/* from cs.arizona.edu
description:	janus is a janus-to-prolog compiler meant to be used 
		with Sicstus Prolog
conformance:	mostly compliant with "Programming in Janus" by 
		Saraswat, Kahn, and Levy.
updated:	1992/05/18

language:	Janus
package:	jc
version:	1.50 alpha
parts:		compiler(->C)
author: 	David Gudeman <gudeman@cs.arizona.edu>
location:	ftp janus/jc/* from cs.arizona.edu
description:	jc is a janus-to-C compiler (considerably faster than qdjanus).
		jc is a _sequential_ implementation of a _concurrent_ language.
bugs:		jc-bugs@cs.arizona.edu
ports:		sun-4, sun-3, Sequent Symmetry
status: 	jc is an experimental system, undergoing rapid development.  
		It is in alpha release currently.
discussion:	janusinterest-request@parc.xerox.com
updated:	1992/06/09

language:	LIFE (Logic, Inheritance, Functions, and Equations)
package:	Wild_LIFE
version:	first-release
parts:		interpreter, manual, tests, libraries, examples
author: 	Paradise Project, DEC Paris Research Laboratory.
location:	ftp pub/plan/Life.tar.Z from gatekeeper.dec.com.
description:	LIFE is an experimental programming language with a
		powerful facility for structured type inheritance.  It
		reconciles styles from functional programming, logic
		programming, and object-oriented programming.  LIFE
		implements a constraint logic programming language with
		equality (unification) and entailment (matching)
		constraints over order-sorted feature terms.  The
		Wild_LIFE interpreter has a comfortable user interface
		with incremental query extension ability.  It contains
		an extensive set of built-in operations as well as an X
		Windows interface.
conformance:	semantic superset of LOGIN and LeFun.  Syntax is similar
		to prolog.
bugs:		life-bugs@prl.dec.com
ports:		MIPS-Ultrix
portability:	good in theory
discussion:	life-request@prl.dec.com
contact:	Peter Van Roy <vanroy@prl.dec.com>
updated:	1992/12/14

language:	Lolli (logic programming)
package:	Lolli
version:	?
parts:		?
author: 	? Josh Hodas <hodas@saul.cis.upenn.edu> ?
location:	ftp pub/Lolli/Lolli-07.tar.Z. from ftp.cis.upenn.edu
description:	Lolli is an interpreter for logic programming based 
		on linear logic principles.
		Lolli can be viewed as a refinement of the the
		Hereditary Harrop formulas of Lambda-Prolog.  All the
		operators (though not the higher order unification) of
		Lambda-Prolog are supported, but with the addition of
		linear variations. Thus a Lolli program distinguishes
		between clauses which can be used as many, or as few,
		times as desired, and those that must be used exactly once.
requires:	ML
updated:	1992/11/08

language:	Parlog
package:	SPM System (Sequential Parlog Machine)
version:	?
parts:		?, documenation
author: 	?
location:	? ftp lang/Parlog.tar.Z from nuri.inria.fr
description:	a logic programming language ?
reference:	Steve Gregory, "Parallel Logic Programming in PARLOG", 
		Addison-Wesely, UK, 1987
restriction:	? no source code ?
ports:		Sun-3 ?
updated:	??

language:	Prolog
package:	SB-Prolog
version:	3.1 ?
parts:		?
author: 	interpreter
location:	ftp pub/sbprolog from sbcs.sunysb.edu
description:	?
restriction:	GNU General Public License
contact:	? warren@sbcs.sunysb.edu ?
updated:	?

language:	Prolog
package:	XSB
version:	1.2
parts:		interpreter, preprocessor(HiLog), documentation
author: 	XSB research group / SUNY at Stony Brook
location:	ftp pub/XSB/XSB.tar.Z from sbcs.sunysb.edu (130.245.1.15)
description:	XSB extends the standard functionality of Prolog (being a
		descendant of PSB- and SB-Prolog) to include implementations of
		OLDT (tabling) and HiLog terms.  OLDT resolution is extremely
		useful for recursive query computation, allowing programs to
		terminate correctly in many cases where Prolog does not.  HiLog
		supports a type of higher-order programming in which predicate
		symbols can be variable or structured.	This allows unification
		to be performed on the predicate symbols themselves in addition
		to the arguments of the predicates.  Of course, Tabling and
		HiLog can be used together.
ports:		Sun, Solaris, NeXT, Linux, 386 BSD, IRIX, HP-UX
portability:	Generally to 32-bit machines.
contact:	xsb-contact@cs.sunysb.edu
updated:	1993/07/28

language:	Prolog
package:	Modular SB-Prolog
version:	?
parts:		interpreter
author: 	?
location:	ftp pub/dts/mod-prolog.tar.Z from ftp.dcs.ed.ac.uk
description:	SB-Prolog version 3.1 plus modules
restriction:	GNU General Public License
ports:		Sparc
contact:	Brian Paxton <mprolog@dcs.ed.ac.uk>
updated:	?

language:	ALF [prolog variant]
package:	alf (Algebraic Logic Functional programming language) 
version:	?
parts:		runtime, compiler(Warren Abstract Machine)
author: 	Rudolf Opalla <opalla@julien.informatik.uni-dortmund.de>
location:	ftp pub/programming/languages/LogicFunctional from
		ftp.germany.eu.net
description:	ALF is a language which combines functional and
		logic programming techniques.  The foundation of
		ALF is Horn clause logic with equality which consists
		of predicates and Horn clauses for logic programming,
		and functions and equations for functional programming.
		Since ALF is an integration of both programming
		paradigms, any functional expression can be used
		in a goal literal and arbitrary predicates can
		occur in conditions of equations.
updated:	1992/10/08

language:	CLP (Constraint Logic Programming language) [Prolog variant]
package:	CLP(R)
version:	1.2
parts:		runtime, compiler(byte-code), contstraint solver
author: 	IBM
location:	mail to Joxan Jaffar <joxan@watson.ibm.com>
description:	CLP(R) is a constraint logic programming language
		with real-arithmetic constraints.  The implementation
		contains a built-in constraint solver which deals
		with linear arithmetic and contains a mechanism
		for delaying nonlinear constraints until they become
		linear.  Since CLP(R) subsumes PROLOG, the system
		is also usable as a general-purpose logic programming
		language.  There are also powerful facilities for
		meta programming with constraints.  Significant
		CLP(R) applications have been published in diverse
		areas such as molecular biology, finance, physical
		modelling, etc.  We are distributing CLP(R) in order 
		to help widen the use of constraint programming, and 
		to solicit feedback on the system
restriction:	free for academic and research purposes only
ports:		unix, msdos, OS/2
contact:	Roland Yap <roland@bruce.cs.monash.edu.au>, Joxan Jaffar
updated:	1992/10/14

language:	Prolog + constraints over Finite Domains and Booleans
package:	clp(FD)
version:	2.1
parts:		compiler clp(FD)->C, FD solver, runtime, debugger.
author: 	Daniel Diaz - INRIA Rocquencourt - FRANCE
location:	ftp ftp.inria.fr in the directory
		/INRIA/Projects/ChLoE/LOGIC_PROGRAMMING/clp_fd
description:	clp(FD) is a constraint logic programming language
		over Finite Domains. clp(FD) is based on the wamcc
		Prolog compiler. clp(FD) provides several constraints
		"a la CHIP" on Finite Domains and Booleans and some
		facilities to build new constraints. clp(FD) is 4
		times faster than CHIP v3.2 on average.
restriction:	free (see COPYRIGHT notice)
requires:	GNU C (gcc) version 2.4.5 or higher
ports:		Sparc workstations
portability:	Generally to 32-bit machines with gcc.
contact:	Daniel Diaz (Daniel.Diaz@inria.fr)
updated:	1994/06/08

language:	Prolog
package:	wamcc
version:	2.1
parts:		compiler Prolog->C, runtime, Prolog debugger, WAM debugger.
author: 	Daniel Diaz - INRIA Rocquencourt - FRANCE
location:	ftp ftp.inria.fr in the directory
		/INRIA/Projects/ChLoE/LOGIC_PROGRAMMING/wamcc
description:	wamcc is a Prolog Compiler which translates Prolog to
		C via the WAM. wamcc use the (quasi) standard edinbourgh.
		wamcc offers the most usual built-in predicates
		(but not all), a top-level, a Prolog debugger and a
		WAM debugger. wamcc is designed to be easily extended
		(e.g. see clp(FD)).
		From an efficiency point of view, wamcc is between
		SICStus "emulated" and SICStus "native code" on Sparc
		machines (1.5 times faster than SICStus emulated, 1.5
		times slower than SICStus "native code").
restriction:	free (see COPYRIGHT notice)
requires:	GNU C (gcc) version 2.4.5 or higher
ports:		Sparc workstations
portability:	Generally to 32-bit machines with gcc.
contact:	Daniel Diaz (Daniel.Diaz@inria.fr)
updated:	1994/06/08

language:	Prolog (variant)
package:	Aditi
version:	Beta Release
parts:		interpreter, database
author: 	Machine Intelligence Project, Univ. of Melbourne, Australia
location:	send email to aditi@cs.mu.oz.au
description:	The Aditi Deductive Database System is a multi-user
		deductive database system.  It supports base relations
		defined by facts (relations in the sense of relational
		databases) and derived relations defined by rules that
		specify how to compute new information from old
		information.  Both base relations and the rules
		defining derived relations are stored on disk and are
		accessed as required during query evaluation.  The
		rules defining derived relations are expressed in a
		Prolog-like language, which is also used for expressing
		queries.  Aditi supports the full structured data
		capability of Prolog.  Base relations can store
		arbitrarily nested terms, for example arbitrary length
		lists, and rules can directly manipulate such terms.
		Base relations can be indexed with B-trees or
		multi-level signature files.  Users can access the
		system through a Motif-based query and database
		administration tool, or through a command line
		interface.  There is also in interface that allows
		NU-Prolog programs to access Aditi in a transparent
		manner.  Proper transaction processing is not supported
		in this release.
ports:		Sparc/SunOS4.1.2 Mips/Irix4.0
contact:	<aditi@cs.mu.oz.au>
updated:	1992/12/17

language:	Lambda-Prolog
package:	Prolog/Mali (PM)
version:	? 6/23/92 ?
parts:		compiler(->C), linker, libraries, runtime, documentation
author: 	Pascal Brisset <brisset@irisa.fr>
location:	ftp pm/* from ftp.irisa.fr
description:	Lambda-Prolog, a logic programming language defined by
		Miller, is an extension of Prolog where terms are
		simply typed $\lambda$terms and clauses are higher
		order hereditary Harrop formulas. The main novelties
		are universal quantification on goals and implication.
reference:	+ Miller D.A. and Nadathur G. "Higher-order logic 
		programming", 3rd International Conference on Logic 
		Programming, pp 448-462, London 1986.
		+ Nadathur G. "A Higher-Order Logic as a Basis for Logic
		Programming", Thesis, University of Pennsylvania, 1987.  
requires:	MALI-V06 abstract memory. MALI is available by anonymous ftp 
		from ftp.irisa.fr
ports:		unix
discussion:	prolog-mali-request@irisa.fr
contact:	pm@irisa.fr
updated:	1992/07/06

language:	Prolog (variant)
package:	CORAL
version:	?
parts:		interpreter, interface(C++), documentation
author: 	?
location:	ftp ? from ftp.cs.wisc.edu
description:	The CORAL deductive database/logic programming system was
		developed at the University of Wisconsin-Madison.  The CORAL
		declarative language is based on Horn-clause rules with
		extensions like SQL's group-by and aggregation operators, and
		uses a Prolog-like syntax.  * Many evaluation techniques are
		supported, including bottom-up fixpoint evaluation and top-down
		backtracking.  * A module mechanism is available.  Modules are
		separately compiled; different evaluation methods can be used
		in different modules within a single program.  * Disk-resident
		data is supported via an interface to the Exodus storage
		manager.  * There is an on-line help facility
requires:	AT&T C++ 2.0 (G++ soon)
ports:		Decstation, Sun4
updated:	1993/01/29

language:	Prolog
package:	BinProlog
version:	1.71
parts:		interpreter?, documentation
author: 	?
location:	ftp BinProlog/* from clement.info.umoncton.ca
description:	BinProlog 1.71 is at this time probably the
		fastest freely available C-emulated Prolog.
ports:		IBM-PC/386, Sun-4, Sun-3, NeXT
contact:	Paul Tarau <tarau@info.umoncton.ca>
updated:	1993/04/03

language:	Prolog
package:	SWI-Prolog
version:	1.7.2
parts:		?
author: 	Jan Wielemaker <jan@swi.psy.uva.nl>
location:	ftp pub/SWI-Prolog from swi.psy.uva.nl 
    OS/2:	ftp pub/toolw/SWI/* from mpii02999.ag2.mpi-sb.mpg.de
description:	?
conformance:	superset
features:	"very nice Ed. style prolog, best free one I've seen"
restriction:	GNU General Public License
ports:		Sun-4, Sun-3 (complete); Linux, DEC MIPS (done but 
		incomplete, support needed); RS6000, PS2/AIX, Atari ST,
		Gould PN, NeXT, VAX, HP-UX (known problems, support needed);
		MSDOS (status unknown), OS/2
status: 	activly developed
discussion:	prolog-request@swi.psy.uva.nl
contact:	(OS/2) Andreas Toenne <atoenne@mpi-sb.mpg.de>
updated:	1993/07/23

language:	Prolog
package:	Frolic
version:	?
parts:		?
author: 	?
location:	ftp pub/frolic.tar.Z from cs.utah.edu
description:	?
requires:	Common Lisp
contact:	?
updated:	1991/11/23

language:	Prolog
package:	? Prolog package from the University of Calgary ?
version:	?
parts:		?
author: 	?
location:	ftp pub/prolog1.1/prolog11.tar.Z from cpsc.ucalgary.ca
description:	+ delayed goals
		+ interval arithmetic
requires:	Scheme
portability:	relies on continuations
contact:	?
updated:	?

language:	Prolog
package:	? slog ?
version:	?
parts:		translator(Prolog->Scheme)
author: 	dorai@cs.rice.edu
location:	ftp public/slog.sh from titan.rice.edu
description:	macros expand syntax for clauses, elations etc, into Scheme
ports:		Chez Scheme
portability:	reliese on continuations
updated:	?

language:	Prolog
package:	LM-PROLOG
version:	?
parts:		?
author: 	Ken Kahn and Mats Carlsson
location:	ftp archives/lm-prolog.tar.Z from sics.se
description:	?
requires:	ZetaLisp
contact:	?
updated:	?

language:	Prolog
package:	Open Prolog
version:	?
parts:		?
author: 	?
location:	ftp languages/open-prolog/* from grattan.cs.tcd.ie
description:	?
ports:		Macintosh
contact:	Michael Brady <brady@cs.tcd.ie>
updated:	?

language:	Prolog
package:	UPMAIL Tricia Prolog
version:	?
parts:		?
author: 	?
location:	ftp pub/Tricia/README from ftp.csd.uu.se
description:	?
contact:	<tricia-request@csd.uu.se>
updated:	?

language:	Prolog
package:	?; ? (two systems)
version:	?; ?
parts:		?; ?
author: 	?
location:	ftp ai.prolog/Contents from aisun1.ai.uga.edu
description:	?; ?
ports:		MSDOS, Macintosh; MSDOS
contact:	Michael Covington <mcovingt@uga.cc.uga.edu>
updated:	?; ?

language:	Prolog
package:	XWIP (X Window Interface for Prolog)
version:	0.6
parts:		library
author: 	?
location:	ftp contrib/xwip-0.6.tar.Z from export.lcs.mit.edu
description:	It is a package for Prologs following the Quintus foreign
		function interface (such as SICStus). It provides a (low-level)
		Xlib style interface to X. The current version was developed
		and tested on SICStus 0.7 and MIT X11 R5 under SunOS 4.1.1.
portability:	It is adaptable to many other Unix configurations.
contact:	xwip@cs.ucla.edu
updated:	1993/02/25

language:	Prolog
package:	PI
version:	?
parts:		library
author: 	?
location:	ftp pub/prolog/ytoolkit.tar.Z from ftp.ncc.up.pt
description:	PI is a interface between Prolog applications and XWindows that
		aims to be independent from the Prolog engine, provided that it
		has a Quintus foreign function interface (such as SICStus,
		YAP).  It is mostly written in Prolog and is divided in two
		libraries: Edipo - the lower level interface to the Xlib
		functions; and Ytoolkit - the higher level user interface
		toolkit
contact:	Ze' Paulo Leal <zp@ncc.up.pt>
updated:	1993/03/02

language:	Prolog
package:	ISO draft standard
version:	? (What year??)
parts:		language definition
author: 	?
location:	ftp ? from ftp.th-darmstadt.de
description:	?
updated:	1992/07/06

language:	Prolog
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	OPS5
package:	PD OPS5
version:	?
parts:		interpreter
author: 	Written by Charles L. Forgy and ported to Common Lisp by 
		George Wood and Jim Kowalski. 
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp/ops5* from 
		ftp.cs.cmu.edu
description:	Public domain implementation of an OPS5 interpreter. OPS5 is
		a programming language for rule-based production systems.
		A rule consists of pre-condition(s) and the resulting
		action. The system as a whole acts first checking the
		status of system in its working memory and matches the
		rules to see if there are rules that are satisfied,
		and then the action in one selected satisfied rule is
		executed.
		There is a commercial version available called OPS83.
		Please contact the author for information.
requires:	Common Lisp
contact:	? Mark Kantrowitz <mkant+@cs.cmu.edu> ?
updated:	1992/10/17

-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!gatech!news-feed-1.peachnet.edu!news.duke.edu!MathWorks.Com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p4of5]
Message-ID: <free4-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free4-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free3-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:40 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1501
Xref: bloom-beacon.mit.edu comp.compilers:3320 comp.lang.misc:5188 comp.archives.admin:678 news.answers:23370 comp.answers:6568

Archive-name: free-compilers/part4
Last-modified: 1994/6/30
Version: 6.5

concurrent, parallel, and simulation languages
-------------------------------------------------------------------------------
category:	concurrent, parellel, and simulation languages
description:	This is a fairly broad category of languages.  Most of the
		implementations in this set are not good enough to be used in
		production systems.  Some are.	In addition to those listed
		below, see:
lref:		Concurrent Clean
lref:		Concurrent ML
lref:		EuLisp
lref:		Parallaxis
lref:		Maisie
lref:		micro-C++
lref:		MeldC
lref:		pm2

language:	ABCL/1 (An object-Based Concurrent Language)
package:	ABCL/1 
version:	?
parts:		?
author: 	Akinori Yonezawa, ABCL Group now at Department of Information 
		Science, the University of Tokyo
location:	ftp pub/abcl1/* from camille.is.s.u-tokyo.ac.jp
description:	Asynchronous message passing to objects.  
reference:	"ABCL: An Object-Oriented Concurrent System", Edited by 
		Akinori Yonezawa, The MIT Press, 1990, (ISBN 0-262-24029-7)
restriction:	no commercial use, must return license agreement
requires:	Common Lisp
contact:	abcl@is.s.u-tokyo.ac.jp
updated:	1990/05/23

language:	ABCL ???
package:	ABCL/R2
version:	?
parts:		?
author: 	masuhara@is.s.u-tokyo.ac.jp, matsu@is.s.u-tokyo.ac.jp,
		takuo@is.s.u-tokyo.ac.jp, yonezawa@is.s.u-tokyo.ac.jp
location:	ftp pub/abclr2/* from camille.is.s.u-tokyo.ac.jp
description:	ABCL/R2 is an object-oriented concurrent reflective language
		based on Hybrid Group Architecture.  As a reflective language,
		an ABCL/R2 program can dynamically control its own behavior,
		such as scheduling policy, from within user-program.  An an
		object-oriented concurrent language, this system has almost all
		functions of ABCL/1.
requires:	Common Lisp
updated:	1993/01/28

language:	ALLOY
package:	ALLOY
version:	2.0?
parts:		interpreter, documentation, examples
author: 	Thanasis Mitsolides <mitsolid@cs.nyu.edu>
location:	ftp pub/local/alloy/* from cs.nyu.edu
description:	ALLOY is a higher level parallel programming language
		appropriate for programming massively parallel computing
		systems.  It is based on a combination of ideas from
		functional, object oriented and logic programming languages.
		The result is a language that can directly support
		functional, object oriented and logic programming styles
		in a unified and controlled framework.	Evaluating modes
		support serial or parallel execution, eager or lazy
		evaluation, non-determinism or multiple solutions etc.
		ALLOY is simple as it only requires 29 primitives in all
		(half of which for Object Oriented Programming support).
ports:		sparc, ?
updated:	1991/06/11

language:	Cellang (Cellular Automata)
package:	Cellular
version:	2.0
parts:		byte-code compiler, runtime, viewer
author: 	J Dana Eckart <dana@rucs.faculty.cs.runet.edu>
location:	comp.sources.unix, volume 26
description:	A system for cellular automata programming.
updated:	1993/04/03

language:	Hermes
package:	IBM Watson prototype Hermes system
version:	0.8alpha patchlevel 01
parts:		bytecode compiler, compiler(bytecode->C), runtime
author: 	Andy Lowry <lowry@watson.ibm.com>
location:	ftp pub/hermes/README from software.watson.ibm.com
description:	Hermes is a very-high-level integrated language and
		system for implementation of large systems and
		distributed applications, as well as for
		general-purpose programming.  It is an imperative,
		strongly typed, process-oriented language.  Hermes
		hides distribution and heterogeneity from the
		programmer.  The programmer sees a single abstract
		machine containing processes that communicate using
		calls or sends.  The compiler, not the programmer,
		deals with the complexity of data structure layout,
		local and remote communication, and interaction with
		the operating system.  As a result, Hermes programs are
		portable and easy to write.  Because the programming
		paradigm is simple and high level, there are many
		opportunities for optimization which are not present in
		languages which give the programmer more direct control
		over the machine.
reference:	Strom, Bacon, Goldberg, Lowry, Yellin, Yemini. Hermes: A
		Language for Distributed Computing. Prentice-Hall, Englewood
		Cliffs, NJ.  1991.  ISBN: O-13-389537-8.
ports:		RS6000 Sun-4 NeXT IBM-RT/bsd4.3 (Sun-3 and Convex soon)
discussion:	comp.lang.hermes
updated:	1992/03/22

language:	PCN
package:	PCN
version:	2.0
parts:		compiler?, runtime, linker, libraries, tools, debugger, 
		profiler, tracer
author: 	Ian Foster <foster@mcs.anl.gov>, Steve Tuecke
		<tuecke@mcs.anl.gov>, and others
location:	ftp pub/pcn/pcn_v2.0.tar.Z from info.mcs.anl.gov
description:	PCN is a parallel programming system designed to improve
		the productivity of scientists and engineers using parallel
		computers.  It provides a simple language for specifying
		concurrent algorithms, interfaces to Fortran and C, a
		portable toolkit that allows applications to be developed
		on a workstation or small parallel computer and run
		unchanged on supercomputers, and integrated debugging and
		performance analysis tools.  PCN was developed at Argonne
		National Laboratory and the California Institute of
		Technology.  It has been used to develop a wide variety of
		applications, in areas such as climate modeling, fluid
		dynamics, computational biology, chemistry, and circuit
		simulation.
ports:		(workstation nets): Sun4, NeXT, RS/6000, SGI
		(multicomputers): iPSC/860, Touchstone DELTA
		(shared memory multiprocessors): Symmetry/Dynix
contact:	<pcn@mcs.anl.gov>
updated:	1993/02/12

language:	LOOPN
package:	LOOPN
version:	?
parts:		compiler?, simulator
author: 	?
location:	ftp departments/computer_sci*/loopn.tar.Z from ftp.utas.edu.au
description:	I wish to announce the availability of a compiler, simulator
		and associated source control for an object-oriented petri net
		language called LOOPN.	In LOOPN, a petri net is an extension
		of coloured timed petri nets.  The extension means firstly that
		token types are classes.  In other words, they consist of both
		data fields and functions, they can be declared by inheriting
		from other token types, and they can be used polymorphically.
		The object-oriented extensions also mean that module or subnet
		types are classes.  LOOPN has been developed over a period of
		about 5 years at the University of Tasmania, where it has been
		used in teaching computer simulation and the modelling of
		network protocols.  A petri net is a directed, bipartite graph;
		nodes are either places (represented by circles) or transitions
		(represented by rectangles).  A net is marked by placing tokens
		on places.  When all the places pointing to a transition (the
		input places) have a token, the net may be fired by removing a
		token from each input place and adding a token to each place
		pointed to by the transition (the output places).  Petri nets
		are used to model concurrent systems, particularly in the
		network protocol area.
contact:	Charles Lakos <charles@probitas.cs.utas.edu.au>
updated:	1992/12/20

language:	Simula
package:	Lund Simula
version:	4.07
parts:		?
author: 	?
location:	ftp misc/mac/programming/+_Simula/* from rascal.ics.utexas.edu
description:	?
contact:	Lund Software House AB / Box 7056 / S-22007 Lund, Sweden
updated:	1992/05/22

language:	SR (Synchronizing Resources)
package:	sr
version:	2.0 
parts:		?, documentation, tests
author: 	?
location:	ftp sr/sr.tar.Z from cs.arizona.edu
description:	SR is a language for writing concurrent programs.
		The main language constructs are resources and
		operations.  Resources encapsulate processes and
		variables they share; operations provide the primary
		mechanism for process interaction.  SR provides a novel
		integration of the mechanisms for invoking and
		servicing operations.  Consequently, all of local and
		remote procedure call, rendezvous, message passing,
		dynamic process creation, multicast, and semaphores are
		supported.
reference:	"The SR Programming Language: Concurrency in Practice", 
		by Gregory R. Andrews and Ronald A. Olsson, Benjamin/Cummings 
		Publishing Company, 1993, ISBN 0-8053-0088-0
ports:		Sun-4, Sun-3, Decstation, SGI Iris, HP PA, HP 9000/300,
		NeXT, Sequent Symmetry, DG AViiON, RS/6000, Multimax,
		Apollo, and others.
discussion:	info-sr-request@cs.arizona.edu
contact:	sr-project@cs.arizona.edu
updated:	1992/09/01

language:	UNITY
package:	MasPar Unity
version:	1.0
parts:		translator(UNITY->MPL), documentation
author: 	Martin Huber, University of Karlsruhe, Germany
location:	ftp pub/maspar/maspar_unity* from SanFrancisco.ira.uka.de
description:	?
contact:	Lutz Prechelt <prechelt@ira.uka.de>
updated:	?

language:	UNITY
package:	HOL-UNITY
version:	2.1
parts:		verification tool
author: 	?
location:	?
description:	?
contact:	Flemming Andersen <fa@tfl.dk> ?
updated:	?

Forth family languages
-------------------------------------------------------------------------------
category:	Forth family languages
description:	These are the stack-based postfix languages.  
lref:		Postscript
iref:		(mc6809) 6809, E-Forth

language:	Forth
package:	TILE Forth
version:	2.1
parts:		interpreter
author: 	Mikael Patel <mip@sectra.se>
location:	ftp tile-forth-2.1.tar.Z from a GNU archive site
description:	Forth interpreter in C; many Forth libraries
conformance:	Forth83
restriction:	shareware/GPL
ports:		unix
updated:	1991/11/13

language:	Forth
package:	cforth
version:	?
parts:		interpreter
author: 	?
location:	comp.sources.unix archive volume 1
description:	?
updated:	?

language:	Forth
package:	pfe (Portable Forth Environment)
version:	0.9.4
parts:		?
author: 	Dirk Zoller <duz@roxi.rz.fht-mannheim.de>
location:	ftp pub/unix/languages/pfe* from duz@roxi.rz.fht-mannheim.de
description:	A Forth development system that tries to be correct,
		complete, portable, usable and simple.	It doesn't try too
		hard to be fast.
conformance:	all dpANS word sets
ports:		Linux, RS/6000, HP-UX
portability:	high
updated:	1994/05/02

language:	Forth
package:	F68K
version:	?
parts:		?
author: 	?
location:	ftp atari/Languages/f68k.* from archive.umich.edu
description:	a portable Forth system for Motorola 68k computers
ports:		Atari ST/TT, Amiga, Sinclair QL and OS9
portability:	very high for 68000 based systems
contact:	Joerg Plewe <joerg.plewe@mpi-dortmund.mpg.de>
updated:	1992/12/14

language:	Forth
package:	51forth
version:	?
parts:		?
author: 	Scott Gehmlich
location:	ftp giovanni/51forth.zip from [130.123.96.9]
description:	source and documentation for a 8051 subroutine-
		threaded forth
contact:	?
updated:	1993/04/03

language:	Mops
package:	Mops
version:	2.3.1
parts:		compiler, documentation, editor
author: 	Michael Hore <mikeh@kralizec.zeta.org.au>
location:	ftp pub/Yerk/? from oddjob.uchicago.edu
description:	Like Yerk, Mops is descended from the ex-commercial
		object-oriented language Neon. Mops features an
		optimizing native-code compiler; it is much faster
		than Yerk, but less compatible with Neon. Mops
		includes extensions such as multiple inheritance.
ports:		Macintosh
updated:	?

language:	Kevo (Forth-like)
package:	kevo
version:	0.9b6
parts:		interpreter, demo programs, user's guide, papers
author: 	Antero Taivalsaari <tsaari@cs.uta.fi>
location:	ftp /pub/kevo/* from cs.uta.fi
description:	Kevo is a prototype-based object-oriented language for
		Macintosh Kevo features a unique prototype-based object model
		(which is based neither on classes nor Self-style delegation),
		multitasking (both preemptive and cooperative), dynamic memory
		management, and an icon-based object browser and editor modeled
		loosely after Mac Finder. Kevo has been built around a portable
		threaded code interpreter, and is syntactically a close
		derivative of Forth.
ports:		Macintosh
contact:	kevo-interest@ursamajor.uvic.ca
updated:	1993/05/18

language:	Yerk
package:	Yerk
version:	3.62
parts:		?
author: 	?
location:	ftp pub/Yerk/? from oddjob.uchicago.edu
description:	Yerk is an object oriented language based on a
		Forth Kernel with some major modifications.  It
		was originally known as Neon, developed and sold
		as a product by Kriya Systems from 1985 to 1989.
		Several of us at The University of Chicago have
		maintained Yerk since its demise as a product.
		Because of the possible trademark conflict that
		Kriya mentions, we picked the name Yerk, which is
		at least not an acronym for anything, but rather
		stands for Yerkes Observatory, part of the Department
		of Astronomy and Astrophysics at U of C.
updated:	?

compiler generators and related tools
-------------------------------------------------------------------------------
category:	compiler generators and related tools
description:	Yacc, and the rest of its family

language:	ABC
package:	Grammar analysis tools
version:	1
parts:		analysis tools, samples, documentation
author: 	Steven Pemberton <Steven.Pemberton@cwi.nl>
location:	ftp programming/languages/abc/examples/grammar/*
		from ftp.eu.net or ftp.nluug.net
description:	Grammar analysis program written in ABC (q.v.) for
		answering such questions as "what are the start
		symbols of all rules", "what symbols can follow this
		symbol", "which rules are left recursive", and so on.
		Includes a grammar of ISO Pascal.
reference:	Ftp archive includes an article explaining the package.
ports:		unix, MSDOS, atari, mac 
contact:	Steven.Pemberton@cwi.nl
updated:	1993/07/05

language:	? attribute grammar ?
package:	Alpha
version:	pre-release
parts:		semantic-analysis generator?, documentation(german)
author: 	Andreas Koschinsky <koschins@cs.tu-berlin.de>
location:	from author
description:	I have written a compiler generator. The generator is called
		Alpha and uses attribute grammars as specification calculus.
		Alpha is the result of a thesis at Technische Universitaet
		Berlin. I am looking for someone who would like to test and use
		Alpha.	Alpha generates compilers from a compiler
		specification. This specification describes a compiler in
		terminology of attribute grammars. Parser and Scanner are
		generated by means of Bison and Flex.  Alpha generates an
		ASE-evaluator (Jazayeri and Walter).  The documentation is in
		german since it is a thesis at a german university.
updated:	1993/02/16

language:	attribute-grammar extension of Yacc and Lex
package:	Ox
version:	G1.01
parts:		Yacc/Lex/C preprocessor, tutorial, reference manual,
		man page, examples, Ox-ready parsers (C, C++, Pascal, Ada,
		Fortran)
author: 	Kurt Bischoff <bischoff@cs.iastate.edu>
location:	ftp pub/ox/* from ftp.cs.iastate.edu
description:	Ox generalizes the function of Yacc in the way that attribute
		grammars generalize context-free grammars.  Ordinary Yacc and
		Lex specifications may be augmented with definitions of
		synthesized and inherited attributes written in C syntax.  Ox
		checks these specifications for consistency and completeness,
		and generates from them a program that builds and decorates
		attributed parse trees.  Ox accepts a most general class of
		attribute grammars.  The user may specify postdecoration
		traversals for easy ordering of side effects such as code
		generation.  Ox handles the tedious and error-prone details of
		writing code for parse-tree management, so its use eases
		problems of security and maintainability associated with that
		aspect of translator development.  Ox is a preprocessor,
		and extends the syntax and semantics of Yacc, Lex, and C.
reference:	Most compiler textbooks have descriptions of attribute
		grammars.
features:	LALR(1), semantic-analyzer generation.
bugs:		none known.  Report bugs to ox-project@cs.iastate.edu.
restriction:	Use of Ox is free.  Ox-generated code is the property of
		the Ox user.
ports:		Unix
contact:	ox-request@cs.iastate.edu
updated:	1993/11/14

language:	BNF (Extended)
package:	Gray
version:	3
parts:		parser generator(Forth)
author: 	Martin Anton Ertl <anton@mips.complang.tuwien.ac.at>
location:	author; version 2 is on various ftp sites
description:	Gray is a parser generator written in Forth.  It takes 
		grammars in an extended BNF and produces executable Forth 
		code for recursive descent parsers.  There is no special 
		support for error handling.
requires:	Forth
ports:		TILE Release 2 by Mikael Patel
updated:	1992/05/22

language:	BNF ??
package:	ZUSE
version:	?
parts:		parser generator(?)
author: 	Arthur Pyster
location:	? Univ Calif at Santa Barbara ?
description:	ll(1) paser generator
requires:	Pascal
updated:	1986/09/23

language:	BNF ??
package:	FMQ
version:	?
parts:		paser generator w/error corrector generator
author: 	Jon Mauney
location:	ftp from csczar.ncsu.edu
description:	?
status: 	?
contact:	?
updated:	1990/03/31

language:	BNF ??
package:	ATS (Attribute Translation System)
version:	?
parts:		?
author: 	? University of Saskatchewan ?
location:	?
description:	generates table-driven LL(1) parsers with full insert-only
		error recovery.  It also handles full left-attribute semantic
		handling, which is a dream compared to using YACC's parser
		actions.
status: 	?
contact:	? (suggested: Dave Bocking <bocking@cs.usask.ca>)
updated:	1988/11/29

language:	BNF (Extended)
package:	PCCTS (Purdue Compiler-Construction Tool Set)
version:	1.20
parts:		scanner generator, parser generator (pred-LL(k)), 
		documentation, tutorial
author: 	Terence J. Parr <parrt@acm.org>, Will E. Cohen
		<cohenw@ecn.purdue.edu>, Henry G. Dietz <hankd@ecn.purdue.edu>,
		Russel W. Quong <quong@ecn.purdue.edu>
location:	ftp pub/pccts/1.20/pccts.tar.Z from marvin.ecn.purdue.edu
    UK: 	ftp computing/programming/languages/tools/pccts/* 
		from src.doc.ic.ac.uk
    Macintosh:	ftp pub/mac/* from maya.dei.unipd.it 
description:	PCCTS is similar to a highly integrated version of YACC
		and LEX; where ANTLR (ANother Tool for Language
		Recognition) corresponds to YACC and DLG (DFA-based
		Lexical analyzer Generator) functions like LEX.
		However, PCCTS has many additional features which make
		it easier to use for a wide range of translation
		problems.  PCCTS grammars contain specifications for
		lexical and syntactic analysis with selective backtracking
		("infinite lookahead"), semantic predicates, intermediate-form
		construction and error reporting. Rules may employ Extended
		BNF (EBNF) grammar constructs and may define parameters,
		return values and local variables.  Languages described in
		PCCTS are recognized via LL(k) parsers constructed in pure,
		human-readable, C code.  Selective backtracking is available
		to handle non-LL(k) constructs.  PCCTS parsers may be compiled 
		with C++. Version 1.20 now generates C++ code as well as K&R
		and ANSI C variants.
ports:		Unix, DOS, OS/2, Macintosh
portability:	very high
discussion:	send mail with a body of "subscribe pccts-users your_name" 
		to pccts-users-request@ahpcrc.umn.edu
contact:	Terence J. Parr <parrt@acm.org>
		Roberto Avanzi (mocenigo@maya.dei.unipd.it) (for the Mac port)
updated:	1994/04/29

language:	BNF (very extended), yacc
package:	PRE-CC Xtended
version:	2.30
parts:		library, parser generator (LL(oo)), translator(yacc->)
author: 	Peter Breuer
location:	FTP: ftp.comlab.ox.ac.uk:/pub/Programs/preccx.tar.Z (Unix)
		     ftp.comlab.ox.ac.uk:/pub/Programs/preccx.msdos (MS-DOS)
                     ftp.comlab.ox.ac.uk:
			/pub/Documents/techpapers/Jonathan.Bowen/preccx-uug.ps.Z
		(more recent versions available by subscription)
		URL: http://www.comlab.ox.ac.uk/archive/redo/precc.html
description:	PRECCX is an infinite-lookahead compiler compiler for context
		dependent grammars.  The generated code is ANSI C.
		Specification scripts are in very EBNF with inherited and
		synthetic attributes allowed. Scripts can be compiled in
		separate modules, and linked together later.  Meta-production
		rules allowed.	The technology is essentially LL(oo) with
		optimizations. A converter for yacc scripts is available.
reference:	"The PRECC Compiler-Compiler" by P.T. Breuer and J.P. Bowen.
		In E. Davies and A. Findlay (eds.),
		Proc. UKUUG/SUKUG Joint New Year 1993 Conference,
		St. Cross Centre, Oxford, UK, 6-8 January 1993,
		ISBN 1 873611 06 4 (UKUUG), 0 9520700 0 6 (SUKUG)
		UKUUG/SUKUG Secretariat, Owles Hall, Buntingford,
		Herts SG9 9PL, UK, pp 167-182, 1993.

		"A PREttier Compiler-Compiler: Generating Higher Order
		Parsers in C"  P.T. Breuer and J.P. Bowen.
		Oxford University Computing Laboratory Technical Report
		PRG-TR-20-92, 25pp, November 1992. Accepted by
		Software - Practice and Experience, 1994.
		FTP: ftp.comlab.ox.ac.uk
		       /pub/Documents/techreports/TR-20-92.ps.Z
ports:		unix, MS-DOS
contact:	Peter Breuer <ptb@comlab.ox.ac.uk>,
		Jonathan Bowen <bowen@comlab.ox.ac.uk>
updated:	1994/06/02

language:	BNF ??
package:	LLGen
version:	?
parts:		parser generator
author: 	? Fischer and LeBlanc ?
location:	? ftp from csczar.ncsu.edu ?
description:	LL(1) parser generator
conformance:	subset of FMQ
reference:	"Crafting A Compiler", by Fischer and LeBlanc
status: 	?
contact:	?
updated:	1990/03/31

language:	BNF
package:	wacco
version:	1.1, July 91
parts:		parser generator
author: 	Parag Patel (parag@netcom.com, parag@sde.hp.com)
location:	comp.sources.misc volume ?
description:	Wacco is a recursive descent LL(1) parser generator that
		generates C++ code.  Its syntax is similar to YACC
		with a lot of sugaring.  It can also do attribute-driven
		parsing.  The source is bootstrapped wacco code.
ports:		HP-UX s300 and s800, Sparc, and 4.3BSD (on HP)
portability:	Host machine must be 32 bits.
contact:	?
updated:	?

language:	BNF (Extended), BNF (yacc), Modula-2
package:	GMD Toolbox for Compiler Construction (aka Cocktail)
version:	9209
parts:		parser generator (LALR -> C, Modula-2), documentation,
		parser generator (LL(1) -> C, Modula-2), tests,
		scanner generator (-> C, Modula-2), tests
		translator (Extended BNF -> BNF), translator (Modula-2 -> C),
		translator (BNF (yacc) -> Extended BNF), examples
		abstract syntax tree generator, attribute-evaluator generator,
		code generator
author: 	?
location:	? ftp pub/cocktail/dos from ftp.karlsruhe.gmd.de
		   (many name servers having trouble resolving this address)
    OS/2:	ftp.eb.ele.tue.nl/pub/src/cocktail/dos-os2.zoo 
description:	A huge set of compiler building tools. 
requires:	(ms-dos only) DJ Delorie's DOS extender (go32)
	(OS/2 only) emx programming environment for OS/2
ports:		msdos, unix, os/2
discussion:	subscribe to Cocktail using listserv@eb.ele.tue.nl
contact:	Josef Grosch <grosch@karlsruhe.gmd.de>
    OS/2:	Willem Jan Withagen <wjw@eb.ele.tue.nl>
updated:	1992/10/01

language:	BNF ????
package:	T-gen
version:	2.1
parts:		parser generator, documentation, ?
author: 	Justin Graver <graver@comm.mot.com>
location:	ftp pub/st80_r41/T-gen2.1/* from st.cs.uiuc.edu
description:	T-gen is a general-purpose object-oriented tool for the 
		automatic generation of string-to-object translators. 
		It is written in Smalltalk and lives in the Smalltalk 
		programming environment.  T-gen supports the generation 
		of both top-down (LL) and bottom-up (LR) parsers, which 
		will automatically generate derivation trees, abstract 
		syntax trees, or arbitrary Smalltalk objects.  The simple 
		specification syntax and graphical user interface are 
		intended to enhance the learning, comprehension, and 
		usefulness of T-gen.
requires:	Smalltalk-80
ports:		ParcPlace Objectworks/Smalltalk 4.0 & 4.1
updated:	1992/10/18

language:	BNF 
package:	Eli Compiler Construction System
version:	3.5
parts:		?, documentation
author: 	?
location:	ftp pub/cs/distribs/eli/* from ftp.cs.colorado.edu
    Europe:	ftp unix/eli from ftp.uni-paderborn.de
description:	Eli integrates off-the-shelf tools and libraries with
		specialized language processors to generate complete compilers
		quickly and reliably.  It simplifies the development of new
		special-purpose languages, implementation of existing languages
		on new hardware and extension of the constructs and features of
		existing languages.
ports:		Sun-4 (SunOS 4 & 5), Ultrix/MIPS, RS/6000, HP-UX, SGI, Linux
discussion:	<eli-request@cs.colorado.edu>
contact:	<compiler@cs.colorado.edu>, <compiler@uni-paderborn.de>
updated:	1993/11/01

language:	BNF
package:	tom (demo for Tomita Parsing algorithm)
version:	1
parts:		parser generator, parser interpreter, examples, documentation
author: 	Mark Hopkins <mark@omnifest.uwm.edu>
location:	iecc.com in pub/files/tomita.tar.gz
		alt.sources archive from October 4, 1993.
description:	An implementation of the Tomita parsing algorithm using
		LR(0) tables and dynamic programming.
reference:	Kluwer '91, _Generalized LR Parsing_, Tomita ed., 0-7923-9201-9
		"The Tomita Parsing Algorithm ...", comp.compilers May 20, 1994
features:	Cyclic context free grammars are processed.
portability:	System independent
updated:	1993/10/03

language:	BNF (yacc)
package:	NewYacc
version:	1.0
parts:		parser generator, documenation
author: 	Jack Callahan <callahan@mimsy.cs.umd.edu> 
location:	ftp src/newyacc.1.0.*.Z from flubber.cs.umd.edu
description:	[someone want to fill it in? --ed]
reference:	see Dec 89 CACM for a brief overview of NewYacc.
updated:	1992/02/10

language:	BNF (yacc)
package:	bison
version:	1.22
parts:		parser generator, documentation
author: 	? Robert Corbett and Richard Stallman <rms@gnu.mit.edu>
location:	ftp bison-1.16.tar.Z from a GNU archive site
description:	?
bugs:		bug-gnu-utils@prep.ai.mit.edu
restriction:	!! will apply the GNU General Public License to *your* code !!
ports:		unix, atari, ?
updated:	1993/09/14

language:	BNF (yacc), Lex
package:	Bison++ and Flex++
version:	1.21-8 (bison), 2.3.8-7 (flex), 5 (flex++bison++misc)
parts:		translator, documentation, postscript, examples, DOS binary
author: 	Alain Coetmeur <coetmeur@icdc.fr>
location:	cse.unl.edu in ~ftp/pub/nandy/c++/tools/LATEST/*
    Europe:	mirrored on ftp.th-darmstadt.de
description:	A retargeting of bison-1 and flex 2.3 to C++, able to
		generate classes.  As with Bison and Flex, these two tools
		are independent but designed for mutual compatibility.
		The version numbering has been changed for consistency with
		Flex and Bison, so versions of flex3.0.x and bison2.x of this
		package are are actually earlier versions, not later.
		Examples are provided to help in getting started.
conformance:	Mostly compatible with flex2.3 and bison 1 in C, apart
		from the ability to generate classes.
features:	Almost all symbol names can be redefined, parsers can be
		shared in C and C++ in the same headers... very extensible...
		flex++ support IOSTREAM and STDIO in C++.
bugs:		Contact coetmeur@icdc.fr (current author and maintainer).
restriction:	GNU License for bison++. Same as flex for flex++.
ports:		SUNOS4, DOS, and same ports as Flex/Bison, Windows NT (tested)
portability:	Larger memory model required on DOS (DOS binary supplied).
status: 	active, supported, might not support flex 2.4
discussion:	coetmeur@icdc.fr, news: comp.compiler, or comp.lang.c++
help:		coetmeur@icdc.fr, news: comp.compiler, or comp.lang.c++
		for substantial problems.
support:	see help, no commercial support. (volunteer ?)
announcements:	mail list locally maintained by coetmeur@icdc.fr,
		news: comp.compiler comp.lang.c++
updated:	1994/02/07
lref:		C
lref:		C++
lref:		Lex
lref:		Yacc

language:	BNF (yacc)
package:	bison-A2.2
version:	2.2 (corresponds to gnu bison 1.22)
parts:		parser generator, C-parser, C++parser, documentation
author:		Fred Hansen <wjh+@cmu.edu>
location:	ftp://ftp.andrew.cmu.edu/pub/AUIS/bison/bison-A2.2.tar.gz
		also in contrib/andrew on the XV11R6 distribution in directories
		   overhead/bison, overhead/mkparser (but not the C++ version
		   of the parser)
description:	This is the standard gnu bison with a number of improvments:
		license-free parsers for C and C++, only one external symbol
		for each grammar, permits multiple grammars per application,
		better error reports on the grammar.
conformance:	grammars are the same as bison and yacc; but run-time errors
		are handled differently, so semantic rules must be changed
features:	tokens in the grammar can be expressed as ">=" instead of GE
bugs:		send bugs to info-andrew-bugs@andrew.cmu.edu
restriction:	none (unless you use the native gnu-bison parser)
ports:		has been tested on most Unix platforms
portability:	generation of names for temp files is system dependent.
discussion:	info-andrew@andrew.cmu.edu   (mirrored to comp.soft-sys.andrew)
support:	supported by the Andrew Consortium
contributions:	your organization is invited to join the Andrew Consortium
		info-andrew-request@andrew.cmu.edu
updated:        1994/05/09

language:	BNF (yacc)
package:	? jaccl ?
version:	?
parts:		parser generator
author: 	Dave Jones <djones@megatest.uucp>
location:	?
description:	a LR(1) parser generator
updated:	1989/09/08

language:	BNF (yacc)
package:	byacc (Berkeley Yacc)
version:	1.9
parts:		parser generator
author: 	Robert Corbett <Robert.Corbett@eng.sun.com>
location:	ftp pub/byacc.tar.1.9.Z from vangogh.CS.Berkeley.EDU
description:	probably the best yacc variant around.	Previously known as
		Zoo, and before that, as Zeus.
updated:	1993/02/22

language:	BNF (yacc), Lex
package:	Lex/Yacc for Turbo Pascal uploaded
version:	?
parts:		parser generator, scanner generator, documentation?
author: 	?
location:	iecc.com (140.186.81.1) at pub/file/lyprg.zip.
description:	Lex and Yacc retargeted to Pascal.
contact:	? dpoole@hydrogen.oscs.montana.edu (David Poole)
updated:	1993/07/02

language:	BNF (yacc), Ada
package:	aflex-ayacc
version:	1.2a
parts:		parser generator (Ada), scanner generator (Ada)
author: 	IRUS (Irvine Research Unit in Software)
location:	ftp pub/irus/aflex-ayacc_1.2a.tar.Z from liege.ics.uci.edu
description:	Lex and Yacc equivalents that produce Ada output
announcements:	irus-software-request@ics.uci.edu
contact:	irus-software-request@ics.uci.edu
updated:	1993/01/06

language:	BNF (yacc), Perl
package:	perl-byacc
version:	1.8.2
parts:		parser-generator(perl)
author: 	Rick Ohnemus <rick@IMD.Sterling.COM>
location:	ftp local/perl-byacc.tar.Z from ftp.sterling.com
description:	A modified version of byacc that generates perl code.  Has '-p'
		switch so multiple parsers can be used in one program (C or
		perl).
portability:	Should work on most (?) Unix systems.  Also works with 
		SAS/C 6.x on AMIGAs.
updated:	1993/01/24

language:	BNF (yacc), Standard ML
package:	New SML-Yacc and SML-Lex
version:	??
parts:		??
author: 	Andrew Appel <appel@tyrolia.princeton.edu>
location:	princeton.edu in pub/ml, files mlyacc94.tar.Z, lexgen94.tar.Z.
description:	??
updated:	1994/05/23

language:	BNF (variant), Icon
package:	Ibpag2 (Icon-Based Parser Generation System 2)
version:	1.0 (beta)
parts:		parser generator (Icon, SLR(1))
author: 	Richard L. Goerwitz <goer@midway.uchicago.edu>
location:	comp.sources.misc archive
description:	Ibpag2 is a parser generator for Icon.	It does most
		of what you would expect.  Latest version can handle both
		SLR(1) and even GLR (Tomita) grammars.
ports:		unix
portability:	? (Unix dependencies?)
updated:	1993/07/13

language:	BNF ?, Gofer
package:	Ratatosk ?
version:	?
parts:		parser generatr (Gofer)
author: 	Torben AEgidius Mogensen <torbenm@diku.dk>
location:	ftp pub/diku/dists/Ratatosk.tar.Z from ftp.diku.dk
description:	Ratatosk is a SLR parser generator in Gofer (a Haskell variant)
		that generates purely functional parsers (also in Gofer). Even
		though the sematic value of a production is a function of the
		attributes of its right-hand side (and thus apparently purely
		synthesized), inherited attributes are easily simulated by
		using higher order functions.
ports:		?
updated:	?

language:	BNF
package:	lalr.ss - An LALR(1) parser generator
version:	0.9 
parts:		parser generator (->Scheme)
author: 	Mark Johnson <mj@cs.brown.edu>
location:	ftp new/lalr.shar from the Scheme Repository
description:	A LALR(1) parser generator in and for Scheme.
requires:	Scheme
updated:	1993/05/24

language:	BURS ?
package:	Iburg
version:	?
parts:		parser generator?
author: 	Christopher W. Fraser <cwf@research.att.com>, David R. Hanson
		<drh@princeton.edu>, Todd A. Proebsting <todd@cs.arizona.edu>
location:	ftp pub/iburg.tar.Z from ftp.cs.princeton.edu
description:	Iburg is a program that generates a fast tree parser.  It is
		compatible with Burg. Both programs accept a cost-augmented
		tree grammar and emit a C program that discovers an optimal
		parse of trees in the language described by the grammar. They
		have been used to construct fast optimal instruction selectors
		for use in code generation.  Burg uses BURS; Iburg's matchers
		do dynamic programming at compile time.
updated:	1993/02/10

language:	Candle, IDL (Interface Description Language)
package:	Scorpion System
version:	6.0
parts:		software development environment for developing
		software development environments, documentation
author: 	University of Arizona
location:	ftp scorpion/* from cs.arizona.edu
description:	20 tools that can be used to construct specialized
		programming environments.
		The Scorpion Project was started by Prof. Richard
		Snodgrass as an outgrowth of the SoftLab Project (which pro-
		duced the IDL Toolkit) that he started when he was at the
		University of North Carolina.  The Scorpion Project is
		directed by him at the University of Arizona and by Karen
		Shannon at the University of North Carolina at Chapel Hill.
reference:	"The Interface Description Language: Definition and Use," 
		by Richard Snodgrass, Computer Science Press, 1989,
		ISBN 0-7167-8198-0
ports:		Sun-3, Sun-4, Vax, Decstation, Iris, Sequent, HP9000
discussion:	info-scorpion-request@cs.arizona.edu
contact:	scorpion-project@cs.arizona.edu
updated:	1993/11/04

language:	COCOL (EBNF variant)
package:	COCO/R
version:	1.36
parts:		parser generator(LL(1))
author: 	Hanspeter Moessenboeck <moessenboeck@inf.ethz.ch>
		Port to Modula-2 done by Marc Brandis, Christof Brass 
		and Pat Terry <cspt@alpha.ru.ac.za>
location:	neptune.inf.ethz.ch:/pub/Coco
		ftp.psg.com:/pub/modula-2/coco
		cs.ru.ac.za:/pub/coco
		pluto.fit.qut.edu.au:/pub/coco
description:	Coco/R generates recursive descent parsers and their associated
		scanners from attributed grammars.  Coco/R can bootstrap itself
		to generate its own driver, parser, scanner, and semantic
		evaluator from the attributed grammar CR.ATG.  This grammar
		thus serves as an an example of how to write compiler
		descriptions for Coco.	There are also other simpler examples
		showing its use.
reference:	_A compiler generator for microcomputers_, by Rechenberg 
		and Mossenbock (Prentice Hall, 1989, 0-13-155136-1)
bugs:		MS-DOS related versions: Pat Terry <cspt@alpha.ru.ac.za>
		Other: Hanspeter Moessenboeck <moessenboeck@inf.ethz.ch>
requires:	Oberon or Modula-2
ports:		MS-DOS: TopSpeed Modula-2; FST 2.0; FST 3.1; StonyBrook
		QuickMod 2.2; Logitech 3.03.  Macintosh: Apple MacMeth
status: 	Oberon version is freely available?, Modula-2 version is
		free to academic sites; commercial use requires a license
updated:	1994/06/23

language:	EAG (Extended Affix Grammar)
package:	EAG
version:	first public release
parts:		recognizer generator, transduccer generator, 
		translator generator, editor generator, documentation
author: 	Marc Seutter <marcs@cs.kun.nl>
location:	ftp pub/eag/* from hades.cs.kun.nl
description:	The Extended Affix Grammar formalism, or EAG for short, is a
		formalism for describing both the context free and the context
		sensitive syntax of languages.	EAG is a member of the family
		of two-level grammars. They are very closely related to
		two-level van Wijngaarden grammars.  The EAG compiler will
		generate either a recognizer or a transducer or a translator
		or a syntax directed editor for a language described in the EAG
		formalism.
updated:	1993/09/14

language:	EBNF
package:	ETO
version:	test version
parts:		parser, postscript document, examples
author: 	Lin Li <china@bernina.ethz.ch>
location:	FTP: fi.ethz.ch under /pub/ETO/eto-09.*
description:	ETO is an object oriented universal syntax checker.  It takes
		an EBNF specification for a language and then uses it on an
		input file to check its syntax.
updated:	1994/06/03

language:	lex
package:	flex
version:	2.3.8
parts:		scanner generator
author: 	Vern Paxson <vern@ee.lbl.gov>
location:	ftp flex-2.3.8.tar.Z from a GNU archive site or ftp.ee.lbl.gov
description:	?
updated:	?

language:	Regular Expressions
package:	re2c
version:	alpha
parts:		translator (re->c)
author: 	?? peter@csg.uwaterloo.ca
location:	csg.uwaterloo.ca in /pub/peter/re2c.0.5.tar.gz
description:	A regular expression to C converter.
updated:	?? 1994/04/29

language:	Milarepa 
package:	Milarepa Perl/BNF Parser 
version:	Prototype 1.0
parts:		parser-generator, examples, tutorial
author: 	Jeffrey Kegler <jeffrey@netcom.com>
location:	via anonymous ftp at
		alexia.lis.uiuc.edu:/pub/perl/marpa-1.0.tar.Z
description:	Milarepa takes a source grammar in the Milarepa language (a
		straightforward mix of BNF and Perl) and generates a Perl file,
		which, when enclosed in a simple wrapper, parses some third
		language described by the source grammar.
		This is intended to be a real hacker's parser.	It is not
		restricted to LR(k), and the parse logic follows directly from
		the BNF.  It handles ambiguous grammars, ambiguous tokens
		(tokens which were not positively identified by the lexer) and
		allows the programmer to change the start symbol.  The grammar
		may not be left recursive.  The input must be divided into
		sentences of a finite maximum length.  There is no fixed
		distinction between terminals and non-terminals, that is, a
		symbol can both match the input AND be on the left hand side of
		a production.  Multiple Marpa grammars are allowed in a single
		perl program.
		It's only a prototype primarily due to poor speed.  This is
		intended to be remedied after Perl 5.0 is out.
requires:	perl
updated:	1994/04/27

language:	Pascal, Lisp, APL, Scheme, SASL, CLU, Smalltalk, Prolog
package:	Tim Budd's C++ implementation of Kamin's interpreters
version:	?
parts:		interpretors, documentation
author: 	Tim Budd <budd@cs.orst.edu>
location:	? ftp pub/budd/kamin/*.shar from cs.orst.edu ?
description:	a set of interpretors written as subclasses based on
		"Programming Languages, An Interpreter-Based Approach",
		by Samuel Kamin.
requires:	C++
status: 	? 
contact:	Tim Budd <budd@fog.cs.orst.edu>
updated:	1991/09/12

language:	Relation Grammar
package:	rl
version:	?
parts:		?
author: 	Kent Wittenburg <kentw@bellcore.com>
location:	fto rl/* from flash.bellcore.com
description:	The RL files contain code for defining Relational Grammars and
		using them in a bottom-up parser to recognize and/or parse
		expressions in Relational Languages.  The approach is a
		simplification of that described in Wittenburg, Weitzman, and
		Talley (1991), Unification-Based Grammars and Tabular Parsing
		for Graphical Languages, Journal of Visual Languages and
		Computing 2:347-370.
		This code is designed to support the definition and parsing of
		Relational Languages, which are characterized as sets of
		objects standing in user-defined relations.  Correctness and
		completeness is independent of the order in which the input is
		given to the parser.  Data to be parsed can be in many forms as
		long as an interface is supported for queries and predicates
		for the relations used in grammar productions.	To date, this
		software has been used to parse recursive pen-based input such
		as math expressions and flowcharts; to check for data
		integrity and design conformance in databases; to
		automatically generate constraints in drag-and-drop style
		graphical interfaces; and to generate graphical displays by
		parsing relational data and generating output code.
requires:	Common Lisp
ports:		Allegro Common Lisp 4.1, Macintosh Common Lisp 2.0
updated:	1992/10/31

language:	S/SL (Syntax Semantic Language)
package:	ssl
version:	?
parts:		parser bytecode compiler, runtime
author: 	Rick Holt, Jim Cordy <cordy@qucis.queensu.ca> (language), 
		Rayan Zachariassen <rayan@cs.toronto.edu> (C implementation)
location:	ftp pub/ssl.tar.Z from neat.cs.toronto.edu
description:	A better characterization is that S/SL is a language 
		explicitly designed for making efficient recusive-descent 
		parsers.  Unlike most other languages, practicially the 
		LEAST expensive thing you can do in S/SL is recur.  A
		small language that defines input/output/error token
		names (& values), semantic operations (which are really
		escapes to a programming language but allow good
		abstration in the pseudo-code), and a pseudo-code
		program that defines a grammar by the token stream the
		program accepts.  Alternation, control flow, and
		1-symbol lookahead constructs are part of the
		language.  What I call an S/SL "implementation", is a
		program that compiles this S/SL pseudo-code into a
		table (think byte-codes) that is interpreted by the
		S/SL table-walker (interpreter).  I think the pseudo-code 
		language is LR(1), and that the semantic mechanisms turn it
		into LR(N) relatively easily.
		+ more powerful and cleaner than yac
		- slower than yacc
reference:	+ Cordy, J.R. and Holt, R.C. [1980] Specification of S/SL:
		Syntax/Semantic Language, Computer Systems Research
		Institute, University of Toronto.  
		+ "An Introduction to S/SL: Syntax/Semantic Language" by 
		R.C. Holt, J.R.  Cordy, and D.B. Wortman, in ACM Transactions
		on Programming Languages and Systems (TOPLAS), Vol 4, No.
		2, April 1982, Pages 149-178.
updated:	1989/09/25

language:	TXL
package:	TXL: Tree Transformation Language
version:	7.4
parts:		translator, documentation, tutorial, examples
author: 	Jim Cordy <cordy@qucis.queensu.ca>
location:	ftp pub/txl/* from ftp.qucis.queensu.ca 
description:	TXL is a language for performing source to source
		transformations and is well suited for rapidly prototyping
		new languages and language processors.	It has also been used to
		prototype specification languages, command languages, and more
		traditional program transformation tasks such as constant
		folding, type inference, source optimization and reverse
		engineering.  TXL takes as input an arbitrary context-free
		grammar in extended BNF-like notation, and a set of
		show-by-example transformation rules to be applied to inputs
		parsed using the grammar.  TXL is a functional/rule-based
		hybrid programming language, using the paradigm of structural
		transformation.
reference:	Several listed in software documentation
updated:	1993/08/04

language:	BNF (extended)
package:	SORCERER: A Simple Tree Parser Generator
version:	1.00B
parts:		translator, documentation, tutorial, examples
author: 	Terence Parr <parrt@s1.arc.umn.edu>
location:	ftp pub/pccts/sorcerer/* from marvin.ecn.purdue.edu 
description:	SORCERER is more suitable for the class of translation problems
		lying between those solved by code-generator generators and by
		full source-to-source translator generators.  SORCERER
		generates simple, flexible, top-down, tree parsers that, in
		contrast to code-generators, may execute actions at any point
		during a tree walk.  SORCERER accepts extended BNF notation,
		allows predicates to direct the tree walk with semantic and
		syntactic context information, and does not rely on any
		particular intermediate form, parser generator, or other
		pre-existing application.
reference:	Several listed in software documentation
discussion:	send mail with a body of "subscribe pccts-users your_name" to
		pccts-users@ahpcrc.umn.edu. "your_name" can be email, or full.
help:		from mailing list
support:	actively supported, from mailing list
updated:	1994/02/15

mathematical tools and languages
-------------------------------------------------------------------------------
category:	mathematical tools and languages
description:	These are either special-purpose languages and tools, or
		general purpose languages and tools that have traditionally
		been used for mathematical and scientific computing task.
lref:		Fortran 
lref:		PCN
lref:		CLP
lref:		Sisal

language:	APL
package:	I-APL
version:	?
parts:		?
author: 	?
location:	ftp languages/apl/* from watserv1.waterloo.edu
description:	?
updated:	1992/07/06

language:	APL
package:	APLWEB
version:	?
parts:		translator(web->apl), translator(web->TeX)
author: 	Dr. Christoph von Basum <CvB@erasmus.hrz.uni-bielefeld.de>
location:	ftp languages/apl/aplweb/* from watserv1.uwaterloo.ca
description:	[Should this be listed with the Web entries? -- Ed.]
updated:	1992/12/07

language:	APL
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	J
package:	J-mode
version:	?
parts:		emacs macros
author: 	?
location:	ftp pub/j/gmacs/j-interaction-mode.el from think.com
description:	add on to J
updated:	1991/03/04

language:	RLaB language (math manipulation - MATLAB-like)
package:	RLaB
version:	0.99i
parts:		interpreter, libraries, documentation
author: 	v. 0.95:  Ian Searle <ians@eskimo.com>
		v. 0.99i: Matt Wette <mwette@mr-ed.jpl.nasa.gov>
location:	v. 0.95:  ftp pub/RLaB/* from evans.ee.adfa.oz.au
		v. 0.99i: csi.jpl.nasa.gov in /pub/matlab/RLaB
		[Could someone explain/rectify this? -- Mark]
description:	RLaB is a "MATLAB-like" matrix-oriented programming
		language/toolbox.  RLaB focuses on creating a good experimental
		environment (or laboratory) in which to do matrix math
		Currently RLaB has numeric scalars and matrices (real and
		complex), and string scalars, and matrices. RLaB also contains
		a list variable type, which is a heterogeneous associative
		array.
bugs:		v. 0.95: Ian Searle <ians@eskimo.com>
restriction:	GNU General Public License
requires:	GNUPLOT, lib[IF]77.a (from f2c)
ports:		many unix, OS/2, Amiga
updated:	1994/05/14

language:	octave language (math manipulation - MATLAB-like)
package:	octave
version:	1.0
parts:		interpreter, libraries, documentation
author: 	John W. Eaton
location:	ftp /pub/octave/* from ftp.che.utexas.edu
		also, any GNU archive site (see archive listing below)
description:	Octave is a high-level language, primarily intended for
		numerical computations.  It provides a convenient command line
		interface for solving linear and nonlinear problems
		numerically.
		Octave can do arithmetic for real and complex scalars and
		matrices, solve sets of nonlinear algebraic equations,
		integrate functions over finite and infinite intervals, and
		integrate systems of ordinary differential and
		differential-algebraic equations.
bugs:		bug-octave@che.utexas.edu
restriction:	GNU General Public License
requires:	gnuplot, C++ compiler and FORTRAN compiler or f2c translator.
ports:		several
updated:	1994/2/23

language:	FUDGIT language (math manipulation)
package:	FUDGIT
version:	2.27
parts:		interpreter
author: 	Thomas Koenig <ig25@rz.uni-karlsruhe.de> ??
location:	ftp /pub/linux/sources/usr.bin/fudgit-* from tsx-11.mit.edu ??
description:	FUDGIT is a double-precision multi-purpose fitting program.  It
		can manipulate complete columns of numbers in the form of
		vector arithmetic. FUDGIT is also an expression language
		interpreter understanding most of C grammar except pointers.
		Morever, FUDGIT is a front end for any plotting program
		supporting commands from stdin. It is a nice mathematical
		complement to GNUPLOT, for example.
requires:	GNUPLOT
ports:		AIX, HPUX, Linux, IRIX, NeXT, SunOS, Ultrix
updated:	1993/02/22

language:	Unix BC (arbitrary-precision arithmetic language)
package:	C-BC
version:	1.1
parts:		bytecode compiler, interpreter, documentation, examples
author: 	Mark Hopkins <mark@omnifest.uwm.edu>
location:	alt.sources (10/04/93), or contact author by E-mail.
description:	A strongly typed version of BC with expanded C-like syntax,
		more base types, with ability to form array and pointer types
		of any dimension and to allocate/free arrays at run-time.
conformance:	Most POSIX-BC features supported, except functions must be
		declared consistently and declared before first use.  String
		handling slightly different.
reference:	C-BC implementation notes contained with software documentation
requires:	ANSI-C compiler
ports:		DOS, Unix
portability:	No system dependent features present.
updated:	1993/08/23

language:	Unix BC (arbitrary-precision arithmetic language)
package:	GNU BC
version:	1.02
parts:		parser (yacc), interpreter, BC math library
author: 	Philip A. Nelson <phil@cs.wwu.edu>
location:	ftp bc-1.02.tar.Z from a GNU archive site
description:	BC is an arbitrary precision numeric processing language with a
		C-like syntax that traditionally provided a front-end to DC.
		This version, however, is self-contained and internally
		executes its own compiled code (unrelated to DC code).
conformance:	Superset of POSIX BC (P10003.2/D11), with a POSIX-only mode.
restriction:	Source code falls under the GNU CopyLeft.
requires:	vsprintf and vfprintf routines
ports:		Unix (BSD, System V, MINIX, POSIX)
updated:	?

language:	Calc?  (symbolic math calculator)
package:	Calc
version:	2.02
parts:		interpreter, emacs mode, documentation
author: 	Dave Gillespie <daveg@cs.caltech.edu>
location:	ftp calc-2.02.tar.z from a GNU archive site
description:	Calc is an extensible, advanced desk calculator and
		mathematical tool written in Emacs Lisp that runs as part of
		GNU Emacs.  It is accompanied by the "Calc Manual", which
		serves as both a tutorial and a reference.  If you wish, you
		can use Calc as only a simple four-function calculator, but it
		also provides additional features including choice of algebraic
		or RPN (stack-based) entry, logarithms, trigonometric and
		financial functions, arbitrary precision, complex numbers,
		vectors, matrices, dates, times, infinities, sets, algebraic
		simplification, differentiation, and integration.
bugs:		?
updated:	?

language:	C-like caluculator
package:	Arbitrary precision calculator
version:	1.26.4
parts:		interpreter
author: 	David I. Bell <dbell@canb.auug.org.au>
location:	ftp pub/calc from ftp.uu.net
description:	Arbitrary precision C-like calculator [similar to BC? --ed]
ports:		Linux
updated:	1993/06/15

language:	Unix DC (arbitrary-precision arithmetic language)
package:	GNU DC
version:	0.2
parts:		interpreter
author: 	?
location:	ftp dc-0.2.tar.Z from a GNU archive site
description:	DC is the language for an arbitrary precision postfix
		calculator.  This version is a subset of DC that handles all
		the Unix DC operations, except the (undocumented) array
		operations.
status: 	Attempting integration with GNU BC.
updated:	1993/05/21

language:	Fortran
package:	f2c
version:	1993.04.28
parts:		translator (to C), postscript documentation, man pages, 
		support libraries.
author: 	S. I. Feldman, D. M. Gay, M. W. Maimone and N. L. Schryer
location:	ftp from netlib@research.att.com:netlib/f2c/src/*
description:	translator (Fortran 77 to ANSI C or C++)
bugs:		D. M. Gay <dmg@research.att.com>
updated:	1993 April 27

language:	Fortran
package:	Floppy
version:	?
parts:		?
author: 	?
location:	ffccc in comp.sources.misc archive volume 12
description:	?
contact:	?
updated:	1992/08/04

language:	Fortran
package:	Flow
version:	?
parts:		?
author: 	Julian James Bunn <julian@vxcrna.cxern.ch>
location:	comp.sources.misc archive volume 31
description:	The Flow program is a companion to Floppy, it allows the user 
		to produce various reports on the structure of Fortran 
		77 code, such as flow diagrams and common block tables.
requires:	Floppy
ports:		VMS, Unix, CMS
updated:	?

language:	Fortran
package:	Adaptor (Automatic DAta Parallelism TranslatOR)
version:	1.0
parts:		preprocessor, library, documentation
author: 	?
location:	ftp gmd/adaptor/adp_1.0.tar.Z from ftp.gmd.de
description:	Adaptor is a tool that transforms data parallel
		programs written in Fortran with array extensions,
		parallel loops, and  layout directives	to parallel
		programs with explicit message passing.
		ADAPTOR is not a compiler but a source to source
		transformation that generates Fortran 77 host and
		node programs with message passing.  The new
		generated source codes have to be compiled by the
		compiler of the parallel machine. 
ports:		CM-5, iPCS/860, Meiko CS1/CS2, KSR 1, SGI, Alliant,
		network of Suns, or RS/6000s
contact:	Thomas Brandes <brandes@gmd.de>
updated:	1993/06

language:	Fortran, C
package:	cfortran.h
version:	2.6
parts:		macros, documentation, examples
author: 	Burkhard Burow
location:	ftp cfortran/* from zebra.desy.de
description:	cfortran.h is an easy-to-use powerful bridge between
		C and FORTRAN. It provides a completely transparent, machine
		independent interface between C and FORTRAN routines and
		global data.
		cfortran.h provides macros which allow the C preprocessor to
		translate a simple description of a C (Fortran) routine or
		global data into a Fortran (C) interface.
reference:	reviewed in RS/Magazine November 1992 and
		a user's experiences with cfortran.h are to be described
		in the 1/93 issue of Computers in Physics.
ports:		VAX VMS or Ultrix, DECstation, Silicon Graphics, IBM RS/6000,
		Sun, CRAY, Apollo, HP9000, LynxOS, f2c, NAG f90.
portability:	high
contact:	burow@vxdesy.cern.ch
updated:	1992/04/12

language:	Fortran
package:	fsplit
version:	?
parts:		?
author: 	?
location:	?
description:	a tool to split up monolithic fortran programs
updated:	?

language:	Fortran
package:	?
version:	?
parts:		?
author: 	Steve Mccrea <mccrea@gdwest.gd.com>
location:	?
description:	a tool to split up monolithic fortran programs
requires:	new awk
updated:	?

language:	Fortran
package:	Fortran77 -> Fortran90 converter
version:	? 1
parts:		translator(Fortran 77 -> Fortran 90), documentation?
author: 	metcalf@cernvm.cern.ch <Michael Metcalf>
location:	ftp pub/MandR/convert.f90 from jkr.cc.rl.ac.uk
description:	A Fortran77 to Fortran90 translator.  There's a number of
		significant differences between the two Fortrans that makes
		a package like this useful.
updated:	1993/07/17

language:	J
package:	J from ISI
version:	6
parts:		interpreter, tutorial
author: 	Kenneth E. Iverson and Roger Hui <hui@yrloc.ipsa.reuter.com>
location:	ftp languages/apl/j/* from watserv1.waterloo.edu
description:	J was designed and developed by Ken Iverson and Roger Hui.  It
		is similar to the language APL, departing from APL in using
		using the ASCII alphabet exclusively, but employing a spelling
		scheme that retains the advantages of the special alphabet
		required by APL. It has added features and control structures
		that extend its power beyond standard APL.  Although it can be
		used as a conventional procedural programming language, it can
		also be used as a pure functional programming language.
ports:		Dec, NeXT, SGI, Sun-3, Sun-4, VAX, RS/6000, MIPS, Mac, Acorn
		IBM-PC, Atari, 3b1, Amiga
updated:	1992/10/31

language:	Ratfor
package:	? ratfor ?
version:	?
parts:		translator(Ratfor->Fortran IV)
author: 	Brian Kernighan and P.J. Plauger (wrote the book anyway)
location:	comp.sources.unix archives volume 13
description:	Ratfor is a front end language for Fortran.  It was designed
		to give structured control structures to Fortran.  It is
		mainly of historical significance.
updated:	?

language:	Y (cross between C and Ratfor)
package:	y+po
version:	?
parts:		compiler
author: 	Jack W. Davidson and Christopher W. Fraser
location:	ftp pub/y+po.tar.Z from ftp.cs.princeton.edu
description:	Davidson/Fraser peephole optimizer PO [1-3] [where the GCC RTL
		idea and other optimization ideas came from] along with the Y
		compiler [cross between C+ratfor] is ftpable from
		ftp.cs.princeton.edu: /pub/y+po.tar.Z.	It is a copy of the
		original distribution from the University of Arizona during the
		early 80's, totally unsupported, almost forgotten [do not bug
		the authors] old code, possibly of interest to
		compiler/language hackers.
reference:	Jack W. Davidson and Christopher W. Fraser, "The Design and
		Application of a Retargetable Peephole Optimizer", TOPLAS, Apr.
		1980.
		Jack W. Davidson, "Simplifying Code Through Peephole
		Optimization" Technical Report TR81-19, The University of
		Arizona, Tucson, AZ, 1981.
		Jack W. Davidson and Christopher W. Fraser, "Register
		Allocation and Exhaustive Peephole Optimization"
		Software-Practice and Experience, Sep. 1984.
status: 	history
updated:	?

electrical engineering languages
-------------------------------------------------------------------------------
category:	electrical engineering languages
description:	These are languages used for simulating, designing, and
		specifying circuits.

language:	CASE-DSP (Computer Aided Software Eng. for Digital Signal Proc)
package:	Ptolemy
version:	0.4.1
parts:		grahpical algorithm layout, code generator, simulator
author: 	?
location:	ftp pub/ptolemy/* from ptolemy.bekeley.edu
description:	Ptolemy provides a highly flexible foundation for the
		specification, simulation, and rapid prototyping of systems.
		It is an object oriented framework within which diverse models
		of computation can co-exist and interact.  For example, using
		Ptolemy a data-flow system can be easily connected to a
		hardware simulator which in turn may be connected to a
		discrete-event system, etc.  Because of this, Ptolemy can be
		used to model entire systems.
		In addition, Ptolemy now has code generation capabilities.
		from a flow graph description, Ptolemy can generate both C code
		and DSP assembly code for rapid prototyping.  Note that code
		generation is not yet complete, and is included in the current
		release for demonstration purposes only.
requires:	C++, C
ports:		Sun-4, MIPS/Ultrix; DSP56001, DSP96002.
status: 	active research project
discussion:	ptolemy-hackers-request@ohm.berkeley.edu
contact:	ptolemy@ohm.berkeley.edu
updated:	1993/04/22

language:	EDIF (Electronic Design Interchange Format)
package:	Berkeley EDIF200 
version:	7.6
parts:		translator-building toolkit
author: 	Wendell C. Baker and Prof A. Richard Newton of the Electronics 
		Research Laboratory, Department of Electrical Engineering and 
		Computer Sciences at the University of California, Berkeley, CA
location:	ftp from pub/edif in ic.berkeley.edu
description:	?
restriction:	no-profit w/o permission
ports:		?
updated:	1990/07

language:	Verilog, XNF
package:	XNF to Verilog Translator
version:	?
parts:		translator(XNF->Verilog)
author: 	M J Colley <martin@essex.ac.uk>
location:	ftp pub/dank/xnf2ver.tar.Z from punisher.caltech.edu
description:	This program was written by a postgraduate student as part
		of his M.Sc course, it was designed to form part a larger
		system operating with the Cadence Edge 2.1 framework. This
		should be born in mind when considering the construction
		and/or operation of the program.
updated:	?

language:	VHDL
package:	ALLIANCE
version:	1.1
parts:		compiler, simulator, tools and environment, documentation
author: 	?
location:	ftp pub/cao-vlsi/alliance from ftp-masi.ibp.fr
description:	ALLIANCE 1.1 is a complete set of CAD tools for teaching
		Digital CMOS VLSI Design in Universities. It includes VHDL
		compiler and simulator, logic synthesis tools, automatic place
		and route, etc...  ALLIANCE is the result of a ten years effort
		at University Pierre et Marie Curie (PARIS VI, France).
ports:		Sun4, also not well supported: Mips/Ultrix, 386/SystemV
discussion:	alliance-request@masi.ibp.fr
contact:	cao-vlsi@masi.ibp.fr
updated:	1993/02/16
-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
Newsgroups: comp.compilers,comp.lang.misc,comp.archives.admin,news.answers,comp.answers
Path: bloom-beacon.mit.edu!gatech!news-feed-1.peachnet.edu!news.duke.edu!MathWorks.Com!uhog.mit.edu!news.mtholyoke.edu!world!iecc!compilers-sender
From: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Subject: Catalog of compilers, interpreters, and other language tools [p5of5]
Message-ID: <free5-Aug-94@comp.compilers>
Followup-To: comp.lang.misc
Summary: Monthly posting of free language tools that include source code
Keywords: tools, FTP, administrivia
Sender: compilers-sender@chico.iecc.com
Supersedes: <free5-Jul-94@comp.compilers>
Reply-To: free-compilers@idiom.berkeley.ca.us (Steve Robenalt)
Organization: Idiom Consulting / Berkeley, CA
References: <free4-Aug-94@comp.compilers>
Date: Mon, 1 Aug 1994 11:00:48 GMT
Approved: compilers@iecc.com
Expires: Thu, 1 Sep 1994 23:59:00 GMT
Lines: 1354
Xref: bloom-beacon.mit.edu comp.compilers:3321 comp.lang.misc:5189 comp.archives.admin:679 news.answers:23371 comp.answers:6569

Archive-name: free-compilers/part5
Last-modified: 1994/6/30
Version: 6.5

Wirth family languages
------------------------------------------------------------------------------
category:	Wirth family languages
description:	These are the languages that were either designed by Niklaus
		Wirth are are descended from them.  
lref:		IFP

language:	CLU
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

language:	Modula-2, Pascal
package:	m2
version:	? 7/2/92 ?
parts:		? compiler ?
author: 	Michael L. Powell.  See description below.
location:	ftp pub/DEC/Modula-2/m2.tar.Z from gatekeeper.dec.com
description:	A modula-2 compiler for VAX and MIPS.  A Pascal
		compiler for VAX is also included.  The Pascal compiler
		accepts a language that is almost identical to Berkeley
		Pascal.  It was originally designed and built by Michael L.
		Powell, in 1984.  Joel McCormack made it faster, fixed lots of
		bugs, and swiped/wrote a User's Manual.  Len Lattanzi ported it
		to the MIPS.
conformance:	extensions:	
		+ foreign function and data interface
		+ dynamic array variables
		+ subarray parameters
		+ multi-dimensional open array parameters
		+ inline proceedures
		+ longfloat type
		+ type-checked interface to C library I/O routines
restriction:	must pass changes back to Digital
ports:		vax (ultrix, bsd), mips (ultrix)
contact:	modula-2@decwrl.pa.dec.com
updated:	1992/07/06

language:	Modula-2
package:	Ulm's Modula-2 System
version:	2.2.1
parts:		compiler, library, tools
author: 	Andreas Borchert <borchert@mathematik.uni-ulm.de>
		compiler derived from the ETHZ compiler for the Lilith system
location:	ftp pub/soft/modula/ulm/sun3/modula-2.2.1.tar.Z from
		titania.mathematik.uni-ulm.de.	Please get the READ_ME too.
description:	?
conformance:	PIM3
restriction:	commercial use requires licence;
		compiler sources available by separate licence agreement
		(licence fee is not required if it is possible to
		transfer the sources across the network)
requires:	gas-1.36 (to be found in the same directory)
ports:		Sun3, Nixdorf Targon/31, Concurrent 3200 Series
contact:	Andreas Borchert <borchert@mathematik.uni-ulm.de>
updated:	1992/03/02 

language:	Modula-2
package:	mtc
version:	?
parts:		translator(C)
author: 	?
location:	ftp pub/unix/programming/compilerbau/mtc.tar.Z 
		from ftp.uni-stuttgart.de 
description:	A Modula-2 to C translator
ports:		?
updated:	1994/04/29

language:	Modula-2
package:	mocka
version:	9404
parts:		compiler, library, examples, docs
author: 	? Holger Hopp <hopp@ira.uka.de>
location:	ftp /pub/mocka/linux/mocka9404* from i44.s10.ira.uka.de 
		or ftp /pub/Linux/devel/modula-2/mocka9404* 
			from sunsite.unc.edu
description:	A free version of a Modula-2 compiler for the Intel X86
		under Linux or 386BSD (and derivatives?). Source code
		in Modula-2 is available.
ports:		Linux and 386BSD (also commercial versions)
updated:	1994/04/29

language:	Modula-2* (parallel extension)
package:	IPD Modula-2* Programming Environment
version:	9401
parts:		translator (->C), debugger (SUN4 only), X Windows
		user panel, automatic cross-architecture make,
		sequential and parallel libraries, examples, documentation
author: 	IPD Modula-2* team <msc@ira.uka.de> consisting of the
		following kernel contributors:
		   Thomas Gauweiler, Stefan U. Haenssgen, Ernst A. Heinz,
		   Paul Lukowicz, Hendrik Mager, Michael Philippsen.
location:	ftp.ira.uka.de (129.13.10.90) in pub/programming/modula2star/
description:	Modula-2* is an extension of Modula-2 for highly parallel,
		portable programs.  IPD Modula-2* is provided freely for
		research, educational and classroom use.  A complete sequential
		Modula-2 environment in provided complemented with a set of
		parallel libraries, which even include routines for
		implementing low-level parallel operations.  The employment of
		of C translator allows increased accessibility to actual
		parallel machines (many have nothing lower-level than C), at
		the expense of Modula-2 features of arrays bounds checking
		and symbolic debugging at the Modula-2* level.
		[An interpreter could be written with functionality subsuming
		 that of a symbolic debugger. -- Mark]
conformance:	PIM but not ISO compliant
reference:	*  J.R. Smith. "The design and analysis of parallel
		   algorithms. Chapter 3: Modula-2*." Oxford University
		   Press, December 1992.
		*  M. Philippsen, E.A. Heinz, and P. Lukowicz. "Compiling
		   machine-independent parallel programs." ACM SIGPLAN
		   Notices, v. 28, no. 8, pp. 99-108, August 1993.
		*  M. Philippsen, T.M. Warschko, W.F. Tichy, C.G. Herter,
		   E.A. Heinz, and P. Lukowicz.  "Project Triton: Towards
		   improved programmability of parallel computers." In
		   D.J. Lija and P.L. Bird (eds), The Interaction of
		   Compilation Technology and Computer Architecture, Kluwer
		   Academic Publishers, 1994.
		Others available from i41s10.ira.uka.de (129.13.13.110)
		in pub/m2s/*.ps
ports:		386 and above with BSDI/386 or Linux (sequential),
		KSR-1/KSR-2 with KSR-OS (sequential and parallel),
		DECStation (R3000/R4000) with Ultrix (sequential),
		   MP-1/MP-2 (DECStation frontend) with MP-Ultrix (parallel)
		SUN (Sun-3, Sun-4 SPARCStation) with SunOS (sequential),
portability:	sources are for GMD Mocka Modula-2 compiler
status: 	supported
updated:	???

language:	Modula-2, Modula-3
package:	M2toM3
version:	1.01
parts:		translator(Modula-2 -> Modula-3), libraries
author: 	Peter Klein <pk@i3.informatik.rwth-aachen.de>
location:	ftp pub/Modula3 from martha.informatik.rwth-aachen.de
description:	M2toM3 is a simple Modula-2 to Modula-3 translator which
		covers most of the syntactic differences between those
		languages.  No context sensitive analysis is done, so WITH
		statements, local modules, enumeration type literals and
		variant RECORDS have to be dealt with by hand.
		Part of the SUN Modula 2 library is emulated by the Modula 3
		library
requires:	a Modula-3 system
updated:	1992/12

language:	pm2
package:	PRAM emulator and parallel modula-2 compiler ??
version:	?
parts:		compiler, emulator
author: 	?
location:	ftp pub/pram/* from cs.joensuu.fi
description:	A software emulator for parallel random access machine (PRAM)
		and a parallel modula-2 compiler for the emulator.  A PRAM
		consists of P processors, an unbounded shared memory, and a
		common clock. Each processor is a random access machine (RAM)
		consisting of R registers, a program counter, and a read-only
		signature register. Each RAM has an identical program, but the
		RAMs can branch to different parts of the program. The RAMs
		execute the program synchronously one instruction in one clock
		cycle.
		pm2 programming language is Modula-2/Pascal mixture having
		extensions for parallel execution in a PRAM. Parallelism is
		expressed by pardo-loop- structure. Additional features include
		privat/shared variables, two synchronization strategies, load
		balancing and parallel dynamic memory allocation.
contact:	Simo Juvaste <sjuva@cs.joensuu.fi>
updated:	1993/02/17

language:	Modula-3
package:	SRC Modula-3
version:	2.11
parts:		compiler(->C), runtime, library, documentation
author: 	?
location:	ftp pub/DEC/Modula-3/m3-*.tar.Z from gatekeeper.dec.com
    MSDOS:	ftp pub/DEC/Modula-3/contrib/m3pc* from gatekeeper.dec.com
description:	The goal of Modula-3 is to be as simple and safe as it
		can be while meeting the needs of modern systems
		programmers.  Instead of exploring new features, we
		studied the features of the Modula family of languages
		that have proven themselves in practice and tried to
		simplify them into a harmonious language.  We found
		that most of the successful features were aimed at one
		of two main goals: greater robustness, and a simpler,
		more systematic type system.  Modula-3 retains one of
		Modula-2's most successful features, the provision for
		explicit interfaces between modules.  It adds objects
		and classes, exception handling, garbage collection,
		lightweight processes (or threads), and the isolation
		of unsafe features.
conformance:	implements the language defined in SPwM3.
ports:		i386/AIX 68020/DomainOS Acorn/RISCiX MIPS/Ultrix 68020/HP-UX
		RS6000/AIX IBMRT/4.3 68000/NextStep i860/SVR4 SPARC/SunOS
		68020/SunOS sun386/SunOS Multimax/4.3 VAX/Ultrix
discussion:	comp.lang.modula3
contact:	Bill Kalsow <kalsow@src.dec.com>
updated:	1992/02/09

language:	Oberon2
package:	Oberon-2 LEX/YACC definition 
version:	1.4
parts:		parser(yacc), scanner(lex)
author: 	Stephen J Bevan <bevan@cs.man.ac.uk>
location:	ftp pub/oberon/tools/o2lexyac.tar.Z from ftp.psg.com
		or mail bevan@cs.man.ac.uk with Subject "b-server-request~
		and body "send oberon/oberon_2_p_v1.4.shar"
description:	A LEX and YACC grammar for Oberon 2 based on the one given
		in the listed reference.
reference:	The Programming Language Oberon-2
		H. M\"{o}ssenb\"{o}ck, N. Wirth
		Institut f\"{u}r Computersysteme, ETH Z\"{u}rich
		January 1992
		ftp Oberon/Docu/Oberon2.Report.ps.Z from neptune.inf.ethz.ch
restriction:	Portions of the source under copyright by U. Manchester.
status: 	un-officially supported
updated:	1992/07/06

language:	Oberon
package:	Ceres workstation Oberon System
version:	?
parts:		compiler
author: 	?
location:	ftp Oberon/? from neptune.ethz.ch
description:	file format is Oberon, binary header
status: 	The sources to the various _full_ implementations are indeed
		not available but the source to most of the complete Ceres
		workstation Oberon System, including NS32032 code generator but
		less low level system specific is available. This includes the
		complete Oberon compiler written in Oberon.
updated:	?

language:	Parallaxis
package:	parallaxis
version:	2.0
parts:		?, simulator, x-based profiler
author: 	?
location:	ftp pub/parallaxis from ftp.informatik.uni-stuttgart.de
description:	Parallaxis is a procedural programming language based
		on Modula-2, but extended for data parallel (SIMD) programming.
		The main approach for machine independent parallel programming 
		is to include a description of the virtual parallel machine 
		with each parallel algorithm.
ports:		MP-1, CM-2, Sun-3, Sun-4, DECstation, HP 700, RS/6000
contact:	? Thomas Braunl <braunl@informatik.uni-stuttgart.de> ?
updated:	1992/10/23

language:	Pascal
package:	p2c
version:	1.20
parts:		translator(Pascal->C)
author: 	Dave Gillespie <daveg@synaptics.com>
location:	ftp ? from csvax.cs.caltech.edu
description:	?
conformance:	supports ANSI/ISO standard Pascal as well as substantial 
		subsets of HP, Turbo, VAX, and many other Pascal dialects.
ports:		?
updated:	1990/04/13

language:	Pascal
package:	Pascal P4 compiler and interpreter
version:	? 1
parts:		compiler, assembler/interpreter, documentation
author: 	Urs Ammann, Kesav Nori, Christian Jacobi
location:	ftp pascal/* from ftp.cwi.nl
description:	A compiler for Pascal written in Pascal, producing an
		intermediate code, with an assembler and interpreter
		for the code.
reference:	Pascal Implementation, by Steven Pemberton and Martin
		Daniels, published by Ellis Horwood, Chichester, UK
		(an imprint of Prentice Hall), ISBN: 0-13-653-0311.
		Also available in Japanese.
contact:	Steven.Pemberton@cwi.nl
updated:	1993/07/05

language:	Pascal
package:	? iso_pascal ?
version:	?
parts:		scanner(lex), parser(yacc)
author: 	?
location:	comp.sources.unix archive volume 13
description:	?
updated:	?

language:	Pascal
package:	pasos2
version:	Alpha
parts:		Compiler, run-time library
author: 	Willem Jan Withagen <wjw@eb.ele.tue.nl>
location:	ftp pub/src/pascal/pasos2* from ftp.eb.ele.tue.nl
description:	a PASCAL/i386 compiler which generates 
		code for OS/2 and DOS. It uses EMX as DOS extender and
		GNU/GAS,  MASM or TASM as assembler.
updated:	1993/12/17

language:	Pascal
package:	ptc
version:	?
parts:		translator(Pascal->C)
author: 	?
location:	ftp languages/ptc from uxc.sco.uiuc.edu ?  (use archie?)
description:	?
contact:	?
updated:	?

language:	Turbo Pascal, Turbo C
package:	tptc
version:	?
parts:		translator(Turbo Pascal->Turbo C)
author: 	?
location:	ftp mirrors/msdos/turbopas/tptc17*.zip from wuarchive.wustl.edu
description:	(It does come with full source and a student recently used it
		as a start for a language that included stacks and queues as a
		built-in data type.
contact:	?
updated:	?

language:	Pascal
iref:		(Pascal) Tim Budd's C++ implementation of Kamin's interpreters

assemblers
-------------------------------------------------------------------------------
category:	assemblers

language:	various assembly
package:	GNU assembler (GAS)
version:	2.3
parts:		assembler, documentation
author: 	?
location:	ftp gas-*.tar.z from a GNU archive site
description:	Many CPU types are now handled, and COFF and IEEE-695 formats
		are supported as well as standard a.out.
bugs:		bug-gnu-utils@prep.ai.mit.edu
ports:		Sun-3, Sun-4, i386/{386BSD, BSD/386, Linux, PS/2-AIX},
		VAX/{Ultrix,BSD,VMS}
updated:	1993/11/11

language:	various assembly
package:	fas: Frankenstein Cross Assemblers
version:	?
parts:		base assembler, parser modules (yacc), documentation?
author: 	Mark Zenier
location:	ftp.njit.edu:/pub/msdos/frankasm/frankasm.zoo
		[Inform me of the other sites -Mark]
description:	A reconfigurable assembler package, especially suited for
		8-bit processors, consisting of a base assembler module and
		a yacc parser, for each microprocessor, to handle mnemonics and
		addressing.  Second party parser modules available from many
		sites.
requires:	YACC
updated:	?

language:	6502, Z80, 8085, 68xx
package:	?
version:	?
parts:		?
author: 	msmakela@cc.helsinki.fi and Alan R. Baldwin
location:	ftp ? from ccosun.caltech.edu
description:	I have enhanced a set of 68xx and Z80 and 8085 cross assemblers
		to support 6502. These assemblers run on MS-DOS computers or on
		any systems that support standard Kerninghan & Richie C, for
		example, Amiga, Atari ST and any "big" machines
updated:	1993/03/10

language:	6502
package:	?
version:	?
parts:		assembler, manual
author: 	Doug Jones <jones@cs.uiowa.edu> ?
location:	send mail to author
description:	Supports macro and conditional features, even, as well as 
		being usable for linkage editing of object files.
requires:	Pascal
updated:	?

language:	mc6809
package:	usim
version:	? 0.90
parts:		simulator, documentation
author: 	Ray P. Bellis <rpb@psy.ox.ac.uk>
location:	ftp /pub/mc6809/usim-* from ftp.cns.ox.ac.uk
		Alt.sources archive at FTP site:
		   wuarchive.wustl.edu in usenet/alt.sources/articles
		   files 10405.Z 10406.Z and 10407.Z
description:	a mc6809 simulator
updated:	? 1993/02/14

language:	mc6809
package:	6809, E-Forth
version:	?
parts:		assembler, simulator
author: 	Lennart Benschop <lennart@blade.stack.urc.tue.nl>
location:	alt.sources, 1993/11/03 <2b8i2r$j0e@tuegate.tue.nl>
description:	An assembler and simulator for the Motorola M6809 processor.
		Also included is a Forth interpreter, E-Forth written
		in 6809.
ports:		assembler: Unix, DOS; simulator: Unix
updated:	1993/11/03

language:	68HC11
package:	68HC11 simulator
version:	? 1
parts:		simulator
author: 	Ted Dunning <ted@nmsu.edu>
location:	ftp pub/non-lexical/6811/sim6811.shar from crl.nmsu.edu
description:	An opcode simulator for the 68HC11 processor.  Interrupts,
		hardware I/O, and half carries are still outside the loop.
		[Adding interrupts may require simulating at the clock phase
		level -Mark]
ports:		unix?, ms-dos
updated:	1993/07/28

language:	8051
package:	CAS 8051 Assembler
version:	1.2
parts:		assembler/linker, disassembler, documentation, examples
author: 	Mark Hopkins <mark@freenet.uwm.edu>
location:	ftp pub/8051/assem from lyman.pppl.gov
    Europe:	ftp pub/microprocs/MCS-51/csd4-archive/assem from nic.funet.fi
description:	experimental one-pass assembler for the 8051 with C-like
		syntax.  Most features of a modern assembler included except
		macros (soon to be added).  Other software tools and
		applications contained in /pub/compilers/8051/*.
requires:	ANSI-C compiler
ports:		MSDOS, Ultrix, Sun4 (contact author)
updated:	1993/07/22

language:	8051
package:	as31 - An 8031/8051 assembler.
version:	? 1
parts:		assembler, parser(yacc), documentation
author: 	Ken Stauffer <stauffer@cpsc.ucalgary.ca>
		(Theo Deraadt wrote the S-record output routines)
location:	comp.sources.misc volume 10
description:	Assembler with ability to produce a variety of object output
		formats, including S-records.
ports:		SUN 3 / SUN 4 (SunOS 4.0), Tandy 6000 (Xenix)
portability:	File I/O may require porting on non-Unixs.
updated:	1990/01/26

language:	Motorola DSP56000
package:	?
version:	1.1
parts:		assembler
author: 	Quinn Jensen <jensenq@qcj.icon.com>
location:	alt.sources archive or ftp ? from wuarchive.wustl.edu
description:	?
updated:	?

language:	Motorola DSP56001
package:	a56
version:	1.1
parts:		assembler
author: 	Quinn C. Jensen <jensenq@qcj.icon.com>
location:	alt.sources archive
description:	?
updated:	1992/08/10

language:	80486
package:	WDASM17B.ZIP - Windows 80486 Disassembler for Windows 3.1
version:	1.7b
parts:		disassembler
author: 	Eric Grass <S876795@UMSLVMA.UMSL.EDU>
location:	SIMTEL20, pd1:<msdos.windows3>
description:	An interactive 80486 disassembler for Windows 3.1.  Multiple
		options for formatting disassembly exist.
ports:		Windows3.1
portability:	Windows-specific
updated:	1993/06/29

language:	Assembly (SPARC)
package:	elfdis
version:	2.3
parts:		disassembler
author: 	Bruce Ediger <bediger@teal.csn.org>
location:	comp.sources.misc archives volume 42, issue 83
description:	An object code disassembler for SPARC which, unlike the native
		SPARC disassembler, uses the relocation and dynamic linking
		information in the Elf file.
updated:	1994/05/08

macro preprocessors
-------------------------------------------------------------------------------
category:	macro preprocessors
description:	These are tools that expand macros for another language.
iref:		(C) GNU CC
iref:		(C) lcc    [I assume lcc has a preprocessor? --ed]

language:	C preprocessor
package:	Decus cpp
version:	?
parts:		pre-processor
author: 	Martin Minow 
location:	included in the X11R5 distribution as contrib/util/cpp
description:	An almost-ANSI C preprocessor.	It is shipped with X11R5
		because some systems don't have a working cpp.
ports:		VMS (Vax C, Decus C), RSX-11M, RSTS/E, P/OS, and RT11,
		A/UX, Apollo Domain/IX 9.6, etc.
portability:	very high
updated:	?

language:	C-Refine, C++-Refine, *-Refine
package:	crefine
version:	3.0
parts:		pre-processor, documentation
author: 	Lutz Prechelt <prechelt@ira.uka.de>
location:	aquire from any comp.sources.reviewed archive
description:	C-Refine is a preprocessor for C and languages that
		vaguely resemble C's syntax.  It allows symbolic naming
		of code fragments so as to redistribute complexity and
		provide running commentary.
ports:		unix, msdos, atari, amiga.
portability:	high
updated:	1992/07/16

language:	m4
package:	pd/bsd m4
version:	?
parts:		interpreter, man page
author: 	Ozan Yigit <oz@sis.yorku.ca>, 
		Richard A. O'Keefe <ok@goanna.cs.rmit.OZ.AU>
location:	ftp from any 386BSD, NetBSD, or FreeBSD archive
description:	A macro preprocessor, more flexible than cpp
conformance:	?
updated:	1993/11/03

language:	m4
package:	GNU m4
version:	1.1
parts:		interperter, ?
author: 	Francois Pinard <pinard@iro.umontreal.ca>
location:	ftp m4-1.0.tar.Z from a GNU archive site
    Macintosh:	ftp pub/software/mac/src/mpw-c/* from nic.switch.ch.
description:	A macro preprocessor, more flexible than cpp.
		It copies its input to the output, expanding macros.  Macros
		are either built-in or user-defined.  `m4' has built-in
		functions for including files, running Unix commands, doing
		integer arithmetic, manipulating text in various ways,
		recursing, etc.  `m4' can be used either as a front-end to a
		compiler or as a macro processor in its own right.
conformance:	?
restriction:	GNU General Public License
updated:	1993/11/08

special purpose languages
-------------------------------------------------------------------------------
category:	special purpose languages
description:	Languages with very specific purposes that are the only free
		language in that niche (otherwise they would have a category)

language:	ADL (Adventure Definition Language)
package:	ADL
version:	?
parts:		interpreter
author: 	Ross Cunniff <cunniff@fc.hp.com>, Tim Brengle
location:	comp.sources.games archive volume 2
description:	An adventure language, semi-object-oriented with LISP-like
		syntax.  A superset of DDL.
updated:	?

language:	ASA
package:	Adaptive Simulated Annealing (ASA)
version:	1.53
parts:		?
author: 	Lester Ingber <ingber@cco.caltech.edu>
location:	ftp pub/ingber/? from ftp.caltech.edu  
description:	? Language interface to neural net simulator?
discussion:	asa-request@alumni.caltech.edu
updated:	1993/11/14

language:	ASN.1 (Abstract Syntax Notation One) (ITU TS X.208/ISO 8824)
package:	snacc (Sample Neufeld ASN.1 to C/C++ Compiler)
version:	1.1
parts:		compiler, runtime BER libraries, utility progs
author: 	Mike Sample <msample@cs.ubc.ca>
location:	ftp /pub/local/src/snacc/snacc1.1.tar.Z from cs.ubc.ca
description:	ASN.1 is a language used to describe data structures
		in a machine and implementation lang independent way.  Basic
		Encoding Rules (BER) provide a universal (contiguous) 
		representation of data values. ASN.1 & BER were designed to
		exchange data (with complex structure) over networks.
		OSI Application protocols such as X.400 MHS (email) and 
		X.500 directory and others protocols such as SNMP use ASN.1
		to describe the PDUs they exchange.
		Snacc compiles 1990 ASN.1 (including some macros) data 
		structures into C, C++ or type tables. The generated 
		C/C++ includes a .h file with the equivalent data struct
		and a .c/.C file for the BER encode and decode, print and
		free routines.
reference:	Michael Sample and Gerald Neufeld, "Implementing Efficient
		Encoders and Decoders for Network Data Representations",
		IEEE INFOCOM '93 Proceedings, Vol 3, pp 1143-1153, Mar 1993
		Michael Sample, "How Fast Can ASN.1 Encoding Rules Go?",
		M.Sc. Thesis, University of British Columbia, Apr 1993
restriction:	Compiler under GNU Public License. No restriction on libs
		and C/C++/tables generated by snacc.
		If you use it in a commercial product please let us know.
requires:	yacc (or bison), lex (or flex) and cc (ANSI or non-ANSI)
contact:	Barry Brachman <brachman@cs.ubc.ca> or <snacc-bugs@cs.ubc.ca>
updated:	1993/07/12

language:	Duel (a <practical> C debugging language)
package:	DUEL
version:	1.10
parts:		interpreter, stand-alone module, documentation, test suites
author: 	Michael Golan <mg@cs.princeton.edu>
location:	ftp duel/* from ftp.cs.princeton.edu
description:	DUEL acts as front end to gdb.	It implements a language
		designed for debbuging C programs.  It maily features 
		efficient ways to select and display data items.  It is
		normally linked into the gdb executable, but could stand
		alone.	It interprets a subset of C in addition to its 
		own language.
requires:	gdb
status: 	author is pushing the system hard.
updated:	1993/03/20

language:	IDL (Project DOE's Interface Definition Language)
package:	SunSoft OMG IDL CFE
version:	1.2
parts:		compiler front end, documentation
author: 	SunSoft Inc.
location:	ftp pub/OMG_IDL_CFE_1.2/* from omg.org
description:	OMG's (Object Management Group) CORBA 1.1 (Common
		Object Request Broker Architecture) specification
		provides the standard interface definition between
		OMG-compliant objects.	IDL (Interface Definition
		Language) is the base mechanism for object
		interaction.  The SunSoft OMG IDL CFE (Compiler Front
		End) provides a complete framework for building CORBA
		1.1-compliant preprocessors for OMG IDL.  To use
		SunSoft OMG IDL CFE, you must write a back-end; full
		instructions are included.  A complete compiler of IDL would
		translate IDL into client side and server side routines for
		remote communication in the same manner as the currrent Sun
		RPCL compiler. The additional degree of freedom that the IDL
		compiler front end provides is that it allows integration of 
		new back ends which can translate IDL to various programming
		languages.  Several companies including Sunsoft are building
		back ends to the CFE which translate IDL into target languages,
		e.g. Pascal or C++, in the context of planned CORBA-compliant
		products.
requires:	C++ 2.1 conformant C++ compiler
contact:	idl-cfe@sun.com
updated:	1993/05/04

language:	NeuDL
package:	NeuDL - Neural-Network Description Language
version:	0.2
parts:		NeuDL interpreter, translator (NewDL->C++), user manual,
		NeuDL paper, examples
author: 	Joey Rogers <jrogers@buster.eng.ua.edu>
location:	cs.ua.edu in /pub/neudl/NeuDLver02.tar.gz
description:	A prototype of a neural network description language with a
		C++ - like syntax currently limited to backpropagation neural
		nets.  There is enough flexibility in the language, though, to
		allow users to create dynamic neural net configurations.  The
		source is written in C++.
updated:	1994/05/23

language:	NewsClip ?
package:	NewsClip
version:	1.01
parts:		translator(NewsClip->C), examples, documentation
author: 	Looking Glass Software Limited but distributed by 
		ClariNet Communications Corp.
location:	?
description:	NewsClip is a very high level language designed for
		writing netnews filters.  It translates into C.
		It includes support for various newsreaders.
restriction:	Cannot sell the output of the filters.	Donation is hinted at.
status: 	supported for ClariNet customers only
contact:	newsclip@clarinet.com
updated:	1992/10/25

language:	PROGRESS
package:	PROGRESS
version:	RWTH 5.10
parts:		environment, interpreter, database, ?
author: 	Dr. Andy Schuerr <andy@i3.informatik.rwth-aachen.de>,
		Albert Zuendorf <albert@i3.informatik.rwth-aachen.de>
location:	send mail to authors
    sun4-bin:	ftp pub/unix/PROGRES/? from ftp.informatik.rwth-aachen.de
description:	PROGRES is an integrated environment for a very high level
		programming language which has a formally defined semantics
		based on "PROgrammed Graph Rewriting Systems". This language
		supports the following programming paradigms/purposes:	1)
		Structurally object-oriented specification of attributed graph
		structures with multiple inheritance hierarchies and types of
		types (for parametric polymorphy).  2) Declarative/relational
		specification of derived attributes, node sets, binary
		relationships (directed edges), and Boolean constraints.  3)
		Rule-oriented/visual specification of parameterized graph
		rewrite rules with complex application conditions.  4)
		Nondeterministic & imperative programming of composite graph
		transformations (with built-in backtracking and cancelling
		arbitrary sequences of failing graph modifications).
		Therefore, PROGRES may be used as 1) a very high level
		programming language for implementing abstract data types with
		a graph-like internal structure, 2) a visual database
		programming language for the graph-oriented database system
		GRAS (which is available as free software under the GNU license
		conditions), 3) a rule-oriented language for rapid prototyping
		nondeterministically specified data/rule base transformations.
		Furthermore, PROGRES is an almost statically typed language
		which additionally offers "down casting" operators for runtime
		checked type casting/conversion (in order to avoid severe
		restrictions concerning the language's expressiveness).  
		PROGRESS is meant to be used with GRAS, which is also available
updated:	1993/11/02

language:	Tiny
package:	Omega test, Extended Tiny
version:	3.2.2
parts:		translator(fortran->tiny), tiny interpreter?, analysis tools
author: 	William Pugh <pugh@cs.umd.edu> and others
location:	ftp pub/omega from ftp.cs.umd.edu
description:	The Omega test is implemented in an extended version of
		Michael Wolfe's tiny tool, a research/educational tool
		for examining array data dependence algorithms and
		program transformations for scientific computations.
		The extended version of tiny can be used as a
		educational or research tool.  The Omega test: A system
		for performing symbolic manipulations of conjunctions
		of linear constraints over integer variables.  The
		Omega test dependence analyzer: A system built on top
		of the Omega test to analyze array data dependences.
contact:	omega@cs.umd.edu
updated:	1992/11/13

language:	Extended Tiny
package:	Extended Tiny
version:	3.0 (Dec 12th, 1992)
parts:		programming environment, dependence tester, tests
		translator(Fortran->tiny), documentation, tech. reports
author: 	original author: Michael Wolfe <cse.ogi.edu>,
		extended by William Pugh et al. <pugh@cs.umd.edu>
location:	ftp pub/omega from cs.umd.edu
description:	A research/educational tool for experimenting with
		array data dependence tests and reordering transformations.
		It works with a language tiny, which does not have procedures,
		goto's, pointers, or other features that complicate dependence
		testing. The original version of tiny was written by Michael
		Wolfe, and has been extended substantially by a research group
		at the University of Maryland. Michael Wolfe has made further
		extensions to his version of tiny.
ports:		Any unix system (xterm helpful but not required)
contact:	Omega test research group <omega@cs.umd.edu>
updated:	1993/01/23

language:	SQL
package:	_lex & yacc_ by Levine, Mason & Brown published by O'Reilly
version:	?
parts:		book, grammar
author: 	Levine, Mason & Brown
location:	buy the book, or ftp published/oreilly/nutshell/lexyacc/? 
		from ftp.uu.net.
description:	In _lex & yacc_, by Levine, Mason & Brown an SQL parser
		is included as an example grammar
updated:	?

language:	SQL
package:	MultiCal System
version:	?
parts:		?
author: 	Richard Snodgrass?
location:	ftp tsql/multical from FTP.cs.arizona.edu.
description:	[Anyone care to write a description? - ed]
restriction:	public domain, freely available
contact:	rts@cs.arizona.edu
updated:	?

language:	ModSim - U. S. Army ModSim compiler
package:	USAModSim
version:	1.0
parts:		compiler(->C), compilation manager, browser, library, 
		database interface language, documentation
author: 	?
location:	ftp from max.cecer.army.mil in /ftp/isle
description:	ModSim is a general-purpose, block-structured, object-
		oriented programming language with built in support
		for Simulation. Its "parent languages" are Modula-2 and
		Simula. It supports multiple inheritance, templates,
		reference types, polymorphism, and process-oriented
		simulation with synchronous and asynchronous activities
		using explicit simulation time.
		The documentation is extensive (>300 pages) and very good.
ports:		SPARC/SunOS, Silicon Graphics.
		According to the Doc, there is a DOS-Version (not found
		on the server.
contact:	Charles Herring <herring@lincoln.cecer.army.mil>
updated:	1993/12/29

natural languages
-------------------------------------------------------------------------------
category:	natural languages
description:	These are tools that interact with human languages.

language:	natural languages 
package:	Pleuk grammar development system
version:	1.0
parts:		shell, examples, documentation
author: 	Jo Calder <jcalder@cs.sfu.ca>, Kevin Humphreys 
		<kwh@cogsci.ed.ac.uk>, Chris Brew <chrisbr@cogsci.ed.ac.uk>,
		Mike Reape <mreape@cs.tcd.ie>
location:	ftp from hostname ai.uga.edu: /ai.natural.language/
description:	A shell for grammar development, handles various grammatical
		formalisms.
requires:	SICStus Prolog version 2.1#6 or later, and other programs
		readily available from the public domain.
contact:	pleuk@cogsci.ed.ac.uk.	
updated:	1993/06/18

language:	natural languages
package:	proof
version:	?
parts:		parser, documentation
author: 	Craig R. Latta <latta@xcf.Berkeley.EDU>
location:	ftp src/local/proof/* from scam.berkeley.edu
description:	a left-associative natural language grammar scanner
bugs:		proof@xcf.berkeley.edu
ports:		Decstation3100 Sun-4
discussion:	proof-request@xcf.berkeley.edu ("Subject: add me")
updated:	1991/09/23

curiosities
-------------------------------------------------------------------------------
category:	curiosities
description:	These are the languages and tools that I could not fit into one
		of the other categories.   I am quite willing to reclassify
		these if provided with a rational way to do so.

language:	a1 (Address 1 code)
package:	a1 code interpreter
version:	? 1
parts:		interpreter, examples
author: 	Matthew Newhook <matthew@engr.mun.ca>
location:	garfield.cs.mun.ca:/pub/a1/a1.tar.Z
description:	An address 1 code interpreter used to test compiler output.
requires:	gcc 2.4.2 or higher
portability:	Ports to machine without memory segment protection unverified.
updated:	1993/06/02

language:	INTERCAL
package:	C-INTERCAL
version:	0.9
parts:		compiler, library, documentation
author: 	Eric S. Raymond <esr@snark.thyrsus.com>
location:	ftp pub/intercal/intercal0.9.* from sequoia.lle.rochester.edu
description:	INTERCAL is possibly the most elaborate and long-lived joke
		in the history of programming languages.  It was first designed
		by Don Woods and Jim Lyons in 1972 as a deliberate attempt
		to produce a language as unlike any existing one as possible.
		The manual, describing features of horrifying uniqueness,
		became an underground classic.	ESR wrote C-INTERCAL in 1990
		as a break from editing _The_New_Hacker's_Dictionary_, adding
		to it the first implementation of COME FROM under its own name.
		The compiler has since been maintained and extended by an
		international community of technomasochists.  The distribution
		includes extensive documentation and a program library.
		C-INTERCAL is actually an INTERCAL-to-C source translator which
		then calls the local C compiler to generate a binary.  The code
		is thus quite portable.
contact:	Steve Swales <steve@bat.lle.rochester.edu>
updated:	1993/05/20

language:	Logo
package:	logo
version:	4
parts:		interpreter
author: 	?
location:	comp.sources.unix archive volume 10
description:	?
updated:	?

language:	Logo
package:	Berkeley Logo
version:	3.0
parts:		interpreter
author: 	Brian Harvey <bh@anarres.CS.Berkeley.EDU>
location:	ftp pub/ucblogo/* from anarres.cs.berkeley.edu
description:	+ Logo programs are compatible among Unix, PC, and Mac.
		+ "richer" than MswLogo?
		- pretty slow.
		- doesn't do anything fancy about graphics.  (One turtle.)
ports:		unix, pc, mac
updated:	1993/08/06

language:	Logo
package:	MswLogo
version:	3.5
parts:		interpreter
author: 	George Mills <mills@athena.lkg.dec.com>
location:	ftp pub/comp.lang.logo/programs/mswlogo from cher.media.mit.edu
		Source may require emailing George Mills.
description:	A windows front-end for Berkeley Logo
bugs:		George Mills <mills@athena.lkg.dec.com>
ports:		MS Windows 3.x
status: 	activly developed
updated:	1993/10/15

language:	Loglan'82
package:	Loglan82
version:	?
parts:		Cross-Compiler (->C)
author: 	?
location:	ftp pub/Loglan82 from infpc1.univ-pau.fr
description:	The academic community has a need for one language which
		enables to teach all elements of object programming: classes &
		objects, coroutines, processes (in Loglan'82 processes are
		objects which are able to act in parallel), inheritance,
		exception handling, dynamic arrays etc.
		Loglan'82 offers the complete sets of programming tools used in
		object and modular and structural programming. It is suggested
		to use it duringthe first two years of teaching and afterwards
		too.
		Loglan'82 supports other styles of programming e.g. programming
		by rules, functional programming etc.
restriction:	GNU General Public License
requires:	?
announcements:	send "SUBSCRIBE loglan82 <your_first_name> <your_name>" 
		to loglan82-request@crisv1.univ-pau.fr
contact:	Andrzej.Salwicki@univ-pau.fr
updated:	1994/2/15

unable to classify due to lack of knowledge
-------------------------------------------------------------------------------
category:	unable to classify due to lack of knowledge
description:	[Please help. --ed]

contact:	Jack Hsu <tcl-archive@barkley.berkeley.edu>
language:	FMPL of Accardi
package:	FMPL interpreter
version:	1
parts:		interpreter, documentation
author: 	Jon Blow <blojo@xcf.berkeley.edu>
location:	ftp src/local/fmpl/* from xcf.berkeley.edu
description:	FMPL is an experimental prototype-based object-oriented 
		programming language developed at the Experimental Computing
		Facility of the University of California, Berkeley.
		+ lambda-calculus based constructs.
		+ event-driven (mainly I/O events)
updated:	1992/06/02

language:	Common Lisp
package:	Garnet
version:	2.2
parts:		user interface builder
author: 	The Garnet project
location:	ftp /usr/garnet/garnet from a.gp.cs.cmu.edu
description:	Garnet is a user interface development environment for Common
		Lisp and X11.  It helps you create graphical, interactive
		user interfaces for your software.  Garnet is a large scale
		system containing many features and parts including a custom
		object-oriented programming system which uses a
		prototype-instance model.  It includes postscript support,
		gester recognition, and Motif emulation.
contact:	Brad_Myers@bam.garnet.cs.cmu.edu
updated:	October 15, 1993

language:	Garnet
package:	Multi-Garnet
version:	2.1
parts:		?
author: 	Michael Sannella <sannella@cs.washington.edu>
location:	ftp /usr/garnet/alpha/src/contrib/multi-garnet 
		from a.gp.cs.cmu.edu
description:	better contstraint system for Garnet ??
updated:	1992/09/21

language:	Isabelle
package:	Issabelle-93
version:	?
parts:		?
author: 	Written by Lawrence C Paulson and Tobias Nipkow?
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp/ops5* from
		ftp.cs.cmu.edu
description:	Isabelle is a generic theorem prover.  New logics are
		introduced by specifying their syntax and rules of inference.
		Proof procedures can be expressed using tactics and tacticals.
		The latest version, Isabelle-93, is significantly faster than
		Isabelle-92 and has several other improvements.
requires:	?
contact:	Larry.Paulson@cl.cam.ac.uk
		Tobias.Nipkow@informatik.tu-muenchen.de?
updated:	1993/12/20

-------------------------------------------------------------------------------
references
-------------------------------------------------------------------------------

name:		The Apple II Programmer's Catalog of Languages and Toolkits
version:	2.8
author: 	Larry W. Virden <lvirden@cas.org>
location:	posted to comp.sys.apple2, comp.lang.misc; ftp from
		idiom.berkeley.ca.us
description:	A survey of language tools available for the Apple ][.
updated:	1993/11/28

name:		Catalog of embeddable Languages.
version:	2
author: 	Colas Nahaboo <colas@bagheera.inria.fr>
location:	posted to comp.lang.misc,comp.lang.tcl; 
		ftp pub/EmbeddedInterpretersCatalog.txt from avahi.inria.fr
description:	Descriptions of languages from the point of view of 
		embedding them.
updated:	1992/07/09

name:		Compilers bibliography
version:	1.5
author: 	Charlie A. Lins
location:	ftp pub/oberon/comp_bib_1.4.Z from ftp.apple.com
description:	It includes all the POPLs, PLDIs, Compiler Construction, 
		TOPLAS, and LOPAS.  Plus various articles and papers from 
		other sources on compilers and related topics.
updated:	1992/10/31

name:		haskell-status
version:	?
author: 	Simon Peyton Jones <simonpj@dcs.glasgow.ac.uk>
location:	posted occaisionally to ???  
description:	A report, detailing the current features and status of
		all the implementations of Haskell.
updated:	?

name:		Language List
version:	2.1
author: 	Bill Kinnersley <billk@hawk.cs.ukans.edu>
location:	posted regularly to comp.lang.misc; 
		ftp pub/comp.compilers/LanguageList* from primost.cs.wisc.edu;
		ftp pub/compilers-list/LanguageList* from idiom.berkeley.ca.us
description:	Descriptions of almost every computer language there is.
		Many references to available source code.
updated:	1993/09/11

name:		Numerical Analysis Using Non-Procedural Paradigms
version:	published thesis
author: 	Steve Sullivan <sullivan@teal.csn.org>
location:	send email to author; or an ascii version of the comparision
		can be found in the comp.compilers archives, posted 1993/11/16
description:	A thesis, that among other things, compares and benchmarks
		C++, Modula-3, Standard ML, Haskell, Sather, and Common Lisp
updated:	1993

name:		The Lisp FAQs
version:	1.30
author: 	Mark Kantrowitz <mkant+@cs.cmu.edu>
location:	posted regularly to comp.lang.lisp,news.answers,comp.answers
description:	Details of many lisps and systems written in lisps 
		including many languages not covered elsewhere.
updated:	1993/02/08

name:		Survey of Interpreted Languages
version:	?
author: 	Terrence Monroe Brannon <tb06@CS1.CC.Lehigh.ED>
location:	Posted to comp.lang.tcl,comp.lang.misc,comp.lang.perl,
		gnu.emacs.help,news.answers; or ftp 
		pub/gnu/emacs/elisp-ar*/pack*/Hy*Act*F*/survey-inter*-languages
		from archive.cis.ohio-state.edu.
description:	Detailed comparision of a few interpreters: Emacs Lisp, 
		Perl, Python, and Tcl.
updated:	?

-------------------------------------------------------------------------------
archives
-------------------------------------------------------------------------------

language:	Ada
package:	AdaX
location:	ftp pub/AdaX/* from falcon.stars.rosslyn.unisys.com
description:	an archive of X libraries for Ada.  Includes Motif
		[note, I chose this server out of many somewhat randomly.
		Use archie to find others --ed]
contact:	?

language:	APL, J
package:	APL, J, and other APL Software at Waterloo
location:	ftp languages/apl/index from watserv1.waterloo.edu
contact:	Leroy J. (Lee) Dickey <ljdickey@math.waterloo.edu>

language:	Assembler (Motorola)
location:	ftp bode.ee.ualberta.ca : /pub/dos/motorola
description:	An archive of development software and tools for the
		Motorola microcontroller series.  Includes assemblers,
		a C compiler (6809), and applications.	Comes mainly
		from the Austin Texas Motorola BBS.

language:	Assembler (Various)
package:	The Beowulf archive?
location:	hpcsos.col.hp.com : /misc/ns32k/beowulf
description:	An archive of assemblers for various 8-bit microcontrollers

language:	Assembler, Forth (8051)
package:	The Siemens 8051 archive
location:	ftp pub/8051/signetics-bbs from lyman.pppl.gov
description:	An archive for development software and tools for the 8051
		microcontroller.
contact:	jsm@phoenix.princeton.edu

language:	Assembler (8051)
package:	The CAS archive.
location:	lyman.pppl.gov : /pub/8051/siemens-bbs
		nic.funet.fi: /pub/microprocs/MCS-51/csd4-archive
description:	Another archive for development software and tools for the 8051
		microcontroller.  May be converted into a general
		microprocessor archive in the future.
language:	C, C++, Objective-C, yacc, lex, postscript, 
		sh, awk, smalltalk, sed
package:	the GNU archive sites
location:	NOTE:	Many gnu files are now compressed with gzip.  You can
		tell a gzip'ed file because it has a lower-case .z or
		.gz rather than the capital .Z that compress uses.
		Gzip is available from these same archives
		ftp pub/gnu/* from prep.ai.mit.edu
    USA:	ftp mirrors4/gnu/* from wuarchive.wustl.edu
		ftp pub/src/gnu/* from ftp.cs.widener.edu
		ftp gnu/* from uxc.cso.uiuc.edu
		ftp mirrors/gnu/* from col.hp.com
		ftp pub/GNU/* from gatekeeper.dec.com
		ftp packages/gnu/* from ftp.uu.net
    Japan:	ftp ? from ftp.cs.titech.ac.jp
		ftp ftpsync/prep/* from utsun.s.u-tokyo.ac.jp
    Australia:	ftp gnu/* from archie.au
    Europe:	ftp gnu/* from src.doc.ic.ac.uk
		ftp pub/GNU/*/* from ftp.informatik.tu-muenchen.de [re-org'ed]
		ftp pub/gnu/* from ftp.informatik.rwth-aachen.de
		ftp pub/gnu/* from nic.funet.fi
		ftp pub/gnu/* from ugle.unit.no
		ftp pub/gnu/* from isy.liu.se
		ftp pub/gnu/* from ftp.stacken.kth.se
		ftp pub/gnu/* from sunic.sunet.se [re-org'ed]
		ftp pub/gnu/* from ftp.win.tue.nl
		ftp pub/gnu/* from ftp.diku.dk
		ftp software/gnu/* from ftp.eunet.ch
		ftp gnu/* from archive.eu.net [re-org'ed]
description:	There are many sites which mirror the master gnu archives
		which live on prep.ai.mit.edu.	Please do not use 
		the master archive without good reason.
restriction:	Most GNU programs are CopyLeft'ed.  That means that they 
		are distributed under the terms of the GNU General
		Public License or GNU Library General Public License.
		The CopyLeft is only a concern if you want to use
		actual GNU code in your program.  Using Gcc or any of
		the other tools is completely safe from a copyright
		point-of-view with the sole exception of bison which
		includes GNU code in its output.  If you use a GNU
		library, you must supply an unlinked version of your
		program.

language:	Forth
location:	anonymous@asterix.inescn.pt[192.35.246.17]:pub/forth
description:	Forth implementations and programs
contact:	Paulo A. D. Ferreira <?>

language:	Haskell
location:	anonymous@ftp.cs.chalmers.se:pub/haskell/library 
		anonymous@nebula.cs.yale.edu:pub/haskell/library
		anonymous@ftp.dcs.glasgow.ac.uk:pub/haskell/library
description:	An archive of Haskell and Gofer programs

language:	lisp
package:	MIT AI Lab archives
location:	ftp pub/* from ftp.ai.mit.edu
description:	archive of lisp extensions, utilities, and libraries
contact:	?

language:	lisp
package:	Lisp Utilities collection
location:	ftp /afs/cs.cmu.edu/user/mkant/Public/Lisp from ftp.cs.cmu.edu
description:	???
contact:	cl-utilities-request@cs.cmu.edu

language:	Scheme
package:	The Scheme Repository
location:	ftp pub/scheme/* from nexus.yorku.ca
description:	an archive of scheme material including a bibliography, 
		the R4RS report, sample code, utilities, and implementations.
contact:	Ozan S. Yigit <scheme@nexus.yorku.ca>

language:	Smalltalk
package:	Manchester Smalltalk Goodies Library
location:	ftp uiuc/st*/* from st.cs.uiuc.edu
    UK: 	ftp uiuc/st*/* from mushroom.cs.man.ac.uk
description:	a large collection of libraries for smalltalk.
		Created by Alan Wills, administered by Mario Wolczko.
contact:	goodies-lib@cs.man.ac.uk

language:	Tcl
package:	Tcl/Tk Contrib Archive
location:	ftp tcl/* from barkley.berkeley.edu
description:	An archive of Tcl/tk things.
contact:	Jack Hsu <tcl-archive@barkley.berkeley.edu>

language:	TeX
package:	CTAN (Comprehensive TeX Archive Network
location:	ftp ~ftp/tex-archive/* from ftp.shsu.edu
    Europe:	ftp ? from ftp.uni-stuttgart.de 		
description:	A large archive site of most all things TeX-related, including
		literate programming tools such as WEB and derivatives.

-------------------------------------------------------------------------------
cross-reference
-------------------------------------------------------------------------------
These are additional categories.  When an implementation is in a category
rather than a language, the language is indicated in (parenthesis).

category:	command shells
description:	These are the languages that treat bare words as programs
		to execute.
lref:		csh
lref:		ERGO-Shell
lref:		es
lref:		Korn Shell
lref:		Q
lref:		rc
lref:		ssh
lref:		Z-shell

category:	compiler frontend/backend glue
description:	These are the languages used to glue semantic analysers to
		code generators.
lref:		C	-- C is often used as an intermediate step
lref:		RTL
lref:		lcc	-- [what is the lcc intermediate code called? --ed]
lref:		SUIF

category:	database
description:	These are the languages that are specifically designed
		for database access.
lref:		Aditi
lref:		CORAL
lref:		GNU E
lref:		PROGRESS

category:	distributed
description:	These are languages that include constructs that specifically 
		support distributed programming.
lref:		Hermes
lref:		Glish
iref:		(TCL) TCL-DP

category:	dynamic foriegn functions
description:	These tools can dynamically load C code at run-time.
lref:		CommonLisp
lref:		Python
iref:		(Perl) Dylperl
iref:		(Scheme) Elk

category:	editor construction
description:	These are languages that are embedded in editors
lref:		IVY
lref:		S-Lang
iref:		(Lisp) elisp

category:	educational
description:	These are languages that are either designed for teaching,
		or are often used that way.
lref:		ABC
lref:		C
lref:		Logo
lref:		O'small
lref:		Pascal
lref:		Scheme

category:	embeddable
description:	These tools can be used as scripting languages for programs
		written in C.  They are all interpreted.
lref:		IVY
lref:		Perl5
lref:		Python
lref:		S-Lang
lref:		TCL
iref:		(C) ae
iref:		(Scheme) Elk
iref:		(Scheme) siod

category:	glue
description:	These are languages that are designed to tie other programs
		and libraries together.  
cref:		dynamic foriegn functions
cref:		command shells
lref:		Glish
lref:		REXX

category:	graphic user interface support
description:	These are the languages that have support for writing 
		gui programs. 
cref:		C variants
lref:		CommonLisp
lref:		LIFE
lref:		Python
lref:		(Scheme) Ezd
iref:		(Caml Light) Caml Light
iref:		(Prolog) PI
iref:		(Prolog) XWIP
iref:		(Scheme) Elk
iref:		(Scheme) STk
iref:		(TCL) Tk
iref:		(TCL) Wafe

category:	interactive
description:	These are the languages that are meant to be used 
		interactively.	[I'm sure there are more.  Tell me! --ed]
lref:		Caml
lref:		CommonLisp
lref:		Q
iref:		(C) ae

category:	reflective
description:	from Rainer Joswig (rainer@ki6.informatik.uni-hamburg.de) :
		To make it short: Reflective Languages have access to their own
		implementation. One can ask about the state of the running
		system and/or change aspects of the language.
lref:		ABCL ???
lref:		ABCL/1
lref:		MeldC
lref:		3-Lisp
lref:		CLOS with MOP (Meta Object Protocol)

category:	terminal graphics support
description:	These are languages that can access curses, or have an
		equivalent.
cref:		C variants
lref:		ici
iref:		(Common Lisp) CLISP
iref:		(Perl) curseperl
iref:		Python
iref:		(Scheme) scm

category:	text manipulation
description:	These languages have very high-level features for 
		manipulating text.  
cref:		compiler generators and related tools
lref:		Icon
lref:		Lex
lref:		Perl
lref:		Snobol4

category:	unix tool building
description:	These are languages that are appropriate for building tools
		in a Unix environment.	To be included, direct access to 
		most system features is required.
lref:		C
lref:		ici
lref:		Perl
lref:		Python
lref:		TCL

category:	window manager construction
description:	These are languages that are built into window managers
iref:		(Lisp) WOOL
-- 
Send compilers articles to compilers@iecc.com or
{ima | spdcc | world}!iecc!compilers. Meta-mail to compilers-request@iecc.com.
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
};
#else /* BIG_CONFIG */
static struct ResDesc resource[] = {
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {

.\" Copyright (c) 1993, 1994 by Todd Austin
.\" See section COPYING for conditions for redistribution.
.TH Tetra 1 "Last Update: June 7, 1993" "Wisconsin Arch. Tools" "Wisconsin Arch. Tools"

.SH NAME
Tetra \- fine-grain parallelism analyzer

.SH SYNOPSIS
\fIprog\fR.tetra \fIparam-file\fR \fIexec-file\fR \fItrace-file\fR

.SH DESCRIPTION
\fITetra\fR is a tool for evaluating serial program performance under
the resource and control constraints of fine-grain parallel
processors.  \fITetra\fR's primary advantage to the architecture
designer is its ability to quickly generate performance metrics for
yet to be designed architectures.  All the user needs to specify is
the capabilities of the architecture (e.g., number of functional
units, issue model, etc.), rather than its implementation (see Section
\fBCONFIGURATION\fR for more details).

\fITetra\fR employs a four step process.  First, it extracts a
(somewhat) canonical form of the program from a serial instruction
trace generated by QPT.  It then applies control and resource
constraint scheduling to produce an execution graph.  The global
control and resource constraint scheduling is directed by a processor
model specification supplied to the program (again, see Section
\fBCONFIGURATION\fR for more details on configuring \fITetra\fR).
Finally, the resulting execution graph is analyzed to evaluate the
serial program's performance under the specified architectural model.
Some early experiences with a preliminary version of this tool are
documented in [1], the internals of this tool are documented in [2].

The control scheduler supports scheduling based on both the control
flow graph and the less restrictive control dependence graph.  Both
control scheduling models also support speculation using predefined or
user installed branch predictors.  The resource scheduler supports
five scheduling heuristics (of varying cost, performance, and
capability) which limit the amount of processor (functional unit) and
memory resources (physical renaming store) available when building the
execution graph.

Once scheduled, \fITetra\fR provides a number of ways to analyze the
program's performance.  These include parallelism profiles, storage
demand profiles, data sharing distributions, data lifetime analysis,
and control distance (branch, loop, and call stack) distributions.
All reporting mechanisms are detailed in the \fBCONFIGURATION\fR
section.

The software is very modular, allowing it to be easily used as a test
bed for new ideas.  See Section \fBMODULES\fR for a description of all
modules used in the \fITetra\fR source distribution.  \fITetra\fR is
currently only targeted for MIPS-based systems, but porting it to
other architectures supported by QPT requires very little coding (just
a few constants and an instruction dependency decoder).  The
complexity of porting \fITetra\fR to architectures not supported by
QPT depends on the level of functionality supported by the new host's
tracer.

.SH INSTALLATION
To install \fITetra\fR, first unpack the distribution.  The method of
doing this really depends on the distribution you get.  Next, configure
the "Makefile" for the proper compilation environment.  Currently,
\fITetra\fR can be compiled only on MIPS Ultrix machines (DECstations)
using either MIPS "cc" compiler or AT&T C++ compiler version 3.0.1 or
later versions.  If you compile with the AT&T compiler, you can
optionally get run time checking for array and pointer accesses using
the Safe-C macros (the file README.safec describes these macros).
Select the proper compiler by editing the variables at the top of the
"Makefile".

Next, \fITetra\fR needs to be targeted to an implemented architecture.
Currently only the MIPS architecture is supported.  Type "make mips"
to set up \fITetra\fR for MIPS.

Next, add the variable TETRA_DIR to your environment.  This is done
differently depending on your default login shell.  For example, with
"csh" or "tcsh" the variable is set with a line in the file
"~/.cshrc":
.EX
setenv TETRA_DIR /var/home/austin/research/tetra
.EE

Next, configure \fITetra\fR by editing (or creating) the "config.h".
There are many valid examples in the "config/" directory, also see
Section \fBCONFIGURATION\fR for complete details on \fITetra\fR
configuration.

Next, compile \fITetra\fR by executing the command "make".  This
produces the library "tetra.a" which must subsequently be linked to
the \fIQPT\fR regeneration program (see Section \fBLINKING\fR).

To summarize, installation involves the following steps:
.EX
- unpack the distribution
- edit the variables in "Makefile" to reflect your compile
  environment
- type "make mips" (to set up Tetra for the MIPS/Ultrix
  architecture)
- add the TETRA_DIR environment variable to your environment
- config Tetra by modifying, or creating "config.h"
- type "make" to make the "tetra.a" library
- read the rest of this man page
.EE

There are also a number of useful utilities (currently undocumented,
except for a short description in Section \fBMODULES\fR) in the
"utils/" directory.  Doing a "make" in that directory will build
all of the utilities.  Some of the scripts in the "utils/" directory
will not operate properly until this is done.  Also, depending on your
configuration, you might have to change some of the variables at the
top of the shell scripts.

.SH CONFIGURATION
\fITetra\fR is configured via compilation.  That is, to add certain
options you must recompile the distribution.  This ensures that
\fITetra\fR executes as quickly as possible, since no run time checks
are used to determine which options are running.  Two files affect the
configuration.  "config.h" is the compile time configuration, and
"\fIprog\fR.param" is a program specific run time configuration.  This
section details both files.

To turn on and off options in the "config.h" file, change #undef's to
#define's or change the #define's to #undef's.  Some options are
mutually exclusive, if you request an impossible configuration, you
will get a syntax error in the file "config-check.h".  The line with
the syntax error will indicate what is wrong with the configuration.
Be sure to re-compile and re-link after changing "config.h", this is
not necessary when changing "\fIprog\fR.param".  There are numerous
examples of valid "config.h" files in the directory "config/".

Some options will require run time parameters.  These are supplied
through the ".param" file.  This file contains lines in the form of:
.EX
# this is a comment
variable = value
.EE
Comments can be inserted by putting a '#' in the leftmost column of
the line.  Variables are set via assignment; they and their input
value formats are detailed below.

The following is an example input file named "cc1.param":
.EX
#
# GNU cc1 parameter file
#
maxInsts = 250000000
fuDistParam = 0:2048:1
dsDistParam = 0:2048:1
storageExParam = 0:2048:1
lifeExParam = 0:2048:1
brDistParam = 0:2048:1
loopDistParam = 0:2048:1
callDistParam = 0:2048:1
totalFUs = 10
fuRHistParam = 0:2048:1:0
pTraceParam = 0:2048:1
loopLenParam = 0:2048:1
loopDepthParam = 0:1024:1
loopInstParam = 0:1024:1
callDepthParam = 0:1024:1
callInstParam = 0:1024:1
frameSizeParam = 0:8192:4
stackDepthParam = 0:32768:4
mallocSizeParam = 0:4096:10
.EE

The following listed options are manipulated via the "config.h" file
(their required ".param" inputs are also detailed below).

There are two input options that do not have corresponding "config.h"
options.   These are:

.IP maxInsts
Set "maxInsts" in the parameter input file to the maximum number of
instructions analyzed.  After reaching this value, all statistics are
output and the tetra process terminates.  This can also be
accomplished via the USR1 signal (see Section \fBSIGNALS\fR).  The
default value of this option is "ULONG_MAX".

.IP syscallsStall
Set "syscallsStall" to a non-zero value to observe conservative system
call assumption during execution, otherwise, optimistics system call
assumptions are used.  See [1] or [2] for more details.  The default
value of this input is "1".

.PP
The following options control the metrics generated:

.IP FU_STATS
Define FU_STATS if you want to record the functional unit resource
demand profiles (parallelism profiles).  FU_STATS requires the input
"fuDistParam" to be set to the desired profile distribution size.  This is
in the form "base:slots:grain", where "base" is the first level to be
recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the file "fuTotal.Stats".
.IP FULL_FU_STATS
Define FULL_FU_STATS to include all the functional unit statistics.
Collecting per-functional unit type statistics is very memory
expensive; otherwise, only aggregate functional unit stats will be
shown, depending on the number of functional units, using FU_STATS can
save a lot of memory and some processing resources.  FULL_FU_STATS
requires the input "fuDistParam" to be set to the desired profile
distribution size.  This is in the form "base:slots:grain", where
"base" is the first level to be recorded, "slots" is the total number
of buckets in the profile distribution, and "grain" is the number of
levels contained in each bucket.  The results are written to the files
"fuInteger.Stats", "fuFPoint.Stats", "fuMemory.Stats",
"fuControl.Stats", and "fuTotal.Stats".
.IP PHYSICAL_EXACT_STATS
Define PHYSICAL_EXACT_STATS if you want to generate the physical
storage usage profiles (exact lifetime form), exact lifetime
statistics only show storage being needed from the time of allocation
to the time of last reference.  PHYSICAL_EXACT_STATS requires the
input "storageExParam" to be set to the desired profile
distribution size.  This is in the form "base:slots:grain", where
"base" is the first level to be recorded, "slots" is the total number
of buckets in the profile distribution, and "grain" is the number of
levels contained in each bucket.  The results are written to the files
"regExDemand.Stats", "memExDemand.Stats", and "totalExDemand.Stats".
.IP SHARING_STATS
Define SHARING_STATS if you want to measure the degree of sharing
statistics by register, memory, and aggregate.  The degree of sharing
of a value is the total number of times that it passed to other
computations.  SHARING_STATS requires the input "dsDistParam" to be
set to the desired frequency distribution size.  This is in the form
"base:slots:grain", where "base" is the first level to be recorded,
"slots" is the total number of buckets in the profile distribution,
and "grain" is the number of levels contained in each bucket.  The
results are written to the files "dsReg.Stats", "dsMem.Stats", and
"dsTotal.Stats".
.IP LIFE_EXACT_STATS
Define LIFE_EXACT_STATS if you want to generate the physical storage
lifetime distribution (exact lifetime form).  Exact lifetime
statistics only show storage being needed from the time of allocation
to the time of last reference.  LIFE_EXACT_STATS requires the input
"lifeExParam" to be set to the desired frequency distribution size.  This
is in the form "base:slots:grain", where "base" is the first level to
be recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the files "regExLife.Stats",
"memExLife.Stats", and "totalExLife.Stats".
.IP DEP_DIST_OMR
Define DEP_DIST_OMR to include only the most restrictive dependence
(that is, the dependence connected to the immediately preceding DDG
level; these are a superset of the edges that must be realized to
insure that the critical path of the DDGs execution is not
lengthened).  This option has no inputs, and creates specific output
file.
.IP BRANCH_DISTANCE
Define BRANCH_DISTANCE to generate the branch control distance
distribution for the data dependencies of each operation placed in the
DDG.  The branch distance of a DDG edge is defined as the number of
conditional branches that must be resolved (or speculated) in the
serial trace before the consuming operation can be issued.  The
BRANCH_DISTANCE results are not affected by any speculation model that
may be executing.  BRANCH_DISTANCE requires the input "brDistParam" to
be set to the desired frequency distribution size.  This
is in the form "base:slots:grain", where "base" is the first level to
be recorded, "slots" is the total number of buckets in the profile
distribution, and "grain" is the number of levels contained in each
bucket.  The results are written to the files "regBrDist.Stats",
"memBrDist.Stats", and "totalBrDist.Stats" -- or "regBrDistOMR.Stats",
"memBrDistOMR.Stats", and "totalBrDistOMR.Stats" if DEP_DIST_OMR is
defined.
.IP LOOP_DISTANCE
Define LOOP_DISTANCE to generate the loop control distance
distribution in loop iterations of the data dependencies for each
operation placed in the DDG, distances are shown by register and
memory.  The loop distance of a data dependence is the number of loop
iterations that must be issued before the consuming operations is
issued.  The LOOP_DISTANCE results are not affected by any speculation
model that may be executing.  LOOP_DISTANCE requires the input
"loopDistParam" to be set to the desired frequency distribution size.
This is in the form "base:slots:grain", where "base" is the first
level to be recorded, "slots" is the total number of buckets in the
profile distribution, and "grain" is the number of levels contained in
each bucket.  The results are written to the files
"regLoopDist.Stats", "memLoopDist.Stats", and "totalLoopDist.Stats" --
or "regLoopDistOMR.Stats", "memLoopDistOMR.Stats", and
"totalLoopDistOMR.Stats" if DEP_DIST_OMR is defined.
.IP CALL_DISTANCE
Define CALL_DISTANCE to generate the call control distance
distribution in call stack depths for each data dependencies placed in
the DDG, dependence distances are shown by register and memory.  The
call distance is the distance, on the call stack, between the
producing operation and the consuming operation.  The CALL_DISTANCE
results are not affected by any speculation model that may be
executing.  CALL_DISTANCE requires the input "callDistParam" to be set
to the desired frequency distribution size. This is in the form
"base:slots:grain", where "base" is the first level to be recorded,
"slots" is the total number of buckets in the profile distribution,
and "grain" is the number of levels contained in each bucket.  The
results are written to the files "regCallDist.Stats",
"memCallDist.Stats", and "totalCallDist.Stats" -- or
"regCallDistOMR.Stats", "memCallDistOMR.Stats", and
"totalCallDistOMR.Stats" if DEP_DIST_OMR is defined.

.PP
The following options control the control scheduling and speculation
model used:

.IP CFG_SCHEDULE
Define CFG_SCHEDULE to enable control scheduling via the control flow
graph issue model, see "control.[hc]" or the tech-report [2] for
details on this model.  This option requires no input and creates no
specific output file.
.IP CDG_SCHEDULE
Define CFG_SCHEDULE to enable control scheduling via the control
dependence graph model, see "control.[hc]" or the tech-report [2] for
details on this model.  This option requires no input and creates no
specific output file. (See Section \fBCAVEATS\fR for more information
on preparing \fIQPT\fR for control dependence graph scheduling.
.IP CONST_HIT_RATE
Define CONST_HIT_RATE for a straight forward n% predictor.  This
predictor hits on prediction in the range of [-1,100], where a hit
rate of -1 indicates continuous failure and 100 continuous success,
and any other value, n, hits n% of the time.  CONST_HIT_RATE requires
the input "percentHit" to be set to the hit rate of the predictor.
.IP TWO_BIT_COUNTER
Define TWO_BIT_COUNTER for a two bit predictor per branch, by default
it uses an unlimited branch history cache, that is, it remembers the
history of any branch ever encountered.  See "control.[hc]" or the
tech-report [2] for details on this speculation model.
.IP LIMITED_BRANCH_HISTORY
Define LIMITED_BRANCH_HISTORY to limit the amount of saved history
when doing TWO_BIT_COUNTER speculation, the table is managed as a
direct mapped cache.  LIMITED_BRANCH_HISTORY requires the input
"brHistTSize" to be set of the set size of the direct mapped two bit
counter branch history cache.  "brHistTSize" must be a power of two.

.PP
The following options control resource constrained schedule
generation:

.IP LIMITED_FU_SCHEDULE
Define LIMITED_FU_SCHEDULE to limit the functional units available
during execution, all operations are allocated from the same pool.
This option requires that a scheduling model be defined (see below).
LIMITED_FU_SCHEDULE requires the input "totalFUs" to be set to the
total number of functional units available for scheduling.
.IP LIMITED_STORAGE_SCHEDULE
Define LIMITED_STORAGE_SCHEDULE to limit the amount of physical
storage resources available when constructing the DDG, all storage
required by the program is treated uniformly and allocated from the
same pool.  To separate the allocation pools into register and memory
resources would certainly give dubious results, as there is no
guarantee that the compiler would allocate the same values to
registers and memory, especially under wildly different processor
models.  There are other limitations inherent in storage constrained
scheduling, namely, the extent of the storage use is not know when it
is allocated, thus it cannot be de-allocated until the storage is
re-used, as this the first point at which we know the storage is no
longer needed.  LIMITED_STORAGE_SCHEDULE requires the input
"totalStorage" to be set to the total number of storage locations.
If this is too small, deadlock may occur during scheduling -- if this
is larger then the active name space of the program, deadlock can not
occur.

.PP
The following options control which scheduling technique is in force
when generating resource constrained schedules:

.IP HISTORY_SCHEDULE
Define HISTORY_SCHEDULE to schedule operations using the HISTORY
scheduling technique.  This is a memory and processor intensive,
near-optimal scheduling technique, it uses a resource history buffer
to limit the amount of any resource in a particular level of the DDG,
this can only be used with fixed length resource demands (i.e., it
only works with functional units, not storage constrained schedules),
see "rhist.[hc]" or the tech-report [2] for more details.
HISTORY_SCHEDULE requires the input "fuRHistParam" to be set to the
desired resource history buffer size.  This is in the form
"base:slots:grain:maxExpansions", where "base" is the first level to
be recorded (usually 0), "slots" is the total number of buckets in the
resource history buffer, "grain" is the number of levels contained in
the buffer, and "maxExpansions" is the maximum number of times the
buffer size will be doubled before \fITetra\fR doubles the grain
instead (this prevents the memory intensive HISTORY scheduler from
gobbling up all memory, at the cost of scheduling accuracy).
.IP LIST_SCHEDULE_BF
Define LIST_SCHEDULE_BF to schedule operations under resource
constraints using the more memory and processor fugal, sub-optimal
scheduling technique, see the file "listbfheap.[hc]" or the
tech-report [2] for details.  This option requires no input.
.IP LIST_SCHEDULE_FF
Define LIST_SCHEDULE_BF to schedule operations under resource
constraints using the more memory and processor fugal, sub-optimal
scheduling technique, see the file "listffheap.[hc]" or the
tech-report [2] for details.  This option requires no input.
.IP RND_RBN_SCHEDULE
Define RND_RBN_SCHEDULE to schedule operations under resource
constraints using the very processor fugal, sub-optimal round robin
scheduling technique, see "rrqueue.[hc]" or the tech-report [2] for
details.
.IP RANDOM_SCHEDULE
Define RANDOM_SCHEDULE to schedule operations under resource
constraints using the very processor fugal, sub-optimal random
selection scheduling technique, see "randheap.[hc]" or the tech-report
[2] for details.

.PP
The following options control intrinsic trace statistic gathering.

.IP OPCODE_STATS
Define OPCODE_STATS to gather instruction frequency distribution.  The
results are written to the file "opcode.Stats".
.IP ICLASS_STATS
Define ICLASS_STATS to gather instruction class (FUClasses in
paradefs.h) frequency statistics.  The results are written to the file
"iClass.Stats".
.IP CCLASS_STATS
Define CCLASS_STATS to gather instruction control class
(ControlClasses in paradefs.h) frequency statistics.  The results are
written to the file "cClass.Stats".
.IP DATA_STATS
Define DATA_STATS to gather an aggregate read/write,
text/data/heap/stack, and reg/mem reference frequency distribution.
The results are written to the file "data.Stats".
.IP LOOP_LENGTH_STATS
Define LOOP_LENGTH_STATS to gather loop iteration length statistics.
The resulting probability density function shows the fraction of loop
instances running for <n> iterations.  The results are written to the
file "loopLen.Stats".
.IP LOOP_DEPTH_STATS
Define LOOP_DEPTH_STATS to gather loop depth statistics.  The
resulting probability density function shows the number of loops
executed at each depth.  The results are written to the file
"loopDepth.Stats".
.IP LOOP_INST_STATS
Define LOOP_INST_STATS to show loop depth distribution probed at each
instruction executed (in other words, the amount of time spent at each
depth).  The results are written to the file "loopInst.Stats".
.IP CALL_DEPTH_STATS
Define CALL_DEPTH_STATS to gather call stack depth statistics.  The
resulting probability density function shows the number of calls
occurring at each depth.  The results are written to the file
"callDepth.Stats".
.IP CALL_INST_STATS
Define CALL_INST_STATS to show the number of procedure instances at
all possible call stack depths.  The results are written to the file
"callInst.Stats".
.IP FRAME_SIZE_STATS
Define FRAME_SIZE_STATS to show the distribution of frames by size.
The results are written to the file "frameSize.Stats".
.IP STACK_DEPTH_STATS
Define STACK_DEPTH_STATS to show the distribution of stack depth
measured after each instruction.  The results are written to the file
"stackDepth.Stats".
.IP MALLOC_SIZE_STATS
Define MALLOC_SIZE_STATS to gather the malloc size distribution.  The
results are written to the file "mallocSize.Stats".
.IP MALLOC_FREE_STATS
Define MALLOC_STATS to gather the number of malloc's and free's.  The
results are written to the file "mallocFree.Stats".

.PP
The following are miscellaneous options:

.IP NO_SEATBELTS
Define NO_SEATBELTS to remove all Safe-C spatial and temporal checks
this option is required if you are not compiling with ATT C++ V3.0+
(see README.safec for more details).
.IP NO_SPATIAL_CHECKS
Define NO_SPATIAL_CHECKS to turn off all Safe-C spatial error checking
(see README.safec for more details).
.IP NO_TEMPORAL_CHECKS
Define NO_TEMPORAL_CHECKS to turn off all Safe-C temporal error
checking (see README.safec for more details).
.IP NO_PREASSERT
Define NO_PREASSERT if you want all semi-critical pre-assertions
(preassert()) removed.
.IP NO_POSTASSERT
Define NO_POSTASSERT if you want all semi-critical post-assertions
(postassert()) removed, these are currently unused.
.IP NO_DEBUG
Define NO_DEBUG if you want all assertions (assert(), preassert(),
postassert()) removed.  NDEBUG is an alias for NO_DEBUG.  This option
is not recommended.
.IP INST_ANNOUNCE
Set INST_ANNOUNCE to the number of instructions between announcements.
Announcements indicate how many instructions have been analyzed as
well as a number of other statistics.
.IP VERBOSE_ANNOUNCEMENTS
Set VERBOSE_ANNOUNCEMENTS to see more statistics every INST_ANNOUNCE
instructions.
.IP CHECK_ADDRESSES
Set CHECK_ADDRESSES to turn on address validity checking.  In the
past, \fIQPT\fR has had some difficulty producing correct addresses
during regeneration due primarily to the complexity of the dynamic
slicing/address generation code it employs.  This test is on the
program's critical path, thus it is expensive.
.IP UNIT_LATENCY
Define UNIT_LATENCY to schedule all operations with unit latency
(1),otherwise the schedule will use the latencies in the opTable (see
machine.c).
.IP CHECK_SCHEDULER
Define CHECK_SCHEDULER if you would like a scheduler consistency
checker ran on the resource heap every INST_ANNOUNCE instructions.
.IP PRINT_PTRACE
Define PRINT_PTRACE to enable parallel trace printing.  Defining this
shows parallel instruction with jump/branch offsets, load/store
addresses are absolute, absolute instruction PC addresses, edge
connections, and speculation results if speculation is enabled.  This
is a very memory expensive option, so it is generally only useful on
small programs.  This option requires no input.  The parallel trace is
written to the file "pTrace.log".

.SH LINKING
\fItetra.a\fR is not directly executable.  It must be first linked to
a \fIQPT\fR generated regeneration file.  For example, if the file to
be analyzed is "foo", the following sequence is used to generate
"foo.tetra":
.EX
- edit "config.h" to the desired configuration
- do a "make" to create the appropriate "tetra.a"
- run QPT on "foo" using "qpt -t -o +19 foo", or
  "qpt -t -cd -o +19 foo" if control dependence
  scheduling is to be performed
- compile the QPT regeneration files ("foo_sma0*.c")
  using the command "utils/CClocal foo"
- link the regeneration files "foo_sma0*.c" to "tetra.a"
  using the command "utils/LDlocal foo"
- execute "foo.tetra", for example if the parameter
  file is named "foo.param", and the trace file named
  "foo.Trace", use the following command,
  "foo.tetra foo.param foo foo.Trace"
.EE
The trace file name "-" allows the tetra program to read
the trace from "stdin".

.SH SIGNALS
\fITetra\fR executables support asynchronous interfacing via the USR1
and USR2 signals.  Upon reception of signal USR1, the \fItetra\fR
executable will terminate early, rather than waiting for "maxInsts" or
end-of-trace to occur.  Upon reception of signal USR2, the the
\fItetra\fR executable will dump out intermediate statistics and
continue analysis.

USR1 and USR2 signals are sent to the process via the "kill" command.
From the command line execute:
.EX
kill -USR1 <tetra_pid>

or

kill -USR2 <tetra_pid>
.EE
Where "<tetra_pid>" is the process ID of the tetra process, obtained
via the command "ps".

.SH MODULES
.TP 20
README
Read this file first!
.TP 20
BLURB
What is \fITetra\fR?
.TP 20
README.safec
Rudimentary details on Safe-C.
.TP 20
MANIFEST
File descriptions.
.TP 20
COPYING
\fITetra\fR distribution/modification agreement.
.TP 20
THANKS
Acknowledgements.
.TP 20
TODO
Possible projects, optimizations, fixes.
.TP 20
ChangeLog
History of changes to \fITetra\fR.
.TP 20
Makefile
\fITetra\fR make file.
.TP 20
bitops.h
Bit manipulation routines
.TP 20
cdist.[hc]
Control distance computation routines.
.TP 20
config.h
\fITetra\fR configuration file.
.TP 20
config-check.h
\fITetra\fR configuration check expressions.
.TP 20
control.[hc]
Routines implementing control scheduling and branch speculation.
.TP 20
dist.[hc]
Generic frequency/probability distribution routines.
.TP 20
fixheap.[hc]
Fixed size heap manager.
.TP 20
globals.[hc]
Machine independent global variables.
.TP 20
listbfheap.[hc]
LIST-BF scheduler routines.
.TP 20
listffheap.[hc]
LIST-FF scheduler routines.
.TP 20
livewell.[hc]
Live well hash table routines.
.TP 20
machine-mips.[hc]
MIPS/Ultrix machine specific routines.
.TP 20
main.c
\fITetra\fR main line code.
.TP 20
newvers.sh
Auto-versioning shell script -- only needed for development.
.TP 20
paradefs.h
\fITetra\fR global type definitions.
.TP 20
paths.h
\fITetra\fR file names.
.TP 20
ptrace.[hc]
Parallel trace printing routines.
.TP 20
qpt-4.1.diffs
QPT version 4.1 control dependence computation diffs
.TP 20
qpt_events.h
\fIQPT\fR interface and signal definitions.
.TP 20
randheap.[hc]
RANDOM scheduler routines.
.TP 20
resource.[hc]
Scheduler independent resource constraint scheduling routines.
.TP 20
rhist.[hc]
HISTORY scheduling implementation.
.TP 20
rrqueue.[hc]
RND_RBN scheduler routines.
.TP 20
safec.[hc]
Generic Safe-C run time check package -- requires C++ compiler.
.TP 20
schedule.[hc]
\fITetra\fR scheduling core routines.
.TP 20
sys.h
Generic programming support defs and routines.
.TP 20
tetra.1
\fITetra\fR manual page.
.TP 20
tracer.[hc]
\fIQPT\fR interface code.
.TP 20
tstats.[hc]
Intrinsic trace analysis routines.
.TP 20
version
Current \fITetra\fR compile version.
.TP 20
version.c
Current \fITetra\fR compile version and date.
.TP 20
utils/CCcondor
Compile \fIQPT\fR files for condor execution.
.TP 20
utils/CClocal
Compile \fIQPT\fR files for local execution.
.TP 20
utils/DBXcondor
Debug a condor core dump.
.TP 20
utils/DBXlocal
Debug a local core dump.
.TP 20
utils/LDTrGen
Link a \fIQPT\fR trace generator.
.TP 20
utils/LDTrunc
Link a \fIQPT\fR trace truncator.
.TP 20
utils/LDValidate
Link a \fIQPT\fR trace validator.
.TP 20
utils/LDcondor
Link \fIQPT\fR files for condor -- (probably) C++ only.
.TP 20
utils/LDlocal
Link \fIQPT\fR files for local execution.
.TP 20
utils/_main.c
Condor C++ startup file.
.TP 20
utils/pcompact.c
\fITetra\fR profile compacter.
.TP 20
utils/prof2pdf.c
Profile to PDF utility.
.TP 20
utils/pdf2cdf.c
PDF to CDF utility.
.TP 20
utils/qpt_decode.c
Disassemble a \fITetra\fR trace stream -- MIPS only.
.TP 20
utils/qpt_events.h
\fIQPT\fR interface and signal definitions.
.TP 20
utils/qpt_trace.c
Trace redirection for \fIQPT\fR programs.
.TP 20
utils/qpt_trgen.c
Generate a \fIQPT\fR trace stream.
.TP 20
utils/qpt_trunc.c
Truncate a \fIQPT\fR execution at <n> instructions.
.TP 20
utils/qpt_validate.c
Check \fIQPT\fR generated address traces.
.TP 20
utils/Trace
Generate a \fIQPT\fR trace.

.SH "SEE ALSO"
qpt(1).  \fIQPT\fR is available from Jim Larus (larus@cs.wisc.edu).

[1] Todd M. Austin and Gurindar S. Sohi,
``Dynamic Dependency Analysis of Ordinary Programs'',
\fIConference Proceedings of the 19th Annual
International Symposium on Computer Architecture,\fP
pp. 342-351, May 1992.

[2] Todd M. Austin and Gurindar S. Sohi, ``Tetra: Evaluation of Serial
Program Performance on Fine-Grain Parallel Processors'', University of
Wisconsin Technical Report, 1993.

.SH CAVEATS
\fITetra\fR is not useful without \fIQPT\fR.  \fIQPT\fR is available
from Jim Larus (larus@cs.wisc.edu).

Control dependence scheduling requires "qpt-x.diffs" to be applied
to \fIQPT\fR (where "x" is the qpt version the patch expects).  This
is accomplished by unpacking the appropriate \fIQPT\fR distribution
into a directory named "qpt-x" (same as the diffs file), and then
executing the following command \fIabove\fR that directory:
.EX
patch < qpt-x.diffs
.EE
This should patch \fIQPT\fR to include a new option "-cd" which adds
control dependence information to the regeneration file.  When you
execute the patched version of \fIQPT\fR, the opening message will
include the string "+Tetra support".

.SH BUGS
Resource history buffer resets do not work unless "syscallsStall" is
enabled (non-zero).

\fITetra\fR is still not officially released, nor has it been fully
tested, please be wary.

.SH AUTHORS
Tetra was written by Todd Austin (austin@cs.wisc.edu), University of
Wisconsin-Madison.

The author of this work wishes to thank the following people for their
contributions to this work.

.IP
Guri Sohi, for his guidance and suggestions during the
implementation of our research.
.IP
Alain Kagi, for graciously offering to write the Fibonacci
heap implementation, simply because, as he puts it, "it
was an interesting thing to do", and for his invaluable input
to this research.
.IP
Jim Larus, the author of QPT, for first allowing us to use
his tracer, and also for the remarkably quick support he
offered us to the frequent questions and occasional bug.
.IP
Tom Ball, for his input to our research, and for his support
of QPT.
.IP
Dionisios Pnevmatikatos, Scott Breach, Alvy Lebeck, Babak Falsafi,
Steve Reinhardt, and Vikram Adve for their input to this work.

.SH COPYING
Copyright (c) 1993 by Todd Austin
.br
See the file COPYING for conditions for redistribution.
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    "int-ALU",
    {
      { IntALU, 1, 1 }
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    /* two read ports, one write port, enforced in IDecode() */
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "mem-port",
    {
      { DirRdPort, 1, 1 },	/* keep this here */
      { DirWrPort, 1, 1 },
      { JamRdPort, 1, 1 },
      { JamWrPort, 1, 1 },
      { RdPort, 1, 1 },
      { WrPort, 1, 1 },
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "FP-adder",
    {
      { FloatADD, 2, 1 },
      { FloatCMP, 2, 1 },
      { FloatCVT, 2, 1 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "int-multiplier/divider",
    {
      { IntMULT, 3, 1 },
      { IntDIV,  20, 19 }
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
  {
    "FP-multiplier/divider",
    {
      { FloatMULT,  4, 1 },
      { FloatDIV,  12, 12 },
      { FloatSQRT, 24, 24 },
    },
    0
  },
};
#endif /* BIG_CONFIG */

/* functional unit to resource descriptor mapping, this is constructed
   from the resource descriptors at initialization time, the first dimension
   of the array is indexed by the resource class of the instruction needing
   a resource, the second dimension is a '-1' terminated list of indexes
   into RESOURCES of resource that can handle this instruction, the resource
   descriptors in the list are ordered in the same order as they are
   soecified above */
long fuClassToRes[NUM_FU_CLASSES][N_ELT(resource)];
long fuClassToResOpLatency[NUM_FU_CLASSES][N_ELT(resource)];
long fuClassToResIssueLatency[NUM_FU_CLASSES][N_ELT(resource)];

void
DumpResourceTables(void)
{
  ulong i, j;

  fprintf(stderr, "fuClassToRes:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource) && fuClassToRes[i][j] != -1; j++) {
      fprintf(stderr, "%s ", resource[fuClassToRes[i][j]].name);
    }
    fprintf(stderr, "\n");
  }

  fprintf(stderr, "fuClassToResOpLatency:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource); j++) {
      if (fuClassToResOpLatency[i][j] != -1)
	fprintf(stderr, "%s:%d ",
		resource[j].name, (int)fuClassToResOpLatency[i][j]);
    }
    fprintf(stderr, "\n");
  }

  fprintf(stderr, "fuClassToResIssueLatency:\n");
  for (i=0; i<NUM_FU_CLASSES; i++) {
    fprintf(stderr, "\t%s:", fuClassDesc[i]);
    for (j=0; j<N_ELT(resource); j++) {
      if (fuClassToResIssueLatency[i][j] != -1)
	fprintf(stderr, "%s:%d ",
		resource[j].name, (int)fuClassToResIssueLatency[i][j]);
    }
    fprintf(stderr, "\n");
  }
}

void
InitFUMap(void)
{
  ulong i, j, k, index;

  /* init OUTTOFU map */
  for (i=0; i<RS_BIT_SIZE; i++)
    outToFU[i] = -1;

  /* initialize FUCLASSTORES */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    for (j=0; j<N_ELT(resource); j++) {
      fuClassToRes[i][j] = -1;
      fuClassToResOpLatency[i][j] = -1;
      fuClassToResIssueLatency[i][j] = -1;
    }
  }

  /* build FUClass -> usable resource table */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    index = 0;
    for (j=0; j<N_ELT(resource); j++) {
      for (k=0; k<NUM_FU_CLASSES; k++) {
	if (resource[j].x[k].fuClass != NA &&
	    resource[j].x[k].fuClass == i) {
	  /* this resource can service this class */
	  fuClassToRes[i][index++] = j;
	}
      }
    }
    if (i != NA && !index)
      fatal("there is no resource defined to execute FUClass `%s'",
	    fuClassDesc[i]);
  }

  /* build FUClass -> resource operation latency table */
  for (i=0; i<NUM_FU_CLASSES; i++) {
    for (j=0; j<N_ELT(resource); j++) {
      for (k=0; k<NUM_FU_CLASSES; k++) {
	if (resource[j].x[k].fuClass != NA &&
	    resource[j].x[k].fuClass == i) {
	  fuClassToResOpLatency[i][j] = resource[j].x[k].opLatency;
	  fuClassToResIssueLatency[i][j] = resource[j].x[k].issueLatency;
	}
      }
    }
  }
}


/** TLB/pre-translation resources **/

/* TLB parameters */
static ulong nTLB = 0;			/* total number of TLBs (0 - ignore) */
static ulong opLatTLB = 1;		/* operation latency */
static ulong issueLatTLB = 1;		/* issue latency (deg of pipelining) */

/* TLB/pre-translation state */
static long long *whenAvailable = NULL;	/* cycle when next issue possible */
static int valid[NUM_REGS];		/* pre-translation valid bits */

/* pre-translation stats */
long long invalidOverrun = 0;		/* invalidated with overrun */
long long invalidNoOverrun = 0;		/* not invalidated with overrun */
long long doubleValid = 0;		/* time saw two valid inputs */
long long directTLBAccess = 0;		/* TLB access elided */
long long elidedTLBAccess = 0;		/* TLB access elided */
long long TLBAccess = 0;		/* total TLB accesses */

void
InitTLB(void)
{
  int i;

  if (!nTLB) {
    info("TLB configuration: none");
    return;
  }

  for (i=0; i<NUM_REGS; i++)
    valid[i] = FALSE;
    
  if (!(whenAvailable = calloc(nTLB, sizeof(long long))))
    fatal("out of virtual memory");
  info("TLB configuration: nTLB=%lu, opLatTLB=%lu, issueLatTLB=%lu",
       nTLB, opLatTLB, issueLatTLB);
}

/* Compiler-Assisted Address Translation semantics:
     get a translation resource for the pointer in register REG or for a direct
     address if DIRECT is non-zero, needed at time WHEN, returns the latency of
     the operation */
static inline ulong
GetTLBLat(int direct, int reg, enum InstClass ic, long long when)
{
  int i, firstAvailable;
  long long earliestAvailable, whenDone, whenAvail;

  assert(when >= cycle);

  /* no latency impact if not doing xlations or instruction is not a ld/st */
  if (ic != MemRead && ic != MemWrite)
    return 0;

  TLBAccess++;

  if (!nTLB)
    return 0;

  /* direct translation resources are unlimited (one per pipe) */
  if (direct) {
    directTLBAccess++;
    return /* translation completed in the decode stage */0;
  }

  /* indirect access, base in register REG */

  /* is the pre-translation valid, can determine this by end of ID stage */
  if (elideTranslations && valid[reg]) {
    elidedTLBAccess++;
    return 0;
  }

  /* locate the first available TLB resource */
  for (i=0,firstAvailable=-1,earliestAvailable=0xffffffff; i < nTLB; i++) {
    if (whenAvailable[i] < earliestAvailable) {
      earliestAvailable = whenAvailable[i];
      firstAvailable = i;
    }
  }
  /* use TLB resource at index FIRSTAVAILABLE */
  if (firstAvailable < 0 || firstAvailable >= nTLB)
    panic("no TLBs");

  /* let's NOT do the time warp */
  whenAvail = max(when, whenAvailable[firstAvailable]);
  /* compute when the translated result may be used in a memory operation */
  whenDone = whenAvail + opLatTLB;
  /* compute when this resource can be used again */
  whenAvailable[firstAvailable] = whenAvail + issueLatTLB;

  assert(whenDone >= when);

  /* FIXME: should stop future accesses on this register */
  valid[reg] = TRUE;

  return whenDone-when;
}


/** branch target buffer **/

struct BTBEnt {
  ulong addr;			/* address of branch being tracked */
  uchar state;			/* 0, 1 -> not taken /// 2, 3, taken */
  ulong target;			/* last destination when taken */
};

static ulong btbSize = 1024;
#define BTBHASH(addr)					\
  ((((addr) >> 16) ^ (addr)) & (btbSize-1))

static struct BTBEnt *btbTable = NULL;

static void
DumpBTB(void)
{
  ulong i;

  fprintf(stderr, "@@@ BTB contents:\n");
  for (i=0; i<btbSize; i++)
    if (btbTable[i].addr)
      fprintf(stderr, "\t[%5d]  addr: 0x%08x  state: %3d %s  target: 0x%08x\n",
	      (int)i, (int)btbTable[i].addr, (int)btbTable[i].state,
	      (btbTable[i].state >= 2) ? "(taken)    " : "(not taken)",
	      (int)btbTable[i].target);
    else
      fprintf(stderr, "\t[%5d]  unused\n", (int)i);
  fprintf(stderr, "@@@ end of BTB contents\n");
}

static void
InitBTB(ulong size)
{
  if ((size & (size-1)) != 0)
    fatal("BTB size, `%d', must be a power of two", size);
  btbSize = size;
  if (!(btbTable = calloc(size, sizeof(struct BTBEnt))))
    fatal("cannot allocate BTB storage");
}

/* return TARGET if address is currently recorded as taken */
static ulong
BTBLookup(ulong addr)
{
  struct BTBEnt *p = &btbTable[BTBHASH(addr)];
  if (p->addr == addr)
    return (p->state >= 2) ? /* taken */ p->target : /* not taken */ addr + 8;

  /* no record of this address holding a control inst */
  return 0;
}

static void
BTBUpdate(ulong addr, int taken, ulong target)
{
  struct BTBEnt *p = &btbTable[BTBHASH(addr)];
  if (p->addr == addr) {
    /* update current information */
    if (taken) {
      if (p->state < 3)
	p->state++;
      p->target = target;
    }
    else { /* not taken */
      if (p->state > 0)
	p->state--;
      /* leave target alone */
    }      
  }
  else {
    /* enter a new branch in the table */
    p->addr = addr;
    p->state = (taken) ? 2 : 1;
    p->target = target;
  }
}  


/** 3-WRITEBACK **/
ulong N3;
struct SSInst *IR3;
ulong *PC3, *NPC3;
enum Opcode *OP3;
enum FUClass *FU3;
enum InstClass *IC3;
RegSet busy;

/** event queue definitions handler **/

struct WBEvent {
  struct WBEvent *next;		/* next write back event in the sorted list */
  long long	when;		/* time to schedule write back event */
  ulong		reg;		/* register to free */
};

struct WBEvent *evQueue;
struct WBEvent *freeList;

void DumpEventQueue(void)
{
  struct WBEvent *node;

  fprintf(stderr, "\tEvQueue: ");
  for (node=evQueue; node; node=node->next)
#if 0
    fprintf(stderr, "when: 0x%08x%08x reg:%d%c  ",
	    (int)LLHIGH(node->when), (int)LLLOW(node->when),
	    (int)node->reg, node->reg ? '+' : ' ');
#else
    fprintf(stderr, "when: %15.0f reg:%d%c  ",
	    (double)node->when,
	    (int)node->reg,
	    node->reg ? '+' : ' ');
#endif
  fprintf(stderr, "\n");
}

void
InitEventQueue(void)
{
  ulong i;
  struct WBEvent *node;

  for (i=0; i<MAX_STATE; i++) {
    if (!(node = calloc(1, sizeof(struct WBEvent))))
      error("could not allocate WB event record");
    node->next = freeList;
    freeList = node;
  }
}

void
ScheduleEvent(long long when, ulong reg)
{
  struct WBEvent *prev, *node, *new;

  assert(when >= cycle);

  if (when == cycle) {
    /* do this now */
    RSClearBit(busy, reg);
    outToFU[reg] = -1;
    return;
  }

  /* locate insertion point */
  for (prev=NULL, node=evQueue;
       node && node->when < when;
       prev=node, node=node->next);

  /* get a free event record, better be one */
  assert(freeList);
  new = freeList;
  freeList = freeList->next;

  if (prev) {
    /* insert middle or end */
    new->next = prev->next;
    prev->next = new;
  }
  else {
    /* insert beginning */
    new->next = evQueue;
    evQueue = new;
  }

  /* plug in event data */
  new->when = when;
  new->reg = reg;
}

void
SquashWriteBack(void)
{
  int i;

  N3 = 0;
  RSClear(busy);
  for (i=0; i<RS_BIT_SIZE; i++)
    outToFU[i] = -1;
}

void
InitWriteBack(void)
{
  if (!(IR3 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC3 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC3 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(OP3 = calloc(numIssue, sizeof(enum Opcode))))
    fatal("out of memory");
  if (!(FU3 = calloc(numIssue, sizeof(enum FUClass))))
    fatal("out of memory");
  if (!(IC3 = calloc(numIssue, sizeof(enum InstClass))))
    fatal("out of memory");
  SquashWriteBack();
}

void
WriteBack(void)
{
  ulong i;

  /* commit any writeback events */
  while (evQueue && evQueue->when <= cycle) {
    struct WBEvent *p;

    /* clear the register busy bits */
    RSClearBit(busy, evQueue->reg);
    outToFU[evQueue->reg] = -1;

    /* return the event record to the free list */
    p = evQueue;
    evQueue = evQueue->next;
    p->next = freeList;
    freeList = p;
  }

  /* free up resources */
  for (i=0; i<N_ELT(resource); i++) {
    if (resource[i].busy > 0)
      resource[i].busy--;
  }

  /* all instruction processed */
  N3 = 0;
}


/** 2-EXECUTE **/
ulong N2;
struct SSInst *IR2;
ulong *PC2, *NPC2;
enum Opcode *OP2;
enum FUClass *FU2;
enum InstClass *IC2;
int *res2;			/* index of the resource allocated for inst */
int *out1_2, *out2_2;		/* outputs for inst */

void
SquashExecute(void)
{
  N2 = 0;
}

void
InitExecute(void)
{
  if (!(IR2 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC2 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC2 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(OP2 = calloc(numIssue, sizeof(enum Opcode))))
    fatal("out of memory");
  if (!(FU2 = calloc(numIssue, sizeof(enum FUClass))))
    fatal("out of memory");
  if (!(IC2 = calloc(numIssue, sizeof(enum InstClass))))
    fatal("out of memory");
  if (!(res2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  if (!(out1_2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  if (!(out2_2 = calloc(numIssue, sizeof(int))))
    fatal("out of memory");
  SquashExecute();
}

#define SET_NPC(EXPR)		(nextPC = (EXPR))
#define CPC			(PC2[i])

#define GPR(N)			(R[N])
#define SET_GPR(N,EXPR)		(R[N] = (EXPR))


Article: 28329 of comp.text.tex
Path: news.doit.wisc.edu!saimiri.primate.wisc.edu!caen!math.ohio-state.edu!howland.reston.ans.net!vixen.cso.uiuc.edu!nntp-server.caltech.edu!hot.caltech.edu!bobby
From: bobby@hot.caltech.edu (Bobby Bodenheimer)
Newsgroups: comp.text.tex,fr.comp.text.tex,comp.answers,news.answers
Subject: TeX, LaTeX, etc.: Frequently Asked Questions with Answers [Monthly]
Supersedes: <tex-faq_784267264@hot.caltech.edu>
Followup-To: comp.text.tex
Date: 8 Nov 1994 04:03:17 GMT
Organization: California Institute of Technology, Pasadena, CA.
Lines: 1210
Approved: news-answers-request@MIT.Edu
Expires: 6 Jan 1995 04:03:12 GMT
Message-ID: <tex-faq_784267392@hot.caltech.edu>
Reply-To: bobby@hot.caltech.edu
NNTP-Posting-Host: hot.caltech.edu
Keywords: monthly faq
Originator: bobby@hot.caltech.edu
Xref: news.doit.wisc.edu comp.text.tex:28329 comp.answers:7441 news.answers:23103

Archive-name: tex-faq

Comp.text.tex is a forum for the discussion of TeX, LaTeX and other
related things. TeX is a software system written by Donald Knuth to
typeset text, especially text containing mathematics. LaTeX is a set
of macros written in TeX, designed to simplify the the typesetting of
a document by allowing the user to concentrate on the content and
structure of the document rather than the exact appearance of the
finished product. METAFONT, also discussed here, is a program which
allows the user to design their own fonts. The definitive reference
for TeX is _The TeXbook_, by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13447-0, paperback 0-201-13448-9). For LaTeX, see _LaTeX, a
Document Preparation System_ by Leslie Lamport (Addison Wesley, 1986,
ISBN 0-201-15790-X); the second edition of this book covers LaTeX2e.
Full documentation for LaTeX2e can be found in _The LaTeX Companion_
by Michael Goossens, Frank Mittelbach, and Alexander Samarin (Addison
Wesley, 1993, ISBN 0-201-54199-8). For METAFONT, see _The
METAFONTbook_ by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13445-4). The American Mathematical Society has two macro
packages which are also popular, called AMS-TeX and AMS-LaTeX.

This article contains answers to some frequently asked questions on
comp.text.tex. Please don't ask these questions again, as they've been
answered many times before.

Malencontreusement, je n'ai ni le temps ni la comp\'etence pour
traduire cet article en fran\c{c}ais. Je prie donc, le lecture
interess\'e par fr.comp.text.tex d'avoir l'indulgence d'accepter la
version anglaise.

This is version 1.48 for November, last changed 11/7/94.

This article includes answers to:

  1) How can I get a copy of this article?
  2) Where can I get a DVI to PostScript conversion program?
  3) How can I include a PostScript figure in LaTeX?
  4) Where can I find a DVI previewer for machine Y running Q?
  5) Where can I get the manual for PiCTeX?
  6) In LaTeX, I put some definitions in my document, but I get the error
     ``Use of \@ doesn't match its definition.'' What's wrong?
  7) What is OzTeX and where can I get it (TeX for the Mac)?
  8) What is Fig and where can I get it?
  9) How do I get WEB for C, FORTRAN, or some other language?
  10) How can I typeset music in TeX?
  11) What is TUG and TUGboat?
  12) How do I convert Adobe's afm files to tfm format?
  13) In LaTeX, how do I get a double-spaced document?
  14) In LaTeX, how do I include a file in the verbatim environment?
  15) In LaTeX, how do I do Y?
  16) Where can I find a TeX macro or LaTeX style file for doing Y?
  17) How do I generate an index in TeX/LaTeX?
  18) How do I get METAFONT to do what I want it to do?
  19) Where do I get TeX/LaTeX for machine Y running Q?
  20) Where can I get a thesis style for LaTeX?
  21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
      and so on?
  22) What repositories of TeX material are available, and how can I
      access them?
  23) How do I use PostScript fonts with LaTeX?
  24) How can I convert from format Y to TeX or LaTeX, and vice-versa?
  25) How do I get a file into the major style repositories?
  26) Where can I get font Y?
  27) Where can I get a dvi driver for the HP LaserJet?
  28) TeX and LaTeX are hyphenating words weirdly. What can I do?
  29) How can I convert a TeX or LaTeX file into a plain ASCII file,
      with all the formatting intact, a la nroff?
  30) How do I enlarge TeX? I keep getting ``memory capacity exceeded''
      errors.
  31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
      numbered. What do I do?
  32) Where do I find documentation about BibTeX?
  33) How do I use BibTeX with plain TeX?
  34) How do I draw Feynman diagrams in LaTeX?
  35) What is the New Font Selection Scheme (NFSS)?
  36) In LaTeX, my cross-references for floats (figures and tables) are
      incorrect. What's wrong?
  37) I want to change the margins in LaTeX. What can I do?
  38) How do I find the width of a letter, word, or phrase in TeX?
  39) In LaTeX, is there a comment or ``ignore'' environment with which
      I can exclude blocks of text from the .dvi file?
  40) Where can I find a spelling checker for my TeX file?
  41) What is LaTeX2e?
  42) In LaTeX, how can I define a new log-like function?
  43) In LaTeX, how do I put a \sqrt in my \caption statement?
  44) In LaTeX, how do I get thin and thick \hlines in a table?
  45) In LaTeX, how do I number the bibliography using Arabic numbers without
      square brackets or using superscripts?
  46) In LaTeX, why are my cites all numbered zero?
  47) In LaTeX, my figures get put on a page by themselves with too much
      whitespace, but when I tried \begin{figure}[t] they get printed at
      the end. Why?
  48) In LaTeX, how do I make a line break in a section title?
  49) In LaTeX, how do I number equations by section?

If you are looking, for instance, for the answer to question 17, and wish
to skip everything else, you can search ahead for the regular expression
``^17)''.

These are all legitimate questions, but they seem to appear too 
frequently for long-time readers of the list. 

Many of the answers below tell you that you can obtain something
through anonymous ftp. ``Ftp'' stands for file transfer protocol, and
is also the name of a program implementing the protocol. The program
allows users to transfer files to and from remote sites, if the sites
are connected via a network such as the Internet. ``Anonymous ftp'' 
indicates a user may connect to a remote site as the user 
``anonymous'' with a password consisting of their email address, and
thus be able to retrieve files from that site. Remember, anonymous
ftp is a privilege and the system administrators for these sites 
have made these files available out of their own generosity. Therefore
please restrict your ftp'ing to non-prime hours at the various sites.

I would like to acknowledge Don Hosek, Ken Yap, Tomas Rokicki, Micah
Beck, David Carlisle, and Donald Arseneau who provided many of the
answers.  Joe Weening, Hal Perkins, Walter Carlip, Max Hailpern, Tad
Guy, Raymond Chen, Henning Schulzrinne, Sebastian Rahtz, Mark James,
Peter Galko, Mike Ernst, Rainer Sch\"opf, Oren Patashnik, Philippe
Louarn, Rafal Zbikowski, Anita Marie Hoover, David Rhead, Darrell
McCauley, Cameron Smith, Emma Pease, Patrick McPhee, Karl Berry, Robin
Fairbairns, Joohee Jeong, Sam Steingold, J\"org Knappen, Barbara
Beeton, Norman Ramsay, and Richard Mathar provided additional material
and criticisms. The format of this document is based on the Frequently
Asked Questions written by Steve Hayman which formerly appeared in
comp.unix.wizards. Any mistakes are mine. Send corrections,
suggestions, and additions to bobby@hot.caltech.edu.

1) How can I get a copy of this article?

   You're reading it aren't you? SAVE it :-). This article is posted
   monthly to comp.text.tex and cross-posted to news.answers. It is
   therefore archived at any site that archives news.answers.
   News.answers is archived on rtfm.mit.edu, and this article is
   available there via anonymous ftp in the directory
   ./pub/usenet/news.answers/tex-faq. If you do not have anonymous
   ftp, send an e-mail message containing the lines ``SENDME FAQ.'' to
   fileserv@shsu.edu (fileserv@shsu.bitnet).  Another way to retrieve
   it via email is through the mailserver at rtfm: send a message
   containing the lines ``help'' and ``index'' to
   mail-server@rtfm.mit.edu for information on how to obtain it.
 
   Other news.answers/FAQ archives are: cnam.cnam.fr (163.173.128.6)
   in the anonymous ftp directory /pub/FAQ; ftp.uu.net (192.48.96.2)
   in the anonymous ftp directory /pub/usenet (also available via mail
   server requests to netlib@uunet.uu.net, or via uunet's 1-900
   anonymous UUCP phone number); and ftp.cs.ruu.nl (131.211.80.17) in
   the anonymous ftp directory NEWS.ANSWERS (also accessible via mail
   server requests to mail-server@cs.ruu.nl). Many of the archives
   mentioned in question 22 also maintain current versions of this
   document.

2) Where can I get a DVI to PostScript conversion program?

   Two good DVI to PostScript conversion programs that run under
   Unix are:
     dvips - by Tomas Rokicki. This driver is very nice and has the
       ability to deal with virtual fonts. Available via anonymous ftp
       from labrea.stanford.edu (36.8.0.112) in ./pub. Dvips is
       written in C and ports easily to other operating systems.  It
       is available for VMS via anonymous ftp from any CTAN site (see
       question 22) and also through the DECUS library (see question
       22). A precompiled version for MSDOS is available from
       monu1.cc.monash.edu.au (130.194.1.101) in ./pub/dvips54.zip,
       from shape.mps.ohio-state.edu (128.146.110.30) in
       ./pub/msdos/dvips/dvips54.zip, or from any CTAN site (see
       question 22) in ./systems/msdos/drivers/dvips.  If you wish to
       use postscript fonts, get dvipslib.zip as well.  Documentation
       is available in dvips.ps.Z. Karl Berry has a version of dvips
       called dvipsk which has a configure script and path searching
       code similar to that in his other programs (e.g., web2c).  It
       is available via anonymous ftp from ftp.cs.umb.edu
       (158.121.104.33) in ./pub/tex/.

     dvitops - by James Clark. Available via anonymous ftp from any CTAN site
       (see question 22, e.g., pip.shsu.edu (192.92.115.10)), in 
       ./tex-archive/dviware/dvitops. Dvitops is written in C and will 
       compile under Unix, MSDOS, VMS, and Primos.

3) How can I include a PostScript figure in LaTeX?

   In LaTeX2e, the best way is \usepackage[dvips]{graphics}.

   Perhaps the best way to do this is to use the psfig macros written
   by Trevor Darrell. They are available via anonymous ftp from
   any CTAN site (see question 22) in graphics/psfig. You will
   also need a dvi to PostScript conversion program that supports
   \specials. The ones mentioned in question 2 do, and come with a
   version of psfig ready to use with them. The psfig macros work best
   with Encapsulated PostScript Files (EPS). In particular, psfig will
   need the file to have a BoundingBox (see Appendix C of the
   _PostScript Language Reference Manual_). If you don't have an EPS
   file, life can be difficult.

   To allow resizing by dvips (see question 2) with PostScript files
   that are not EPS files, add the one line comment
   %%BoundingBox: llx lly urx ury" 
   prior to any non-comment line in the PostScript file. The four
   ``lower left'' and ``upper right'' arguments must be numbers to
   indicate the lower left and upper right corner in units of 1/72 of
   an inch. Otherwise, dvips assumes the PostScript file fills a whole
   page.

   One further note about including PostScript figures is that they
   are not part of the dvi file, but are included when you use a dvi
   to PostScript conversion program. As a result, most dvi previewers
   will simply show the blank space TeX has reserved for your figure,
   not the figure itself. LaTeX2e (see question 41) will have a standard
   interface for graphics inclusion, rotation, color, and other 
   driver-related features.

   Anil K. Goel has written a long document describing in detail how to
   include figures, pictures, and images in LaTeX documents. It is available
   via anonymous ftp from math.uwaterloo.ca (129.97.140.144) in
   ./pub/figsInLatex.ps.Z. A dvi file with the included PostScript files
   is also available.

4) Where can I find a DVI previewer for machine Y running Q?

   This briefly lists some previewers available via anonymous ftp. All
   are available from any CTAN site (see question 22) in addition to the
   sites listed below:
      dvipage - For SunView. This was published in volume 15 of 
        comp.sources.unix and is available at sites that archive
        this. One such source is archive.cis.ohio-state.edu 
        (128.146.8.52).
      xtex - For the X Window System. Available via anonymous ftp 
        from ftp.cs.colorado.edu (128.138.243.151) in 
        ./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z.
      dviapollo- for Apollo Domain. Available via anonymous ftp from
        labrea.stanford.edu (36.8.0.112) in ./pub/dviapollo.tar.Z.
      dvidis - For VAXstation VWS. Available via anonymous ftp from
        src.doc.ic.ac.uk (146.169.2.1) in /packages/tex/dviware/dvidis.
      xdvi - Also for the X Window System. Available via anonymous ftp
        from ftp.x.org (192.112.44.100) in ./contrib/xdvi.tar.Z. Karl
        Berry has a version of called xdvik with features analogous
        to his dvipsk (see question 2) available via anonymous ftp from
        ftp.cs.umb.edu (158.121.104.33) in ./pub/tex.
      dvitovdu - for Tektronix 4010 and other terminals under Unix.
        Available via anonymous ftp from wsmr-simtel20.army.mil
        (192.88.110.20) in the directory pd6:<unix-c.printers> as
        dvi2vdu.tar-z (ftp in ``tenex'' mode).
      dvi2tty - A dvi to ASCII conversion program, for normal terminals.
        Available from ftp.cs.ruu.nl (131.211.80.17) in 
        ./pub/TEX/DVI/dvi2tty.shar. A VMS version is available from
        fileserv@shsu.edu (see question 22).
      texsgi - For SGI under Irix. Available via anonymous ftp from 
        ftp.brl.mil (128.63.16.158) in ./info-iris/tex. Both a binary 
        and source are available, but be sure to get the fonts as well.
   
5) Where can I get the manual for PiCTeX?

   The PiCTeX manual is not free. It is available for $30 ($35 with the
   disk) from the TeX Users Group:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

   The proceeds from this sale go to Michael Wichura, the author of PiCTeX,
   and TUG.

6) In LaTeX, I put some definitions in my document, but I get the error
   ``Use of \@ doesn't match its definition.'' What's wrong?

   Definitions should be be in a style file, and if you move them there,
   you should have no problem.

   If you don't want to do that, you need to include \makeatletter
   before the definitions to allow the ``internal'' LaTeX commands to
   be accessed.  These commands are normally protected from change by
   having @ in them.  Since @ is not a letter, it is normally not
   allowed as part of a multi-letter command name. To access internal
   commands you need to tell LaTeX to pretend that @ is a letter.
   This happens automatically when LaTeX reads a style file, but in
   your main document you need to surround the offending commands with
   \makeatletter ... \makeatother.

7) What is OzTeX and where can I get it (TeX for the Mac)?

   OzTeX is a public domain version of TeX for the Macintosh. A DVI
   Previewer and PostScript driver are also included. It should run on
   any Macintosh Plus, SE, II, or newer model, but will not work on a
   128K or 512K Mac. It was written by Andrew Trevorrow, and is available 
   via anonymous ftp from from midway.uchicago.edu (128.135.12.73) in 
   ./pub/OzTeX, which contains other public domain TeX-related software 
   for the Mac as well, or on a floppy disk from TUG (see question 11). 
   Questions about OzTeX may be directed to oztex@midway.uchicago.edu.
   
8) What is Fig and where can I get it?

   Fig is a menu driven tool similar to MacDraw that allows you to
   draw objects on the screen of a Sun Workstation running SunView.
   TransFig is a set of tools which translate the code fig produces to
   other graphics languages including PostScript and the LaTeX picture
   environment. Both are available via anonymous ftp from
   ftp.cs.cornell.edu (128.84.218.75) in ./pub/fig. Both Fig and
   TransFig are also available from the Clarkson archive server at
   sun.soe.clarkson.edu (see question 22). Fig is supported by Micah
   Beck (beck@cs.cornell.edu) and Transfig is maintained by Brian
   Smith (bvsmith@lbl.gov). Another tool for fig conversion is fig2MF
   which generates METAFONT code from fig input. It is available from
   the CTAN archives discussed in question 22.

   XFig is essentially the same program except it runs under the X
   Window System. It is available via anonymous ftp from ftp.x.org
   (192.112.44.100) in ./contrib/applications/drawing_tools/xfig. It
   was written by Brian Smith.

9) How do I get WEB for C, FORTRAN, or some other language?

   TeX is written in the programming language WEB; WEB is a tool to
   implement the concept of ``literate programming.'' For more information
   on literate programming, see the newsgroup comp.programming.literate.

   There is a version of WEB for C called CWEB written by Silvio Levy. It
   is available via anonymous ftp from princeton.edu (128.112.128.1) in 
   the directory ./pub/cweb.

   There is a version of WEB called Spidery WEB which supports many 
   languages including ADA, awk, and C. It was written by Norman Ramsey 
   and, while not in the public domain, is usable free. It is available 
   via anonymous ftp from pip.shsu.edu (192.92.115.10) in 
   tex-archive/web/spiderweb.

   FWEB is a version of WEB for Fortran, Ratfor, and C written by John
   Krommes (krommes@lyman.pppl.gov). Version 1.13 is available via
   anonymous ftp from lyman.pppl.gov (192.55.106.129) in ./pub/fweb.

   SchemeWEB is a Unix filter that translates SchemeWEB into LaTeX source
   or Scheme source. It was written by John Ramsdell and is available from
   sun.soe.clarkson.edu (128.153.12.3) in ./pub/tex/tex-programs/schemeweb.

   APLWEB is a version of WEB for APL and is available from
   watserv1.waterloo.edu (129.97.129.140) in ./languages/apl.

   There are three flavors of WEB that are language-independent and
   have substantial user communities: funnelweb, noweb, and nuweb.
   NoWeb and NuWeb both emphasize simplicity; NoWeb is a bit simpler
   and more flexible, but NuWeb is more portable and easier to
   install.  FunnelWeb is more complex, but is routinely used on a
   wide variety of machines.  All three systems are available from any
   CTAN site (see question 22) in directory
   /tex-archive/web/{funnelweb,noweb,nuweb}.  An introduction to NoWeb
   appeared in the September 1994 IEEE Software, page 97.  Funnelweb
   also appeared in comp.sources.unix volume 26 issue 121, posted 11
   April 1993.

   Most of the above are also available from your nearest CTAN site
   (see question 22).

10) How can I typeset music in TeX?

    A package called MuTeX, written by Andrea Steinbach and Angelika
    Schofer, aids in doing this. It is available via anonymous ftp
    from ftp.cs.ruu.nl (131.211.80.17) in pub/TEX/MuTeX.tar.Z.  This
    package allows you to typeset single-staff music and lyrics.

    A more powerful package which allows the typesetting of orchestral
    and polyphonic music is MusicTeX, written by Daniel Taupin 
    (taupin@frups51.bitnet). It is available via anonymous ftp from
    rsovax.ups.circe.fr (130.84.128.100) [.musictex]. It should also
    be available from the archive sites detailed in question 22.

    There is a mailing list for discussion of typesetting music in TeX.
    To subscribe, send a request to mutex-request@stolaf.edu.

11) What is TUG and TUGboat?

    TUG is the TeX Users Group. TUGboat is their newsletter, containing
    useful articles about TeX and METAFONT. TUG also distributes
    TeX-related microcomputer software on disks. Inquiries should be 
    directed to:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

12) How do I convert Adobe's afm files to tfm format?

    An afm2tfm program is distributed with dvips, available via
    anonymous ftp from labrea.stanford.edu (36.8.0.112) in ./pub. Alan
    Jeffrey's fontinst package is an afm2tfm converter written in TeX 
    and will be used to support the PostScript tfm files for LaTeX2e
    (see question 41). It is available from any CTAN site (see question
    22).

    For the Macintosh, there is a program called EdMetrics which does
    the job (and more). It is available free from:
              Blue Sky Research
              534 Southwest Third Avenue
              Portland, Oregon 97204 (USA)
              800-622-8398 or 503-222-9571

13) In LaTeX, how do I get a double-spaced document?

    Are you producing a thesis, and trying to obey regulations that were
    drafted in the typewriter era?  LaTeX is a typesetting system, so the
    appropriate design conventions are for ``real books''.  Find whoever
    is responsible for the regulations, and try to get the wording changed
    to cater for typeset theses (e.g., to say ``if using a typesetting 
    system, aim to make your thesis look like a well-designed book'').

    If you fail to convince your officials, or want some inter-line 
    space for copy-editing:
     - In LaTeX2e, use \linespread. For double-spaced output, use
       \linespread{1.6}.
     - Try changing \baselinestretch: \renewcommand{\baselinestretch}{1.2}
       may be enough to give officials the impression you've kept
       to their regulations.  Don't try changing \baselineskip: its
       value is reset at any size-changing command.
     - Alternatively, get doublespace.sty from any CTAN site (see question 22,
       e.g., pip.shsu.edu (192.92.115.10)) in 
       ./tex-archive/macros/latex/contrib/misc. There's also a setspace.sty
       in the same directory which is more flexible, and consistent with the
       latest release of LaTeX.

    It's not worth going to a lot of trouble.  (If officials won't allow
    standard typographic conventions, you won't be able to produce an
    aesthetically pleasing document anyway!)

14) In LaTeX, how do I include a file in the verbatim environment?

    A good way to do this is to use Rainer Sch\"opf's verbatim.sty,
    which provides the command \verbatiminput that takes a file
    as an argument. This package is available from any CTAN site (see 
    question 22) in ./tex-archive/macros/latex/distribs. Several
    files are needed.

    Another way to do this is to use the alltt environment defined in
    the style file alltt.sty available from the CTAN archives in 
    ./tex-archive/macros/latex/contrib/misc/alltt.sty.

15) In LaTeX, how do I do Y?

    If you can't figure out how to do something in LaTeX after you
    have read the manual very carefully, asked your local LaTeX
    guru, and thought about it, there is a LaTeX help service 
    available. Please note that the way to accomplish something 
    in LaTeX is often by using an appropriate style file, so please
    check this also (see question 16). If none of this works, send mail 
    in English describing your problem to latex-help@cs.stanford.edu. 
    If you haven't gotten a reply to your problem within about a week, 
    send mail to latex-help-coordinator@cs.stanford.edu.

16) Where can I find a TeX macro or LaTeX style file for doing Y?

    Before you ask for a TeX macro or LaTeX style file to do something, 
    please search the TeX macro index written by David M. Jones
    (dmjones@theory.lcs.mit.edu) and available via anonymous ftp
    from theory.lcs.mit.edu (18.52.0.92) in ./pub/tex/TeX-index. Those 
    without access to anonymous ftp can send a message containing the
    line ``send tex TeX-index'' to archive-server@theory.lcs.mit.edu.
    The index is an excellent reference document with plenty of 
    cross-references. Also, many of the archive sites mentioned in
    question 22 maintain extensive latex style collections, which you
    can look through if you need something not in the index.

    Another possibility is to use the searching features of the CTAN
    archives (see question 22). Once you have an anonymous ftp connection
    established to a CTAN site, you can type the command `quote site index
    <term>' and it will provide a list of files with the string <term> in
    their names.
    
17) How do I generate an index in TeX/LaTeX?

    Making an index is not trivial. There are several indexing programs
    which aid in doing this. The following are available from any CTAN
    site (see question 22):
      makeindex - for LaTeX under Unix (but runs under other OS's
         without changes). A version for the Macintosh is available from
         Johnny Tolliver at tolliver%atf.mfenet@nmfecc.llnl.gov. The 
         Makeindex documentation is a good source of information on how 
         to create your own index. Makeindex can be used with some TeX macro
         packages other than LaTeX, such as Eplain.
      idxtex - for LaTeX under VMS.
      texix - for TeX on CMS and Macintosh machines.
      texindex - for LaTeX under Unix. Available from
         comp.sources.misc archives in Volume 23.

18) How do I get METAFONT to do what I want it to do?

    METAFONT allows you to create your own fonts, and ordinary TeX users
    will never need to use it. METAFONT, unlike TeX, requires some 
    customization. Each output device for which you will be generating 
    fonts needs a mode associated with it. Modes are defined using the 
    mode_def convention described on page 94 of _The METAFONTbook_. So 
    first create a file, which we will call local.mf, containing all the 
    mode_defs you will be using. The file modes.mf by Karl Berry,
    available via anonymous ftp from ftp.cs.umb.edu (158.121.104.33) in
    ./pub/tex is a good starting point for this. Listings of settings for 
    various output devices are also published periodically in TUGboat 
    (see question 11). Now create a plain base file using inimf, plain.mf, 
    and local.mf:
       % inimf
       This is METAFONT....
       **plain                 # you type plain
       (output)
       *input local            # you type this
       (output)
       *dump                   # you type this
       Beginning to dump on file plain....
       (output)
       %
    This should create a base file named plain.base (or something close)
    and should be moved to the directory containing the base files on
    your system.
 
    Now you need to make sure METAFONT loads this base when it starts
    up. If METAFONT loads the plain base by default on your system, then
    you're ready to go. Under Unix, we might, for instance define a 
    command mf which executes ``virmf &plain,'' loading the plain base
    file.
 
    The usual way to create a font with plain METAFONT is to then start 
    it with the line
       \mode=<mode name>; mag=<magnification>; input <font file name>
    in response to the * prompt or on the METAFONT command line. If 
    <mode name> is unknown or omitted, then the mode defaults to proof 
    mode. If this has happened METAFONT will produce an output file
    called <font file name>.2602gf. The <magnification> is a floating 
    point number or magstep (magsteps are defined in _The METAFONTbook_ 
    and _The TeXbook_). If mag=<magnification> is omitted, then the 
    default is 1. For example, to generate cmr10 at 12pt for an epson 
    printer you would type
       mf \mode=epson; mag=1.2; input cmr10
    Note that under Unix the '\' and ';' characters must usually be 
    escaped, so this would typically look something like
       mf \\mode=epson\; mag=1.2\; input cmr10
 
    If you don't have inimf or need a special mode that isn't in the
    base, you can put its commands in a file (e.g., ln03.mf) and invoke
    it on the fly with the \smode command. For example, to create 
    ln03.300gf for an LN03 printer, using the file
	% This is ln03.mf as of 2/27/90
	% mode_def courtesy of John Sauter
	proofing:=0;
	fontmaking:=1;
	tracingtitles:=0;
	pixels_per_inch:=300;
	blacker:=0.65;
	fillin:=-0.1;
	o_correction:=.5;
    (note the absence of the mode_def and enddef commands), you would type
       mf \smode="ln03"; input cmr10
    
19) Where do I get TeX/LaTeX for machine Y running Q?

    Unix - The Unix TeX distribution is available via anonymous ftp from any 
       CTAN archive (see question 22). The Northwest Computing Support Center
       was ordered closed by the University of Washington, thus Unix TeX
       can no longer be ordered.

       Instructions for retrieving TeX via anonymous ftp are available
       in the document FTP.nwc, itself available via anonymous ftp from
       ftp.cs.umb.edu (158.21.104.33) in ./pub/tex.

       Note: The Unix version of TeX allows your ``macros'' or ``inputs''
       and ``fonts'' directories to be hierarchically organized with
       further subdirectories, rather than dumping everything into one
       directory. This can cause TeX to start very slowly. The cure
       for this problem is to insure each subdirectory contains either
       only directories or only files.

    AIX - TeX for the IBM RS6000 running AIX can be found on
       ftp.dante.de (129.206.100.192) in ./tex-archive/systems/unix/aix3.2.

    386/ix - Executables for the 386/ix are available via anonymous ftp 
       from tik.vtt.fi (130.188.52.2) in ./pub/tex/bin-386ix and from 
       math.berkeley.edu (128.32.183.94) in ./pub/tex386ix.tar.Z.

    PC - A TeX package for the PC, including LaTeX, BibTeX, previewers,
       and drivers is available via anonymous ftp from 
       vax.eedsp.gatech.edu (130.207.226.24) in ./pub/TeX. The variety here
       is sbtex version 30 by Wayne Sullivan. EmTeX, another TeX package 
       for the PC by Eberhard Mattes, is available via anonymous ftp from 
       ftp.dante.de (129.206.100.192) in 
       ./tex-archive/systems/msdos/emtex and also from niord.shsu.edu
       (192.92.115.8) in [.emtex]. This package includes LaTeX, METAFONT,
       BibTeX, etc., as well. Documentation is available in both German 
       and English.

    Mac - see question 7 for a public domain version (OzTeX). Another version
       is CMacTeX, which has TeX 3.14, METAFONT 2.7, a screen previewer,
       dvips, a PostScript printing utility for the LaserWriter, and some font
       managing utilities. It is available from the CTAN archives discussed
       in question 22. 

    TOPS-20 - TeX was originally written on a DEC-10 under WAITS, and so
       was easily ported to TOPS-20. A Distribution that runs on TOPS-20 
       is available via anonymous ftp from ftp.math.utah.edu 
       (128.110.198.34) in ./pub/tex/pub/web.

    VAX/VMS - TeX for VMS is available from any CTAN site (see question 22)
       in the directory ./systems/vms. Standard tape distribution is 
       through DECUS.

    Atari - TeX is available for the Atari ST from atari.archive.umich.edu
       (141.211.165.41) in ./atari/tex. If anonymous ftp is not available
       to you, send a message containing the line ``help'' to
       atari@atari.archive.umich.edu. The mail server can uuencode
       binary files. Another version can be obtained via anonymous
       ftp from ifi.informatik.uni-stuttgart.de (129.69.211.1) in
       ./pub/atari.st/tex. There is also lots of TeX stuff for the
       Atari on the CTAN and ftp.cs.ruu.nl archives mentioned in
       question 22.

    Amiga - A full implementation of TeX 3.1 call PasTeX and METAFONT 2.7
        are available via anonymous ftp from merlin.etsu.edu (192.43.199.20)
        in ./ab20/AMIGA. It is also available via anonymous ftp from
        forwiss.uni-passau.de (132.231.20.10) in ./pub/amiga/tex. 
        You can also order a CDROM containing this and other amiga software
        from Walnut Creek CDROM, (510) 947-5997.

    Tandy 6000 - If you are interested in building TeX on this machine
        contact Ken Yap (ken@syd.dit.csiro.au), and he'll help you.

20) Where can I get a thesis style for LaTeX?

    Thesis styles are usually very specific to your University, so it's
    usually not profitable to ask the whole newsgroup for one. If you
    want to write your own, a good place to start is the ucthesis style
    available from any CTAN archive in macros/latex/contrib/ucthesis
    (see question 22).

21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
    and so on?

    These symbols are known as ``blackboard bold'' and are available in
    the AMS fonts ``msam'' (e.g., ``msam10'' for 10pt) and ``msbm''. 
    They replace the older ``msxm'' and ``msym''. The fonts have a large
    number of mathematical symbols to supplement the ones 
    provided by TeX. The fonts are available via anonymous ftp from
    e-math.ams.com (130.44.1.100) in the directory ./ams/amsfonts.
    Two files which load the fonts and define the symbols are provided,
    and both work with either TeX or LaTeX. Questions or suggestions 
    regarding these fonts should be directed to 
    tech-support@math.ams.com.

    A geometric sans serif blackboard bold font by Alan Jeffrey is available
    from any CTAN archive (see question 22) in ./tex-archive/fonts/bbold.

    A set of LaTeX macros for a ``lazy person's'' blackboard bold are:
       \newcommand{\R}{{\sf R\hspace*{-0.9ex}\rule{0.15ex}%
       {1.5ex}\hspace*{0.9ex}}}
       \newcommand{\N}{{\sf N\hspace*{-1.0ex}\rule{0.15ex}%
       {1.3ex}\hspace*{1.0ex}}}
       \newcommand{\Q}{{\sf Q\hspace*{-1.1ex}\rule{0.15ex}%
       {1.5ex}\hspace*{1.1ex}}}
       \newcommand{\C}{{\sf C\hspace*{-0.9ex}\rule{0.15ex}%
       {1.3ex}\hspace*{0.9ex}}}

22) What repositories of TeX material are available, and how can I access
    them?
 
    To aid the archiving and retrieval of of TeX-related files, a TUG
    working group developed the Comprehensive TeX Archive Network
    (CTAN).  Each CTAN site has identical material, and maintains
    authoritative versions of its material.  These collections are
    extensive; in particular, almost everything mentioned in this
    document is archived at the CTAN sites, even if not explicitly
    stated.

    The CTAN sites are currently ftp.dante.de (129.206.100.192)
    ftp.tex.ac.uk (134.151.44.19), and pip.shsu.edu (192.92.115.10). 
    The organization of TeX files on all these sites is identical and
    starts at ./tex-archive. To reduce network load, please use the
    CTAN site or mirror closest to you. A complete and current list
    of CTAN sites and mirrors can be obtained by using the finger
    utility to finger ctan_us@ftp.SHSU.edu.

    To find software at a CTAN site, use anonymous ftp to the host,
    and then execute the command `quote site index <search-term>'.

    The mail servers of the CTAN sites are not yet identical, but this is
    planned. Here are the current methods of access via electronic mail:
      - For the UK site, send a message to texserver@tex.ac.uk. The
        first non-blank line of the message must contain a valid
        TeXserver command (help, directory, files, whereis, search,
        or path). The program will then mail you a response notifying
        you that your request has been received. If you fail to get a
        response from the TeXserver, you may need to use the ``path''
        command to help the program out. For Internet users the
        return address is of the form name%site@nsfnet-relay, while
        for Bitnet and EARN it is name%site@earn-relay (i.e., include
        a line that says ``path name%site@nsfnet-relay'' along with a
        line containing ``help''). 
      - For ftp.dante.de, send a message containing the line
        ``help'' to mail-server@ftp.dante.de.
      - For the SHSU site, send a message with the line "help" to
        ftpmail@ftp.shsu.edu. This provides an ftp-like interface
        through mail.

    There are several other repositories of TeX material available:
      - ftp.cs.ruu.nl (131.211.80.17) also contains a substantial TeX
        archive with ftp access. To use it via email, send a message
        containing the line ``help'' to mail-server@cs.ruu.nl. This mail 
        server can send binary files in a variety of different formats.
      - There are LISTSERV facilities for TeX at LISTSERV@DHDURZ1.BITNET. 
        Send a message containing the line ``help'' to this address.
      - For users on BITNET, access to anonymous ftp for some files can
        be obtained indirectly by sending mail to BITFTP@PUCC.BITNET.
        Send a message containing the line ``help'' to this address for
        more information.
     
    There is also the DECUS TeX collection, a collection of TeX material
    for VMS, Unix, MS-DOS, and the Macintosh. It is available via 
    anonymous ftp from wuarchive.wustl.edu (128.252.135.4) in ./decus/tex.
    It can also be obtained from the DECUS Library (reference number 
    VS0058) in the US, or through your DECUS office outside of the US. To 
    contact the DECUS Library, send mail or call:
                 The DECUS Program Library
                 334 South Street SHR3-1/T25
                 Shrewsbury, MA 01545-4195
                 (800)332-3755
    The last update to this collection was in February 1991, so it is old.
     
    Another good source of information is NETWORK SOURCES OF TeX WARE by
    Peter Flynn which appeared in TeXhax, volume 90, issues 45-47 (in
    May 1990).      

23) How do I use PostScript fonts with LaTeX?

    The best way to do this is to install LaTeX2e (see question 41)
    and use the PSNFSS2e package written by Sebastian Rahtz. It is
    available from all the major archives mentioned in question
    22. Other methods for using PostScript fonts in LaTeX are
    cumbersome at best.

24) How can I convert from format Y to TeX or LaTeX, and vice-versa?

    troff - TROFF-TO-LATEX.TAR-Z is available via anonymous ftp from
      wsmr-simtel20.army.mil (192.88.110.20) in the directory 
      pd2:<unix-c.textproc>. This program, written by Kamal Al-Yahya 
      at Stanford, assists in the translation of a troff document into 
      LaTeX format.  It recognizes most -ms and -man macros, plus most 
      eqn and some tbl preprocessor commands. Anything fancier needs 
      to be done by hand.  Two style files are provided.  There 
      is also a man page (which converts very well to LaTeX :-).  
      The program is copyrighted but free. An enhanced version of this
      program, tr2latex, is available from 
      ftp.informatik.rwth-aachen.de (137.226.112.172) in ./pub/TeX. 
      The DECUS TeX distribution (see question 22) also contains a program
      which converts troff to TeX. If you are interested in obtaining a copy
      of this program without getting the entire DECUS TeX distribution, 
      send the command: SENDME TROFFTOTEX in the body of a mail message to
      FILESERV@SHSU.BITNET (FILESERV@SHSU.edu), or use anonymous ftp to the
      directory [.TROFFTOTEX] on Niord.SHSU.edu (192.92.115.8). 

    scribe - Mark James has a copy of scribe2latex he has been
      unable to test but which he will let anyone interested have.
      Send email to jamesm@procor.dialogic.com. The program was written
      by Van Jacobson of Lawrence Berkeley Laboratory.

    wordperfect -  wp2latex.zip is available on wuarchive.wustl.edu
      (128.252.135.4) in the directory ./mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in the directory pd1:<msdos.tex>.
      This is a PC program written in Turbo Pascal by R. C. Houtepen at
      the Eindhoven University in the Netherlands.  It converts
      WordPerfect 5.0 documents to LaTeX.  Pascal source is included.
      Users find it ``helpful'' and ``decent'' in spite of some
      limitations. It gets high marks for handling font changes.
      Limitations include no indices, table of contents, margins or
      graphics.  It also won't handle the new features of WordPerfect
      5.1, in particular the equation formatter. The program is
      copyrighted but free.

      Glenn Geers of the University of Sydney (glenn@qed.physics.su.oz.au)
      is translating wp2latex into C and adding some WordPerfect 5.1
      features, in particular its equation handling.  This is an ongoing
      project; the most recent version can be retrieved via anonymous ftp
      from suphys.physics.su.oz.au (129.78.129.1) in ./wp2latex. It was 
      posted to alt.sources on 8 August 1990.

      Commercial packages are available for DOS which convert from
      WordPerfect to LaTeX, and from TeX and LaTeX to WordPerfect, but
      I am unaware of any free products which do this.

    PC-Write - pcwritex.arc is available on wuarchive.wustl.edu
      (128.252.135.4) in directory mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in directory pd1:<msdos.tex>.
      This is a print driver for PC-Write that ``prints'' a PC-Write V2.71
      document to a TeX-compatible disk file.  It was written by Peter
      Flynn at University College, Cork, Ireland.  It is public domain.  

    runoff - Peter Vanroose (vanroose@esat.kuleuven.ac.be) has 
      written a RUNOFF-to-TeX conversion program in VMS Pascal.  It is 
      available from comp.text archives (they do exist, don't they?  The 
      program was submitted in December 1987) or from the author 
      (peter@dit.lth.se) or from Mark James (jamesm@procor.dialogic.com).

    refer/Tib - There are a few programs for converting bibliographic data 
      between BibTeX and refer/Tib formats.  They are available via 
      anonymous ftp from ftp.ai.mit.edu (128.52.32.11) in the 
      directory ./pub/refer-to-bibtex.  In spite of the directory name, 
      it also contains a  shell script to convert BibTeX to REFER as 
      well. Unfortunately, this collection is not maintained.

    RTF - A program for converting Microsoft's Rich Text Format to TeX
      is available via anonymous ftp from astro.princeton.edu
      (128.112.128.131) in ./pub/rtf2TeX.tar.Z. It was written and is
      maintained by Robert Lupton (rhl@astro.princeton.edu). There is
      also an rtf2LateX written by Erwin Wechtl available from 
      ftp.vmars.tuwien.ac.at (128.130.39.16) in ./pub/misc.

    Microsoft Word - A rudimentary program for converting MS-Word
      to LaTeX is wd2latex, for MS-DOS, available via anonymous ftp
      from any CTAN site (see question 22). A better idea, however, 
      is to convert the document to RTF format and use the RTF 
      converter mentioned above.
    
    In addition, a group at Ohio State University is working on a common
    document format based on SGML.  In theory any format could be
    translated to or from this one.  Also, Framemaker supposedly has
    ``import filters'' to aid in the translation from alien formats
    (presumably including TeX) to Framemaker; perhaps other desktop
    publishing programs have similar things.
      
25) How do I get a file into the major style repositories?
    
    Use anonymous ftp to any CTAN archive (see question 22) and
    retrieve the file README.uploads in the root directory. It contains
    instructions for uploading files and notifying the appropriate
    people for that site.

    If you cannot use ftp, mail your contribution to sty-mgr@shsu.edu
    and it will be passed along. You will make everyone's life easier
    if you choose a descriptive and unique name for your submission, so
    it's probably good idea to browse through some of the styles
    already available to insure your style file's name is not already
    in use.

26) Where can I get font Y?

    A comprehensive list of METAFONT fonts is posted to Comp.fonts
    about once every six weeks by Lee Quin (lee@sq.sq.com). It contains
    both commercial fonts and fonts available via anonymous ftp. Most
    of the fonts available via anonymous ftp are available from
    the CTAN archives (see question 22). Also, the file wujastyk.txh
    ./tex-archive/digests/texhax/txh/wujastyk.txh is a copy of
    Dominik Wujastyk's font article, and contains information on
    METAFONT fonts as well.

27) Where can I get a dvi driver for the HP LaserJet?

    PC - The emtex package mentioned in question 19 contains a driver for
       the LaserJet, dvihplj. 

    Version 2.10 of the Beebe drivers support the LaserJet. These drivers
    will compile under Unix, VMS, and on the Atari ST and DEC-20's. They
    are available from ftp.math.utah.edu (128.110.198.34) in ./pub/tex/dvi.

28) TeX and LaTeX are hyphenating words weirdly. What can I do?

    You have a version mismatch problem. The hyphenation algorithm changed
    between version 2.9 and 3.0. If you are using TeX version 3.0 or
    later, make sure you have plain.tex and lplain.tex files with a
    version number of at least 3.0.

    For those of you curious about the change, here's what happened:
    in versions of TeX before 3.0 the hyphenation algorithm would not
    break a word if the part before the break was not at least two
    characters long, and the part after the break at least three 
    characters long. Starting with version 3.0 two integer parameters,
    \lefthyphenmin and \righthyphenmin, control the length of these
    fragments. These are set to 2 and 3, respectively, in the new
    plain and lplain formats. They can be set to any value, of course,
    but if \lefthyphenmin + \righthyphenmin is greater than 62, all
    hyphenation is suppressed.

29) How can I convert a TeX or LaTeX file into a plain ASCII file,
    with all the formatting intact, a la nroff?

    Ralph Droms (droms@bucknell.edu) has a style file and a C program
    that provide the LaTeX equivalent of nroff. Although it doesn't do
    a good job with tables and math, it's the best way to convert that
    I've seen. The software is available for anonymous ftp from
    sol.cs.bucknell.edu (134.82.1.8) in ./droms/txt-dist.tar. This is a
    modification of the dvi2tty program; the original often does an
    acceptable job and can be gotten from any CTAN site (see question 22).

    Another possibility is to use screen.sty, available from all the
    major archives. However you need a program called crudetype to
    process the resulting dvi file. It is available from
    emx.utexas.edu (128.83.186.11) in
    ./pub/mnt/source/tex/tex-3.0/DVIware/lpr-viewers/crudetype and
    from ftp.uni-stuttgart.de (129.69.8.13) in
    ./tex-archive/dviware/screenview. Another possibility is to use
    the LaTeX-to-ASCII conversion program, l2a, available from
    comp.sources.misc archives (one archive site is ftp.uu.net
    (192.48.96.9)), although this is really more of a de-TeXing
    program. If you are running under Unix and have C++ and perl, you
    might try Jonathan Monsarrat's LameTeX package (which actually
    does much more than this), available from wilma.cs.brown.edu
    (128.148.33.66) in ./pub/lametex.tar.Z.

30) How do I enlarge TeX? I keep getting `memory capacity exceeded'
    errors.

    Most of the time, a ``memory capacity exceeded'' error can be fixed
    without enlarging TeX.  The most common causes are unmatched braces,
    extra-long lines, and poorly-written macros.  Extra-long lines
    are often introduced when files are transferred incorrectly between
    operating systems.  (The tell-tale sign of an extra-long line error
    is when the complaint is that the `buf_size' has overflowed.)

    If you really need to extend your TeX's capacity, the proper method
    varies depending on your installation.  In the purest form, you
    change the parameters in module 11 (``The following parameters can
    be changed...'')  In less pure forms, you might need to modify a
    change file, or perhaps change some environment variables.  Consult
    the documentation that came with your particular implementation.

31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
    numbered. What do I do?

    If you see this, you are using the \maketitle command too. This is
    not a bug but a feature! The standard LaTeX styles are written so
    that initial pages (pages containing a \maketitle, \part, or \chapter)
    have a different page style than the rest of the document. Hence, the
    above commands internally issue a \thispagestyle{plain}. This is
    usually not acceptable behavior is the page style is `empty'.

    Possible workarounds include:   
     - Put \thispagestyle{empty} immediately after the \maketitle command, 
       with no blank line between them.
     - Use fancyheadings.sty, available from any CTAN (see question 22).
       In this style, the style for initial pages can be customized as well.

32) Where do I find documentation about BibTeX?

    BibTeX, a program originally designed to produce bibliographies in
    conjunction with LaTeX, is explained in Section 4.3 and Appendix B 
    of Leslie Lamport's LaTeX manual.  The ``BibTeXing'' document, 
    contained in the file btxdoc.tex, gives a more complete description.
    _The LaTeX Companion_ also has information on BibTeX and writing 
    BibTeX style files.

    The ``Designing BibTeX Styles'' document, contained in the file 
    btxhak.tex, explains the postfix stack-based language used to
    write BibTeX styles (.bst files).  The file btxbst.doc is the template
    file for the four standard styles (plain, abbrv, alpha, unsrt). It
    also contains the documentation for them.

    The current Unix-BibTeX man page, contained in the file
    bibtex.1, was updated in January 1992 and is about one page long.
    There's an old and obsolete version floating around, written in 1985
    before ``BibTeXing'' and ``Designing BibTeX Styles'' appeared, that is
    several pages long.  You should ignore it (or throw it away), since it
    describes BibTeX version 0.98, style files of which are incompatible 
    with the current version, 0.99 (to be precise, 0.99c).

    All files mentioned in this answer are available via anonymous ftp
    from labrea.stanford.edu (36.8.0.112) in the BibTeX ftp area, 
    tex/bibtex. All the non-Unix files should be available on any system 
    that runs BibTeX; if they're not on your system, please complain to 
    your BibTeX installer or to your distribution source.

33) How do I use BibTeX with plain TeX?

    The file btxmac.tex contains TeX macros and documentation for using
    BibTeX with plain TeX, either directly or with Karl Berry's Eplain
    package. It is available via anonymous ftp from labrea.stanford.edu
    (36.8.0.112) in tex/bibtex (see question 32 for more information 
    about BibTeX).

34) How do I draw Feynman diagrams in LaTeX?

    Michael Levine's macro package for drawing Feynman diagrams in LaTeX
    is available via mail-server from physics.utoronto.ca. Send a message
    containing the line ``send INDEX'' to mail-server@physics.utoronto.ca
    for information on how to retrieve it. It is also available from any
    CTAN site or mirror (see question 22).

35) What is the New Font Selection Scheme (NFSS)?

    NFSS is an extension to LaTeX written by Frank Mittelbach and Rainer
    Sch\"opf. It is described in TUGboat, volume 10 (1989), No. 2.
    In traditional typesetting, fonts are described by four parameters:
    the family (e.g., computer modern), the series (i.e., the weight and
    width of the font, like light or bold), the shape (e.g., italic), and
    the size. NFSS is a mechanism allowing the user to change any of these
    independently. NFSS makes it relatively easy to use nonstandard fonts
    such as the PostScript ones with LaTeX, and easy to change math fonts.
    It also allows dynamic loading of fonts at runtime (not when the
    format file is created).

    NFSS is no longer supported for LaTeX version 2.09, but is standard
    with LaTeX2e (see question 41).

    There is one caveat that applies to LaTeX documents written for
    the OLD scheme: some of them use special styles for special fonts
    which will not work under the NFSS.

36) In LaTeX, my cross-references for floats (figures and tables) are
    incorrect. What's wrong?

    The \label command must come after the \caption command, or
    be part of it. For example,
       \begin{figure}               \begin{figure}
       \caption{A Figure}    or     \caption{A Figure\label{fig}}
       \label{fig}                  \end{figure}
       \end{figure}

37) I want to change the margins in LaTeX. What can I do?

    This answer first helps you change the margins throughout a
    document, then tells you how to change the margins in a portion
    of the document.

    Perhaps the easiest way to get more out of a page in LaTeX is to
    get fullpage.sty, available from all the major archive servers
    mentioned in question 22. This sets the margins of the page identical
    to those of Plain TeX, i.e., 1-inch margins at all four sides of the
    paper. It also contains an adjustment for A4 paper.

    Here is a brief explanation of what's going on with the page
    parameters in LaTeX. They are explained in section C.4.2 of the
    LaTeX manual (p. 163). The margin parameters represent measurements
    made to the DVI file. The origin in DVI coordinates is one inch
    from the top of the paper and one inch from the left side. This
    explains the ``one inch less than'' terminology used in the LaTeX
    manual. In DVI coordinates, positive horizontal measurements extend
    right across the page, and positive vertical measurements extend down
    the page. Thus, for margins closer to the left and top edges of the
    page than 1 inch, the corresponding parameters, e.g.,
    \evensidemargin, \oddsidemargin, \topmargin, can be set to negative
    values.

    Finally, to change the margins of a document within the document,
    modifying the parameters listed on page 163 will not work. They
    can only be changed in the preamble of the document, i.e, before
    the \begin{document} statement. To adjust the margins within a
    document we define an environment which does it:
      \newenvironment{changemargin}[2]{\begin{list}{}{
         \setlength{\topsep}{0pt}\setlength{\leftmargin}{0pt}
         \setlength{\rightmargin}{0pt}
         \setlength{\listparindent}{\parindent}
         \setlength{\itemindent}{\parindent}
         \setlength{\parsep}{0pt plus 1pt}
         \addtolength{\leftmargin}{#1}\addtolength{\rightmargin}{#2}
         }\item }{\end{list}}
    This environment takes two arguments, and will indent the left
    and right margins by their values, respectively. Negative values
    will cause the margins to be widened, so
    \begin{changemargin}{-1cm}{-1cm} widens the left and right margins
    by 1cm.

38) How do I find the width of a letter, word, or phrase in TeX?

    Put the word in a box, and measure the width of the box. For example,
        \setbox0=\hbox{hi}
        width=\wd0
    Note that if the quantity in the hbox is a phrase, the actual 
    measurement only approximates this width, since the interword glue
    can be adjusted in paragraph mode.

    In LaTeX, the following works (taken from the manual):
        \newlength{\gnat}
        \settowidth{\gnat}{\em small}
    This sets the value of the length command \gnat to the width of ``small''
    in emphasized text.

39) In LaTeX, is there a comment or ``ignore'' environment with which
    I can exclude blocks of text from the .dvi file?

    Rainer Sch\"opf's verbatim.sty provides a comment environment which
    excludes everything between \begin{comment} and \end{comment}. It is
    available via anonymous ftp from any CTAN site (see question 22) in
    ./tex-archive/macros/latex/distribs. Several files are needed to
    install the package. A more general environment for doing this is
    comment.sty, also available from the CTAN sites in
    ./tex-archive/macros/latex/contrib/misc.

40) Where can I find a spelling checker for my TeX file?

    For Unix, ispell is probably the program of choice. It is available
    from any CTAN site (see question 22) in ./tex-archive/support/ispell.

    For DOS, jspell is an extended version of ispell, and is available via
    anonymous ftp from oak.oakland.edu (141.210.10.117) in 
    ./pub/msdos/tex/jspell*.zip.

    For VMS, a spell checker can be found via anonymous ftp from ftp.spc.edu
    in  [.MACRO32.SAVESETS]. Retrieve SPELL.ZIP and SPELL_DICTIONARY.ZIP. 

41) What is LaTeX2e?

    LaTeX2e is the new standard version of LaTeX, prepared and
    supported by the LaTeX3 project team. It is the current version of
    LaTeX and is available from any CTAN site (see question 22) in
    ./tex-archive/macros/latex. LaTeX 2.09 is no longer supported.

    LaTeX2e is upwardly compatible with LaTeX 2.09, but supports many new
    features, including:
     - NFSS (see question 35) is now standard.
     - SliTeX is consolidated into it, and there is no longer a need for
       a separate program.
     - The output routine gives better control of floating environments,
       such as figures.
     - There is a documented interface to style files.
     - Enhanced box commands, e.g., options to specify the height of a 
       minipage.
     - \ref is now robust and can be used in \caption.
     - \newcommand can define commands with optional arguments.
     - A standard package for color and graphics inclusion.

    Since LaTeX2e is supported, you can report bugs or problems with it by
    typing `latex latexbug' and sending the report it generates to 
    latex-bugs@rus.uni-stuttgart.de.

42) In LaTeX, how can I define a new log-like function?

    Use the \mathop command, as in:
         \newcommand{\diag}{\mathop{\mathrm{diag}}}

    Subscripts and superscripts to \diag will be done identically to \lim.
    If you want your subscripts and superscripts placed to the right, do:
         \newcommand{\diag}{\mathop{\mathrm{diag}}\nolimits}

    Older versions of LaTeX may not define \mathrm; alternatively, use
    {\rm diag}.

43) In LaTeX, how do I put a \sqrt in my \caption statement?

    \sqrt is a fragile command and the argument to \caption is ordinarily
    a moving argument. Therefore \sqrt needs to be preceded with a \protect
    command.

44) In LaTeX, how do I get thin and thick \hlines in a table?

    In the preamble, do: 
         \setlength{\doublerulesep}{\arrayrulewidth}.
    Then in a table or array, do:
         <stuff in the table>  \\\hline         %thin hline
         <more stuff in table> \\\hline\hline   %thick hline

45) In LaTeX, how do I number the bibliography using Arabic numbers without
    square brackets or using superscripts?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\@biblabel[1]{#1.}     % Arabic numbers, no brackets
         \renewcommand\@biblabel[1]{$^{#1}$} % Superscripts

46) In LaTeX, why are my cites all numbered zero?

    Your document style and your version of LaTeX are incompatible.
    Since this may reflect an incomplete update done at some point,
    you should probably get the complete distribution (see question
    22).

    This problem usually occurs using an old university style file
    which is not maintained. If you are going to correct the style
    file, the definition of \thebibliography needs to be updated from
    article.cls (or article.sty).

47) In LaTeX, my figures get put on a page by themselves with too much
    whitespace, but when I tried \begin{figure}[t] they get printed at
    the end. Why?

    Your figures are bigger than \floatpagefraction, but you are
    willing to accept pages with less text than the default.  Use:
         \renewcommand\floatpagefraction{.9}
         \renewcommand\topfraction{.9}
         \renewcommand\bottomfraction{.9}
         \renewcommand\textfraction{.1}

    You can adjust the cut-off value if you like, but it makes no
    sense to go higher than .95 (LaTeX's default value is only .5).
    Also, the first 3 values should be equal, and the last should be
    1 - \floatpagefraction.  Otherwise, you are likely to get floats
    flushed to the end.

48) In LaTeX, how do I make a line break in a section title?

    It is better to try to prevent bad breaks by using ~ than to force
    good breaks. Unfortunately, LaTeX's default styles make titles with
    flush margins and most other styles have followed, so this may not
    work in many cases. You should definitely avoid hyphenation in titles.

    To force line breaks in a title, but not in the table of contents,
    use the optional argument for \section:
         \section[This is the Title]{This is\\ the Title}

    One benefit of this is that \\ is safe and no \protect is needed.

49) In LaTeX, how do I number equations by section?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\theequation{\thesection.\arabic{equation}}
         \@addtoreset{equation}{section}

    If you have chapters with a preamble that comes before the first
    section, you should not put equations there, as you will get funny
    numbers like 3.0.1. There are also two style files available from
    any CTAN site called seceqn.sty and apeqnum.sty. The first numbers
    equations by section, and the second gives individual equation
    numbers to equations in the appendix.

-- 
Bobby Bodenheimer				@hot.caltech.edu
// ARPA  : bobby@hot.caltech.edu                |
// BITNET: bobby@caltech.bitnet                 | Woof!
// UUCP  : {amdahl,ames!elroy}!cit-vax!bobby    | 


Article: 28330 of comp.text.tex
Path: news.doit.wisc.edu!saimiri.primate.wisc.edu!caen!spool.mu.edu!howland.reston.ans.net!agate!dog.ee.lbl.gov!overload.lbl.gov!lll-winken.llnl.gov!fnnews.fnal.gov!nntp-server.caltech.edu!hot.caltech.edu!bobby
From: bobby@hot.caltech.edu (Bobby Bodenheimer)
Newsgroups: comp.text.tex,fr.comp.text.tex,comp.answers,news.answers
Subject: TeX, LaTeX, etc.: Frequently Asked Questions with Answers [Monthly]
Supersedes: <tex-faq_784267264@hot.caltech.edu>
Followup-To: comp.text.tex
Date: 8 Nov 1994 04:08:37 GMT
Organization: California Institute of Technology, Pasadena, CA.
Lines: 1210
Approved: news-answers-request@MIT.Edu
Expires: 6 Jan 1995 04:08:34 GMT
Message-ID: <tex-faq_784267714@hot.caltech.edu>
Reply-To: bobby@hot.caltech.edu
NNTP-Posting-Host: hot.caltech.edu
Keywords: monthly faq
Originator: bobby@hot.caltech.edu
Xref: news.doit.wisc.edu comp.text.tex:28330 comp.answers:7442 news.answers:23104

Archive-name: tex-faq

Comp.text.tex is a forum for the discussion of TeX, LaTeX and other
related things. TeX is a software system written by Donald Knuth to
typeset text, especially text containing mathematics. LaTeX is a set
of macros written in TeX, designed to simplify the the typesetting of
a document by allowing the user to concentrate on the content and
structure of the document rather than the exact appearance of the
finished product. METAFONT, also discussed here, is a program which
allows the user to design their own fonts. The definitive reference
for TeX is _The TeXbook_, by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13447-0, paperback 0-201-13448-9). For LaTeX, see _LaTeX, a
Document Preparation System_ by Leslie Lamport (Addison Wesley, 1986,
ISBN 0-201-15790-X); the second edition of this book covers LaTeX2e.
Full documentation for LaTeX2e can be found in _The LaTeX Companion_
by Michael Goossens, Frank Mittelbach, and Alexander Samarin (Addison
Wesley, 1993, ISBN 0-201-54199-8). For METAFONT, see _The
METAFONTbook_ by Donald Knuth (Addison Wesley, 1984, ISBN
0-201-13445-4). The American Mathematical Society has two macro
packages which are also popular, called AMS-TeX and AMS-LaTeX.

This article contains answers to some frequently asked questions on
comp.text.tex. Please don't ask these questions again, as they've been
answered many times before.

Malencontreusement, je n'ai ni le temps ni la comp\'etence pour
traduire cet article en fran\c{c}ais. Je prie donc, le lecture
interess\'e par fr.comp.text.tex d'avoir l'indulgence d'accepter la
version anglaise.

This is version 1.48 for November, last changed 11/7/94.

This article includes answers to:

  1) How can I get a copy of this article?
  2) Where can I get a DVI to PostScript conversion program?
  3) How can I include a PostScript figure in LaTeX?
  4) Where can I find a DVI previewer for machine Y running Q?
  5) Where can I get the manual for PiCTeX?
  6) In LaTeX, I put some definitions in my document, but I get the error
     ``Use of \@ doesn't match its definition.'' What's wrong?
  7) What is OzTeX and where can I get it (TeX for the Mac)?
  8) What is Fig and where can I get it?
  9) How do I get WEB for C, FORTRAN, or some other language?
  10) How can I typeset music in TeX?
  11) What is TUG and TUGboat?
  12) How do I convert Adobe's afm files to tfm format?
  13) In LaTeX, how do I get a double-spaced document?
  14) In LaTeX, how do I include a file in the verbatim environment?
  15) In LaTeX, how do I do Y?
  16) Where can I find a TeX macro or LaTeX style file for doing Y?
  17) How do I generate an index in TeX/LaTeX?
  18) How do I get METAFONT to do what I want it to do?
  19) Where do I get TeX/LaTeX for machine Y running Q?
  20) Where can I get a thesis style for LaTeX?
  21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
      and so on?
  22) What repositories of TeX material are available, and how can I
      access them?
  23) How do I use PostScript fonts with LaTeX?
  24) How can I convert from format Y to TeX or LaTeX, and vice-versa?
  25) How do I get a file into the major style repositories?
  26) Where can I get font Y?
  27) Where can I get a dvi driver for the HP LaserJet?
  28) TeX and LaTeX are hyphenating words weirdly. What can I do?
  29) How can I convert a TeX or LaTeX file into a plain ASCII file,
      with all the formatting intact, a la nroff?
  30) How do I enlarge TeX? I keep getting ``memory capacity exceeded''
      errors.
  31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
      numbered. What do I do?
  32) Where do I find documentation about BibTeX?
  33) How do I use BibTeX with plain TeX?
  34) How do I draw Feynman diagrams in LaTeX?
  35) What is the New Font Selection Scheme (NFSS)?
  36) In LaTeX, my cross-references for floats (figures and tables) are
      incorrect. What's wrong?
  37) I want to change the margins in LaTeX. What can I do?
  38) How do I find the width of a letter, word, or phrase in TeX?
  39) In LaTeX, is there a comment or ``ignore'' environment with which
      I can exclude blocks of text from the .dvi file?
  40) Where can I find a spelling checker for my TeX file?
  41) What is LaTeX2e?
  42) In LaTeX, how can I define a new log-like function?
  43) In LaTeX, how do I put a \sqrt in my \caption statement?
  44) In LaTeX, how do I get thin and thick \hlines in a table?
  45) In LaTeX, how do I number the bibliography using Arabic numbers without
      square brackets or using superscripts?
  46) In LaTeX, why are my cites all numbered zero?
  47) In LaTeX, my figures get put on a page by themselves with too much
      whitespace, but when I tried \begin{figure}[t] they get printed at
      the end. Why?
  48) In LaTeX, how do I make a line break in a section title?
  49) In LaTeX, how do I number equations by section?

If you are looking, for instance, for the answer to question 17, and wish
to skip everything else, you can search ahead for the regular expression
``^17)''.

These are all legitimate questions, but they seem to appear too 
frequently for long-time readers of the list. 

Many of the answers below tell you that you can obtain something
through anonymous ftp. ``Ftp'' stands for file transfer protocol, and
is also the name of a program implementing the protocol. The program
allows users to transfer files to and from remote sites, if the sites
are connected via a network such as the Internet. ``Anonymous ftp'' 
indicates a user may connect to a remote site as the user 
``anonymous'' with a password consisting of their email address, and
thus be able to retrieve files from that site. Remember, anonymous
ftp is a privilege and the system administrators for these sites 
have made these files available out of their own generosity. Therefore
please restrict your ftp'ing to non-prime hours at the various sites.

I would like to acknowledge Don Hosek, Ken Yap, Tomas Rokicki, Micah
Beck, David Carlisle, and Donald Arseneau who provided many of the
answers.  Joe Weening, Hal Perkins, Walter Carlip, Max Hailpern, Tad
Guy, Raymond Chen, Henning Schulzrinne, Sebastian Rahtz, Mark James,
Peter Galko, Mike Ernst, Rainer Sch\"opf, Oren Patashnik, Philippe
Louarn, Rafal Zbikowski, Anita Marie Hoover, David Rhead, Darrell
McCauley, Cameron Smith, Emma Pease, Patrick McPhee, Karl Berry, Robin
Fairbairns, Joohee Jeong, Sam Steingold, J\"org Knappen, Barbara
Beeton, Norman Ramsay, and Richard Mathar provided additional material
and criticisms. The format of this document is based on the Frequently
Asked Questions written by Steve Hayman which formerly appeared in
comp.unix.wizards. Any mistakes are mine. Send corrections,
suggestions, and additions to bobby@hot.caltech.edu.

1) How can I get a copy of this article?

   You're reading it aren't you? SAVE it :-). This article is posted
   monthly to comp.text.tex and cross-posted to news.answers. It is
   therefore archived at any site that archives news.answers.
   News.answers is archived on rtfm.mit.edu, and this article is
   available there via anonymous ftp in the directory
   ./pub/usenet/news.answers/tex-faq. If you do not have anonymous
   ftp, send an e-mail message containing the lines ``SENDME FAQ.'' to
   fileserv@shsu.edu (fileserv@shsu.bitnet).  Another way to retrieve
   it via email is through the mailserver at rtfm: send a message
   containing the lines ``help'' and ``index'' to
   mail-server@rtfm.mit.edu for information on how to obtain it.
 
   Other news.answers/FAQ archives are: cnam.cnam.fr (163.173.128.6)
   in the anonymous ftp directory /pub/FAQ; ftp.uu.net (192.48.96.2)
   in the anonymous ftp directory /pub/usenet (also available via mail
   server requests to netlib@uunet.uu.net, or via uunet's 1-900
   anonymous UUCP phone number); and ftp.cs.ruu.nl (131.211.80.17) in
   the anonymous ftp directory NEWS.ANSWERS (also accessible via mail
   server requests to mail-server@cs.ruu.nl). Many of the archives
   mentioned in question 22 also maintain current versions of this
   document.

2) Where can I get a DVI to PostScript conversion program?

   Two good DVI to PostScript conversion programs that run under
   Unix are:
     dvips - by Tomas Rokicki. This driver is very nice and has the
       ability to deal with virtual fonts. Available via anonymous ftp
       from labrea.stanford.edu (36.8.0.112) in ./pub. Dvips is
       written in C and ports easily to other operating systems.  It
       is available for VMS via anonymous ftp from any CTAN site (see
       question 22) and also through the DECUS library (see question
       22). A precompiled version for MSDOS is available from
       monu1.cc.monash.edu.au (130.194.1.101) in ./pub/dvips54.zip,
       from shape.mps.ohio-state.edu (128.146.110.30) in
       ./pub/msdos/dvips/dvips54.zip, or from any CTAN site (see
       question 22) in ./systems/msdos/drivers/dvips.  If you wish to
       use postscript fonts, get dvipslib.zip as well.  Documentation
       is available in dvips.ps.Z. Karl Berry has a version of dvips
       called dvipsk which has a configure script and path searching
       code similar to that in his other programs (e.g., web2c).  It
       is available via anonymous ftp from ftp.cs.umb.edu
       (158.121.104.33) in ./pub/tex/.

     dvitops - by James Clark. Available via anonymous ftp from any CTAN site
       (see question 22, e.g., pip.shsu.edu (192.92.115.10)), in 
       ./tex-archive/dviware/dvitops. Dvitops is written in C and will 
       compile under Unix, MSDOS, VMS, and Primos.

3) How can I include a PostScript figure in LaTeX?

   In LaTeX2e, the best way is \usepackage[dvips]{graphics}.

   Perhaps the best way to do this is to use the psfig macros written
   by Trevor Darrell. They are available via anonymous ftp from
   any CTAN site (see question 22) in graphics/psfig. You will
   also need a dvi to PostScript conversion program that supports
   \specials. The ones mentioned in question 2 do, and come with a
   version of psfig ready to use with them. The psfig macros work best
   with Encapsulated PostScript Files (EPS). In particular, psfig will
   need the file to have a BoundingBox (see Appendix C of the
   _PostScript Language Reference Manual_). If you don't have an EPS
   file, life can be difficult.

   To allow resizing by dvips (see question 2) with PostScript files
   that are not EPS files, add the one line comment
   %%BoundingBox: llx lly urx ury" 
   prior to any non-comment line in the PostScript file. The four
   ``lower left'' and ``upper right'' arguments must be numbers to
   indicate the lower left and upper right corner in units of 1/72 of
   an inch. Otherwise, dvips assumes the PostScript file fills a whole
   page.

   One further note about including PostScript figures is that they
   are not part of the dvi file, but are included when you use a dvi
   to PostScript conversion program. As a result, most dvi previewers
   will simply show the blank space TeX has reserved for your figure,
   not the figure itself. LaTeX2e (see question 41) will have a standard
   interface for graphics inclusion, rotation, color, and other 
   driver-related features.

   Anil K. Goel has written a long document describing in detail how to
   include figures, pictures, and images in LaTeX documents. It is available
   via anonymous ftp from math.uwaterloo.ca (129.97.140.144) in
   ./pub/figsInLatex.ps.Z. A dvi file with the included PostScript files
   is also available.

4) Where can I find a DVI previewer for machine Y running Q?

   This briefly lists some previewers available via anonymous ftp. All
   are available from any CTAN site (see question 22) in addition to the
   sites listed below:
      dvipage - For SunView. This was published in volume 15 of 
        comp.sources.unix and is available at sites that archive
        this. One such source is archive.cis.ohio-state.edu 
        (128.146.8.52).
      xtex - For the X Window System. Available via anonymous ftp 
        from ftp.cs.colorado.edu (128.138.243.151) in 
        ./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z.
      dviapollo- for Apollo Domain. Available via anonymous ftp from
        labrea.stanford.edu (36.8.0.112) in ./pub/dviapollo.tar.Z.
      dvidis - For VAXstation VWS. Available via anonymous ftp from
        src.doc.ic.ac.uk (146.169.2.1) in /packages/tex/dviware/dvidis.
      xdvi - Also for the X Window System. Available via anonymous ftp
        from ftp.x.org (192.112.44.100) in ./contrib/xdvi.tar.Z. Karl
        Berry has a version of called xdvik with features analogous
        to his dvipsk (see question 2) available via anonymous ftp from
        ftp.cs.umb.edu (158.121.104.33) in ./pub/tex.
      dvitovdu - for Tektronix 4010 and other terminals under Unix.
        Available via anonymous ftp from wsmr-simtel20.army.mil
        (192.88.110.20) in the directory pd6:<unix-c.printers> as
        dvi2vdu.tar-z (ftp in ``tenex'' mode).
      dvi2tty - A dvi to ASCII conversion program, for normal terminals.
        Available from ftp.cs.ruu.nl (131.211.80.17) in 
        ./pub/TEX/DVI/dvi2tty.shar. A VMS version is available from
        fileserv@shsu.edu (see question 22).
      texsgi - For SGI under Irix. Available via anonymous ftp from 
        ftp.brl.mil (128.63.16.158) in ./info-iris/tex. Both a binary 
        and source are available, but be sure to get the fonts as well.
   
5) Where can I get the manual for PiCTeX?

   The PiCTeX manual is not free. It is available for $30 ($35 with the
   disk) from the TeX Users Group:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

   The proceeds from this sale go to Michael Wichura, the author of PiCTeX,
   and TUG.

6) In LaTeX, I put some definitions in my document, but I get the error
   ``Use of \@ doesn't match its definition.'' What's wrong?

   Definitions should be be in a style file, and if you move them there,
   you should have no problem.

   If you don't want to do that, you need to include \makeatletter
   before the definitions to allow the ``internal'' LaTeX commands to
   be accessed.  These commands are normally protected from change by
   having @ in them.  Since @ is not a letter, it is normally not
   allowed as part of a multi-letter command name. To access internal
   commands you need to tell LaTeX to pretend that @ is a letter.
   This happens automatically when LaTeX reads a style file, but in
   your main document you need to surround the offending commands with
   \makeatletter ... \makeatother.

7) What is OzTeX and where can I get it (TeX for the Mac)?

   OzTeX is a public domain version of TeX for the Macintosh. A DVI
   Previewer and PostScript driver are also included. It should run on
   any Macintosh Plus, SE, II, or newer model, but will not work on a
   128K or 512K Mac. It was written by Andrew Trevorrow, and is available 
   via anonymous ftp from from midway.uchicago.edu (128.135.12.73) in 
   ./pub/OzTeX, which contains other public domain TeX-related software 
   for the Mac as well, or on a floppy disk from TUG (see question 11). 
   Questions about OzTeX may be directed to oztex@midway.uchicago.edu.
   
8) What is Fig and where can I get it?

   Fig is a menu driven tool similar to MacDraw that allows you to
   draw objects on the screen of a Sun Workstation running SunView.
   TransFig is a set of tools which translate the code fig produces to
   other graphics languages including PostScript and the LaTeX picture
   environment. Both are available via anonymous ftp from
   ftp.cs.cornell.edu (128.84.218.75) in ./pub/fig. Both Fig and
   TransFig are also available from the Clarkson archive server at
   sun.soe.clarkson.edu (see question 22). Fig is supported by Micah
   Beck (beck@cs.cornell.edu) and Transfig is maintained by Brian
   Smith (bvsmith@lbl.gov). Another tool for fig conversion is fig2MF
   which generates METAFONT code from fig input. It is available from
   the CTAN archives discussed in question 22.

   XFig is essentially the same program except it runs under the X
   Window System. It is available via anonymous ftp from ftp.x.org
   (192.112.44.100) in ./contrib/applications/drawing_tools/xfig. It
   was written by Brian Smith.

9) How do I get WEB for C, FORTRAN, or some other language?

   TeX is written in the programming language WEB; WEB is a tool to
   implement the concept of ``literate programming.'' For more information
   on literate programming, see the newsgroup comp.programming.literate.

   There is a version of WEB for C called CWEB written by Silvio Levy. It
   is available via anonymous ftp from princeton.edu (128.112.128.1) in 
   the directory ./pub/cweb.

   There is a version of WEB called Spidery WEB which supports many 
   languages including ADA, awk, and C. It was written by Norman Ramsey 
   and, while not in the public domain, is usable free. It is available 
   via anonymous ftp from pip.shsu.edu (192.92.115.10) in 
   tex-archive/web/spiderweb.

   FWEB is a version of WEB for Fortran, Ratfor, and C written by John
   Krommes (krommes@lyman.pppl.gov). Version 1.13 is available via
   anonymous ftp from lyman.pppl.gov (192.55.106.129) in ./pub/fweb.

   SchemeWEB is a Unix filter that translates SchemeWEB into LaTeX source
   or Scheme source. It was written by John Ramsdell and is available from
   sun.soe.clarkson.edu (128.153.12.3) in ./pub/tex/tex-programs/schemeweb.

   APLWEB is a version of WEB for APL and is available from
   watserv1.waterloo.edu (129.97.129.140) in ./languages/apl.

   There are three flavors of WEB that are language-independent and
   have substantial user communities: funnelweb, noweb, and nuweb.
   NoWeb and NuWeb both emphasize simplicity; NoWeb is a bit simpler
   and more flexible, but NuWeb is more portable and easier to
   install.  FunnelWeb is more complex, but is routinely used on a
   wide variety of machines.  All three systems are available from any
   CTAN site (see question 22) in directory
   /tex-archive/web/{funnelweb,noweb,nuweb}.  An introduction to NoWeb
   appeared in the September 1994 IEEE Software, page 97.  Funnelweb
   also appeared in comp.sources.unix volume 26 issue 121, posted 11
   April 1993.

   Most of the above are also available from your nearest CTAN site
   (see question 22).

10) How can I typeset music in TeX?

    A package called MuTeX, written by Andrea Steinbach and Angelika
    Schofer, aids in doing this. It is available via anonymous ftp
    from ftp.cs.ruu.nl (131.211.80.17) in pub/TEX/MuTeX.tar.Z.  This
    package allows you to typeset single-staff music and lyrics.

    A more powerful package which allows the typesetting of orchestral
    and polyphonic music is MusicTeX, written by Daniel Taupin 
    (taupin@frups51.bitnet). It is available via anonymous ftp from
    rsovax.ups.circe.fr (130.84.128.100) [.musictex]. It should also
    be available from the archive sites detailed in question 22.

    There is a mailing list for discussion of typesetting music in TeX.
    To subscribe, send a request to mutex-request@stolaf.edu.

11) What is TUG and TUGboat?

    TUG is the TeX Users Group. TUGboat is their newsletter, containing
    useful articles about TeX and METAFONT. TUG also distributes
    TeX-related microcomputer software on disks. Inquiries should be 
    directed to:
                     TeX Users Group
                     P. O. Box 869
                     Santa Barbara, CA 93102-0869 (USA)
                     805-963-1338
                     FAX: 805-963-8358
                     tug@tug.org

12) How do I convert Adobe's afm files to tfm format?

    An afm2tfm program is distributed with dvips, available via
    anonymous ftp from labrea.stanford.edu (36.8.0.112) in ./pub. Alan
    Jeffrey's fontinst package is an afm2tfm converter written in TeX 
    and will be used to support the PostScript tfm files for LaTeX2e
    (see question 41). It is available from any CTAN site (see question
    22).

    For the Macintosh, there is a program called EdMetrics which does
    the job (and more). It is available free from:
              Blue Sky Research
              534 Southwest Third Avenue
              Portland, Oregon 97204 (USA)
              800-622-8398 or 503-222-9571

13) In LaTeX, how do I get a double-spaced document?

    Are you producing a thesis, and trying to obey regulations that were
    drafted in the typewriter era?  LaTeX is a typesetting system, so the
    appropriate design conventions are for ``real books''.  Find whoever
    is responsible for the regulations, and try to get the wording changed
    to cater for typeset theses (e.g., to say ``if using a typesetting 
    system, aim to make your thesis look like a well-designed book'').

    If you fail to convince your officials, or want some inter-line 
    space for copy-editing:
     - In LaTeX2e, use \linespread. For double-spaced output, use
       \linespread{1.6}.
     - Try changing \baselinestretch: \renewcommand{\baselinestretch}{1.2}
       may be enough to give officials the impression you've kept
       to their regulations.  Don't try changing \baselineskip: its
       value is reset at any size-changing command.
     - Alternatively, get doublespace.sty from any CTAN site (see question 22,
       e.g., pip.shsu.edu (192.92.115.10)) in 
       ./tex-archive/macros/latex/contrib/misc. There's also a setspace.sty
       in the same directory which is more flexible, and consistent with the
       latest release of LaTeX.

    It's not worth going to a lot of trouble.  (If officials won't allow
    standard typographic conventions, you won't be able to produce an
    aesthetically pleasing document anyway!)

14) In LaTeX, how do I include a file in the verbatim environment?

    A good way to do this is to use Rainer Sch\"opf's verbatim.sty,
    which provides the command \verbatiminput that takes a file
    as an argument. This package is available from any CTAN site (see 
    question 22) in ./tex-archive/macros/latex/distribs. Several
    files are needed.

    Another way to do this is to use the alltt environment defined in
    the style file alltt.sty available from the CTAN archives in 
    ./tex-archive/macros/latex/contrib/misc/alltt.sty.

15) In LaTeX, how do I do Y?

    If you can't figure out how to do something in LaTeX after you
    have read the manual very carefully, asked your local LaTeX
    guru, and thought about it, there is a LaTeX help service 
    available. Please note that the way to accomplish something 
    in LaTeX is often by using an appropriate style file, so please
    check this also (see question 16). If none of this works, send mail 
    in English describing your problem to latex-help@cs.stanford.edu. 
    If you haven't gotten a reply to your problem within about a week, 
    send mail to latex-help-coordinator@cs.stanford.edu.

16) Where can I find a TeX macro or LaTeX style file for doing Y?

    Before you ask for a TeX macro or LaTeX style file to do something, 
    please search the TeX macro index written by David M. Jones
    (dmjones@theory.lcs.mit.edu) and available via anonymous ftp
    from theory.lcs.mit.edu (18.52.0.92) in ./pub/tex/TeX-index. Those 
    without access to anonymous ftp can send a message containing the
    line ``send tex TeX-index'' to archive-server@theory.lcs.mit.edu.
    The index is an excellent reference document with plenty of 
    cross-references. Also, many of the archive sites mentioned in
    question 22 maintain extensive latex style collections, which you
    can look through if you need something not in the index.

    Another possibility is to use the searching features of the CTAN
    archives (see question 22). Once you have an anonymous ftp connection
    established to a CTAN site, you can type the command `quote site index
    <term>' and it will provide a list of files with the string <term> in
    their names.
    
17) How do I generate an index in TeX/LaTeX?

    Making an index is not trivial. There are several indexing programs
    which aid in doing this. The following are available from any CTAN
    site (see question 22):
      makeindex - for LaTeX under Unix (but runs under other OS's
         without changes). A version for the Macintosh is available from
         Johnny Tolliver at tolliver%atf.mfenet@nmfecc.llnl.gov. The 
         Makeindex documentation is a good source of information on how 
         to create your own index. Makeindex can be used with some TeX macro
         packages other than LaTeX, such as Eplain.
      idxtex - for LaTeX under VMS.
      texix - for TeX on CMS and Macintosh machines.
      texindex - for LaTeX under Unix. Available from
         comp.sources.misc archives in Volume 23.

18) How do I get METAFONT to do what I want it to do?

    METAFONT allows you to create your own fonts, and ordinary TeX users
    will never need to use it. METAFONT, unlike TeX, requires some 
    customization. Each output device for which you will be generating 
    fonts needs a mode associated with it. Modes are defined using the 
    mode_def convention described on page 94 of _The METAFONTbook_. So 
    first create a file, which we will call local.mf, containing all the 
    mode_defs you will be using. The file modes.mf by Karl Berry,
    available via anonymous ftp from ftp.cs.umb.edu (158.121.104.33) in
    ./pub/tex is a good starting point for this. Listings of settings for 
    various output devices are also published periodically in TUGboat 
    (see question 11). Now create a plain base file using inimf, plain.mf, 
    and local.mf:
       % inimf
       This is METAFONT....
       **plain                 # you type plain
       (output)
       *input local            # you type this
       (output)
       *dump                   # you type this
       Beginning to dump on file plain....
       (output)
       %
    This should create a base file named plain.base (or something close)
    and should be moved to the directory containing the base files on
    your system.
 
    Now you need to make sure METAFONT loads this base when it starts
    up. If METAFONT loads the plain base by default on your system, then
    you're ready to go. Under Unix, we might, for instance define a 
    command mf which executes ``virmf &plain,'' loading the plain base
    file.
 
    The usual way to create a font with plain METAFONT is to then start 
    it with the line
       \mode=<mode name>; mag=<magnification>; input <font file name>
    in response to the * prompt or on the METAFONT command line. If 
    <mode name> is unknown or omitted, then the mode defaults to proof 
    mode. If this has happened METAFONT will produce an output file
    called <font file name>.2602gf. The <magnification> is a floating 
    point number or magstep (magsteps are defined in _The METAFONTbook_ 
    and _The TeXbook_). If mag=<magnification> is omitted, then the 
    default is 1. For example, to generate cmr10 at 12pt for an epson 
    printer you would type
       mf \mode=epson; mag=1.2; input cmr10
    Note that under Unix the '\' and ';' characters must usually be 
    escaped, so this would typically look something like
       mf \\mode=epson\; mag=1.2\; input cmr10
 
    If you don't have inimf or need a special mode that isn't in the
    base, you can put its commands in a file (e.g., ln03.mf) and invoke
    it on the fly with the \smode command. For example, to create 
    ln03.300gf for an LN03 printer, using the file
	% This is ln03.mf as of 2/27/90
	% mode_def courtesy of John Sauter
	proofing:=0;
	fontmaking:=1;
	tracingtitles:=0;
	pixels_per_inch:=300;
	blacker:=0.65;
	fillin:=-0.1;
	o_correction:=.5;
    (note the absence of the mode_def and enddef commands), you would type
       mf \smode="ln03"; input cmr10
    
19) Where do I get TeX/LaTeX for machine Y running Q?

    Unix - The Unix TeX distribution is available via anonymous ftp from any 
       CTAN archive (see question 22). The Northwest Computing Support Center
       was ordered closed by the University of Washington, thus Unix TeX
       can no longer be ordered.

       Instructions for retrieving TeX via anonymous ftp are available
       in the document FTP.nwc, itself available via anonymous ftp from
       ftp.cs.umb.edu (158.21.104.33) in ./pub/tex.

       Note: The Unix version of TeX allows your ``macros'' or ``inputs''
       and ``fonts'' directories to be hierarchically organized with
       further subdirectories, rather than dumping everything into one
       directory. This can cause TeX to start very slowly. The cure
       for this problem is to insure each subdirectory contains either
       only directories or only files.

    AIX - TeX for the IBM RS6000 running AIX can be found on
       ftp.dante.de (129.206.100.192) in ./tex-archive/systems/unix/aix3.2.

    386/ix - Executables for the 386/ix are available via anonymous ftp 
       from tik.vtt.fi (130.188.52.2) in ./pub/tex/bin-386ix and from 
       math.berkeley.edu (128.32.183.94) in ./pub/tex386ix.tar.Z.

    PC - A TeX package for the PC, including LaTeX, BibTeX, previewers,
       and drivers is available via anonymous ftp from 
       vax.eedsp.gatech.edu (130.207.226.24) in ./pub/TeX. The variety here
       is sbtex version 30 by Wayne Sullivan. EmTeX, another TeX package 
       for the PC by Eberhard Mattes, is available via anonymous ftp from 
       ftp.dante.de (129.206.100.192) in 
       ./tex-archive/systems/msdos/emtex and also from niord.shsu.edu
       (192.92.115.8) in [.emtex]. This package includes LaTeX, METAFONT,
       BibTeX, etc., as well. Documentation is available in both German 
       and English.

    Mac - see question 7 for a public domain version (OzTeX). Another version
       is CMacTeX, which has TeX 3.14, METAFONT 2.7, a screen previewer,
       dvips, a PostScript printing utility for the LaserWriter, and some font
       managing utilities. It is available from the CTAN archives discussed
       in question 22. 

    TOPS-20 - TeX was originally written on a DEC-10 under WAITS, and so
       was easily ported to TOPS-20. A Distribution that runs on TOPS-20 
       is available via anonymous ftp from ftp.math.utah.edu 
       (128.110.198.34) in ./pub/tex/pub/web.

    VAX/VMS - TeX for VMS is available from any CTAN site (see question 22)
       in the directory ./systems/vms. Standard tape distribution is 
       through DECUS.

    Atari - TeX is available for the Atari ST from atari.archive.umich.edu
       (141.211.165.41) in ./atari/tex. If anonymous ftp is not available
       to you, send a message containing the line ``help'' to
       atari@atari.archive.umich.edu. The mail server can uuencode
       binary files. Another version can be obtained via anonymous
       ftp from ifi.informatik.uni-stuttgart.de (129.69.211.1) in
       ./pub/atari.st/tex. There is also lots of TeX stuff for the
       Atari on the CTAN and ftp.cs.ruu.nl archives mentioned in
       question 22.

    Amiga - A full implementation of TeX 3.1 call PasTeX and METAFONT 2.7
        are available via anonymous ftp from merlin.etsu.edu (192.43.199.20)
        in ./ab20/AMIGA. It is also available via anonymous ftp from
        forwiss.uni-passau.de (132.231.20.10) in ./pub/amiga/tex. 
        You can also order a CDROM containing this and other amiga software
        from Walnut Creek CDROM, (510) 947-5997.

    Tandy 6000 - If you are interested in building TeX on this machine
        contact Ken Yap (ken@syd.dit.csiro.au), and he'll help you.

20) Where can I get a thesis style for LaTeX?

    Thesis styles are usually very specific to your University, so it's
    usually not profitable to ask the whole newsgroup for one. If you
    want to write your own, a good place to start is the ucthesis style
    available from any CTAN archive in macros/latex/contrib/ucthesis
    (see question 22).

21) How do I get symbols for ``the real numbers'', ``the complex numbers'',
    and so on?

    These symbols are known as ``blackboard bold'' and are available in
    the AMS fonts ``msam'' (e.g., ``msam10'' for 10pt) and ``msbm''. 
    They replace the older ``msxm'' and ``msym''. The fonts have a large
    number of mathematical symbols to supplement the ones 
    provided by TeX. The fonts are available via anonymous ftp from
    e-math.ams.com (130.44.1.100) in the directory ./ams/amsfonts.
    Two files which load the fonts and define the symbols are provided,
    and both work with either TeX or LaTeX. Questions or suggestions 
    regarding these fonts should be directed to 
    tech-support@math.ams.com.

    A geometric sans serif blackboard bold font by Alan Jeffrey is available
    from any CTAN archive (see question 22) in ./tex-archive/fonts/bbold.

    A set of LaTeX macros for a ``lazy person's'' blackboard bold are:
       \newcommand{\R}{{\sf R\hspace*{-0.9ex}\rule{0.15ex}%
       {1.5ex}\hspace*{0.9ex}}}
       \newcommand{\N}{{\sf N\hspace*{-1.0ex}\rule{0.15ex}%
       {1.3ex}\hspace*{1.0ex}}}
       \newcommand{\Q}{{\sf Q\hspace*{-1.1ex}\rule{0.15ex}%
       {1.5ex}\hspace*{1.1ex}}}
       \newcommand{\C}{{\sf C\hspace*{-0.9ex}\rule{0.15ex}%
       {1.3ex}\hspace*{0.9ex}}}

22) What repositories of TeX material are available, and how can I access
    them?
 
    To aid the archiving and retrieval of of TeX-related files, a TUG
    working group developed the Comprehensive TeX Archive Network
    (CTAN).  Each CTAN site has identical material, and maintains
    authoritative versions of its material.  These collections are
    extensive; in particular, almost everything mentioned in this
    document is archived at the CTAN sites, even if not explicitly
    stated.

    The CTAN sites are currently ftp.dante.de (129.206.100.192)
    ftp.tex.ac.uk (134.151.44.19), and pip.shsu.edu (192.92.115.10). 
    The organization of TeX files on all these sites is identical and
    starts at ./tex-archive. To reduce network load, please use the
    CTAN site or mirror closest to you. A complete and current list
    of CTAN sites and mirrors can be obtained by using the finger
    utility to finger ctan_us@ftp.SHSU.edu.

    To find software at a CTAN site, use anonymous ftp to the host,
    and then execute the command `quote site index <search-term>'.

    The mail servers of the CTAN sites are not yet identical, but this is
    planned. Here are the current methods of access via electronic mail:
      - For the UK site, send a message to texserver@tex.ac.uk. The
        first non-blank line of the message must contain a valid
        TeXserver command (help, directory, files, whereis, search,
        or path). The program will then mail you a response notifying
        you that your request has been received. If you fail to get a
        response from the TeXserver, you may need to use the ``path''
        command to help the program out. For Internet users the
        return address is of the form name%site@nsfnet-relay, while
        for Bitnet and EARN it is name%site@earn-relay (i.e., include
        a line that says ``path name%site@nsfnet-relay'' along with a
        line containing ``help''). 
      - For ftp.dante.de, send a message containing the line
        ``help'' to mail-server@ftp.dante.de.
      - For the SHSU site, send a message with the line "help" to
        ftpmail@ftp.shsu.edu. This provides an ftp-like interface
        through mail.

    There are several other repositories of TeX material available:
      - ftp.cs.ruu.nl (131.211.80.17) also contains a substantial TeX
        archive with ftp access. To use it via email, send a message
        containing the line ``help'' to mail-server@cs.ruu.nl. This mail 
        server can send binary files in a variety of different formats.
      - There are LISTSERV facilities for TeX at LISTSERV@DHDURZ1.BITNET. 
        Send a message containing the line ``help'' to this address.
      - For users on BITNET, access to anonymous ftp for some files can
        be obtained indirectly by sending mail to BITFTP@PUCC.BITNET.
        Send a message containing the line ``help'' to this address for
        more information.
     
    There is also the DECUS TeX collection, a collection of TeX material
    for VMS, Unix, MS-DOS, and the Macintosh. It is available via 
    anonymous ftp from wuarchive.wustl.edu (128.252.135.4) in ./decus/tex.
    It can also be obtained from the DECUS Library (reference number 
    VS0058) in the US, or through your DECUS office outside of the US. To 
    contact the DECUS Library, send mail or call:
                 The DECUS Program Library
                 334 South Street SHR3-1/T25
                 Shrewsbury, MA 01545-4195
                 (800)332-3755
    The last update to this collection was in February 1991, so it is old.
     
    Another good source of information is NETWORK SOURCES OF TeX WARE by
    Peter Flynn which appeared in TeXhax, volume 90, issues 45-47 (in
    May 1990).      

23) How do I use PostScript fonts with LaTeX?

    The best way to do this is to install LaTeX2e (see question 41)
    and use the PSNFSS2e package written by Sebastian Rahtz. It is
    available from all the major archives mentioned in question
    22. Other methods for using PostScript fonts in LaTeX are
    cumbersome at best.

24) How can I convert from format Y to TeX or LaTeX, and vice-versa?

    troff - TROFF-TO-LATEX.TAR-Z is available via anonymous ftp from
      wsmr-simtel20.army.mil (192.88.110.20) in the directory 
      pd2:<unix-c.textproc>. This program, written by Kamal Al-Yahya 
      at Stanford, assists in the translation of a troff document into 
      LaTeX format.  It recognizes most -ms and -man macros, plus most 
      eqn and some tbl preprocessor commands. Anything fancier needs 
      to be done by hand.  Two style files are provided.  There 
      is also a man page (which converts very well to LaTeX :-).  
      The program is copyrighted but free. An enhanced version of this
      program, tr2latex, is available from 
      ftp.informatik.rwth-aachen.de (137.226.112.172) in ./pub/TeX. 
      The DECUS TeX distribution (see question 22) also contains a program
      which converts troff to TeX. If you are interested in obtaining a copy
      of this program without getting the entire DECUS TeX distribution, 
      send the command: SENDME TROFFTOTEX in the body of a mail message to
      FILESERV@SHSU.BITNET (FILESERV@SHSU.edu), or use anonymous ftp to the
      directory [.TROFFTOTEX] on Niord.SHSU.edu (192.92.115.8). 

    scribe - Mark James has a copy of scribe2latex he has been
      unable to test but which he will let anyone interested have.
      Send email to jamesm@procor.dialogic.com. The program was written
      by Van Jacobson of Lawrence Berkeley Laboratory.

    wordperfect -  wp2latex.zip is available on wuarchive.wustl.edu
      (128.252.135.4) in the directory ./mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in the directory pd1:<msdos.tex>.
      This is a PC program written in Turbo Pascal by R. C. Houtepen at
      the Eindhoven University in the Netherlands.  It converts
      WordPerfect 5.0 documents to LaTeX.  Pascal source is included.
      Users find it ``helpful'' and ``decent'' in spite of some
      limitations. It gets high marks for handling font changes.
      Limitations include no indices, table of contents, margins or
      graphics.  It also won't handle the new features of WordPerfect
      5.1, in particular the equation formatter. The program is
      copyrighted but free.

      Glenn Geers of the University of Sydney (glenn@qed.physics.su.oz.au)
      is translating wp2latex into C and adding some WordPerfect 5.1
      features, in particular its equation handling.  This is an ongoing
      project; the most recent version can be retrieved via anonymous ftp
      from suphys.physics.su.oz.au (129.78.129.1) in ./wp2latex. It was 
      posted to alt.sources on 8 August 1990.

      Commercial packages are available for DOS which convert from
      WordPerfect to LaTeX, and from TeX and LaTeX to WordPerfect, but
      I am unaware of any free products which do this.

    PC-Write - pcwritex.arc is available on wuarchive.wustl.edu
      (128.252.135.4) in directory mirrors/msdos/tex and on
      wsmr-simtel20.army.mil (192.88.110.20) in directory pd1:<msdos.tex>.
      This is a print driver for PC-Write that ``prints'' a PC-Write V2.71
      document to a TeX-compatible disk file.  It was written by Peter
      Flynn at University College, Cork, Ireland.  It is public domain.  

    runoff - Peter Vanroose (vanroose@esat.kuleuven.ac.be) has 
      written a RUNOFF-to-TeX conversion program in VMS Pascal.  It is 
      available from comp.text archives (they do exist, don't they?  The 
      program was submitted in December 1987) or from the author 
      (peter@dit.lth.se) or from Mark James (jamesm@procor.dialogic.com).

    refer/Tib - There are a few programs for converting bibliographic data 
      between BibTeX and refer/Tib formats.  They are available via 
      anonymous ftp from ftp.ai.mit.edu (128.52.32.11) in the 
      directory ./pub/refer-to-bibtex.  In spite of the directory name, 
      it also contains a  shell script to convert BibTeX to REFER as 
      well. Unfortunately, this collection is not maintained.

    RTF - A program for converting Microsoft's Rich Text Format to TeX
      is available via anonymous ftp from astro.princeton.edu
      (128.112.128.131) in ./pub/rtf2TeX.tar.Z. It was written and is
      maintained by Robert Lupton (rhl@astro.princeton.edu). There is
      also an rtf2LateX written by Erwin Wechtl available from 
      ftp.vmars.tuwien.ac.at (128.130.39.16) in ./pub/misc.

    Microsoft Word - A rudimentary program for converting MS-Word
      to LaTeX is wd2latex, for MS-DOS, available via anonymous ftp
      from any CTAN site (see question 22). A better idea, however, 
      is to convert the document to RTF format and use the RTF 
      converter mentioned above.
    
    In addition, a group at Ohio State University is working on a common
    document format based on SGML.  In theory any format could be
    translated to or from this one.  Also, Framemaker supposedly has
    ``import filters'' to aid in the translation from alien formats
    (presumably including TeX) to Framemaker; perhaps other desktop
    publishing programs have similar things.
      
25) How do I get a file into the major style repositories?
    
    Use anonymous ftp to any CTAN archive (see question 22) and
    retrieve the file README.uploads in the root directory. It contains
    instructions for uploading files and notifying the appropriate
    people for that site.

    If you cannot use ftp, mail your contribution to sty-mgr@shsu.edu
    and it will be passed along. You will make everyone's life easier
    if you choose a descriptive and unique name for your submission, so
    it's probably good idea to browse through some of the styles
    already available to insure your style file's name is not already
    in use.

26) Where can I get font Y?

    A comprehensive list of METAFONT fonts is posted to Comp.fonts
    about once every six weeks by Lee Quin (lee@sq.sq.com). It contains
    both commercial fonts and fonts available via anonymous ftp. Most
    of the fonts available via anonymous ftp are available from
    the CTAN archives (see question 22). Also, the file wujastyk.txh
    ./tex-archive/digests/texhax/txh/wujastyk.txh is a copy of
    Dominik Wujastyk's font article, and contains information on
    METAFONT fonts as well.

27) Where can I get a dvi driver for the HP LaserJet?

    PC - The emtex package mentioned in question 19 contains a driver for
       the LaserJet, dvihplj. 

    Version 2.10 of the Beebe drivers support the LaserJet. These drivers
    will compile under Unix, VMS, and on the Atari ST and DEC-20's. They
    are available from ftp.math.utah.edu (128.110.198.34) in ./pub/tex/dvi.

28) TeX and LaTeX are hyphenating words weirdly. What can I do?

    You have a version mismatch problem. The hyphenation algorithm changed
    between version 2.9 and 3.0. If you are using TeX version 3.0 or
    later, make sure you have plain.tex and lplain.tex files with a
    version number of at least 3.0.

    For those of you curious about the change, here's what happened:
    in versions of TeX before 3.0 the hyphenation algorithm would not
    break a word if the part before the break was not at least two
    characters long, and the part after the break at least three 
    characters long. Starting with version 3.0 two integer parameters,
    \lefthyphenmin and \righthyphenmin, control the length of these
    fragments. These are set to 2 and 3, respectively, in the new
    plain and lplain formats. They can be set to any value, of course,
    but if \lefthyphenmin + \righthyphenmin is greater than 62, all
    hyphenation is suppressed.

29) How can I convert a TeX or LaTeX file into a plain ASCII file,
    with all the formatting intact, a la nroff?

    Ralph Droms (droms@bucknell.edu) has a style file and a C program
    that provide the LaTeX equivalent of nroff. Although it doesn't do
    a good job with tables and math, it's the best way to convert that
    I've seen. The software is available for anonymous ftp from
    sol.cs.bucknell.edu (134.82.1.8) in ./droms/txt-dist.tar. This is a
    modification of the dvi2tty program; the original often does an
    acceptable job and can be gotten from any CTAN site (see question 22).

    Another possibility is to use screen.sty, available from all the
    major archives. However you need a program called crudetype to
    process the resulting dvi file. It is available from
    emx.utexas.edu (128.83.186.11) in
    ./pub/mnt/source/tex/tex-3.0/DVIware/lpr-viewers/crudetype and
    from ftp.uni-stuttgart.de (129.69.8.13) in
    ./tex-archive/dviware/screenview. Another possibility is to use
    the LaTeX-to-ASCII conversion program, l2a, available from
    comp.sources.misc archives (one archive site is ftp.uu.net
    (192.48.96.9)), although this is really more of a de-TeXing
    program. If you are running under Unix and have C++ and perl, you
    might try Jonathan Monsarrat's LameTeX package (which actually
    does much more than this), available from wilma.cs.brown.edu
    (128.148.33.66) in ./pub/lametex.tar.Z.

30) How do I enlarge TeX? I keep getting `memory capacity exceeded'
    errors.

    Most of the time, a ``memory capacity exceeded'' error can be fixed
    without enlarging TeX.  The most common causes are unmatched braces,
    extra-long lines, and poorly-written macros.  Extra-long lines
    are often introduced when files are transferred incorrectly between
    operating systems.  (The tell-tale sign of an extra-long line error
    is when the complaint is that the `buf_size' has overflowed.)

    If you really need to extend your TeX's capacity, the proper method
    varies depending on your installation.  In the purest form, you
    change the parameters in module 11 (``The following parameters can
    be changed...'')  In less pure forms, you might need to modify a
    change file, or perhaps change some environment variables.  Consult
    the documentation that came with your particular implementation.

31) In LaTeX, I used \pagestyle{empty}, but the first page is still 
    numbered. What do I do?

    If you see this, you are using the \maketitle command too. This is
    not a bug but a feature! The standard LaTeX styles are written so
    that initial pages (pages containing a \maketitle, \part, or \chapter)
    have a different page style than the rest of the document. Hence, the
    above commands internally issue a \thispagestyle{plain}. This is
    usually not acceptable behavior is the page style is `empty'.

    Possible workarounds include:   
     - Put \thispagestyle{empty} immediately after the \maketitle command, 
       with no blank line between them.
     - Use fancyheadings.sty, available from any CTAN (see question 22).
       In this style, the style for initial pages can be customized as well.

32) Where do I find documentation about BibTeX?

    BibTeX, a program originally designed to produce bibliographies in
    conjunction with LaTeX, is explained in Section 4.3 and Appendix B 
    of Leslie Lamport's LaTeX manual.  The ``BibTeXing'' document, 
    contained in the file btxdoc.tex, gives a more complete description.
    _The LaTeX Companion_ also has information on BibTeX and writing 
    BibTeX style files.

    The ``Designing BibTeX Styles'' document, contained in the file 
    btxhak.tex, explains the postfix stack-based language used to
    write BibTeX styles (.bst files).  The file btxbst.doc is the template
    file for the four standard styles (plain, abbrv, alpha, unsrt). It
    also contains the documentation for them.

    The current Unix-BibTeX man page, contained in the file
    bibtex.1, was updated in January 1992 and is about one page long.
    There's an old and obsolete version floating around, written in 1985
    before ``BibTeXing'' and ``Designing BibTeX Styles'' appeared, that is
    several pages long.  You should ignore it (or throw it away), since it
    describes BibTeX version 0.98, style files of which are incompatible 
    with the current version, 0.99 (to be precise, 0.99c).

    All files mentioned in this answer are available via anonymous ftp
    from labrea.stanford.edu (36.8.0.112) in the BibTeX ftp area, 
    tex/bibtex. All the non-Unix files should be available on any system 
    that runs BibTeX; if they're not on your system, please complain to 
    your BibTeX installer or to your distribution source.

33) How do I use BibTeX with plain TeX?

    The file btxmac.tex contains TeX macros and documentation for using
    BibTeX with plain TeX, either directly or with Karl Berry's Eplain
    package. It is available via anonymous ftp from labrea.stanford.edu
    (36.8.0.112) in tex/bibtex (see question 32 for more information 
    about BibTeX).

34) How do I draw Feynman diagrams in LaTeX?

    Michael Levine's macro package for drawing Feynman diagrams in LaTeX
    is available via mail-server from physics.utoronto.ca. Send a message
    containing the line ``send INDEX'' to mail-server@physics.utoronto.ca
    for information on how to retrieve it. It is also available from any
    CTAN site or mirror (see question 22).

35) What is the New Font Selection Scheme (NFSS)?

    NFSS is an extension to LaTeX written by Frank Mittelbach and Rainer
    Sch\"opf. It is described in TUGboat, volume 10 (1989), No. 2.
    In traditional typesetting, fonts are described by four parameters:
    the family (e.g., computer modern), the series (i.e., the weight and
    width of the font, like light or bold), the shape (e.g., italic), and
    the size. NFSS is a mechanism allowing the user to change any of these
    independently. NFSS makes it relatively easy to use nonstandard fonts
    such as the PostScript ones with LaTeX, and easy to change math fonts.
    It also allows dynamic loading of fonts at runtime (not when the
    format file is created).

    NFSS is no longer supported for LaTeX version 2.09, but is standard
    with LaTeX2e (see question 41).

    There is one caveat that applies to LaTeX documents written for
    the OLD scheme: some of them use special styles for special fonts
    which will not work under the NFSS.

36) In LaTeX, my cross-references for floats (figures and tables) are
    incorrect. What's wrong?

    The \label command must come after the \caption command, or
    be part of it. For example,
       \begin{figure}               \begin{figure}
       \caption{A Figure}    or     \caption{A Figure\label{fig}}
       \label{fig}                  \end{figure}
       \end{figure}

37) I want to change the margins in LaTeX. What can I do?

    This answer first helps you change the margins throughout a
    document, then tells you how to change the margins in a portion
    of the document.

    Perhaps the easiest way to get more out of a page in LaTeX is to
    get fullpage.sty, available from all the major archive servers
    mentioned in question 22. This sets the margins of the page identical
    to those of Plain TeX, i.e., 1-inch margins at all four sides of the
    paper. It also contains an adjustment for A4 paper.

    Here is a brief explanation of what's going on with the page
    parameters in LaTeX. They are explained in section C.4.2 of the
    LaTeX manual (p. 163). The margin parameters represent measurements
    made to the DVI file. The origin in DVI coordinates is one inch
    from the top of the paper and one inch from the left side. This
    explains the ``one inch less than'' terminology used in the LaTeX
    manual. In DVI coordinates, positive horizontal measurements extend
    right across the page, and positive vertical measurements extend down
    the page. Thus, for margins closer to the left and top edges of the
    page than 1 inch, the corresponding parameters, e.g.,
    \evensidemargin, \oddsidemargin, \topmargin, can be set to negative
    values.

    Finally, to change the margins of a document within the document,
    modifying the parameters listed on page 163 will not work. They
    can only be changed in the preamble of the document, i.e, before
    the \begin{document} statement. To adjust the margins within a
    document we define an environment which does it:
      \newenvironment{changemargin}[2]{\begin{list}{}{
         \setlength{\topsep}{0pt}\setlength{\leftmargin}{0pt}
         \setlength{\rightmargin}{0pt}
         \setlength{\listparindent}{\parindent}
         \setlength{\itemindent}{\parindent}
         \setlength{\parsep}{0pt plus 1pt}
         \addtolength{\leftmargin}{#1}\addtolength{\rightmargin}{#2}
         }\item }{\end{list}}
    This environment takes two arguments, and will indent the left
    and right margins by their values, respectively. Negative values
    will cause the margins to be widened, so
    \begin{changemargin}{-1cm}{-1cm} widens the left and right margins
    by 1cm.

38) How do I find the width of a letter, word, or phrase in TeX?

    Put the word in a box, and measure the width of the box. For example,
        \setbox0=\hbox{hi}
        width=\wd0
    Note that if the quantity in the hbox is a phrase, the actual 
    measurement only approximates this width, since the interword glue
    can be adjusted in paragraph mode.

    In LaTeX, the following works (taken from the manual):
        \newlength{\gnat}
        \settowidth{\gnat}{\em small}
    This sets the value of the length command \gnat to the width of ``small''
    in emphasized text.

39) In LaTeX, is there a comment or ``ignore'' environment with which
    I can exclude blocks of text from the .dvi file?

    Rainer Sch\"opf's verbatim.sty provides a comment environment which
    excludes everything between \begin{comment} and \end{comment}. It is
    available via anonymous ftp from any CTAN site (see question 22) in
    ./tex-archive/macros/latex/distribs. Several files are needed to
    install the package. A more general environment for doing this is
    comment.sty, also available from the CTAN sites in
    ./tex-archive/macros/latex/contrib/misc.

40) Where can I find a spelling checker for my TeX file?

    For Unix, ispell is probably the program of choice. It is available
    from any CTAN site (see question 22) in ./tex-archive/support/ispell.

    For DOS, jspell is an extended version of ispell, and is available via
    anonymous ftp from oak.oakland.edu (141.210.10.117) in 
    ./pub/msdos/tex/jspell*.zip.

    For VMS, a spell checker can be found via anonymous ftp from ftp.spc.edu
    in  [.MACRO32.SAVESETS]. Retrieve SPELL.ZIP and SPELL_DICTIONARY.ZIP. 

41) What is LaTeX2e?

    LaTeX2e is the new standard version of LaTeX, prepared and
    supported by the LaTeX3 project team. It is the current version of
    LaTeX and is available from any CTAN site (see question 22) in
    ./tex-archive/macros/latex. LaTeX 2.09 is no longer supported.

    LaTeX2e is upwardly compatible with LaTeX 2.09, but supports many new
    features, including:
     - NFSS (see question 35) is now standard.
     - SliTeX is consolidated into it, and there is no longer a need for
       a separate program.
     - The output routine gives better control of floating environments,
       such as figures.
     - There is a documented interface to style files.
     - Enhanced box commands, e.g., options to specify the height of a 
       minipage.
     - \ref is now robust and can be used in \caption.
     - \newcommand can define commands with optional arguments.
     - A standard package for color and graphics inclusion.

    Since LaTeX2e is supported, you can report bugs or problems with it by
    typing `latex latexbug' and sending the report it generates to 
    latex-bugs@rus.uni-stuttgart.de.

42) In LaTeX, how can I define a new log-like function?

    Use the \mathop command, as in:
         \newcommand{\diag}{\mathop{\mathrm{diag}}}

    Subscripts and superscripts to \diag will be done identically to \lim.
    If you want your subscripts and superscripts placed to the right, do:
         \newcommand{\diag}{\mathop{\mathrm{diag}}\nolimits}

    Older versions of LaTeX may not define \mathrm; alternatively, use
    {\rm diag}.

43) In LaTeX, how do I put a \sqrt in my \caption statement?

    \sqrt is a fragile command and the argument to \caption is ordinarily
    a moving argument. Therefore \sqrt needs to be preceded with a \protect
    command.

44) In LaTeX, how do I get thin and thick \hlines in a table?

    In the preamble, do: 
         \setlength{\doublerulesep}{\arrayrulewidth}.
    Then in a table or array, do:
         <stuff in the table>  \\\hline         %thin hline
         <more stuff in table> \\\hline\hline   %thick hline

45) In LaTeX, how do I number the bibliography using Arabic numbers without
    square brackets or using superscripts?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\@biblabel[1]{#1.}     % Arabic numbers, no brackets
         \renewcommand\@biblabel[1]{$^{#1}$} % Superscripts

46) In LaTeX, why are my cites all numbered zero?

    Your document style and your version of LaTeX are incompatible.
    Since this may reflect an incomplete update done at some point,
    you should probably get the complete distribution (see question
    22).

    This problem usually occurs using an old university style file
    which is not maintained. If you are going to correct the style
    file, the definition of \thebibliography needs to be updated from
    article.cls (or article.sty).

47) In LaTeX, my figures get put on a page by themselves with too much
    whitespace, but when I tried \begin{figure}[t] they get printed at
    the end. Why?

    Your figures are bigger than \floatpagefraction, but you are
    willing to accept pages with less text than the default.  Use:
         \renewcommand\floatpagefraction{.9}
         \renewcommand\topfraction{.9}
         \renewcommand\bottomfraction{.9}
         \renewcommand\textfraction{.1}

    You can adjust the cut-off value if you like, but it makes no
    sense to go higher than .95 (LaTeX's default value is only .5).
    Also, the first 3 values should be equal, and the last should be
    1 - \floatpagefraction.  Otherwise, you are likely to get floats
    flushed to the end.

48) In LaTeX, how do I make a line break in a section title?

    It is better to try to prevent bad breaks by using ~ than to force
    good breaks. Unfortunately, LaTeX's default styles make titles with
    flush margins and most other styles have followed, so this may not
    work in many cases. You should definitely avoid hyphenation in titles.

    To force line breaks in a title, but not in the table of contents,
    use the optional argument for \section:
         \section[This is the Title]{This is\\ the Title}

    One benefit of this is that \\ is safe and no \protect is needed.

49) In LaTeX, how do I number equations by section?

    In a style file (or between \makeatletter ... \makeatother, see
    question 6), put:
         \renewcommand\theequation{\thesection.\arabic{equation}}
         \@addtoreset{equation}{section}

    If you have chapters with a preamble that comes before the first
    section, you should not put equations there, as you will get funny
    numbers like 3.0.1. There are also two style files available from
    any CTAN site called seceqn.sty and apeqnum.sty. The first numbers
    equations by section, and the second gives individual equation
    numbers to equations in the appendix.

-- 
Bobby Bodenheimer				@hot.caltech.edu
// ARPA  : bobby@hot.caltech.edu                |
// BITNET: bobby@caltech.bitnet                 | Woof!
// UUCP  : {amdahl,ames!elroy}!cit-vax!bobby    | 


#define FPR_L(N)		(F.l[(N)^1])
#define SET_FPR_L(N,EXPR)	(F.l[(N)^1] = (EXPR))
#define FPR_F(N)		(F.f[(N)^1])
#define SET_FPR_F(N,EXPR)	(F.f[(N)^1] = (EXPR))
#define FPR_D(N)		(F.d[(N) >> 1])
#define SET_FPR_D(N,EXPR)	(F.d[(N) >> 1] = (EXPR))

#define SET_HI(EXPR)		(HI = (EXPR))
#define SET_LO(EXPR)		(LO = (EXPR))
#define FC			(FCond)
#define SET_FC(EXPR)		(FCond = (EXPR))

#define TCacheAccess(cp, op, addr, dest, sz, tally)			\
  (blockingCache							\
   ? ({									\
	 ulong lat;							\
	 lat = CacheAccess(cp, op, addr, dest, sz, cycle, tally);	\
	 pipeStats.dcStall += numIssue * lat;				\
	 cycle += lat;							\

####################################################################
#### Compiling SPECINT92/benchspec/008.espresso...
####################################################################
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" espresso-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cofactor.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c compl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compl.c:78: warning: static declaration for `compl_special_cases' follows non-static
compl.c:161: warning: static declaration for `compl_merge' follows non-static
compl.c:253: warning: static declaration for `compl_lift' follows non-static
compl.c:290: warning: static declaration for `compl_lift_onset' follows non-static
compl.c:325: warning: static declaration for `compl_lift_onset_complex' follows non-static
compl.c:363: warning: static declaration for `compl_d1merge' follows non-static
compl.c:385: warning: static declaration for `compl_cube' follows non-static
compl.c:459: warning: static declaration for `simp_comp_special_cases' follows non-static
compl.c:596: warning: static declaration for `simplify_special_cases' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c contain.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cubestr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrmisc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cvrout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c equiv.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c espresso.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c essen.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c exact.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expand.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gasp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c globals.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c irred.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c map.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c opo.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
opo.c:608: warning: static declaration for `minimize' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pair.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c primes.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c set.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c setc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sharp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sminterf.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sparse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c verify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cpu_time.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c prtime.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c strsav.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c matrix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rows.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cols.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dominate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c mincov.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
mincov.c:255: warning: static declaration for `select_column' follows non-static
mincov.c:312: warning: static declaration for `select_essential' follows non-static
mincov.c:353: warning: static declaration for `verify_cover' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gimpel.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c solution.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c part.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
part.c:48: warning: `visit_col' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c indep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c qsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs espresso-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o espresso-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" espresso-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cofactor.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c compl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compl.c:78: warning: static declaration for `compl_special_cases' follows non-static
compl.c:161: warning: static declaration for `compl_merge' follows non-static
compl.c:253: warning: static declaration for `compl_lift' follows non-static
compl.c:290: warning: static declaration for `compl_lift_onset' follows non-static
compl.c:325: warning: static declaration for `compl_lift_onset_complex' follows non-static
compl.c:363: warning: static declaration for `compl_d1merge' follows non-static
compl.c:385: warning: static declaration for `compl_cube' follows non-static
compl.c:459: warning: static declaration for `simp_comp_special_cases' follows non-static
compl.c:596: warning: static declaration for `simplify_special_cases' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c contain.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cubestr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrmisc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cvrout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c equiv.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c espresso.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c essen.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c exact.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expand.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gasp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c globals.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c irred.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c map.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c opo.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
opo.c:608: warning: static declaration for `minimize' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pair.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c primes.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c set.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c setc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sharp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sminterf.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sparse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c verify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cpu_time.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c prtime.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c strsav.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c matrix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rows.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cols.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dominate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c mincov.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
mincov.c:255: warning: static declaration for `select_column' follows non-static
mincov.c:312: warning: static declaration for `select_essential' follows non-static
mincov.c:353: warning: static declaration for `verify_cover' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gimpel.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c solution.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c part.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
part.c:48: warning: `visit_col' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c indep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c qsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs espresso-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o espresso-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/008.espresso'
rm -f espresso-ss* espresso.m cofactor.g compl.g contain.g cubestr.g cvrin.g cvrm.g cvrmisc.g cvrout.g equiv.g espresso.g essen.g exact.g expand.g gasp.g globals.g hack.g irred.g main.g map.g opo.g pair.g primes.g reduce.g set.g setc.g sharp.g sminterf.g sparse.g unate.g verify.g cpu_time.g prtime.g strsav.g getopt.g matrix.g rows.g cols.g dominate.g mincov.g gimpel.g solution.g part.g indep.g qsort.g espresso.cg cofactor.o compl.o contain.o cubestr.o cvrin.o cvrm.o cvrmisc.o cvrout.o equiv.o espresso.o essen.o exact.o expand.o gasp.o globals.o hack.o irred.o main.o map.o opo.o pair.o primes.o reduce.o set.o setc.o sharp.o sminterf.o sparse.o unate.o verify.o cpu_time.o prtime.o strsav.o getopt.o matrix.o rows.o cols.o dominate.o mincov.o gimpel.o solution.o part.o indep.o qsort.o  core
####################################################################
#### Compiling SPECINT92/benchspec/022.li...
####################################################################
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" xlisp-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlbfun.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlbfun.c:189: warning: static declaration for `bquote1' follows non-static
xlbfun.c:319: warning: `placeform' was declared implicitly `extern' and later `static'
xlbfun.c:396: warning: static declaration for `defun' follows non-static
xlbfun.c:468: warning: static declaration for `makesymbol' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlcont.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlcont.c:110: warning: `keypresent' was declared implicitly `extern' and later `static'
xlcont.c:211: warning: static declaration for `let' follows non-static
xlcont.c:259: warning: static declaration for `prog' follows non-static
xlcont.c:334: warning: static declaration for `progx' follows non-static
xlcont.c:398: warning: static declaration for `doloop' follows non-static
xlcont.c:755: warning: `dobindings' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xldbug.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldbug.c:75: warning: `doerror' was declared implicitly `extern' and later `static'
xldbug.c:87: warning: `breakloop' was declared implicitly `extern' and later `static'
xldbug.c:162: warning: static declaration for `stacktop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xldmem.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldmem.c:210: warning: static declaration for `newnode' follows non-static
xldmem.c:235: warning: static declaration for `stralloc' follows non-static
xldmem.c:253: warning: static declaration for `strsave' follows non-static
xldmem.c:401: warning: `sweep' was declared implicitly `extern' and later `static'
xldmem.c:486: warning: `livecar' was declared implicitly `extern' and later `static'
xldmem.c:512: warning: `livecdr' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xleval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xleval.c:105: warning: static declaration for `evform' follows non-static
xleval.c:158: warning: static declaration for `evalhook' follows non-static
xleval.c:235: warning: static declaration for `evfun' follows non-static
xleval.c:338: warning: `iskeyword' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlfio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlfio.c:90: warning: static declaration for `printit' follows non-static
xlfio.c:132: warning: static declaration for `flatsize' follows non-static
xlfio.c:170: warning: static declaration for `openit' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlftab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlglob.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlinit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlisp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xljump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xljump.c:127: warning: `findtarget' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xllist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xllist.c:66: warning: static declaration for `cxr' follows non-static
xllist.c:316: warning: static declaration for `subst' follows non-static
xllist.c:362: warning: static declaration for `sublis' follows non-static
xllist.c:382: warning: static declaration for `assoc' follows non-static
xllist.c:471: warning: static declaration for `nth' follows non-static
xllist.c:553: warning: static declaration for `map' follows non-static
xllist.c:829: warning: static declaration for `cequal' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlmath.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlmath.c:108: warning: static declaration for `binary' follows non-static
xlmath.c:295: warning: static declaration for `unary' follows non-static
xlmath.c:379: warning: static declaration for `predicate' follows non-static
xlmath.c:461: warning: static declaration for `compare' follows non-static
xlmath.c:523: warning: `badiop' was declared implicitly `extern' and later `static'
xlmath.c:529: warning: `badfop' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlobj.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlobj.c:342: warning: static declaration for `entermsg' follows non-static
xlobj.c:363: warning: static declaration for `findmsg' follows non-static
xlobj.c:385: warning: static declaration for `sendmsg' follows non-static
xlobj.c:443: warning: `getivcnt' was declared implicitly `extern' and later `static'
xlobj.c:453: warning: `listlength' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlprin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlprin.c:107: warning: `putstring' was declared implicitly `extern' and later `static'
xlprin.c:152: warning: `putatm' was declared implicitly `extern' and later `static'
xlprin.c:161: warning: `putdec' was declared implicitly `extern' and later `static'
xlprin.c:169: warning: `putfloat' was declared implicitly `extern' and later `static'
xlprin.c:177: warning: `putoct' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlread.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlread.c:392: warning: static declaration for `phexnumber' follows non-static
xlread.c:410: warning: static declaration for `plist' follows non-static
xlread.c:477: warning: static declaration for `pvector' follows non-static
xlread.c:528: warning: static declaration for `pquote' follows non-static
xlread.c:553: warning: static declaration for `pname' follows non-static
xlread.c:575: warning: static declaration for `tentry' follows non-static
xlread.c:586: warning: `nextch' was declared implicitly `extern' and later `static'
xlread.c:598: warning: `checkeof' was declared implicitly `extern' and later `static'
xlread.c:609: warning: `badeof' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlstr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsubr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsym.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlsym.c:192: warning: static declaration for `findprop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xlsys.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unixstuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs xlisp-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o xlisp-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" xlisp-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlbfun.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlbfun.c:189: warning: static declaration for `bquote1' follows non-static
xlbfun.c:319: warning: `placeform' was declared implicitly `extern' and later `static'
xlbfun.c:396: warning: static declaration for `defun' follows non-static
xlbfun.c:468: warning: static declaration for `makesymbol' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlcont.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlcont.c:110: warning: `keypresent' was declared implicitly `extern' and later `static'
xlcont.c:211: warning: static declaration for `let' follows non-static
xlcont.c:259: warning: static declaration for `prog' follows non-static
xlcont.c:334: warning: static declaration for `progx' follows non-static
xlcont.c:398: warning: static declaration for `doloop' follows non-static
xlcont.c:755: warning: `dobindings' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xldbug.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldbug.c:75: warning: `doerror' was declared implicitly `extern' and later `static'
xldbug.c:87: warning: `breakloop' was declared implicitly `extern' and later `static'
xldbug.c:162: warning: static declaration for `stacktop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xldmem.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xldmem.c:210: warning: static declaration for `newnode' follows non-static
xldmem.c:235: warning: static declaration for `stralloc' follows non-static
xldmem.c:253: warning: static declaration for `strsave' follows non-static
xldmem.c:401: warning: `sweep' was declared implicitly `extern' and later `static'
xldmem.c:486: warning: `livecar' was declared implicitly `extern' and later `static'
xldmem.c:512: warning: `livecdr' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xleval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xleval.c:105: warning: static declaration for `evform' follows non-static
xleval.c:158: warning: static declaration for `evalhook' follows non-static
xleval.c:235: warning: static declaration for `evfun' follows non-static
xleval.c:338: warning: `iskeyword' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlfio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlfio.c:90: warning: static declaration for `printit' follows non-static
xlfio.c:132: warning: static declaration for `flatsize' follows non-static
xlfio.c:170: warning: static declaration for `openit' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlftab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlglob.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlinit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlisp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xljump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xljump.c:127: warning: `findtarget' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xllist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xllist.c:66: warning: static declaration for `cxr' follows non-static
xllist.c:316: warning: static declaration for `subst' follows non-static
xllist.c:362: warning: static declaration for `sublis' follows non-static
xllist.c:382: warning: static declaration for `assoc' follows non-static
xllist.c:471: warning: static declaration for `nth' follows non-static
xllist.c:553: warning: static declaration for `map' follows non-static
xllist.c:829: warning: static declaration for `cequal' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlmath.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlmath.c:108: warning: static declaration for `binary' follows non-static
xlmath.c:295: warning: static declaration for `unary' follows non-static
xlmath.c:379: warning: static declaration for `predicate' follows non-static
xlmath.c:461: warning: static declaration for `compare' follows non-static
xlmath.c:523: warning: `badiop' was declared implicitly `extern' and later `static'
xlmath.c:529: warning: `badfop' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlobj.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlobj.c:342: warning: static declaration for `entermsg' follows non-static
xlobj.c:363: warning: static declaration for `findmsg' follows non-static
xlobj.c:385: warning: static declaration for `sendmsg' follows non-static
xlobj.c:443: warning: `getivcnt' was declared implicitly `extern' and later `static'
xlobj.c:453: warning: `listlength' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlprin.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlprin.c:107: warning: `putstring' was declared implicitly `extern' and later `static'
xlprin.c:152: warning: `putatm' was declared implicitly `extern' and later `static'
xlprin.c:161: warning: `putdec' was declared implicitly `extern' and later `static'
xlprin.c:169: warning: `putfloat' was declared implicitly `extern' and later `static'
xlprin.c:177: warning: `putoct' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlread.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlread.c:392: warning: static declaration for `phexnumber' follows non-static
xlread.c:410: warning: static declaration for `plist' follows non-static
xlread.c:477: warning: static declaration for `pvector' follows non-static
xlread.c:528: warning: static declaration for `pquote' follows non-static
xlread.c:553: warning: static declaration for `pname' follows non-static
xlread.c:575: warning: static declaration for `tentry' follows non-static
xlread.c:586: warning: `nextch' was declared implicitly `extern' and later `static'
xlread.c:598: warning: `checkeof' was declared implicitly `extern' and later `static'
xlread.c:609: warning: `badeof' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlstr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsubr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsym.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
xlsym.c:192: warning: static declaration for `findprop' follows non-static
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xlsys.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unixstuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs xlisp-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o xlisp-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/022.li'
rm -f xlisp-ss* xlisp.m xlbfun.g xlcont.g xldbug.g xldmem.g xleval.g xlfio.g xlftab.g xlglob.g xlinit.g xlio.g xlisp.g xljump.g xllist.g xlmath.g xlobj.g xlprin.g xlread.g xlstr.g xlsubr.g xlsym.g xlsys.g unixstuff.g xlisp.cg xlbfun.o xlcont.o xldbug.o xldmem.o xleval.o xlfio.o xlftab.o xlglob.o xlinit.o xlio.o xlisp.o xljump.o xllist.o xlmath.o xlobj.o xlprin.o xlread.o xlstr.o xlsubr.o xlsym.o xlsys.o unixstuff.o  core
####################################################################
#### Compiling SPECINT92/benchspec/023.eqntott...
####################################################################
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" eqntott-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c bnode.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c canon.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cover.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c duple.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c merge.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
merge.c: In function `trymerge':
merge.c:167: warning: type mismatch with previous external decl
merge.c:31: warning: previous external decl of `pthash'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c nt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c prexpr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c procargs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pterm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c pterm_ops.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c putpla.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c read_ones.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rmcvd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c substitute.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c x.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c y.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c yystuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs eqntott-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o eqntott-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" eqntott-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c bnode.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c canon.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cover.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c duple.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c merge.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
merge.c: In function `trymerge':
merge.c:167: warning: type mismatch with previous external decl
merge.c:31: warning: previous external decl of `pthash'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c nt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c prexpr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c procargs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pterm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c pterm_ops.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c putpla.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c read_ones.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reduce.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rmcvd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c substitute.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c x.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c y.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c yystuff.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs eqntott-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o eqntott-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/023.eqntott'
rm -f eqntott-ss* eqntott.m bnode.g canon.g cover.g duple.g hash.g merge.g misc.g nt.g prexpr.g procargs.g pterm.g pterm_ops.g putpla.g read_ones.g reduce.g rmcvd.g substitute.g x.g y.tab.g yystuff.g ucbqsort.g version.g eqntott.cg bnode.o canon.o cover.o duple.o hash.o merge.o misc.o nt.o prexpr.o procargs.o pterm.o pterm_ops.o putpla.o read_ones.o reduce.o rmcvd.o substitute.o x.o y.tab.o yystuff.o ucbqsort.o version.o  core
####################################################################
#### Compiling SPECINT92/benchspec/026.compress...
####################################################################
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" compress-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c compress.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compress.c: In function `main':
compress.c:437: warning: assignment from incompatible pointer type
compress.c:437: warning: comparison of distinct pointer types lacks a cast
compress.c:438: warning: passing arg 2 of `signal' from incompatible pointer type
compress.c:439: warning: passing arg 2 of `signal' from incompatible pointer type
ld-ss -write-relocs compress-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o compress-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" compress-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c compress.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
compress.c: In function `main':
compress.c:437: warning: assignment from incompatible pointer type
compress.c:437: warning: comparison of distinct pointer types lacks a cast
compress.c:438: warning: passing arg 2 of `signal' from incompatible pointer type
compress.c:439: warning: passing arg 2 of `signal' from incompatible pointer type
ld-ss -write-relocs compress-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o compress-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
compress.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/026.compress'
rm -f compress-ss* compress.m compress.g compress.cg compress.o  core
####################################################################
#### Compiling SPECINT92/benchspec/072.sc...
####################################################################
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" sc-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
sc.c: In function `signals':
sc.c:1455: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1456: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1457: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1458: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1459: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1460: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c interp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
interp.c: In function `dotime':
interp.c:398: warning: passing arg 1 of `time' from incompatible pointer type
interp.c:403: warning: passing arg 1 of `localtime' from incompatible pointer type
interp.c: In function `dodate':
interp.c:742: warning: passing arg 1 of `ctime' from incompatible pointer type
interp.c: In function `doext':
interp.c:836: warning: assignment makes pointer from integer without a cast
interp.c: In function `RealEvalAll':
interp.c:1000: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1013: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `let':
interp.c:1376: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1383: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `slet':
interp.c:1419: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1426: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmds.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c crypt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c xmalloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c range.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c help.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c lex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
lex.c: In function `nmgetch':
lex.c:468: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c: In function `strtof':
lex.c:591: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:591: warning: assignment from incompatible pointer type
lex.c:595: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:662: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c gram.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs sc-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses -ltermcap -lm \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o sc-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses -ltermcap -lm \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" sc-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
sc.c: In function `signals':
sc.c:1455: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1456: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1457: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1458: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1459: warning: passing arg 2 of `signal' from incompatible pointer type
sc.c:1460: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c interp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
interp.c: In function `dotime':
interp.c:398: warning: passing arg 1 of `time' from incompatible pointer type
interp.c:403: warning: passing arg 1 of `localtime' from incompatible pointer type
interp.c: In function `dodate':
interp.c:742: warning: passing arg 1 of `ctime' from incompatible pointer type
interp.c: In function `doext':
interp.c:836: warning: assignment makes pointer from integer without a cast
interp.c: In function `RealEvalAll':
interp.c:1000: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1013: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `let':
interp.c:1376: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1383: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c: In function `slet':
interp.c:1419: warning: passing arg 2 of `signal' from incompatible pointer type
interp.c:1426: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmds.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c crypt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c xmalloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c range.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c help.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c lex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
lex.c: In function `nmgetch':
lex.c:468: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c: In function `strtof':
lex.c:591: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:591: warning: assignment from incompatible pointer type
lex.c:595: warning: passing arg 2 of `signal' from incompatible pointer type
lex.c:662: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DBSD42 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c gram.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs sc-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses-red -ltermcap-red -lm-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o sc-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o -lcurses-red -ltermcap-red -lm-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/072.sc'
rm -f sc-ss* sc.m sc.g interp.g cmds.g crypt.g xmalloc.g range.g help.g lex.g gram.g sc.cg sc.o interp.o cmds.o crypt.o xmalloc.o range.o help.o lex.o gram.o  core
####################################################################
#### Compiling SPECINT92/benchspec/085.gcc...
####################################################################
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" cc1-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-parse.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-decl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-typeck.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c c-convert.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c toplev.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c print-tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stor-layout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c fold-const.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stmt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c expmed.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c explow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c optabs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c varasm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c symout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dbxout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c sdbout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c emit-rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-emit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c integrate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c jump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c loop.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c flow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stupid.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c combine.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regclass.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c local-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c global-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reload.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c reload1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c caller-save.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-peep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c final.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-extract.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c insn-output.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs cc1-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o cc1-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" cc1-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-parse.tab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-decl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-typeck.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c c-convert.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c toplev.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c version.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c print-tree.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stor-layout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c fold-const.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expr.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stmt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c expmed.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c explow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c optabs.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c varasm.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c symout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dbxout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c sdbout.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c emit-rtl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-emit.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c integrate.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c jump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cse.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c loop.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c flow.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stupid.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c combine.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regclass.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c local-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ucbqsort.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ucbqsort.c:105: warning: `qst' was declared implicitly `extern' and later `static'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c global-alloc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reload.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c reload1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c caller-save.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-peep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c final.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-recog.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-extract.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c insn-output.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -I./config -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs cc1-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o cc1-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/085.gcc'
rm -f cc1-ss* cc1.m c-parse.tab.g c-decl.g c-typeck.g c-convert.g toplev.g version.g tree.g print-tree.g stor-layout.g fold-const.g rtl.g expr.g stmt.g expmed.g explow.g optabs.g varasm.g symout.g dbxout.g sdbout.g emit-rtl.g insn-emit.g integrate.g jump.g cse.g loop.g flow.g stupid.g combine.g regclass.g local-alloc.g ucbqsort.g global-alloc.g reload.g reload1.g caller-save.g insn-peep.g final.g recog.g insn-recog.g insn-extract.g insn-output.g obstack.g cc1.cg c-parse.tab.o c-decl.o c-typeck.o c-convert.o toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o rtl.o expr.o stmt.o expmed.o explow.o optabs.o varasm.o symout.o dbxout.o sdbout.o emit-rtl.o insn-emit.o integrate.o jump.o cse.o loop.o flow.o stupid.o combine.o regclass.o local-alloc.o ucbqsort.o global-alloc.o reload.o reload1.o caller-save.o insn-peep.o final.o recog.o insn-recog.o insn-extract.o insn-output.o obstack.o  core
####################################################################
#### Compiling SPECINT92/benchspec/aaa.elvis...
####################################################################
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" elvis-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c blk.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c e_ctype.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c curses.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
curses.c: In function `getsize':
curses.c:761: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cut.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c ex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c input.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c modify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move3.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move4.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c move5.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c opts.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c recycle.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c redraw.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regexp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regexp.c: In function `regcomp':
regexp.c:439: warning: assignment discards `volatile' from pointer target type
regexp.c:591: warning: return discards `volatile' from pointer target type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regsub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c system.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c tmp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vars.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vcmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c vi.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c unix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs elvis-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap -lcurses \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o elvis-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap -lcurses \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" elvis-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c blk.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c e_ctype.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c curses.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
curses.c: In function `getsize':
curses.c:761: warning: passing arg 2 of `signal' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cut.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c ex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c input.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c main.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c misc.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c modify.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move1.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move2.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move3.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move4.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c move5.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c opts.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c recycle.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c redraw.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regexp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regexp.c: In function `regcomp':
regexp.c:439: warning: assignment discards `volatile' from pointer target type
regexp.c:591: warning: return discards `volatile' from pointer target type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regsub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c system.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c tmp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vars.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vcmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c vi.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -Dbsd -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c unix.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs elvis-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap-red -lcurses-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o elvis-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o -ltermcap-red -lcurses-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/aaa.elvis'
rm -f elvis-ss* elvis.m blk.g cmd1.g cmd2.g e_ctype.g curses.g cut.g ex.g input.g main.g misc.g modify.g move1.g move2.g move3.g move4.g move5.g opts.g recycle.g redraw.g regexp.g regsub.g system.g tio.g tmp.g vars.g vcmd.g vi.g unix.g elvis.cg blk.o cmd1.o cmd2.o e_ctype.o curses.o cut.o ex.o input.o main.o misc.o modify.o move1.o move2.o move3.o move4.o move5.o opts.o recycle.o redraw.o regexp.o regsub.o system.o tio.o tmp.o vars.o vcmd.o vi.o unix.o  core
####################################################################
#### Compiling SPECINT92/benchspec/bbb.perl...
####################################################################
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" perl-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c perly.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c array.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c cons.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c consarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c doarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
doarg.c: In function `do_sprintf':
doarg.c:995: warning: initialization makes pointer from integer without a cast
doarg.c:1009: warning: initialization makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c doio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dolist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c eval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
eval.c: In function `eval':
eval.c:1674: warning: passing arg 1 of `time' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c form.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c perl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
perl.c: In function `main':
perl.c:143: warning: passing arg 1 of `sprintf' makes pointer from integer without a cast
perl.c:827: warning: assignment makes pointer from integer without a cast
perl.c:862: warning: assignment makes pointer from integer without a cast
perl.c: In function `incpush':
perl.c:949: warning: assignment makes pointer from integer without a cast
perl.c: In function `savelines':
perl.c:972: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regcomp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regcomp.c: In function `regcomp':
regcomp.c:248: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regexec.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c stab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c str.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c toke.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
toke.c: In function `checkcomma':
toke.c:1503: warning: assignment makes pointer from integer without a cast
toke.c: In function `scansubst':
toke.c:1809: warning: assignment makes pointer from integer without a cast
toke.c: In function `scanstr':
toke.c:2317: warning: assignment makes pointer from integer without a cast
toke.c: In function `load_format':
toke.c:2550: warning: assignment makes pointer from integer without a cast
toke.c:2671: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c util.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
util.c: In function `scanhex':
util.c:1770: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c usersub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs perl-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o perl-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" perl-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c perly.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c array.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cmd.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c cons.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c consarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c doarg.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
doarg.c: In function `do_sprintf':
doarg.c:995: warning: initialization makes pointer from integer without a cast
doarg.c:1009: warning: initialization makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c doio.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dolist.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dump.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c eval.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
eval.c: In function `eval':
eval.c:1674: warning: passing arg 1 of `time' from incompatible pointer type
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c form.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c perl.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
perl.c: In function `main':
perl.c:143: warning: passing arg 1 of `sprintf' makes pointer from integer without a cast
perl.c:827: warning: assignment makes pointer from integer without a cast
perl.c:862: warning: assignment makes pointer from integer without a cast
perl.c: In function `incpush':
perl.c:949: warning: assignment makes pointer from integer without a cast
perl.c: In function `savelines':
perl.c:972: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regcomp.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
regcomp.c: In function `regcomp':
regcomp.c:248: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regexec.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c stab.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c str.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c toke.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
toke.c: In function `checkcomma':
toke.c:1503: warning: assignment makes pointer from integer without a cast
toke.c: In function `scansubst':
toke.c:1809: warning: assignment makes pointer from integer without a cast
toke.c: In function `scanstr':
toke.c:2317: warning: assignment makes pointer from integer without a cast
toke.c: In function `load_format':
toke.c:2550: warning: assignment makes pointer from integer without a cast
toke.c:2671: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c util.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
util.c: In function `scanhex':
util.c:1770: warning: assignment makes pointer from integer without a cast
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c hash.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR  -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c usersub.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs perl-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o perl-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o -lcV-red \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/bbb.perl'
rm -f perl-ss* perl.m perly.g array.g cmd.g cons.g consarg.g doarg.g doio.g dolist.g dump.g eval.g form.g perl.g regcomp.g regexec.g stab.g str.g toke.g util.g hash.g usersub.g perl.cg perly.o array.o cmd.o cons.o consarg.o doarg.o doio.o dolist.o dump.o eval.o form.o perl.o regcomp.o regexec.o stab.o str.o toke.o util.o hash.o usersub.o  core
####################################################################
#### Compiling SPECINT92/benchspec/ccc.grep...
####################################################################
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
make -f Makefile.ss "EEXT=-ss-ext" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15" grep-ss-ext
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c grep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c regex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c dfa.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c kwset.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mr-plus-r -minc-dec=15  -c search.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs grep-ss-ext.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
ld-ss -o grep-ss-ext \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77 -lc -lI77 -lm \
-lgcc -lc -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
make -f Makefile.ss "EEXT=-ss-ext-red" "L_SUFFIX=-red" "DL_CMD=-O -mgen-dl -O -mgen-ds -O -mgen-da -O -mstr-align -O -mstr-stack -O -mr-plus-r -O -minc-dec=15" "DL_C_CMD=-mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15" grep-ss-ext-red
make[1]: Entering directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c grep.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c getopt.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c regex.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c dfa.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c kwset.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c obstack.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
gcc-ss -g -O2 -funroll-loops -fforce-addr -DUNDERBAR -DGREP -DHAVE_STRING_H=1 -DHAVE_SYS_PARAM_H=1 -DNEED_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMCHR=1 -mgen-dl -mgen-ds -mgen-da -mstr-align -mstr-stack -mr-plus-r -minc-dec=15  -c search.c
INC_DEC_OPTS: pre-inc:t post-inc:t pre-dec:t post-dec:t
ld-ss -write-relocs grep-ss-ext-red.m -o /dev/null \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
ld-ss -o grep-ss-ext-red \
-no-warn-common \
/u/grad/austin/research/gnu/ss-uw-sstrix/lib/crt0.o \
-L/u/grad/austin/research/gnu/lib/gcc-lib/ss-uw-sstrix/2.6.0 \
-L/u/grad/austin/research/gnu/ss-uw-sstrix/lib \
grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  \
-lF77-red -lc-red -lI77-red -lm-red \
-lgcc -lc-red -lgcc
make[1]: Leaving directory `/n/aura/austin/spec92/SPECINT92/benchspec/ccc.grep'
rm -f grep-ss* grep.m grep.g getopt.g regex.g dfa.g kwset.g obstack.g search.g grep.cg grep.o getopt.o regex.o dfa.o kwset.o obstack.o search.o  core
	 /* observed latency */0;					\
       })								\
   : CacheAccess(cp, op, addr, dest, sz, cycle, tally))

#define READ_MEM_UNSIGNED(DST,SRC,SZ,DIRECT)				\
  (memLat=TCacheAccess(dCache, Read, SRC, (uchar *)&temp##SZ, SZ, TRUE),\
   DST = (ulong)temp##SZ)
#define READ_MEM_SIGNED(DST,SRC,SZ,DIRECT)				\
  (memLat=TCacheAccess(dCache, Read, SRC, (uchar *)&temp##SZ, SZ, TRUE),\
   DST = (ulong)temp##SZ,						\
   ((DST) & (1 << ((SZ*8)-1))) ? DST |= (~((1 << (SZ*8))-1)) : 0)
#define WRITE_MEM(SRC,DST,SZ,DIRECT)					\
  (temp##SZ=(ulong)SRC,							\
   memLat=TCacheAccess(dCache, Write, DST, (uchar *)&temp##SZ, SZ, TRUE))

#define SYSCALL(INST)		(Syscall(DCacheAccess, INST))

static void
DCacheAccess(enum MemCmd cmd,		/* Read or Write */
	     ulong addr,		/* address to access */
	     uchar *p,			/* where to copy to/from */
	     int numBytes)		/* xfer length */
{
  CacheAccess(dCache, cmd, addr, p, numBytes, cycle, FALSE);
}

#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)
#define CONNECT(OP)
#define IMPL  Timing
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
#undef IMPL

extern ulong PC;
extern ulong Ihead, Itail;
extern struct SSInst *IR1;
extern ulong *PC1, *NPC1;
void SquashIDecode(void);

/* current VM page size */
static unsigned long pageSize = 4096;

/* virtual page number accessor */
#define VPN(addr)	((addr) & ~(pageSize-1))

static inline void
RegUpdate(unsigned long reg, unsigned long result,
	  unsigned long srcA, int validA, unsigned long srcB, int validB)
{
  unsigned long srcVPN;
  unsigned long destVPN;

  /* $r0 is always invalid as a pointer value */
  if (reg == 0)
    return;

  /* either valid, but not both, makes the result valid */
  valid[reg] = (validA || validB) && !(validA && validB);

  if (validA && validB)
    doubleValid++;

  if (valid[reg]) {
    if (validA)
      srcVPN = VPN(srcA);
    else
      srcVPN = VPN(srcB);

    destVPN = VPN(result);

    if (srcVPN != destVPN) {
      /* ran off the page */
      valid[reg] = FALSE;
      invalidOverrun++;
    }
    else
      invalidNoOverrun++;	/* still valid!!! */
  }
}

void
Execute(void)
{
  ulong i, nextPC;
  struct SSInst inst;
  uchar temp1;
  ushort temp2;
  ulong temp4;
  ulong exLat, memLat;
  unsigned long srcA, srcB;
  int validA, validB;
  int ldst, direct, jamFailed;

  for (i=0; i<N2; i++) {

    /* maintain R[0] semantics */
    R[0] = 0;

    assert(IC2[i] != Trap || N2 == 1);

    nextPC = PC2[i] + 8;
    inst = IR2[i];
    exLat = 0; memLat = 0;
    ldst = FALSE; direct = FALSE; jamFailed = TRUE;
    dirMode = FALSE; jamMode = FALSE; pCalcMode = FALSE; dualMode = FALSE;

    srcA = 0; validA = FALSE;
    srcB = 0; validB = FALSE;

    switch (OP2[i]) {

Article: 10118 of alt.sources
Path: uwvax!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!agate!doc.ic.ac.uk!uknet!pipex!sunic!news.funet.fi!nntp.hut.fi!nntp.hut.fi!tri
From: tri@snakemail.hut.fi (Timo Rinne)
Newsgroups: alt.sources
Subject: Re: Where is this code???
Date: 26 Feb 1994 13:49:33 GMT
Organization: Helsinki University of Technology
Lines: 755
Distribution: world
Message-ID: <TRI.94Feb26154933@gamma.hut.fi>
References: <2kl8t5INNlqd@owl.csrv.uidaho.edu>
Reply-To: Timo.Rinne@hut.fi
NNTP-Posting-Host: gamma.hut.fi
In-reply-to: ander882@priest.cs.uidaho.edu's message of 25 Feb 1994 16:27:17 GMT

>>>>> ander882@priest.cs.uidaho.edu (Craig J. Anderson) said:
> For a project (as described below) I'm in search of the following program.
> I've tried to reach the author but the mail keeps bouncing back and I don't
> know where the archives are.  Please help.

> language:	C, C++
> package:	Cyclo - cyclomatic complexity tool
> version:	the one and only version
> parts:		code analysis tool
> author:		Roger D Binns 
> how to get:	alt.sources archive, 1993/06/28, <C9C2rH.EE@brunel.ac.uk>
> description:	It measures cyclomatic complexity, shows function calls and 
> 		can draw flowgraphs of ANSI C and C++ code.
> requires:	lex, C++
> updated:	1993/06/28

begin 644 cyclo.tar.gz
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
1^[_O_^1L]O\#ZI&/*P`P`@!@
`
end


    case LB:
    case LBD:
    case LBU:
    case LBUD:
    case LH:
    case LHD:
    case LHU:
    case LHUD:
    case LW:
    case LWL:
    case LWR:
    case LWD:
#if 0
    case LBJ:
    case LBUJ:
    case LHJ:
    case LHUJ:
    case LWJ:
#endif
      /* input from memory */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case LAD:
    case LUI:
      /* input from instruction */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case ADD:
    case ADDU:
    case SUB:
    case SUBU:
    case AND_:
    case OR:
    case XOR:
    case NOR:
    case SLL:
    case SLLV:
    case SRL:
    case SRLV:
    case SRA:
    case SRAV:
      srcA = GPR(RS); validA = valid[RS];
      srcB = GPR(RT); validB = valid[RT];
      break;
    case ADDI:
    case ADDIU:
    case ANDI:
    case ORI:
    case XORI:
      srcA = GPR(RS); validA = valid[RS];
      srcB = IMM; validB = /* not a pointer */FALSE;
      break;
    case SLT:
    case SLTI:
    case SLTU:
    case SLTIU:
      /* definately not pointer results */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case MFC1:
      /* definately not a pointer result */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case MFLO:
    case MFHI:
      /* not valid pointer sources */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case JAL:
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    case JALR:
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
      break;
    default:
      /* not valid pointer sources */
      srcA = 0; validA = FALSE;
      srcB = 0; validB = FALSE;
    }

    switch (OP2[i]) {
#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)	\
    case OP:								\
      EXPR; numInsts++;							\
      break;
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)\
    case OP:								\
      EXPR; ldst = TRUE; direct = DIRECT; numInsts++;			\
      break;
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)					\
    case OP:								\
      error("tried to execute a linking opcode, %d", OP);
#define CONNECT(OP)
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
    default:
      error("bogus opcode `%d' encountered", OP2[i]);
    }

    switch (OP2[i]) {
    case LB:
    case LBU:
    case LH:
    case LHU:
    case LW:
    case LWL:
    case LWR:
    case LUI:
#if 0
    case LBJ:
    case LBUJ:
    case LHJ:
    case LHUJ:
    case LWJ:
#endif
      /* input from memory (or inst for LUI) */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case LBD:
    case LBUD:
    case LHD:
    case LHUD:
    case LWD:
    case LAD:
      /* input from memory */
      RegUpdate(RS, GPR(RS), 0, FALSE, -1, FALSE);
      break;
    case ADD:
    case ADDU:
    case SUB:
    case SUBU:
    case AND_:
    case OR:
    case XOR:
    case NOR:
    case SLL:
    case SLLV:
    case SRL:
    case SRLV:
    case SRA:
    case SRAV:
      RegUpdate(RD, GPR(RD), srcA, validA, srcB, validB);
      break;
    case ADDI:
    case ADDIU:
    case ANDI:
    case ORI:
    case XORI:
      RegUpdate(RT, GPR(RT), srcA, validA, srcB, validB);
      break;
    case SLT:
    case SLTU:
      /* definately not pointer results */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    case SLTI:
    case SLTIU:
      /* definately not pointer results */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case MFC1:
      /* definately not a pointer result */
      RegUpdate(RT, GPR(RT), 0, FALSE, -1, FALSE);
      break;
    case MFLO:
    case MFHI:
      /* not valid pointer sources */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    case JAL:
      /* not a valid pointer source */
      RegUpdate(31, GPR(31), 0, FALSE, -1, FALSE);
      break;
    case JALR:
      /* not a valid pointer source */
      RegUpdate(RD, GPR(RD), 0, FALSE, -1, FALSE);
      break;
    default:
      /* rest of instruction do not write an integer register */
    }

    if (verbose && ldst && jamminMan) {
      if (jamFailed)
	info("jam failed    @ 0x%08x, GPR(%d)=0x%08x OFS=%x",
	     PC2[i], BS, GPR(BS), OFS);
      else
	info("jam succeeded @ 0x%08x, GPR(%d)=0x%08x OFS=%x",
	     PC2[i], BS, GPR(BS), OFS);
    }

    if (ldst) {
      enum Opcode op = OP2[i];
      nRefs++;
      if (IC2[i] == MemRead) {
	nReads++;
	if ((unsigned)LB_RR<=(unsigned)op && (unsigned)op<=(unsigned)LWC1_RR)
	  nRRLoads++;
	if (op == LWC1_RR_R2 || op == LW_RR_R2)
	  nRRLoads++;
	if (direct)
	  nDirectLoads++;
	if (jamFailed)
	  nFailedLdJams++;
      }
      else {
	if ((unsigned)SB_RR<=(unsigned)op && (unsigned)op<=(unsigned)SWC1_RR)
	  nRRStores++;
	if (op == SWC1_RR_R2 || op == SW_RR_R2)
	  nRRStores++;
	if (direct)
	  nDirectStores++;
	if (jamFailed)
	  nFailedStJams++;
      }

      if (dirMode)
	nDirMode++;
      else if (jamMode)
	nJamMode++;
      else if (pCalcMode)
	nPCalcMode++;
      else if (dualMode)
	nDualMode++;
    }

    /* compute amount of extra latency noted in the EX stage */
    exLat =
      (/* memory latency, from cache misses */
       memLat
       /* address translation latency */
       + /* GetTLBLat((FU2[i]==DirRdPort || FU2[i]==DirWrPort),
	    BS, IC2[i], cycle) */ 0
       /* failed jam ld/st */
       + ((ldst && (stallIssue || jamFailed || !jamminMan) && IC2[i]==MemRead)
	  ? mjCost : 0));

    if (jamminMan && ldst && jamFailed && !stallIssue) {
      /* this is a mis-speculated and executed memory access */
      nFailedInEX++;
    }

    /* record any lagging loads or stores */
    if (jamminMan && ldst && IC2[i] == MemWrite && (jamFailed || stallIssue)) {
      stalledStore = TRUE;
    }
    if (jamminMan && ldst && IC2[i] == MemRead && (jamFailed || stallIssue)) {
      stalledLoad = TRUE;
    }

    /* schedule the write back event, do this here as non-deterministic
       latencies are generated/computed in the EX stage (e.g., cache miss,
       TLB xlation, failed jams */
    if (out1_2[i])
      ScheduleEvent((cycle-1)+fuClassToResOpLatency[FU2[i]][res2[i]]+exLat,
		    out1_2[i]);
    if (out2_2[i])
      ScheduleEvent((cycle-1)+fuClassToResOpLatency[FU2[i]][res2[i]]+exLat,
		    out2_2[i]);

    if (IC2[i] == CondCtrl || IC2[i] == UncondCtrl) {
      /* did the BTB predict correctly, even if it missed */
      ProbeSample(btbPredRate, (NPC2[i] == nextPC) ? 1 : 0);

      /* update the branch target buffer stats */
      BTBUpdate(/* br addr */PC2[i], /* taken? */(nextPC != (PC2[i] + 8)),
		/* target */nextPC);

      /* was a branch taken? if so, reset the IF stage PC */
      if (/* predicted incorrectly? */ NPC2[i] != nextPC) {

	/* taken if (nextPC != (PC2[i] + 8)) */
	/* not taken if (nextPC == (PC2[i] + 8)) */
	PC = nextPC;

	/* commit this instruction to the next stage, and return */
	IR3[N3] = IR2[i];
	PC3[N3] = PC2[i];
	NPC3[N3] = NPC2[i];
	OP3[N3] = OP2[i];
	FU3[N3] = FU2[i];
	IC3[N3++] = IC2[i];

	/* keep a backtrace */
	DTraceLog("squashing branch @ 0x%08lx: %ld insts", PC2[i], numInsts);

	/* reset any previously set busy bits */
	for (i++; i<N2; i++) {
	  if (out1_2[i]) {
	    RSClearBit(busy, out1_2[i]);
	    outToFU[out1_2[i]] = -1;
	  }
	  if (out2_2[i]) {
	    RSClearBit(busy, out2_2[i]);
	    outToFU[out2_2[i]] = -1;
	  }
	}

	/* squash rest of execute state insts and decode stage */
	SquashExecute();
	SquashIDecode();
	cycle += nCycleMP;
	pipeStats.mpStall += (nCycleMP * numIssue);
	return;
      }
    }

    /* commit this instruction to the next stage */
    IR3[N3] = IR2[i];
    PC3[N3] = PC2[i];
    NPC3[N3] = NPC2[i];
    OP3[N3] = OP2[i];
    FU3[N3] = FU2[i];
    IC3[N3++] = IC2[i];

    /* keep a backtrace */
    DTraceLog("ALU/Ctrl op @ 0x%08lx: %ld insts", PC2[i], numInsts);
  }

  /* all instruction processed */
  N2 = 0;
}


/** 1-IDECODE **/
ulong N1;
ulong Ihead, Itail;
struct SSInst *IR1;
ulong *PC1, *NPC1;

void
SquashIDecode(void)
{
  N1 = 0;
  Ihead = Itail = 0;

  if (stalledStore)
    stalledStore = FALSE;
  if (stalledLoad)
    stalledLoad = FALSE;
}

void
InitIDecode(void)
{
  if (!(IR1 = calloc(numIssue, sizeof(struct SSInst))))
    fatal("out of memory");
  if (!(PC1 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  if (!(NPC1 = calloc(numIssue, sizeof(ulong))))
    fatal("out of memory");
  SquashIDecode();
}

char *regName[] = {
  "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7",
  "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15",
  "r16", "r17", "r18", "r19", "r20", "r21", "r22", "r23",
  "r24", "r25", "r26", "r27", "r28", "r29", "r30", "r31",
  "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7",
  "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15",
  "f16", "f17", "f18", "f19", "f20", "f21", "f22", "f23",
  "f24", "f25", "f26", "f27", "f28", "f29", "f30", "f31",
  "HI", "LO", "FC",
};

void
DumpRegSet(RegSet rs)
{
  ulong i;

  for (i=0; i<RS_BIT_SIZE; i++)
    if (RSBitIsSet(rs, i))
	fprintf(stderr, "%s, ", regName[i]);
  fprintf(stderr, "\n");
}

#undef GPR(N)
#undef CGPR(N)
#undef FPR_L(N)
#undef FPR_F(N)
#undef FPR_D(N)
#undef HI
#undef LO
#undef FC

#define GPR(N)		(N)
#define CGPR(N)		(COMP_OP != COMP_NOP ? N : 0)
#define FPR_L(N)	(((N)+32)&~1)
#define FPR_F(N)	(((N)+32)&~1)
#define FPR_D(N)	(((N)+32)&~1)
#define HI		(0+32+32)
#define LO		(1+32+32)
#define FC		(2+32+32)
#define MEM		(0)
#define CTRL		(0)

#define I_GPR(N)	RSSetBit(inputs, GPR(N))
#define I_CGPR(N)	(COMP_OP != COMP_NOP ? RSSetBit(inputs, GPR(N)) : 0)
#define I_FPR_L(N)	RSSetBit(inputs, FPR_L(N))
#define I_FPR_F(N)	RSSetBit(inputs, FPR_F(N))
#define I_FPR_D(N)	RSSetBit(inputs, FPR_F(N));
#define I_HI		RSSetBit(inputs, HI)
#define I_LO		RSSetBit(inputs, LO)
#define I_FC		RSSetBit(inputs, FC)
#define I_MEM		/* RSSetBit(inputs, MEM) */
#define I_CTRL		/* RSSetBit(inputs, CTRL) */
#define I_NA

#define O_GPR(N)	RSSetBit(outputs, GPR(N))
#define O_CGPR(N)	(COMP_OP != COMP_NOP ? RSSetBit(outputs, GPR(N)) : 0)
#define O_FPR_L(N)	RSSetBit(outputs, FPR_L(N))
#define O_FPR_F(N)	RSSetBit(outputs, FPR_F(N))
#define O_FPR_D(N)	RSSetBit(outputs, FPR_F(N));
#define O_HI		RSSetBit(outputs, HI)
#define O_LO		RSSetBit(outputs, LO)
#define O_FC		RSSetBit(outputs, FC)
#define O_MEM		/* RSSetBit(outputs, MEM) */
#define O_CTRL		/* RSSetBit(outputs, CTRL) */
#define O_NA

ulong WAWstalls = 0;

void
IDecode(void)
{
  ulong i;
  enum Opcode op;
  enum FUClass fu;
  enum InstClass ic;
  ulong out1, out2, in1, in2, in3;
  struct SSInst inst;
  ulong j;
  RegSet inputs;
  RegSet outputs;
  ulong Ntotal = N1;
  int direct;
  int iRes;

  /* a load and store cannot issue in parallel */
  int issuedLoad = FALSE;
  int issuedStore = FALSE;

  /* any empty slots, due to BTB target switch */
  pipeStats.mpStall += numIssue-N1;

  /* no outputs yet */
  RSClear(outputs);

  for (i=0; i<Ntotal; i++) {

    out1 = 0; out2 = 0;
    in1 = 0; in2 = 0; in3 = 0;
    direct = FALSE;
    RSClear(inputs);
    fu = NA;
    iRes = -1;

    SET_OPCODE(op, IR1[Itail]);

    inst = IR1[Itail];

    switch (op) {
#define DEFFU(FU,DESC)
#define DEFICLASS(ICLASS,DESC)
#define DEFINST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR)	\
    case OP:								\
      fu = RES; ic = CLASS;						\
      out1 = O1; O_##O1; out2 = O2; O_##O2;				\
      in1 = I1; I_##I1; in2 = I2; I_##I2; in3 = I3; I_##I3;		\
      break;
#define DEFLDST(OP,MSK,NAME,OPFORM,RES,CLASS,O1,O2,I1,I2,I3,EXPR,DIRECT)\
    case OP:								\
      fu = RES; ic = CLASS;						\
      out1 = O1; O_##O1; out2 = O2; O_##O2;				\
      in1 = I1; I_##I1; in2 = I2; I_##I2; in3 = I3; I_##I3;		\
      direct = DIRECT;							\
      break;
#define DEFLINK(OP,MSK,NAME,MASK,SHIFT)					\
    case OP:								\
      error("tried to get dependency info for a linking opcode, %d", OP);
#define CONNECT(OP)
#include "ss.def"
#undef DEFFU
#undef DEFICLASS
#undef DEFINST
#undef DEFLDST
#undef DEFLINK
#undef CONNECT
    default:
      /* speculatively, we may (try to) decode a bogus opcode */
      /* error("bogus opcode `%d' encountered", op); */
      fu = IntALU; ic = IntComp;
      out1 = 0; out2 = 0;
      in1 = 0; in2 = 0; in3 = 0;
    }

    /* make sure direct loads and stores are typed right */
    /* assert(!direct || RSEmpty(inputs)); */

    /* r0 is a zero source/sink register */
    RSClearBit(inputs, 0);
    RSClearBit(outputs, 0);

    if (ic == Trap) {
      /* system call instruction, this needs to execute all alone,
         the stage of execute is unimportant as all SYSCALL insts will
	 be preceded by a LI R2,0x... instruction, which will always
	 complete in the EX stage */
      if (i == 0) {
	/* commit this instruction to the next stage */
	assert(N2 == 0);
	IR2[N2] = IR1[Itail];
	PC2[N2] = PC1[Itail];
	NPC2[N2] = NPC1[Itail];
	OP2[N2] = op;
	FU2[N2] = fu;
	IC2[N2] = ic;
	out1_2[N2] = out1;
	out2_2[N2] = out2;
	/* no resource allocated */
	res2[N2++] = -1;

	Itail = (Itail + 1) & niMask;
	N1--;
	pipeStats.trapStall += N1;
	pipeStats.computing++;
	return;
      }
      else {
	/* it will execute in the next cycle, otherwise, in either case
	   there is something for the EX stage to do in the next cycle */
	pipeStats.trapStall += N1;
	return;
      }
    }

    /* stall on RAW hazards */
    if (RSInterP(busy, inputs)) {
      /* busy register not ready yet, bail */
      if (in1 && outToFU[in1] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in1]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in1))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else if (in2 && outToFU[in2] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in2]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in2))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else if (in3 && outToFU[in3] != -1) {
	/* check if this is a mem port */
	if (resource[outToFU[in3]].x[0].fuClass == DirRdPort) {
	  /* created in this cycle */
	  if (RSBitIsSet(outputs, in3))
	    pipeStats.ldStall += N1;
	  else
	    pipeStats.cldStall += N1;
	}
	else
	  pipeStats.FUStall += N1;
      }
      else
	panic("OUTTOFU is out of sync");
      return;
    }

    if (!perfectMemory) {
      /* stores must fly alone (no other stores or loads) */

      /* basic pipeline issue constraints */
      if ((ic == MemRead && issuedStore)
	  || (ic == MemWrite && (issuedLoad || issuedStore))) {
	pipeStats.noFUStall += N1;
	return;
      }

      /* extended jamming load/store issue constraints */
      if ((ic == MemRead && stalledStore)
	  || (ic == MemWrite && (stalledLoad || stalledStore))) {
	/* this issue is allowed but must be stalled */
	stallIssue = TRUE;
      }

      /* sanity check */
      assert(!issuedLoad || !issuedStore);
    }

    if (ic == MemRead)
      issuedLoad = TRUE;
    else if (ic == MemWrite)
      issuedStore = TRUE;

    /* get the necessary resources */
    if (fu) {
      int gotOne = FALSE;

      for (j=0; j<N_ELT(resource); j++) {
	if (fuClassToRes[fu][j] != -1) {
	  iRes = fuClassToRes[fu][j];
	  if (resource[iRes].busy == 0) {
	    gotOne = TRUE;
	    resource[iRes].busy = fuClassToResIssueLatency[fu][iRes];
	    break;
	  }
	}
	else {
	  /* do not need to scan the whole list, it is terminated by
	     a `-1' at the end of the resource index list, no functional
	     unit available, so bail */
	  pipeStats.noFUStall += N1;
	  return;
	}
      }
      if (!gotOne) {
	/* no functional unit available, so bail */
	pipeStats.noFUStall += N1;
	return;
      }
    }

    /* registers are now pending results */
    RSOrSet(busy, outputs);
    if (out1)
      outToFU[out1] = iRes;
    if (out2)
      outToFU[out2] = iRes;

    /* commit this instruction to the next stage */
    pipeStats.computing++;
    IR2[N2] = IR1[Itail];
    PC2[N2] = PC1[Itail];
    NPC2[N2] = NPC1[Itail];
    OP2[N2] = op;
    FU2[N2] = fu;
    IC2[N2] = ic;
    out1_2[N2] = out1;
    out2_2[N2] = out2;
    res2[N2++] = iRes;
    Itail = (Itail + 1) & niMask;
    N1--;
  }
  assert(N1 == 0);
}


/** 0-IFETCH **/
ulong PC;

/* fetch up to NUMISSUE instructions, the fetched instructions are
   placed into the circular queue owned by the decode stage; when the
   decode queue is full fetching terminates; fetching also terminates
   when the BTB predicts a jump, since the instructions at the new
   address will not be available until the next cycle */
void
IFetch(void)
{
  ulong i;
  ulong target;
  struct SSInst inst;
  ulong lastPC;
  int done = FALSE;

  for (i=0;
       (i < numIssue)		/* fetch up to NUMISSUE insts */
       && (N1 < numIssue)	/* fetch until IDecode() stage is full */
       && !done;		/* for BTB fetch termination */
       i++) {

    /* fetch instruction */
#if 0
    CacheAccess(iCache, Read, PC, (uchar *)&inst, 8, cycle, TRUE);
#else
    inst = GetInst(PC);
#endif
    lastPC = PC;

    /* possibly use the BTB target */
    if ((target = BTBLookup(PC))) {
      PC = target;
      /* discontinuous stream, so stop fetching until the next cycle */
      done = (target != (PC + 8));
      /* hit in the BTB */
      ProbeSample(btbHitRate, 1);
    }
    else {
      /* missed in the BTB, continue fetching linearly */
      PC += 8;
      /* missed in the BTB */
      ProbeSample(btbHitRate, 0);
    }

    /* commit this instruction to the next stage */
    IR1[Ihead] = inst;
    PC1[Ihead] = lastPC;
    NPC1[Ihead] = PC;
    Ihead = (Ihead + 1) & niMask;
    N1++;
  }
}


void
DumpPipeState(void)
{
  ulong i, j;

  fprintf(stderr, ">>>> Pipe state <<<<\n");
  fprintf(stderr, "\tcycle => %15.0f\n", (double)cycle);
  fprintf(stderr, "\tWriteBack():\n");
  for (i=0; i<N3; i++) {
    fprintf(stderr, "\t\tPC3.%ld: 0x%08lx  NPC3.%ld: 0x%08lx  IR3.%ld: ",
	    i, PC3[i], i, NPC3[i], i);
    DisassembleInst(IR3[i], stderr);
    fprintf(stderr, "\n");
    fprintf(stderr, "\t\tOP3.%ld: %s  FU3.%ld: %s  IC3.%ld: %s\n",
	    i, opName[OP3[i]], i, fuClassDesc[FU3[i]], i, iClassDesc[IC3[i]]);
    fprintf(stderr,
	    "\t\tres2.%ld: %d  out1_2.%ld: 0x%08x  out2_2.%ld: 0x%08x\n",
	    i, res2[i], i, out1_2[i], i, out2_2[i]);
    if (i+1 < N3)
      fprintf(stderr, "\t\t--\n");
  }
  DumpEventQueue();
  fprintf(stderr, "\tBusy: "); DumpRegSet(busy);
  fprintf(stderr, "\tExecute():\n");
  for (i=0; i<N2; i++) {
    fprintf(stderr, "\t\tPC2.%ld: 0x%08lx  NPC2.%ld: 0x%08lx  IR2.%ld: ",
	    i, PC2[i], i, NPC2[i], i);
    DisassembleInst(IR2[i], stderr);
    fprintf(stderr, "\n");
    fprintf(stderr, "\t\tOP2.%ld: %s  FU2.%ld: %s  IC2.%ld: %s\n",
	    i, opName[OP2[i]], i, fuClassDesc[FU2[i]], i, iClassDesc[IC2[i]]);
    if (i+1 < N2)
      fprintf(stderr, "\t\t--\n");
  }
  fprintf(stderr, "\tIDecode():\n");
  for (i=0,j=Itail; i<N1; i++,j=(j+1)&niMask) {
    fprintf(stderr, "\t\tPC1.%ld: 0x%08lx  IR1.%ld: ", i, PC1[j], i);
    DisassembleInst(IR1[j], stderr);
    fprintf(stderr, "\n");
    if (i+1 < N1)
      fprintf(stderr, "\t\t--\n");
  }
  fprintf(stderr, "\tIFetch():\n");
  {
    fprintf(stderr, "\t\tPC: 0x%08lx\n", PC);
  }
}

void
SSOptions(int argc, char **argv)
{
  char c;

  /* parse options */
  NewOpt();
  while ((c = GetOpt(argc, argv, ALL_OPTIONS)) != EOF) {
    switch (c) {
    case 'w':
      numIssue = atoi(optArg);
      if (numIssue == 0)
	fatal("numIssue is zero");
      if ((numIssue & (numIssue-1)) != 0)
	fatal("numIssue is not a power of two, numIssue = %d",
	      numIssue);
      break;
    case 'i':
      /* instruction cache */
      if (!strcmp(optArg, "-")) {
	useICache = FALSE;
	break;
      }
      if (!ParseCacheParam(&iCacheParams, optArg))
	fatal("invalid iCache format: %s", optArg);
      useICache = TRUE;
      break;
    case 'd':
      /* data cache */
      if (!strcmp(optArg, "-")) {
	break;
      }
      if (!ParseCacheParam(&dCacheParams, optArg))
	fatal("invalid dCache format: %s", optArg);
      break;
    /* TLB configuration */
    case 'x':
      if (sscanf(optArg, "%lu:%lu:%lu", &nTLB, &opLatTLB, &issueLatTLB) != 3)
	fatal("invalid TLB configuration (n:opLat:issueLat): %s", optArg);
      break;
    case 'g':
      /* reset page size */
      pageSize = atoi(optArg);
      if ((pageSize & (pageSize - 1)) != 0)
	fatal("page size, %u, is not a power-of-two", pageSize);
      break;
    /* simulation modes */
    case '1':	/* all single cycle loads and stores */
      {
	int i, j;

	info("resetting all ld/st's to 1 cycle...");
	for (i=0; i<N_ELT(resource); i++)
	  for (j=0; j<NUM_FU_CLASSES; j++)
	    if (resource[i].x[j].fuClass == DirRdPort
		|| resource[i].x[j].fuClass == DirWrPort
		|| resource[i].x[j].fuClass == JamRdPort
		|| resource[i].x[j].fuClass == JamWrPort
		|| resource[i].x[j].fuClass == RdPort
		|| resource[i].x[j].fuClass == WrPort) {
	      resource[i].x[j].opLatency = 1;
	      resource[i].x[j].issueLatency = 1;
	    }
	mjCost = 0;
      }
      break;
    case '2':	/* perfect memory performance */
      {
	extern ulong accessLatency;
	extern ulong interLatency;

	info("running with infinitely fast memory...");
	accessLatency = 0;
	interLatency = 0;
      }
      break;
    case '3':	/* ideal memory interface */
      info("running with perfect memory system (no conflicts)...");
      perfectMemory = TRUE;
      break;
    case '4':	/* failed jams have no penalty */
      abort();
      break;
    case '5':
      info("running with %d-cycle mis-prediction latency (was %d)",
	   2 + nCycleMP + 1, 2 + nCycleMP);
      nCycleMP++;
      break;
    case '6':
      {
	int i, gotone = FALSE;
	unsigned long nPipes = 0;

	for (i=0; i<N_ELT(resource); i++) {
	  if (resource[i].x[0].fuClass == DirRdPort
	      || resource[i].x[0].fuClass == DirWrPort
	      || resource[i].x[0].fuClass == JamRdPort
	      || resource[i].x[0].fuClass == JamWrPort
	      || resource[i].x[0].fuClass == RdPort
	      || resource[i].x[0].fuClass == WrPort) {
	    if (resource[i].busy == 0 && !gotone) {
	      resource[i].busy = -1; /* disabled */
	      gotone = TRUE;
	    }
	    nPipes += ((resource[i].busy == 0) ? 1 : 0);
	  }
	}
	info("running with one less ld/st pipes (%d ld/st pipes left)...",
	     nPipes);
      }
      break;
    case '7':
      dirJam = TRUE;
      info("using direct ld/st jam scheme");
      break;
    case '8':	/* all two cycle loads and stores, except direct */
      baseJam = TRUE;
      info("using base jam scheme");
      break;
    case '9':
      altJam = TRUE;
      jamSize = atoi(optArg);
      if ((jamSize & (jamSize-1)) != 0)
	fatal("jamsize (%lu) must be a power-of-two", jamSize);
      info("using alternate jam scheme, setting block size to `%d'", jamSize);
      break;
    case '0':
      {
	int i, j;

	info("resetting all ld/st's to 1 cycle...");
	for (i=0; i<N_ELT(resource); i++)
	  for (j=0; j<NUM_FU_CLASSES; j++)
	    if (resource[i].x[j].fuClass == DirRdPort
		|| resource[i].x[j].fuClass == DirWrPort
		|| resource[i].x[j].fuClass == JamRdPort
		|| resource[i].x[j].fuClass == JamWrPort
		|| resource[i].x[j].fuClass == RdPort
		|| resource[i].x[j].fuClass == WrPort) {
	      resource[i].x[j].opLatency = 1;
	      resource[i].x[j].issueLatency = 1;
	    }
	info("attempting to jam loads and stores...");
	jamminMan = TRUE;
      }
      break;
    }
  }
}

void
SSConfig(void)
{
  char buf[256];

  if (simType != SuperScalar)
    return;
  info("numIssue = %d", numIssue);
  if (useICache)
    info("%s", PrintCacheParam(buf, &iCacheParams));
  info("%s", PrintCacheParam(buf, &dCacheParams));
  info("BTB contains %d entries, direct mapped", btbSize);
  info("page size = %u bytes", pageSize);
  info("running with %d-cycle mis-prediction latency", 2+nCycleMP);
}

void
SuperSimStats(FILE *stream)
{
  long long sum;

  info("executed %.0f cycles", (double)cycle);
  info("avg issue rate + mem %f insts/cycle", (double)numInsts/cycle);

  ProbePrint(btbHitRate, stream, TRUE);
  ProbePrint(btbPredRate, stream, TRUE);
  if (useICache)
    info("iCache miss rate: %f",
	 (double)iCache->misses/max(iCache->hits + iCache->misses, 1));
  info("dCache miss rate: %f",
       (double)dCache->misses/max(dCache->hits + dCache->misses, 1));
  info("detected %lu WAW stalls", WAWstalls);
  info("direct TLB accesses = %.0f of %.0f (%f%%)",
       (double)directTLBAccess, (double)TLBAccess,
       ((double)directTLBAccess/(double)TLBAccess)*100.0);
  info("elided TLB accesses = %.0f of %.0f (%f%%) (%f%% of indirect)",
       (double)elidedTLBAccess, (double)TLBAccess,
       ((double)elidedTLBAccess/(double)TLBAccess)*100.0,
       ((double)elidedTLBAccess/(double)(TLBAccess-directTLBAccess))*100.0);
  info("required TLB accesses = %.0f of %.0f (%f%%)",
       (double)(TLBAccess - (directTLBAccess+elidedTLBAccess)),
       (double)TLBAccess,
       ((double)(TLBAccess - (directTLBAccess+elidedTLBAccess)) /
	(double)TLBAccess) * 100.0);
  info("pre-translation revivals = %.0f or %.0f (%f%%)",
       (double)invalidNoOverrun,
       (double)invalidNoOverrun+(double)invalidOverrun,
       ((double)invalidNoOverrun /
	((double)invalidNoOverrun+(double)invalidOverrun)) * 100.0);
  info("total double valid ALU ops = %.0f", (double)doubleValid);
  fprintf(stream, "nRefs      = %15.0f (100.00%%) {%.0fr/%.0fw}\n",
	  (double)nRefs, (double)nReads, (double)(nRefs - nReads));
  fprintf(stream, "nDirectLds = %15.0f (%6.2f%%)\n",
	  (double)nDirectLoads,
	  100.0 * (double)nDirectLoads/(double)nRefs);
  fprintf(stream, "nDirectSts = %15.0f (%6.2f%%)\n",
	  (double)nDirectStores,
	  100.0 * (double)nDirectStores/(double)nRefs);
  fprintf(stream, "nRRLoads   = %15.0f (%6.2f%%)\n",
	  (double)nRRLoads,
	  100.0 * (double)nRRLoads/(double)nRefs);
  fprintf(stream, "nRRStores  = %15.0f (%6.2f%%)\n",
	  (double)nRRStores,
	  100.0 * (double)nRRStores/(double)nRefs);
  fprintf(stream, "nFailedLdJams = %15.0f (%6.2f%%)\n",
	  (double)nFailedLdJams,
	  100.0 * (double)nFailedLdJams/(double)nReads);
  fprintf(stream, "nFailedStJams = %15.0f (%6.2f%%)\n",
	  (double)nFailedStJams,
	  100.0 * (double)nFailedStJams/(double)(nRefs - nReads));
  sum = nDirMode + nJamMode + nPCalcMode + nDualMode;
  fprintf(stream, "nDirMode      = %15.0f (%6.2f%%)\n",
	  (double)nDirMode, 100.0 * (double)nDirMode/(double)sum);
  fprintf(stream, "nJamMode      = %15.0f (%6.2f%%)\n",
	  (double)nJamMode, 100.0 * (double)nJamMode/(double)sum);
  fprintf(stream, "nPCalcMode    = %15.0f (%6.2f%%)\n",
	  (double)nPCalcMode, 100.0 * (double)nPCalcMode/(double)sum);
  fprintf(stream, "nDualMode     = %15.0f (%6.2f%%)\n",
	  (double)nDualMode, 100.0 * (double)nDualMode/(double)sum);
  fprintf(stream, "nNotFailed    = %15.0f\n", (double)nRefs);
  fprintf(stream, "nFailedInEX    = %15.0f\n", (double)nFailedInEX);
  DumpPipeStats(stream);
}

void
SuperSim(void)
{
  info("starting superscalar simulation");

  /* build the caches */
  iCache = CreateCache(&iCacheParams, TRUE);
  dCache = CreateCache(&dCacheParams, TRUE);

  /* compute the shift count needed to do a "% numIssue" */
  niMask = numIssue-1;
  debug("numIssue = %d, niMask = %x", numIssue, niMask);

  /* initialize simulation probes */
  btbHitRate = ProbeCreate("BTB hit rate", Mean);
  btbPredRate = ProbeCreate("BTB pred accuracy", Mean);

  /* initialize the processor state */
  InitPreciseState();
  BuildMaskMap();
  InitFUMap();
  InitBTB(1024);
  InitEventQueue();
  InitWriteBack();
  InitExecute();
  InitIDecode();
  InitTLB();
  ResetPipeStats();

  PC = progEntry;
  cycle = 0;

  while (1) {

    if (dumpStats) {
      DumpPreciseState(stderr);
      DumpFinalStats(stderr);
      dumpStats = FALSE;
    }

    if (verbose && cycle >= verbose)
      DumpPipeState();

#if 0    /* check for deadlock conditions */
    if (!evQueue && !RSEmpty(busy))
      fatal("event queue is empty and busy bits are set");
#endif

    WriteBack();
    Execute();
    stallIssue = FALSE;
    IDecode();
    /* IFetch() could stall on an i-cache miss, but that is currently
       not supported */
    if (stalledStore)
      stalledStore = FALSE;
    if (stalledLoad)
      stalledLoad = FALSE;
    IFetch();

    cbreak(PC == breakAddr);

    numCycles++; cycle++;
  }
}
      return (VOID *) p;
  return 0;
}
#endif
    
/* Define flags declared in grep.h. */
char *matcher;
int match_icase;
int match_words;
int match_lines;

/* Functions we'll use to search. */
static void (*compile)();
static char *(*execute)();

/* For error messages. */
static char *prog;
static char *filename;
static int errseen;

/* Print a message and possibly an error string.  Remember
   that something awful happened. */
static void
error(mesg, errnum)
#ifdef __STDC__
     const
#endif
     char *mesg;
     int errnum;
{
  if (errnum)
    fprintf(stderr, "%s: %s: %s\n", prog, mesg, strerror(errnum));
  else
    fprintf(stderr, "%s: %s\n", prog, mesg);
  errseen = 1;
}

/* Like error(), but die horribly after printing. */
void
fatal(mesg, errnum)
#ifdef __STDC__
     const
#endif
     char *mesg;
     int errnum;
{
  error(mesg, errnum);
  exit(2);
}

/* Interface to handle errors and fix library lossage. */
char *
xmalloc(size)
     size_t size;
{
  char *result;

  result = malloc(size);
  if (size && !result)
    fatal("memory exhausted", 0);
  return result;
}

/* Interface to handle errors and fix some library lossage. */
char *
xrealloc(ptr, size)
     char *ptr;
     size_t size;
{
  char *result;

  if (ptr)
    result = realloc(ptr, size);
  else
    result = malloc(size);
  if (size && !result)
    fatal("memory exhausted", 0);
  return result;
}

#if !defined(HAVE_VALLOC)
#define valloc malloc
#else
#ifdef __STDC__
extern void *valloc(size_t);
#else
extern char *valloc();
#endif
#endif

/* Hairy buffering mechanism for grep.  The intent is to keep
   all reads aligned on a page boundary and multiples of the
   page size. */

static char *buffer;		/* Base of buffer. */
static size_t bufsalloc;	/* Allocated size of buffer save region. */
static size_t bufalloc;		/* Total buffer size. */
static int bufdesc;		/* File descriptor. */
static char *bufbeg;		/* Beginning of user-visible stuff. */
static char *buflim;		/* Limit of user-visible stuff. */

#if defined(HAVE_WORKING_MMAP)
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/mman.h>

static int bufmapped;		/* True for ordinary files. */
static struct stat bufstat;	/* From fstat(). */
static off_t bufoffset;		/* What read() normally remembers. */
#endif

/* Reset the buffer for a new file.  Initialize
   on the first time through. */
void
reset(fd)
     int fd;
{
  static int initialized;

  if (!initialized)
    {
      initialized = 1;
#ifndef BUFSALLOC
      bufsalloc = MAX(8192, getpagesize());
#else
      bufsalloc = BUFSALLOC;
#endif
      bufalloc = 5 * bufsalloc;
      /* The 1 byte of overflow is a kludge for dfaexec(), which
	 inserts a sentinel newline at the end of the buffer
	 being searched.  There's gotta be a better way... */
      buffer = valloc(bufalloc + 1);
      if (!buffer)
	fatal("memory exhausted", 0);
      bufbeg = buffer;
      buflim = buffer;
    }
  bufdesc = fd;
#if defined(HAVE_WORKING_MMAP)
  if (fstat(fd, &bufstat) < 0 || !S_ISREG(bufstat.st_mode))
    bufmapped = 0;
  else
    {
      bufmapped = 1;
      bufoffset = lseek(fd, 0, 1);
    }
#endif
}

/* Read new stuff into the buffer, saving the specified
   amount of old stuff.  When we're done, 'bufbeg' points
   to the beginning of the buffer contents, and 'buflim'
   points just after the end.  Return count of new stuff. */
static int
fillbuf(save)
     size_t save;
{
  char *nbuffer, *dp, *sp;
  int cc;
#if defined(HAVE_WORKING_MMAP)
  caddr_t maddr;
#endif
  static int pagesize;

  if (pagesize == 0 && (pagesize = getpagesize()) == 0)
    abort();

  if (save > bufsalloc)
    {
      while (save > bufsalloc)
	bufsalloc *= 2;
      bufalloc = 5 * bufsalloc;
      nbuffer = valloc(bufalloc + 1);
      if (!nbuffer)
	fatal("memory exhausted", 0);
    }
  else
    nbuffer = buffer;

  sp = buflim - save;
  dp = nbuffer + bufsalloc - save;
  bufbeg = dp;
  while (save--)
    *dp++ = *sp++;

  /* We may have allocated a new, larger buffer.  Since
     there is no portable vfree(), we just have to forget
     about the old one.  Sorry. */
  buffer = nbuffer;

#if defined(HAVE_WORKING_MMAP)
  if (bufmapped && bufoffset % pagesize == 0
      && bufstat.st_size - bufoffset >= bufalloc - bufsalloc)
    {
      maddr = buffer + bufsalloc;
      maddr = mmap(maddr, bufalloc - bufsalloc, PROT_READ | PROT_WRITE,
		   MAP_PRIVATE | MAP_FIXED, bufdesc, bufoffset);
      if (maddr == (caddr_t) -1)
	{
	  fprintf(stderr, "%s: warning: %s: %s\n", filename,
		  strerror(errno));
	  goto tryread;
	}
#if 0
      /* You might thing this (or MADV_WILLNEED) would help,
	 but it doesn't, at least not on a Sun running 4.1.
	 In fact, it actually slows us down about 30%! */
      madvise(maddr, bufalloc - bufsalloc, MADV_SEQUENTIAL);
#endif
      cc = bufalloc - bufsalloc;
      bufoffset += cc;
    }
  else
    {
    tryread:
      /* We come here when we're not going to use mmap() any more.
	 Note that we need to synchronize the file offset the
	 first time through. */
      if (bufmapped)
	{
	  bufmapped = 0;
	  lseek(bufdesc, bufoffset, 0);
	}
      cc = read(bufdesc, buffer + bufsalloc, bufalloc - bufsalloc);
    }
#else
  cc = read(bufdesc, buffer + bufsalloc, bufalloc - bufsalloc);
#endif
  if (cc > 0)
    buflim = buffer + bufsalloc + cc;
  else
    buflim = buffer + bufsalloc;
  return cc;
}

/* Flags controlling the style of output. */
static int out_quiet;		/* Suppress all normal output. */
static int out_invert;		/* Print nonmatching stuff. */
static int out_file;		/* Print filenames. */
static int out_line;		/* Print line numbers. */
static int out_byte;		/* Print byte offsets. */
static int out_before;		/* Lines of leading context. */
static int out_after;		/* Lines of trailing context. */

/* Internal variables to keep track of byte count, context, etc. */
static size_t totalcc;		/* Total character count before bufbeg. */
static char *lastnl;		/* Pointer after last newline counted. */
static char *lastout;		/* Pointer after last character output;
				   NULL if no character has been output
				   or if it's conceptually before bufbeg. */
static size_t totalnl;		/* Total newline count before lastnl. */
static int pending;		/* Pending lines of output. */

static void
nlscan(lim)
     char *lim;
{
  char *beg;

  for (beg = lastnl; beg < lim; ++beg)
    if (*beg == '\n')
      ++totalnl;
  lastnl = beg;
}

static void
prline(beg, lim, sep)
     char *beg;
     char *lim;
     char sep;
{
  if (out_file)
    printf("%s%c", filename, sep);
  if (out_line)
    {
      nlscan(beg);
      printf("%d%c", ++totalnl, sep);
      lastnl = lim;
    }
  if (out_byte)
    printf("%lu%c", totalcc + (beg - bufbeg), sep);
  fwrite(beg, 1, lim - beg, stdout);
  if (ferror(stdout))
    error("writing output", errno);
  lastout = lim;
}

/* Print pending lines of trailing context prior to LIM. */
static void
prpending(lim)
     char *lim;
{
  char *nl;

  if (!lastout)
    lastout = bufbeg;
  while (pending > 0 && lastout < lim)
    {
      --pending;
      if ((nl = memchr(lastout, '\n', lim - lastout)) != 0)
	++nl;
      else
	nl = lim;
      prline(lastout, nl, '-');
    }
}

/* Print the lines between BEG and LIM.  Deal with context crap.
   If NLINESP is non-null, store a count of lines between BEG and LIM. */
static void
prtext(beg, lim, nlinesp)
     char *beg;
     char *lim;
     int *nlinesp;
{
  static int used;		/* avoid printing "--" before any output */
  char *bp, *p, *nl;
  int i, n;

  if (!out_quiet && pending > 0)
    prpending(beg);

  p = beg;

  if (!out_quiet)
    {
      /* Deal with leading context crap. */

      bp = lastout ? lastout : bufbeg;
      for (i = 0; i < out_before; ++i)
	if (p > bp)
	  do
	    --p;
	  while (p > bp && p[-1] != '\n');

      /* We only print the "--" separator if our output is
	 discontiguous from the last output in the file. */
      if ((out_before || out_after) && used && p != lastout)
	puts("--");

      while (p < beg)
	{
	  nl = memchr(p, '\n', beg - p);
	  prline(p, nl + 1, '-');
	  p = nl + 1;
	}
    }

  if (nlinesp)
    {
      /* Caller wants a line count. */
      for (n = 0; p < lim; ++n)
	{
	  if ((nl = memchr(p, '\n', lim - p)) != 0)
	    ++nl;
	  else
	    nl = lim;
	  if (!out_quiet)
	    prline(p, nl, ':');
	  p = nl;
	}
      *nlinesp = n;
    }
  else
    if (!out_quiet)
      prline(beg, lim, ':');

  pending = out_after;
  used = 1;
}

/* Scan the specified portion of the buffer, matching lines (or
   between matching lines if OUT_INVERT is true).  Return a count of
   lines printed. */
static int
grepbuf(beg, lim)
     char *beg;
     char *lim;
{
  int nlines, n;
  register char *p, *b;
  char *endp;

  nlines = 0;
  p = beg;
  while ((b = (*execute)(p, lim - p, &endp)) != 0)
    {
      /* Avoid matching the empty line at the end of the buffer. */
      if (b == lim && ((b > beg && b[-1] == '\n') || b == beg))
	break;
      if (!out_invert)
	{
	  prtext(b, endp, (int *) 0);
	  nlines += 1;
	}
      else if (p < b)
	{
	  prtext(p, b, &n);
	  nlines += n;
	}
      p = endp;
    }
  if (out_invert && p < lim)
    {
      prtext(p, lim, &n);
      nlines += n;
    }
  return nlines;
}

/* Search a given file.  Return a count of lines printed. */
static int
grep(fd)
     int fd;
{
  int nlines, i;
  size_t residue, save;
  char *beg, *lim;

  reset(fd);

  totalcc = 0;
  lastout = 0;
  totalnl = 0;
  pending = 0;

  nlines = 0;
  residue = 0;
  save = 0;

  for (;;)
    {
      if (fillbuf(save) < 0)
	{
	  error(filename, errno);
	  return nlines;
	}
      lastnl = bufbeg;
      if (lastout)
	lastout = bufbeg;
      if (buflim - bufbeg == save)
	break;
      beg = bufbeg + save - residue;
      for (lim = buflim; lim > beg && lim[-1] != '\n'; --lim)
	;
      residue = buflim - lim;
      if (beg < lim)
	{
	  nlines += grepbuf(beg, lim);
	  if (pending)
	    prpending(lim);
	}
      i = 0;
      beg = lim;
      while (i < out_before && beg > bufbeg && beg != lastout)
	{
	  ++i;
	  do
	    --beg;
	  while (beg > bufbeg && beg[-1] != '\n');
	}
      if (beg != lastout)
	lastout = 0;
      save = residue + lim - beg;
      totalcc += buflim - bufbeg - save;
      if (out_line)
	nlscan(beg);
    }
  if (residue)
    {
      nlines += grepbuf(bufbeg + save - residue, buflim);
      if (pending)
	prpending(buflim);
    }
  return nlines;
}

static char version[] = "GNU grep version 2.0";

#define USAGE \
  "usage: %s [-[[AB] ]<num>] [-[CEFGVchilnqsvwx]] [-[ef]] <expr> [<files...>]\n"

static void
usage()
{
  fprintf(stderr, USAGE, prog);
  exit(2);
}

/* Go through the matchers vector and look for the specified matcher.
   If we find it, install it in compile and execute, and return 1.  */
int
setmatcher(name)
     char *name;
{
  int i;

  for (i = 0; matchers[i].name; ++i)
    if (strcmp(name, matchers[i].name) == 0)
      {
	compile = matchers[i].compile;
	execute = matchers[i].execute;
	return 1;
      }
  return 0;
}  

int
main(argc, argv)
     int argc;
     char *argv[];
{
  char *keys;
  size_t keycc, oldcc, keyalloc;
  int keyfound, count_matches, no_filenames, list_files, suppress_errors;
  int opt, cc, desc, count, status;
  FILE *fp;
  extern char *optarg;
  extern int optind;

  prog = argv[0];
  if (prog && strrchr(prog, '/'))
    prog = strrchr(prog, '/') + 1;

  keys = NULL;
  keycc = 0;
  keyfound = 0;
  count_matches = 0;
  no_filenames = 0;
  list_files = 0;
  suppress_errors = 0;
  matcher = NULL;

  while ((opt = getopt(argc, argv, "0123456789A:B:CEFGVX:bce:f:hiLlnqsvwxy"))
	 != EOF)
    switch (opt)
      {
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
	out_before = 10 * out_before + opt - '0';
	out_after = 10 * out_after + opt - '0';
	break;
      case 'A':
	out_after = atoi(optarg);
	if (out_after < 0)
	  usage();
	break;
      case 'B':
	out_before = atoi(optarg);
	if (out_before < 0)
	  usage();
	break;
      case 'C':
	out_before = out_after = 2;
	break;
      case 'E':
	if (matcher && strcmp(matcher, "egrep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);
	matcher = "posix-egrep";
	break;
      case 'F':
	if (matcher && strcmp(matcher, "fgrep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);;
	matcher = "fgrep";
	break;
      case 'G':
	if (matcher && strcmp(matcher, "grep") != 0)
	  fatal("you may specify only one of -E, -F, or -G", 0);
	matcher = "grep";
	break;
      case 'V':
	fprintf(stderr, "%s\n", version);
	break;
      case 'X':
	if (matcher)
	  fatal("matcher already specified", 0);
	matcher = optarg;
	break;
      case 'b':
	out_byte = 1;
	break;
      case 'c':
	out_quiet = 1;
	count_matches = 1;
	break;
      case 'e':
	cc = strlen(optarg);
	keys = xrealloc(keys, keycc + cc + 1);
	if (keyfound)
	  keys[keycc++] = '\n';
	strcpy(&keys[keycc], optarg);
	keycc += cc;
	keyfound = 1;
	break;
      case 'f':
	fp = strcmp(optarg, "-") != 0 ? fopen(optarg, "r") : stdin;
	if (!fp)
	  fatal(optarg, errno);
	for (keyalloc = 1; keyalloc <= keycc; keyalloc *= 2)
	  ;
	keys = xrealloc(keys, keyalloc);
	oldcc = keycc;
	if (keyfound)
	  keys[keycc++] = '\n';
	while (!feof(fp)
	       && (cc = fread(keys + keycc, 1, keyalloc - keycc, fp)) > 0)
	  {
	    keycc += cc;
	    if (keycc == keyalloc)
	      keys = xrealloc(keys, keyalloc *= 2);
	  }
	if (fp != stdin)
	  fclose(fp);
	/* Nuke the final newline to avoid matching a null string. */
	if (keycc - oldcc > 0 && keys[keycc - 1] == '\n')
	  --keycc;
	keyfound = 1;
	break;
      case 'h':
	no_filenames = 1;
	break;
      case 'i':
      case 'y':			/* For old-timers . . . */
	match_icase = 1;
	break;
      case 'L':
	/* Like -l, except list files that don't contain matches.
	   Inspired by the same option in Hume's gre. */
	out_quiet = 1;
	list_files = -1;
	break;
      case 'l':
	out_quiet = 1;
	list_files = 1;
	break;
      case 'n':
	out_line = 1;
	break;
      case 'q':
	out_quiet = 1;
	break;
      case 's':
	suppress_errors = 1;
	break;
      case 'v':
	out_invert = 1;
	break;
      case 'w':
	match_words = 1;
	break;
      case 'x':
	match_lines = 1;
	break;
      default:
	usage();
	break;
      }

  if (!keyfound)
    if (optind < argc)
      {
	keys = argv[optind++];
	keycc = strlen(keys);
      }
    else
      usage();

  if (!matcher)
    matcher = prog;

  if (!setmatcher(matcher) && !setmatcher("default"))
    abort();

  (*compile)(keys, keycc);

  if (argc - optind > 1 && !no_filenames)
    out_file = 1;

  status = 1;

  if (optind < argc)
    while (optind < argc)
      {
	desc = strcmp(argv[optind], "-") ? open(argv[optind], O_RDONLY) : 0;
	if (desc < 0)
	  {
	    if (!suppress_errors)
	      error(argv[optind], errno);
	  }
	else
	  {
	    filename = desc == 0 ? "(standard input)" : argv[optind];
	    count = grep(desc);
	    if (count_matches)
	      {
		if (out_file)
		  printf("%s:", filename);
		printf("%d\n", count);
	      }
	    if (count)
	      {
		status = 0;
		if (list_files == 1)
		  printf("%s\n", filename);
	      }
	    else if (list_files == -1)
	      printf("%s\n", filename);
	  }
	if (desc != 0)
	  close(desc);
	++optind;
      }
  else
    {
      filename = "(standard input)";
      count = grep(0);
      if (count_matches)
	printf("%d\n", count);
      if (count)
	{
	  status = 0;
	  if (list_files == 1)
	    printf("(standard input)\n");
	}
      else if (list_files == -1)
	printf("(standard input)\n");
    }

  exit(errseen ? 2 : status);
}
9)  Moamar al-Gaddafi
10) Mu'ammar Al Qathafi
11) Muammar Al Qathafi
12) Mo'ammar el-Gadhafi
13) Moamar El Kadhafi
14) Muammar al-Qadhafi
15) Mu'ammar al-Qadhdhafi
16) Mu'ammar Qadafi
17) Moamar Gaddafi
18) Mu'ammar Qadhdhafi
19) Muammar Khaddafi
20) Muammar al-Khaddafi
21) Mu'amar al-Kadafi
/* Getopt for GNU.
   NOTE: getopt is now part of the C library, so if you don't know what
   "Keep this file name-space clean" means, talk to roland@gnu.ai.mit.edu
   before changing it!

   Copyright (C) 1987, 88, 89, 90, 91, 92, 1993
   	Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by the
   Free Software Foundation; either version 2, or (at your option) any
   later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

/* NOTE!!!  AIX requires this to be the first thing in the file.
   Do not put ANYTHING before it!  */
#if !defined (__GNUC__) && defined (_AIX)
 #pragma alloca
#endif

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __GNUC__
#define alloca __builtin_alloca
#else /* not __GNUC__ */
#if defined (HAVE_ALLOCA_H) || (defined(sparc) && (defined(sun) || (!defined(USG) && !defined(SVR4) && !defined(__svr4__))))
#include <alloca.h>
#else
#ifndef _AIX
char *alloca ();
#endif
#endif /* alloca.h */
#endif /* not __GNUC__ */

#if !__STDC__ && !defined(const) && IN_GCC
#define const
#endif

/* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.  */
#ifndef _NO_PROTO
#define _NO_PROTO
#endif

#include <stdio.h>

/* Comment out all this code if we are using the GNU C Library, and are not
   actually compiling the library itself.  This code is part of the GNU C
   Library, but also included in many other GNU distributions.  Compiling
   and linking in this code is a waste when using the GNU C library
   (especially if it is a shared library).  Rather than having every GNU
   program understand `configure --with-gnu-libc' and omit the object files,
   it is simpler to just do this in the source for each such file.  */

#if defined (_LIBC) || !defined (__GNU_LIBRARY__)


/* This needs to come after some library #include
   to get __GNU_LIBRARY__ defined.  */
#ifdef	__GNU_LIBRARY__
#undef	alloca
/* Don't include stdlib.h for non-GNU C libraries because some of them
   contain conflicting prototypes for getopt.  */
#include <stdlib.h>
#else	/* Not GNU C library.  */
#define	__alloca	alloca
#endif	/* GNU C library.  */

/* If GETOPT_COMPAT is defined, `+' as well as `--' can introduce a
   long-named option.  Because this is not POSIX.2 compliant, it is
   being phased out.  */
/* #define GETOPT_COMPAT */

/* This version of `getopt' appears to the caller like standard Unix `getopt'
   but it behaves differently for the user, since it allows the user
   to intersperse the options with the other arguments.

   As `getopt' works, it permutes the elements of ARGV so that,
   when it is done, all the options precede everything else.  Thus
   all application programs are extended to handle flexible argument order.

   Setting the environment variable POSIXLY_CORRECT disables permutation.
   Then the behavior is completely standard.

   GNU application programs can use a third alternative mode in which
   they can distinguish the relative order of options and other arguments.  */

#include "getopt.h"

/* For communication from `getopt' to the caller.
   When `getopt' finds an option that takes an argument,
   the argument value is returned here.
   Also, when `ordering' is RETURN_IN_ORDER,
   each non-option ARGV-element is returned here.  */

char *optarg = 0;

/* Index in ARGV of the next element to be scanned.
   This is used for communication to and from the caller
   and for communication between successive calls to `getopt'.

   On entry to `getopt', zero means this is the first call; initialize.

   When `getopt' returns EOF, this is the index of the first of the
   non-option elements that the caller should itself scan.

   Otherwise, `optind' communicates from one call to the next
   how much of ARGV has been scanned so far.  */

/* XXX 1003.2 says this must be 1 before any call.  */
int optind = 0;

/* The next char to be scanned in the option-element
   in which the last option character we returned was found.
   This allows us to pick up the scan where we left off.

   If this is zero, or a null string, it means resume the scan
   by advancing to the next ARGV-element.  */

static char *nextchar;

/* Callers store zero here to inhibit the error message
   for unrecognized options.  */

int opterr = 1;

/* Set to an option character which was unrecognized.
   This must be initialized on some systems to avoid linking in the
   system's own getopt implementation.  */

int optopt = '?';

/* Describe how to deal with options that follow non-option ARGV-elements.

   If the caller did not specify anything,
   the default is REQUIRE_ORDER if the environment variable
   POSIXLY_CORRECT is defined, PERMUTE otherwise.

   REQUIRE_ORDER means don't recognize them as options;
   stop option processing when the first non-option is seen.
   This is what Unix does.
   This mode of operation is selected by either setting the environment
   variable POSIXLY_CORRECT, or using `+' as the first character
   of the list of option characters.

   PERMUTE is the default.  We permute the contents of ARGV as we scan,
   so that eventually all the non-options are at the end.  This allows options
   to be given in any order, even with programs that were not written to
   expect this.

   RETURN_IN_ORDER is an option available to programs that were written
   to expect options and other ARGV-elements in any order and that care about
   the ordering of the two.  We describe each non-option ARGV-element
   as if it were the argument of an option with character code 1.
   Using `-' as the first character of the list of option characters
   selects this mode of operation.

   The special argument `--' forces an end of option-scanning regardless
   of the value of `ordering'.  In the case of RETURN_IN_ORDER, only
   `--' can cause `getopt' to return EOF with `optind' != ARGC.  */

static enum
{
  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER
} ordering;

#ifdef	__GNU_LIBRARY__
/* We want to avoid inclusion of string.h with non-GNU libraries
   because there are many ways it can cause trouble.
   On some systems, it contains special magic macros that don't work
   in GCC.  */
#include <string.h>
#define	my_index	strchr
#define	my_bcopy(src, dst, n)	memcpy ((dst), (src), (n))
#else

/* Avoid depending on library functions or files
   whose names are inconsistent.  */

char *getenv ();

static char *
my_index (str, chr)
     const char *str;
     int chr;
{
  while (*str)
    {
      if (*str == chr)
	return (char *) str;
      str++;
    }
  return 0;
}

static void
my_bcopy (from, to, size)
     const char *from;
     char *to;
     int size;
{
  int i;
  for (i = 0; i < size; i++)
    to[i] = from[i];
}
#endif				/* GNU C library.  */

/* Handle permutation of arguments.  */

/* Describe the part of ARGV that contains non-options that have
   been skipped.  `first_nonopt' is the index in ARGV of the first of them;
   `last_nonopt' is the index after the last of them.  */

static int first_nonopt;
static int last_nonopt;

/* Exchange two adjacent subsequences of ARGV.
   One subsequence is elements [first_nonopt,last_nonopt)
   which contains all the non-options that have been skipped so far.
   The other is elements [last_nonopt,optind), which contains all
   the options processed since those non-options were skipped.

   `first_nonopt' and `last_nonopt' are relocated so that they describe
   the new indices of the non-options in ARGV after they are moved.  */

static void
exchange (argv)
     char **argv;
{
  int nonopts_size = (last_nonopt - first_nonopt) * sizeof (char *);
  char **temp = (char **) __alloca (nonopts_size);

  /* Interchange the two blocks of data in ARGV.  */

  my_bcopy ((char *) &argv[first_nonopt], (char *) temp, nonopts_size);
  my_bcopy ((char *) &argv[last_nonopt], (char *) &argv[first_nonopt],
	    (optind - last_nonopt) * sizeof (char *));
  my_bcopy ((char *) temp,
	    (char *) &argv[first_nonopt + optind - last_nonopt],
	    nonopts_size);

  /* Update records for the slots the non-options now occupy.  */

  first_nonopt += (optind - last_nonopt);
  last_nonopt = optind;
}

/* Scan elements of ARGV (whose length is ARGC) for option characters
   given in OPTSTRING.

   If an element of ARGV starts with '-', and is not exactly "-" or "--",
   then it is an option element.  The characters of this element
   (aside from the initial '-') are option characters.  If `getopt'
   is called repeatedly, it returns successively each of the option characters
   from each of the option elements.

   If `getopt' finds another option character, it returns that character,
   updating `optind' and `nextchar' so that the next call to `getopt' can
   resume the scan with the following option character or ARGV-element.

   If there are no more option characters, `getopt' returns `EOF'.
   Then `optind' is the index in ARGV of the first ARGV-element
   that is not an option.  (The ARGV-elements have been permuted
   so that those that are not options now come last.)

   OPTSTRING is a string containing the legitimate option characters.
   If an option character is seen that is not listed in OPTSTRING,
   return '?' after printing an error message.  If you set `opterr' to
   zero, the error message is suppressed but we still return '?'.

   If a char in OPTSTRING is followed by a colon, that means it wants an arg,
   so the following text in the same ARGV-element, or the text of the following
   ARGV-element, is returned in `optarg'.  Two colons mean an option that
   wants an optional arg; if there is text in the current ARGV-element,
   it is returned in `optarg', otherwise `optarg' is set to zero.

   If OPTSTRING starts with `-' or `+', it requests different methods of
   handling the non-option ARGV-elements.
   See the comments about RETURN_IN_ORDER and REQUIRE_ORDER, above.

   Long-named options begin with `--' instead of `-'.
   Their names may be abbreviated as long as the abbreviation is unique
   or is an exact match for some defined option.  If they have an
   argument, it follows the option name in the same ARGV-element, separated
   from the option name by a `=', or else the in next ARGV-element.
   When `getopt' finds a long-named option, it returns 0 if that option's
   `flag' field is nonzero, the value of the option's `val' field
   if the `flag' field is zero.

   The elements of ARGV aren't really const, because we permute them.
   But we pretend they're const in the prototype to be compatible
   with other systems.

   LONGOPTS is a vector of `struct option' terminated by an
   element containing a name which is zero.

   LONGIND returns the index in LONGOPT of the long-named option found.
   It is only valid when a long-named option has been found by the most
   recent call.

   If LONG_ONLY is nonzero, '-' as well as '--' can introduce
   long-named options.  */

int
_getopt_internal (argc, argv, optstring, longopts, longind, long_only)
     int argc;
     char *const *argv;
     const char *optstring;
     const struct option *longopts;
     int *longind;
     int long_only;
{
  int option_index;

  optarg = 0;

  /* Initialize the internal data when the first call is made.
     Start processing options with ARGV-element 1 (since ARGV-element 0
     is the program name); the sequence of previously skipped
     non-option ARGV-elements is empty.  */

  if (optind == 0)
    {
      first_nonopt = last_nonopt = optind = 1;

      nextchar = NULL;

      /* Determine how to handle the ordering of options and nonoptions.  */

      if (optstring[0] == '-')
	{
	  ordering = RETURN_IN_ORDER;
	  ++optstring;
	}
      else if (optstring[0] == '+')
	{
	  ordering = REQUIRE_ORDER;
	  ++optstring;
	}
      else if (getenv ("POSIXLY_CORRECT") != NULL)
	ordering = REQUIRE_ORDER;
      else
	ordering = PERMUTE;
    }

  if (nextchar == NULL || *nextchar == '\0')
    {
      if (ordering == PERMUTE)
	{
	  /* If we have just processed some options following some non-options,
	     exchange them so that the options come first.  */

	  if (first_nonopt != last_nonopt && last_nonopt != optind)
	    exchange ((char **) argv);
	  else if (last_nonopt != optind)
	    first_nonopt = optind;

	  /* Now skip any additional non-options
	     and extend the range of non-options previously skipped.  */

	  while (optind < argc
		 && (argv[optind][0] != '-' || argv[optind][1] == '\0')
#ifdef GETOPT_COMPAT
		 && (longopts == NULL
		     || argv[optind][0] != '+' || argv[optind][1] == '\0')
#endif				/* GETOPT_COMPAT */
		 )
	    optind++;
	  last_nonopt = optind;
	}

      /* Special ARGV-element `--' means premature end of options.
	 Skip it like a null option,
	 then exchange with previous non-options as if it were an option,
	 then skip everything else like a non-option.  */

      if (optind != argc && !strcmp (argv[optind], "--"))
	{
	  optind++;

	  if (first_nonopt != last_nonopt && last_nonopt != optind)
	    exchange ((char **) argv);
	  else if (first_nonopt == last_nonopt)
	    first_nonopt = optind;
	  last_nonopt = argc;

	  optind = argc;
	}

      /* If we have done all the ARGV-elements, stop the scan
	 and back over any non-options that we skipped and permuted.  */

      if (optind == argc)
	{
	  /* Set the next-arg-index to point at the non-options
	     that we previously skipped, so the caller will digest them.  */
	  if (first_nonopt != last_nonopt)
	    optind = first_nonopt;
	  return EOF;
	}

      /* If we have come to a non-option and did not permute it,
	 either stop the scan or describe it to the caller and pass it by.  */

      if ((argv[optind][0] != '-' || argv[optind][1] == '\0')
#ifdef GETOPT_COMPAT
	  && (longopts == NULL
	      || argv[optind][0] != '+' || argv[optind][1] == '\0')
#endif				/* GETOPT_COMPAT */
	  )
	{
	  if (ordering == REQUIRE_ORDER)
	    return EOF;
	  optarg = argv[optind++];
	  return 1;
	}

      /* We have found another option-ARGV-element.
	 Start decoding its characters.  */

      nextchar = (argv[optind] + 1
		  + (longopts != NULL && argv[optind][1] == '-'));
    }

  if (longopts != NULL
      && ((argv[optind][0] == '-'
	   && (argv[optind][1] == '-' || long_only))
#ifdef GETOPT_COMPAT
	  || argv[optind][0] == '+'
#endif				/* GETOPT_COMPAT */
	  ))
    {
      const struct option *p;
      char *s = nextchar;
      int exact = 0;
      int ambig = 0;
      const struct option *pfound = NULL;
      int indfound;

      while (*s && *s != '=')
	s++;

      /* Test all options for either exact match or abbreviated matches.  */
      for (p = longopts, option_index = 0; p->name;
	   p++, option_index++)
	if (!strncmp (p->name, nextchar, s - nextchar))
	  {
	    if (s - nextchar == strlen (p->name))
	      {
		/* Exact match found.  */
		pfound = p;
		indfound = option_index;
		exact = 1;
		break;
	      }
	    else if (pfound == NULL)
	      {
		/* First nonexact match found.  */
		pfound = p;
		indfound = option_index;
	      }
	    else
	      /* Second nonexact match found.  */
	      ambig = 1;
	  }

      if (ambig && !exact)
	{
	  if (opterr)
	    fprintf (stderr, "%s: option `%s' is ambiguous\n",
		     argv[0], argv[optind]);
	  nextchar += strlen (nextchar);
	  optind++;
	  return '?';
	}

      if (pfound != NULL)
	{
	  option_index = indfound;
	  optind++;
	  if (*s)
	    {
	      /* Don't test has_arg with >, because some C compilers don't
		 allow it to be used on enums.  */
	      if (pfound->has_arg)
		optarg = s + 1;
	      else
		{
		  if (opterr)
		    {
		      if (argv[optind - 1][1] == '-')
			/* --option */
			fprintf (stderr,
				 "%s: option `--%s' doesn't allow an argument\n",
				 argv[0], pfound->name);
		      else
			/* +option or -option */
			fprintf (stderr,
			     "%s: option `%c%s' doesn't allow an argument\n",
			     argv[0], argv[optind - 1][0], pfound->name);
		    }
		  nextchar += strlen (nextchar);
		  return '?';
		}
	    }
	  else if (pfound->has_arg == 1)
	    {
	      if (optind < argc)
		optarg = argv[optind++];
	      else
		{
		  if (opterr)
		    fprintf (stderr, "%s: option `%s' requires an argument\n",
			     argv[0], argv[optind - 1]);
		  nextchar += strlen (nextchar);
		  return optstring[0] == ':' ? ':' : '?';
		}
	    }
	  nextchar += strlen (nextchar);
	  if (longind != NULL)
	    *longind = option_index;
	  if (pfound->flag)
	    {
	      *(pfound->flag) = pfound->val;
	      return 0;
	    }
	  return pfound->val;
	}
      /* Can't find it as a long option.  If this is not getopt_long_only,
	 or the option starts with '--' or is not a valid short
	 option, then it's an error.
	 Otherwise interpret it as a short option.  */
      if (!long_only || argv[optind][1] == '-'
#ifdef GETOPT_COMPAT
	  || argv[optind][0] == '+'
#endif				/* GETOPT_COMPAT */
	  || my_index (optstring, *nextchar) == NULL)
	{
	  if (opterr)
	    {
	      if (argv[optind][1] == '-')
		/* --option */
		fprintf (stderr, "%s: unrecognized option `--%s'\n",
			 argv[0], nextchar);
	      else
		/* +option or -option */
		fprintf (stderr, "%s: unrecognized option `%c%s'\n",
			 argv[0], argv[optind][0], nextchar);
	    }
	  nextchar = (char *) "";
	  optind++;
	  return '?';
	}
    }

  /* Look at and handle the next option-character.  */

  {
    char c = *nextchar++;
    char *temp = my_index (optstring, c);

    /* Increment `optind' when we start to process its last character.  */
    if (*nextchar == '\0')
      ++optind;

    if (temp == NULL || c == ':')
      {
	if (opterr)
	  {
#if 0
	    if (c < 040 || c >= 0177)
	      fprintf (stderr, "%s: unrecognized option, character code 0%o\n",
		       argv[0], c);
	    else
	      fprintf (stderr, "%s: unrecognized option `-%c'\n", argv[0], c);
#else
	    /* 1003.2 specifies the format of this message.  */
	    fprintf (stderr, "%s: illegal option -- %c\n", argv[0], c);
#endif
	  }
	optopt = c;
	return '?';
      }
    if (temp[1] == ':')
      {
	if (temp[2] == ':')
	  {
	    /* This is an option that accepts an argument optionally.  */
	    if (*nextchar != '\0')
	      {
		optarg = nextchar;
		optind++;
	      }
	    else
	      optarg = 0;
	    nextchar = NULL;
	  }
	else
	  {
	    /* This is an option that requires an argument.  */
	    if (*nextchar != '\0')
	      {
		optarg = nextchar;
		/* If we end this ARGV-element by taking the rest as an arg,
		   we must advance to the next element now.  */
		optind++;
	      }
	    else if (optind == argc)
	      {
		if (opterr)
		  {
#if 0
		    fprintf (stderr, "%s: option `-%c' requires an argument\n",
			     argv[0], c);
#else
		    /* 1003.2 specifies the format of this message.  */
		    fprintf (stderr, "%s: option requires an argument -- %c\n",
			     argv[0], c);
#endif
		  }
		optopt = c;
		if (optstring[0] == ':')
		  c = ':';
		else
		  c = '?';
	      }
	    else
	      /* We already incremented `optind' once;
		 increment it again when taking next ARGV-elt as argument.  */
	      optarg = argv[optind++];
	    nextchar = NULL;
	  }
      }
    return c;
  }
}

int
getopt (argc, argv, optstring)
     int argc;
     char *const *argv;
     const char *optstring;
{
  return _getopt_internal (argc, argv, optstring,
			   (const struct option *) 0,
			   (int *) 0,
			   0);
}

#endif	/* _LIBC or not __GNU_LIBRARY__.  */

#ifdef TEST

/* Compile with -DTEST to make an executable for use in testing
   the above definition of `getopt'.  */

int
main (argc, argv)
     int argc;
     char **argv;
{
  int c;
  int digit_optind = 0;

  while (1)
    {
      int this_option_optind = optind ? optind : 1;

      c = getopt (argc, argv, "abc:d:0123456789");
      if (c == EOF)
	break;

      switch (c)
	{
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	  if (digit_optind != 0 && digit_optind != this_option_optind)
	    printf ("digits occur in two different argv-elements.\n");
	  digit_optind = this_option_optind;
	  printf ("option %c\n", c);
	  break;

	case 'a':
	  printf ("option a\n");
	  break;

	case 'b':
	  printf ("option b\n");
	  break;

	case 'c':
	  printf ("option c with value `%s'\n", optarg);
	  break;

	case '?':
	  break;

	default:
	  printf ("?? getopt returned character code 0%o ??\n", c);
	}
    }

  if (optind < argc)
    {
      printf ("non-option ARGV-elements: ");
      while (optind < argc)
	printf ("%s ", argv[optind++]);
      printf ("\n");
    }

  exit (0);
}

#endif /* TEST */
22) Muammar Ghaddafy
23) Muammar Ghadafi
24) Muammar Ghaddafi
25) Muamar Kaddafi
26) Muammar Quathafi
27) Muammar Gheddafi
28) Muamar Al-Kaddafi
29) Moammar Khadafy
30) Moammar Qudhafi
31) Mu'ammar al-Qaddafi
32) Mulazim Awwal Mu'ammar Muhammad Abu Minyar al-Qadhafi
